/*

Generates a summary of the available descriptors with their names
and links to the details in the Javadocs

Rajarshi Guha <rguha@indiana.edu>

*/

import java.io.*;
import java.text.SimpleDateFormat;
import java.util.List;
import org.openscience.cdk.qsar.IDescriptor;
import org.openscience.cdk.qsar.DescriptorEngine;
import org.openscience.cdk.qsar.DescriptorSpecification;


SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
String date = format.format(new java.util.Date());

StringBuffer stringBuffer = new StringBuffer();
stringBuffer.append("<html>\n" +
		    "<head>\n" +
		    "<title>CDK Descriptor Names</title>\n" +
		    "<style type='text/css'>\n"+
		    "body {line-height : 1.2; margin: 1.5em; }"+
		    "h1 { font-family : sans-serif; text-align:center; }"+
		    "h2 { font-family : sans-serif; }"+
		    "td { padding: 5px; }"+
		    "table { border-style: solid; border-width: thin; padding: 5px;}"+
		    "tr { margin: 5px; }"+
		    ".oddrow { background-color: #DFDFDF; }"+
		    ".header { marginL 5px; bottom-border-width : thick; background-color: #809FFF; font-family : sans-serif; font-style:italic; text-align: left;}"+
		    "</style></head>\n" +
		    "<body>\n " +
		    "<div class='intro'>" +
		    "<h1>CDK Descriptor Summary (" + date + ")</h1> " +
		    "A summary of the currently available descriptors listing the descriptor name" +
		    " and the names of the individual values. Follow the links to get a more detailed" +
		    " description of the descriptor and any parameters that it may take.</p>" +
		    "Quick links: <a href='#molecular'>Molecular</a> <a href='#bond'>Bond</a> <a href='#atom'>Atom</a>" +
		    "</div>\n<p>\n"
		    );

DescriptorEngine engine = new
    DescriptorEngine(DescriptorEngine.MOLECULAR);
List instances = engine.getDescriptorInstances();
List specs = engine.getDescriptorSpecifications();

stringBuffer.append("<div class='sec'>" +
		    "<a name='molecule'></a>" +
		    "<h2>Molecular Descriptors</h2>" +

		    "<table>" +
		    "<thead>" +
		    "<tr class='header'>" +
		    "<th>Descriptor</th><th>Definition</th><th>Values</th>" +
		    "</tr></thead><tbody>");

for (int i = 0; i < instances.size(); i++) {
    String dname = instances.get(i).getClass().getName();
    dname = dname.split("\\.")[6];
    String[] vnames = instances.get(i).getDescriptorNames();
    int c = 0;
    String cls = "";
    if (i % 2 == 0) cls = "evenrow";
    else cls = "oddrow";


    for (int j = 0; j < vnames.length; j++) {
	if (j == 0) {
	    stringBuffer.append("<tr class='"+cls+"'><td valign='top'>" +
				"<a href='http://cheminfo.informatics.indiana.edu/~rguha/code/java/nightly/api/org/openscience/cdk/qsar/descriptors/molecular/" + dname + ".html'>" + dname.replace("Descriptor","") + "</a></td>" +
				" <td valign='top'>"+engine.getDictionaryDefinition(specs.get(i)) +"</td>\n"+
				"<td>" + vnames[j] + " "); 
	} else {
	    stringBuffer.append(vnames[j] + " ");
	}
	if (c % 3 == 0) stringBuffer.append("<br>\n");
	c++;
    }
    stringBuffer.append("</td></tr>\n");

}
stringBuffer.append("</tbody></table></div>");

//
//
//

engine = new DescriptorEngine(DescriptorEngine.BOND);
instances = engine.getDescriptorInstances();
specs = engine.getDescriptorSpecifications();

stringBuffer.append("<div class='sec'>" +
		    "<a name='bond'></a>" +
		    "<h2>Bond Descriptors</h2>" +

		    "<table>" +
		    "<thead>" +
		    "<tr class='header'>" +
		    "<td>Descriptor</td><td>Definition</td><td>Values</td>" +
		    "</tr></thead><tbody>");

for (int i = 0; i < instances.size(); i++) {
    String dname = instances.get(i).getClass().getName();
    dname = dname.split("\\.")[6];
    String[] vnames = instances.get(i).getDescriptorNames();
    int c = 0;
    String cls = "";
    if (i % 2 == 0) cls = "evenrow";
    else cls = "oddrow";

    for (int j = 0; j < vnames.length; j++) {
	if (j == 0) {
	    stringBuffer.append("<tr class='"+cls+"'><td valign='top'>" +
				"<a href='http://cheminfo.informatics.indiana.edu/~rguha/code/java/nightly/api/org/openscience/cdk/qsar/descriptors/bond/" + dname + ".html'>" + dname.replace("Descriptor","") + "</a></td>" +
				" <td valign='top'>"+engine.getDictionaryDefinition(specs.get(i)) +"</td>\n"+
				"<td>" + vnames[j] + " ");
	} else {
	    stringBuffer.append(vnames[j] + " ");
	}
	if (c % 3 == 0) stringBuffer.append("<br>\n");
	c++;
    }
    stringBuffer.append("</td></tr>\n");

}
stringBuffer.append("</tbody></table></div>");

//
//
//

engine = new DescriptorEngine(DescriptorEngine.ATOMIC);
instances = engine.getDescriptorInstances();
specs = engine.getDescriptorSpecifications();

stringBuffer.append("<div class='sec'>" +
		    "<a name='atom'></a>" +
		    "<h2>Atom Descriptors</h2>" +
		    "<table>" +
		    "<thead>" +
		    "<tr class='header'>" +
		    "<td>Descriptor</td><td>Definition</td><td>Values</td>" +
		    "</tr></thead><tbody>");

for (int i = 0; i < instances.size(); i++) {
    String dname = instances.get(i).getClass().getName();
    dname = dname.split("\\.")[6];
    if (dname.indexOf("ProtonTotalPartialCharge") != -1) continue;
    String[] vnames = instances.get(i).getDescriptorNames();
    int c = 0;
    String cls = "";
    if (i % 2 == 0) cls = "evenrow";
    else cls = "oddrow";

    for (int j = 0; j < vnames.length; j++) {
	if (j == 0) {
	    stringBuffer.append("<tr class='"+cls+"'><td valign='top'>" +
				"<a href='http://cheminfo.informatics.indiana.edu/~rguha/code/java/nightly/api/org/openscience/cdk/qsar/descriptors/atomic/" + dname + ".html'>" + dname.replace("Descriptor","") + "</a></td>" +
				" <td valign='top'>"+engine.getDictionaryDefinition(specs.get(i)) +"</td>\n"+
				"<td>" + vnames[j] + " ");
	} else {
	    stringBuffer.append(vnames[j] + " ");
	}
	if (c % 3 == 0) stringBuffer.append("<br>\n");
	c++;
    }
    stringBuffer.append("</td></tr>\n");

}
stringBuffer.append("</tbody></table></div>");


stringBuffer.append("</body></html");

/*
Writer out = new BufferedWriter(new FileWriter(new File("/Users/rguha/dnames.html")));
out.write(stringBuffer.toString());
out.close();
*/

System.out.print(stringBuffer.toString());