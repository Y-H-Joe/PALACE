smi_encoder.embedding.weight shape: torch.Size([287, 128])
tensor([[ 1.0131, -0.2699, -1.8087,  ..., -0.3295, -0.7485, -1.9519],
        [ 0.0252,  0.2658,  0.8077,  ..., -0.9470, -1.1543, -0.1074],
        [ 0.2496, -1.1481, -0.6821,  ..., -0.5859,  0.6502, -0.0364],
        ...,
        [ 0.4938,  0.4496,  0.6148,  ...,  1.5956,  0.0266, -0.2141],
        [ 0.7097,  0.5078,  0.7414,  ..., -0.3503,  1.2614, -0.1880],
        [ 1.8792,  0.3156,  1.0133,  ..., -1.0239,  0.4238, -0.2535]])
tensor([[ 1.0131, -0.2699, -1.8087,  ..., -0.3295, -0.7485, -1.9519],
        [ 0.0253,  0.2667,  0.8077,  ..., -0.9479, -1.1553, -0.1074],
        [ 0.2496, -1.1481, -0.6821,  ..., -0.5859,  0.6502, -0.0364],
        ...,
        [ 0.4938,  0.4496,  0.6148,  ...,  1.5956,  0.0266, -0.2141],
        [ 0.7097,  0.5078,  0.7414,  ..., -0.3503,  1.2614, -0.1880],
        [ 1.8792,  0.3156,  1.0133,  ..., -1.0239,  0.4238, -0.2535]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0249,  0.0551,  0.0463,  ..., -0.0583, -0.0169,  0.0461],
        [ 0.0577,  0.0332,  0.0659,  ...,  0.0300,  0.0617,  0.0403],
        [ 0.0606,  0.0165,  0.0082,  ..., -0.0022,  0.0222, -0.0750],
        ...,
        [ 0.0148, -0.0323,  0.0266,  ...,  0.0392, -0.0101,  0.0195],
        [-0.0675,  0.0723,  0.0342,  ...,  0.0343, -0.0175, -0.0634],
        [ 0.0670, -0.0612,  0.0230,  ..., -0.0704, -0.0105, -0.0647]])
tensor([[-0.0242,  0.0555,  0.0465,  ..., -0.0578, -0.0165,  0.0455],
        [ 0.0586,  0.0330,  0.0660,  ...,  0.0305,  0.0615,  0.0390],
        [ 0.0612,  0.0163,  0.0083,  ..., -0.0026,  0.0227, -0.0746],
        ...,
        [ 0.0154, -0.0317,  0.0270,  ...,  0.0389, -0.0111,  0.0205],
        [-0.0679,  0.0723,  0.0343,  ...,  0.0340, -0.0186, -0.0623],
        [ 0.0661, -0.0613,  0.0227,  ..., -0.0706, -0.0110, -0.0636]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-4.5963e-05, -1.0582e-05, -5.2635e-05, -9.9780e-05, -1.2570e-05,
        -1.9047e-04,  1.9946e-04, -1.6097e-04, -8.7478e-05, -3.0561e-04,
        -2.3275e-04, -5.5282e-05,  2.6278e-04,  3.0068e-04, -1.6356e-04,
        -7.9966e-05, -1.4473e-04, -3.6914e-04,  4.1745e-05,  1.6322e-04,
        -1.1502e-04,  1.8897e-04, -1.8087e-04,  2.5022e-04, -1.7662e-04,
         9.5442e-05,  1.4313e-04, -1.5065e-04,  2.3273e-04, -3.5584e-04,
         1.3458e-04,  3.0868e-04,  3.9090e-04,  8.7244e-05, -4.2991e-05,
         8.1648e-05,  1.8712e-05,  6.5757e-05,  1.0367e-04, -1.1219e-04,
        -1.8156e-04, -7.7536e-05, -4.6347e-05, -2.2634e-04,  1.7912e-04,
        -2.7041e-05,  1.5633e-04, -5.8183e-05, -1.4451e-05, -2.3211e-05,
         4.7855e-05,  6.6680e-05, -9.2068e-05, -1.1144e-04, -5.1798e-05,
         7.6444e-05, -1.9455e-05,  2.0605e-05, -1.7184e-04, -2.2884e-05,
         9.7791e-05,  2.7862e-05, -1.3964e-04,  2.2870e-05,  2.6726e-06,
         1.8655e-06,  1.3921e-04,  7.2479e-05,  1.0309e-04,  4.6776e-05,
         1.1014e-04,  2.3602e-05, -4.4172e-05,  1.2247e-04, -6.1182e-05,
        -1.2622e-04,  1.2266e-05, -5.5423e-05, -6.9362e-05,  3.1760e-05,
        -5.1526e-05,  5.5655e-05,  1.5650e-04,  1.5287e-04,  6.3589e-05,
         6.8428e-06, -1.1737e-04,  3.0026e-05,  6.2069e-05,  6.6603e-05,
        -4.5734e-05,  2.7004e-04,  3.3868e-05, -2.0809e-05, -1.7368e-04,
         3.8381e-05,  5.1219e-05, -1.2047e-04,  1.2701e-05, -1.3012e-04,
        -7.7693e-06,  7.8035e-05,  9.4515e-06, -8.8490e-05,  8.9280e-06,
        -1.0335e-04, -1.9467e-04,  1.2422e-04,  1.4082e-04, -5.8279e-05,
        -1.3684e-05,  1.1629e-04,  6.3081e-06,  5.7588e-05, -6.3618e-05,
        -1.6581e-04,  2.3810e-05,  9.3535e-05, -8.2455e-05, -1.6343e-05,
        -2.2358e-05, -1.1639e-04,  1.8781e-05, -2.3075e-04,  9.1729e-05,
         9.3740e-05, -1.1568e-04,  2.4962e-04, -1.0145e-11,  3.8121e-11,
         1.0896e-10, -1.0011e-11, -3.0997e-12, -1.5876e-10, -1.4318e-10,
        -3.9583e-11, -1.6019e-10,  2.4584e-11, -4.0334e-11, -1.2265e-10,
         7.8655e-11, -3.2542e-11, -1.4269e-10,  5.0953e-11,  1.2108e-10,
        -2.5524e-11, -3.3343e-11, -1.7279e-11, -1.7795e-11,  4.6530e-11,
         3.6584e-11, -4.2704e-11,  2.0060e-10,  3.0284e-11, -5.9370e-11,
        -1.6275e-11, -6.4781e-11,  2.5506e-12,  6.9923e-11, -2.0821e-11,
         8.0521e-12, -2.8880e-11,  1.3014e-11,  3.0640e-11,  1.3263e-11,
        -3.1737e-11, -3.8552e-11,  1.7716e-12, -2.0080e-11,  2.5676e-11,
         6.0664e-11, -9.3001e-12, -1.0162e-11, -2.0333e-11, -6.6266e-11,
        -2.7889e-11, -3.7776e-11,  1.8099e-11, -5.6351e-11, -1.9556e-11,
        -8.2780e-12, -3.8563e-12, -1.5395e-11,  1.9361e-11,  3.8503e-12,
         5.0743e-11, -2.7178e-12,  3.4610e-11, -5.6945e-12,  1.7081e-11,
         1.3519e-11, -1.5690e-12, -2.0296e-11,  2.4919e-11,  2.8732e-11,
         7.4470e-12, -1.7162e-11, -1.5639e-11, -1.9503e-12,  3.8594e-12,
         7.4933e-12, -6.2476e-12, -6.6829e-12, -3.2872e-11, -1.7871e-11,
        -7.0583e-12,  1.9128e-11, -4.6216e-12, -5.7975e-11,  2.5894e-11,
         2.0643e-11,  6.1601e-12, -2.5665e-11,  2.0669e-12, -2.3888e-12,
         1.0909e-11, -1.3663e-11, -1.2521e-11,  8.9593e-12, -1.5550e-11,
         4.5166e-11, -1.6200e-11, -9.2556e-12, -2.1857e-11,  1.7865e-11,
        -1.4836e-11,  5.8790e-12, -4.3355e-11,  1.4766e-11, -4.5298e-12,
         1.8602e-11,  2.8267e-11, -1.2755e-12, -2.9199e-11,  4.3674e-11,
         6.9339e-13, -2.8967e-11, -3.2038e-11, -3.7281e-11, -3.1621e-11,
        -1.4565e-11,  3.6779e-11,  1.6988e-11,  1.1180e-11, -4.2985e-12,
         9.0223e-12, -3.4748e-11, -3.7326e-12, -5.8624e-11,  5.4345e-11,
         9.2266e-12,  8.8390e-11, -5.0418e-12, -4.9697e-11, -1.6546e-12,
        -1.6809e-11, -2.5724e-05,  2.1203e-05,  4.1337e-05,  8.9017e-06,
        -2.5273e-05,  4.0976e-05, -4.1587e-05, -4.6383e-05, -2.2549e-05,
        -1.7774e-05,  3.3684e-05, -2.8775e-06,  2.1701e-05, -3.4840e-05,
         5.7618e-05,  6.5238e-05, -3.2536e-06, -8.3652e-06,  7.5578e-05,
         5.8944e-06,  5.4563e-05, -3.9203e-05,  5.2896e-05,  5.7552e-06,
         3.0091e-05,  4.4829e-05,  6.0242e-05,  7.7546e-06, -2.1326e-05,
         8.0328e-06, -4.1187e-05,  5.5187e-06,  1.5931e-06, -1.1306e-05,
         2.0272e-05, -3.6423e-05, -7.8286e-06, -4.3342e-05,  4.2928e-05,
         3.0616e-05,  3.7581e-05, -5.8147e-06,  1.6742e-06,  3.2788e-05,
        -1.6431e-05, -1.8821e-05,  1.5608e-06, -1.1405e-05, -2.7061e-05,
        -8.6349e-06,  1.7947e-05, -2.3289e-05,  5.5577e-06,  3.0248e-05,
         2.1003e-06, -4.4281e-05, -8.0363e-05, -1.3418e-05,  2.7111e-05,
        -1.1898e-06,  2.3153e-05,  6.8955e-05, -3.2804e-05,  1.4266e-05,
         1.3021e-05,  1.6945e-05, -3.0877e-05,  3.8632e-05,  5.5559e-05,
         5.4761e-05, -4.0965e-05,  1.6703e-05, -4.0643e-05, -1.6150e-05,
         3.8448e-05,  6.8241e-05, -8.1511e-05, -4.5097e-05,  5.3663e-05,
         2.9147e-07, -6.1105e-05, -6.2430e-05, -1.0331e-05,  8.3238e-05,
        -1.8370e-05, -1.5348e-05,  2.7637e-05, -2.7594e-05, -3.5639e-05,
        -1.2820e-05,  9.1443e-06, -1.2228e-05, -4.5577e-05,  2.5362e-06,
         5.0157e-05,  7.4137e-06,  1.5374e-05,  6.9103e-06,  2.5868e-05,
         4.0021e-05, -6.8192e-05, -2.3106e-05,  2.0563e-05,  1.8452e-06,
        -3.8143e-05, -6.7163e-05,  2.0578e-05, -4.2335e-05, -8.1927e-05,
         1.0335e-05,  5.3595e-05, -7.9923e-05,  3.5304e-05,  7.9395e-06,
        -4.5324e-05, -1.7866e-06,  4.9276e-05, -1.5422e-05,  8.3152e-07,
         1.8479e-06,  1.9198e-05,  2.9576e-05,  5.1873e-06, -8.9872e-06,
         1.2871e-05, -3.0772e-05,  1.0525e-05,  3.2382e-05])
##########################################################
smi_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0195, -0.0317, -0.0510,  ..., -0.0840,  0.0122, -0.0714],
        [-0.0169, -0.0862, -0.0542,  ..., -0.0039,  0.0410,  0.0698],
        [-0.0497, -0.0115,  0.0451,  ..., -0.0327, -0.0224,  0.0855],
        ...,
        [-0.0498,  0.0312,  0.0274,  ...,  0.0140,  0.0436, -0.0074],
        [ 0.0508,  0.0038,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0864, -0.0189,  ..., -0.0154,  0.0077,  0.0106]])
tensor([[-0.0196, -0.0316, -0.0514,  ..., -0.0839,  0.0120, -0.0715],
        [-0.0171, -0.0858, -0.0540,  ..., -0.0039,  0.0411,  0.0697],
        [-0.0495, -0.0119,  0.0450,  ..., -0.0327, -0.0225,  0.0856],
        ...,
        [-0.0499,  0.0315,  0.0275,  ...,  0.0140,  0.0437, -0.0073],
        [ 0.0508,  0.0040,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0861, -0.0191,  ..., -0.0155,  0.0077,  0.0105]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-7.7122e-05,  1.7235e-05, -2.0172e-05,  6.9340e-06, -9.2759e-05,
        -1.9648e-05,  1.1695e-05,  9.9298e-06,  9.1375e-06,  9.8166e-06,
        -8.8628e-06, -2.7483e-06,  5.7999e-06,  1.3096e-05, -2.5115e-06,
         1.9941e-05, -1.4473e-06, -1.3558e-05,  1.1692e-04,  1.4939e-05,
         1.0881e-04, -5.6230e-07, -1.2539e-05,  1.4796e-05,  1.8758e-05,
         3.5907e-05, -6.4092e-06,  4.4380e-06,  1.2623e-05,  7.1393e-06,
         8.1565e-05, -1.8626e-05, -8.4429e-06,  2.9626e-05,  2.4162e-05,
        -6.3303e-07,  3.9032e-06,  8.5684e-06, -7.4213e-06,  1.4869e-04,
         1.0542e-05,  7.2513e-06,  6.6820e-06,  1.5239e-06,  1.0582e-05,
         9.7234e-06, -3.8099e-06, -2.2407e-05, -8.2118e-06, -2.2488e-05,
         3.0577e-05,  8.1703e-06,  1.0096e-05, -1.2377e-05,  1.1632e-06,
         6.7507e-06,  2.9220e-05, -4.7760e-06, -5.3770e-05,  8.3393e-06,
        -2.9026e-05, -8.8084e-05,  6.8872e-05,  2.0861e-05,  8.0460e-06,
         3.3380e-06,  1.1771e-05,  1.6742e-05, -6.1627e-05,  2.7941e-05,
         2.1258e-05,  4.7774e-05,  1.4992e-05,  8.3179e-06,  1.0683e-04,
        -5.6990e-05,  2.8757e-05,  2.7347e-05, -2.0751e-05, -4.1672e-05,
         3.4236e-06, -4.0453e-05,  1.1184e-05,  5.9602e-05,  1.1626e-05,
         1.7092e-05, -4.6840e-06,  4.9196e-05,  1.9863e-06,  8.6190e-06,
         2.7393e-05, -1.9346e-06,  1.1884e-05, -8.8059e-06, -1.9105e-05,
        -3.8937e-04,  1.2036e-05,  3.0940e-05,  8.9993e-06,  5.3528e-05,
         2.2550e-05, -7.7078e-06, -4.1581e-04,  4.2861e-06,  2.0510e-05,
         2.4658e-05,  2.7994e-05, -6.2983e-05,  4.3794e-05, -6.0236e-05,
         1.3714e-05,  1.1788e-05, -3.1233e-05,  1.1745e-05,  2.3275e-06,
        -1.2440e-07,  5.0282e-05, -1.5599e-05,  4.8130e-06,  6.5060e-07,
         2.0058e-05,  3.7641e-06, -7.6592e-06,  3.3544e-06,  1.3304e-05,
         1.0160e-06,  3.4151e-06,  1.0959e-05])
##########################################################
smi_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[-0.0895,  0.0425,  0.1178,  ...,  0.0771,  0.1754,  0.0051],
        [ 0.0194,  0.0102, -0.0413,  ..., -0.0141, -0.0119, -0.0830],
        [ 0.0130, -0.0617, -0.0745,  ..., -0.1027,  0.0608,  0.0702],
        ...,
        [ 0.0956,  0.1144, -0.1169,  ..., -0.0748, -0.0279, -0.0351],
        [ 0.0063, -0.0895, -0.0486,  ..., -0.0164, -0.1033, -0.0524],
        [-0.0688, -0.0352, -0.0775,  ...,  0.0486, -0.0159, -0.0310]])
tensor([[-0.0895,  0.0425,  0.1173,  ...,  0.0771,  0.1754,  0.0051],
        [ 0.0195,  0.0102, -0.0413,  ..., -0.0141, -0.0119, -0.0830],
        [ 0.0128, -0.0618, -0.0755,  ..., -0.1030,  0.0610,  0.0702],
        ...,
        [ 0.0954,  0.1145, -0.1172,  ..., -0.0748, -0.0279, -0.0353],
        [ 0.0065, -0.0895, -0.0490,  ..., -0.0167, -0.1032, -0.0524],
        [-0.0690, -0.0352, -0.0776,  ...,  0.0486, -0.0160, -0.0310]])
##########################################################
smi_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([ 0.0390, -0.0360,  0.0304,  0.0522,  0.0824, -0.0713,  0.0320, -0.0662,
         0.0418,  0.0410, -0.0810,  0.0478,  0.0367,  0.0600,  0.0502,  0.0205,
        -0.0817,  0.0190,  0.0307, -0.0279, -0.0589,  0.0853, -0.0780,  0.0147,
        -0.0857, -0.0591,  0.0313,  0.0502, -0.0049, -0.0560, -0.0108,  0.0365,
        -0.0032, -0.0299,  0.0512, -0.0053, -0.0227,  0.0858, -0.0145, -0.0820,
        -0.0140, -0.0369,  0.0268, -0.0360, -0.0799, -0.0019,  0.0174, -0.0067,
         0.0582, -0.0320,  0.0775,  0.0108,  0.0556, -0.0371, -0.0313, -0.0403,
         0.0199, -0.0528, -0.0291,  0.0233,  0.0368, -0.0160,  0.0090,  0.0428])
tensor([ 0.0364, -0.0363,  0.0261,  0.0459,  0.0722, -0.0699,  0.0245, -0.0656,
         0.0336,  0.0398, -0.0810,  0.0443,  0.0361,  0.0614,  0.0399,  0.0132,
        -0.0827,  0.0282,  0.0315, -0.0279, -0.0597,  0.0811, -0.0780,  0.0113,
        -0.0814, -0.0593,  0.0300,  0.0540,  0.0034, -0.0442, -0.0113,  0.0365,
         0.0011, -0.0275,  0.0488, -0.0055, -0.0184,  0.0879, -0.0203, -0.0819,
        -0.0095, -0.0347,  0.0343, -0.0419, -0.0784, -0.0021,  0.0149, -0.0030,
         0.0463, -0.0324,  0.0821,  0.0061,  0.0587, -0.0374, -0.0326, -0.0423,
         0.0181, -0.0571, -0.0124,  0.0209,  0.0359, -0.0091,  0.0123,  0.0474])
##########################################################
smi_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[ 0.0487,  0.0701,  0.0459,  ...,  0.1485,  0.0158, -0.0075],
        [ 0.0523,  0.0167,  0.0358,  ..., -0.0296,  0.0481, -0.0357],
        [-0.0974,  0.0113, -0.0708,  ..., -0.0109,  0.0739,  0.1172],
        ...,
        [-0.0331, -0.0877, -0.0229,  ...,  0.0221, -0.0387,  0.1296],
        [ 0.0667, -0.0432, -0.0640,  ..., -0.1499,  0.0471,  0.0312],
        [-0.0268, -0.0062,  0.0099,  ..., -0.0021, -0.0246, -0.0033]])
tensor([[ 0.0486,  0.0700,  0.0460,  ...,  0.1485,  0.0159, -0.0077],
        [ 0.0524,  0.0167,  0.0358,  ..., -0.0295,  0.0482, -0.0356],
        [-0.0974,  0.0113, -0.0709,  ..., -0.0109,  0.0740,  0.1171],
        ...,
        [-0.0330, -0.0877, -0.0229,  ...,  0.0221, -0.0387,  0.1297],
        [ 0.0668, -0.0432, -0.0641,  ..., -0.1499,  0.0472,  0.0312],
        [-0.0274, -0.0062,  0.0091,  ..., -0.0021, -0.0245, -0.0038]])
##########################################################
smi_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([-0.0847, -0.0490, -0.0445, -0.1036,  0.1047,  0.0644, -0.0245, -0.0003,
         0.0468, -0.1232,  0.0717, -0.1169,  0.0174,  0.0834,  0.0273,  0.0251,
        -0.1055, -0.0227, -0.0934, -0.1000, -0.1053, -0.0765,  0.0598, -0.0744,
         0.0463, -0.1234,  0.0209,  0.0470,  0.1235, -0.0195,  0.0541, -0.0480,
         0.1148, -0.0727,  0.1159,  0.0683,  0.0448,  0.0013,  0.0749, -0.0401,
        -0.0255,  0.0300, -0.0717,  0.0446,  0.1231, -0.0057,  0.0908, -0.0754,
         0.0632, -0.0747,  0.0050,  0.0100, -0.0558, -0.1103, -0.0367, -0.1223,
         0.0116,  0.0084,  0.1070,  0.0195,  0.0647, -0.1003,  0.1218, -0.0149,
        -0.0808, -0.0539,  0.0720, -0.0909,  0.0187, -0.0974,  0.0365,  0.0534,
         0.1002,  0.0488, -0.0039,  0.0430, -0.0285,  0.0922, -0.0023, -0.1090,
        -0.0465, -0.1081, -0.1037,  0.0554,  0.1193, -0.0494, -0.0893, -0.0008,
         0.0709, -0.0112,  0.0506, -0.0140, -0.0871, -0.0452, -0.0507,  0.0925,
         0.0545,  0.0031,  0.0901, -0.0819, -0.1022,  0.1177,  0.0682,  0.0710,
         0.0319, -0.0796,  0.0767, -0.1053, -0.0900, -0.0381,  0.0686, -0.0737,
        -0.0403,  0.0102, -0.1008, -0.0361, -0.0079,  0.1185,  0.0208, -0.0328,
         0.0247, -0.0611, -0.1211,  0.0626, -0.0295,  0.0828,  0.0049, -0.0736])
tensor([-0.0931, -0.0480, -0.0446, -0.1036,  0.0906,  0.0586, -0.0237, -0.0002,
         0.0466, -0.1230,  0.0700, -0.1147,  0.0142,  0.0841,  0.0276,  0.0251,
        -0.1061, -0.0267, -0.0882, -0.0971, -0.0545, -0.0773,  0.0596, -0.0742,
         0.0472, -0.1232,  0.0182,  0.0481,  0.1240, -0.0192,  0.0340, -0.0494,
         0.1147, -0.0707,  0.1162,  0.0686,  0.0453,  0.0019,  0.0743, -0.0571,
        -0.0246,  0.0307, -0.0708,  0.0436,  0.1242, -0.0058,  0.0891, -0.0708,
         0.0635, -0.0717,  0.0052,  0.0089, -0.0557, -0.1091, -0.0359, -0.1226,
         0.0120,  0.0061,  0.1113,  0.0193,  0.0671, -0.1012,  0.1119, -0.0145,
        -0.0806, -0.0536,  0.0691, -0.0923,  0.0192, -0.0979,  0.0351,  0.0600,
         0.1002,  0.0499, -0.0185,  0.0237, -0.0285,  0.0912,  0.0040, -0.1087,
        -0.0460, -0.1075, -0.1032,  0.0523,  0.1205, -0.0491, -0.0881, -0.0027,
         0.0683, -0.0112,  0.0492, -0.0136, -0.0864, -0.0433, -0.0453,  0.1003,
         0.0549, -0.0010,  0.0908, -0.0804, -0.1016,  0.1176,  0.0869,  0.0708,
         0.0240, -0.0792,  0.0773, -0.1056, -0.0869, -0.0375,  0.0701, -0.0733,
        -0.0434,  0.0105, -0.0995, -0.0357, -0.0039,  0.1183,  0.0230, -0.0306,
         0.0242, -0.0613, -0.1217,  0.0627, -0.0298,  0.0835,  0.0053, -0.0753])
##########################################################
smi_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([ 0.0931, -0.0223,  0.1337,  0.0439,  0.1089,  0.0537, -0.0445,  0.0071,
         0.0085, -0.0100, -0.0991,  0.1098,  0.0861,  0.0187,  0.0264,  0.0591,
         0.0442, -0.1583,  0.1600, -0.0323, -0.1474, -0.0235,  0.0388,  0.0759,
        -0.0737,  0.0703,  0.1036, -0.0217,  0.0201,  0.0004, -0.0891,  0.0873,
         0.0578, -0.1912, -0.0459,  0.0239, -0.0045, -0.0894,  0.0341, -0.0652,
        -0.0095,  0.0712, -0.0486, -0.0282,  0.0549, -0.0014,  0.0285, -0.1477,
         0.0665, -0.0964, -0.0734, -0.0065, -0.0068,  0.0472, -0.0420, -0.0155,
         0.1058,  0.0129, -0.1255,  0.0242, -0.0873,  0.1207, -0.0996,  0.0317,
         0.0311, -0.0650, -0.0776,  0.0681, -0.1110, -0.0737, -0.0301,  0.1787,
        -0.0520, -0.1453, -0.0710,  0.0789, -0.1433, -0.0547, -0.0700,  0.0919,
         0.0448, -0.2299,  0.0469, -0.1489,  0.0156, -0.0176, -0.1678, -0.1463,
         0.0934, -0.0465, -0.0241, -0.1157,  0.0414,  0.0382, -0.0824, -0.0798,
         0.0086, -0.1015,  0.0905,  0.0572,  0.0983,  0.0404, -0.1792, -0.0465,
        -0.0473, -0.0560, -0.0406,  0.1451,  0.0944,  0.1542,  0.0511, -0.0316,
         0.0639,  0.0247, -0.0271, -0.0663,  0.0597, -0.0974,  0.1039, -0.0519,
        -0.0456,  0.0400,  0.0756,  0.0119,  0.0157, -0.0482,  0.0123,  0.0535])
tensor([ 0.0941, -0.0166,  0.1310,  0.0449,  0.0969,  0.0498, -0.0482, -0.0014,
         0.0108, -0.0119, -0.1037,  0.1069,  0.0835,  0.0174,  0.0255,  0.0537,
         0.0436, -0.1633,  0.1674, -0.0409, -0.2416, -0.0270,  0.0400,  0.0764,
        -0.0725,  0.0720,  0.0965, -0.0214,  0.0303,  0.0006, -0.0971,  0.0784,
         0.0577, -0.1828, -0.0506,  0.0211, -0.0055, -0.0862,  0.0226, -0.0664,
        -0.0289,  0.0760, -0.0433, -0.0266,  0.0539,  0.0007,  0.0345, -0.1459,
         0.0663, -0.1012, -0.0735, -0.0083, -0.0081,  0.0382, -0.0462, -0.0162,
         0.1037,  0.0134, -0.1237,  0.0268, -0.0838,  0.1160, -0.0897,  0.0323,
         0.0255, -0.0639, -0.0777,  0.0679, -0.1161, -0.0669, -0.0280,  0.1937,
        -0.0518, -0.1443, -0.0705,  0.0681, -0.1414, -0.0517, -0.0741,  0.0964,
         0.0453, -0.2268,  0.0494, -0.1452,  0.0208, -0.0079, -0.1630, -0.1560,
         0.0908, -0.0470, -0.0226, -0.1158,  0.0378,  0.0373, -0.0838, -0.0896,
         0.0117, -0.1153,  0.0942,  0.0496,  0.0923,  0.0405, -0.1702, -0.0497,
        -0.0317, -0.0521, -0.0380,  0.1484,  0.0972,  0.1290,  0.0497, -0.0311,
         0.0633,  0.0221, -0.0261, -0.0683,  0.0498, -0.0962,  0.1060, -0.0561,
        -0.0518,  0.0486,  0.0720,  0.0122,  0.0154, -0.0473,  0.0149,  0.0536])
##########################################################
smi_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.2081e-02, -2.2730e-03, -2.0859e-03,  3.3416e-04, -1.1527e-02,
        -3.4715e-03,  1.7662e-03, -4.3197e-03,  1.3882e-03, -8.7499e-04,
         2.1386e-03, -9.5587e-04, -1.9841e-03,  6.6159e-04, -5.0073e-03,
         2.5980e-03, -3.3382e-03,  7.7929e-04,  8.8697e-03, -2.6261e-03,
         3.3130e-03, -1.2354e-03, -3.7173e-03,  9.4435e-04, -1.7703e-03,
         4.5000e-03, -3.8373e-03,  1.2887e-03, -4.2821e-03, -1.7822e-03,
        -1.3318e-02, -3.6362e-04, -2.5928e-03, -6.7562e-04, -3.0978e-04,
        -1.3978e-03,  5.8850e-04, -3.3016e-04, -1.9675e-03, -2.9554e-02,
        -1.7893e-03,  1.1216e-04,  1.2068e-03, -2.9768e-03,  5.0253e-04,
        -5.0754e-03, -2.5696e-03,  3.1528e-03, -2.7546e-03,  3.5507e-03,
        -4.0346e-03,  1.8354e-03, -1.1014e-03, -3.4453e-03,  4.0428e-03,
         2.4522e-03,  9.8712e-04, -2.0676e-03,  5.8928e-03, -1.1999e-03,
         5.9813e-03, -1.2427e-02, -7.3272e-03,  3.2753e-03,  3.0957e-03,
        -5.6246e-04, -1.4336e-04,  2.4214e-03,  7.6508e-03, -3.6067e-03,
        -3.0452e-03,  4.7174e-03, -1.1643e-03, -1.7307e-04, -1.8005e-02,
        -9.3026e-03, -3.6171e-03, -5.0792e-03,  4.2697e-03, -6.8322e-03,
        -2.2176e-03,  2.4178e-03,  2.6777e-03, -3.7596e-03,  2.4712e-03,
         3.2774e-04,  1.3303e-03, -3.3152e-03, -6.2696e-04, -6.1340e-05,
        -3.8380e-03,  1.7931e-03,  4.7956e-04, -4.7896e-03,  3.3099e-03,
         5.7732e-02,  6.8919e-03, -1.9833e-03, -7.2037e-04,  8.7812e-03,
         1.5892e-03,  1.4990e-03,  3.3796e-02,  3.1943e-03, -2.3645e-03,
        -4.4351e-03, -5.9067e-03, -6.1444e-03,  5.0086e-03, -4.9091e-03,
        -5.0490e-04, -4.1218e-03, -7.0890e-03,  3.4499e-03,  2.2297e-03,
         2.9877e-03,  1.0183e-02,  1.2489e-03,  1.2796e-04,  7.1394e-04,
         1.5661e-03, -1.6063e-03, -3.3552e-03, -6.3912e-04,  2.1370e-03,
         1.4259e-04, -2.0314e-03,  2.6483e-04])
##########################################################
smi_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([-0.1604,  0.1094,  0.0098,  0.0096,  0.1173,  0.1139, -0.0488, -0.0688,
        -0.0353,  0.0134,  0.0943,  0.1054, -0.1100, -0.0946, -0.0003, -0.0273,
         0.0883,  0.1353,  0.0698, -0.1324, -0.1157,  0.1073, -0.0538, -0.0046,
         0.0351, -0.0033,  0.1450,  0.0295, -0.0579, -0.0059,  0.1985, -0.1806,
         0.0144, -0.0731,  0.0739,  0.0120,  0.0281,  0.0086,  0.1381,  0.2383,
        -0.1313, -0.0338,  0.0744, -0.0827, -0.0569,  0.0521, -0.1147, -0.0733,
         0.0415,  0.0806,  0.0170,  0.1551, -0.0036, -0.0753,  0.0461, -0.0710,
        -0.0535,  0.1703,  0.0962,  0.0318, -0.0862, -0.2200,  0.1415,  0.0029,
         0.0170, -0.0455, -0.0971, -0.1652,  0.0452, -0.0233, -0.0600,  0.1141,
        -0.0374, -0.0617,  0.0680,  0.2458, -0.0847,  0.0536,  0.1853, -0.0043,
         0.0135, -0.0125,  0.0411,  0.0774,  0.0468,  0.0068,  0.0788, -0.0422,
        -0.0602,  0.0331, -0.1742, -0.0102, -0.0294,  0.0422,  0.1117, -0.1581,
         0.0348, -0.0635,  0.0138, -0.0911, -0.0442, -0.0588,  0.1776,  0.0376,
        -0.1371,  0.0382,  0.0059,  0.0545, -0.1105,  0.1523, -0.0436, -0.0028,
        -0.0781,  0.0290,  0.1234,  0.0098,  0.1548, -0.0289, -0.0526, -0.0854,
        -0.0772,  0.0223, -0.0626,  0.0684, -0.0298,  0.0200,  0.0292, -0.1307])
tensor([-1.6563e-01,  1.0840e-01,  6.5366e-03,  1.0819e-02,  8.9360e-02,
         1.0755e-01, -4.9402e-02, -6.9161e-02, -3.4482e-02,  1.2333e-02,
         9.1148e-02,  9.8141e-02, -1.0715e-01, -9.4935e-02,  1.4019e-04,
        -2.6630e-02,  8.8351e-02,  1.3940e-01,  7.2160e-02, -1.3026e-01,
        -1.8948e-01,  1.0823e-01, -5.4951e-02, -5.3565e-03,  3.4951e-02,
        -6.5987e-04,  1.3670e-01,  3.1521e-02, -5.7485e-02, -5.6306e-03,
         1.9427e-01, -1.7238e-01,  1.2938e-02, -5.2311e-02,  7.3938e-02,
         1.2780e-02,  2.8520e-02,  7.3660e-03,  1.3587e-01,  2.4222e-01,
        -1.3082e-01, -3.1915e-02,  7.2324e-02, -8.1992e-02, -5.7773e-02,
         5.2185e-02, -1.1305e-01, -7.1521e-02,  4.2288e-02,  7.9728e-02,
         1.6281e-02,  1.5469e-01, -4.3681e-03, -7.2738e-02,  4.4021e-02,
        -7.0441e-02, -5.4744e-02,  1.7002e-01,  9.0220e-02,  3.1034e-02,
        -8.6541e-02, -2.1856e-01,  1.2925e-01,  3.8070e-03,  1.5116e-02,
        -4.8223e-02, -9.4108e-02, -1.6473e-01,  4.2951e-02, -2.3997e-02,
        -6.2336e-02,  1.3926e-01, -3.6291e-02, -6.3461e-02,  6.3139e-02,
         2.3174e-01, -6.9960e-02,  5.1373e-02,  1.8138e-01, -9.1873e-04,
         1.1196e-02, -1.1184e-02,  3.9568e-02,  7.6288e-02,  4.9693e-02,
         5.7429e-03,  6.9516e-02, -5.4372e-02, -5.6038e-02,  3.3392e-02,
        -1.7423e-01, -8.3034e-03, -2.7644e-02,  3.9020e-02,  1.0601e-01,
        -1.9605e-01,  3.4523e-02, -6.7510e-02,  1.5576e-02, -8.8870e-02,
        -4.2076e-02, -5.7818e-02,  1.8619e-01,  3.4558e-02, -1.3150e-01,
         3.8211e-02,  7.4167e-03,  6.2540e-02, -1.0371e-01,  1.3570e-01,
        -4.4720e-02, -2.8519e-03, -8.2633e-02,  2.9061e-02,  1.2281e-01,
         7.5593e-03,  1.5059e-01, -2.1127e-02, -5.6192e-02, -8.5581e-02,
        -7.6841e-02,  2.3866e-02, -6.5768e-02,  6.8003e-02, -3.0316e-02,
         2.1134e-02,  2.9122e-02, -1.3194e-01])
##########################################################
smi_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 9.5232e-03,  9.6415e-04, -2.8351e-03, -6.1831e-04, -1.4676e-02,
        -6.3939e-03, -1.3607e-03,  1.4440e-04,  1.2935e-03,  1.0426e-03,
        -2.9984e-03,  1.9689e-03,  3.4600e-03, -7.6711e-04,  1.9522e-03,
         1.1676e-03, -1.4491e-03, -3.7198e-03,  8.0071e-03, -2.4382e-03,
        -1.4839e-03, -1.1875e-03,  8.4333e-04, -9.8529e-04,  3.0176e-03,
        -3.9308e-03, -2.3480e-03,  3.2648e-03, -2.6440e-04,  1.7574e-04,
        -1.0302e-02,  2.3171e-03, -1.7627e-03, -6.7839e-04,  7.3541e-04,
         2.3387e-03,  1.1341e-03,  2.9187e-03,  3.9492e-05, -1.3790e-02,
        -4.2433e-04, -1.3619e-06,  1.2917e-03,  1.8150e-03, -1.6607e-03,
        -9.9739e-04,  2.0232e-03, -6.7837e-03,  4.2269e-04,  4.7322e-03,
        -5.4019e-04, -1.0592e-03,  1.6866e-03, -1.3250e-03,  1.6922e-03,
         5.9130e-04, -7.3635e-04, -1.8560e-03,  7.4058e-03, -8.2258e-04,
        -3.9542e-03,  5.1284e-03, -8.6333e-03, -1.8194e-03,  1.8956e-03,
         7.3423e-04,  3.7722e-03,  1.2131e-03,  7.6986e-04,  3.0102e-03,
         2.8240e-03,  7.9866e-03,  4.6394e-04, -3.8193e-03, -3.4011e-02,
        -8.3438e-03,  2.4122e-03, -2.6231e-03,  4.1693e-03, -3.7938e-04,
         2.8925e-03,  1.8302e-03,  1.2462e-03, -6.0968e-03,  2.1969e-03,
         3.1210e-03,  7.1489e-04,  4.4017e-03,  6.0870e-03, -9.2980e-04,
         8.6838e-04,  1.4068e-03, -2.5975e-03,  5.2027e-03,  6.4545e-03,
        -3.7587e-02,  1.0918e-05,  6.7807e-03,  1.6149e-03, -1.1875e-03,
        -1.1909e-03,  5.1110e-04,  2.1736e-02, -2.2079e-03,  7.1596e-03,
         5.9714e-04,  2.3496e-03, -2.2612e-03, -3.3265e-03, -2.7724e-03,
        -4.2238e-03,  2.9697e-04,  5.6129e-03,  2.8055e-04,  1.1926e-03,
         1.6549e-03,  3.3917e-03,  4.4209e-03, -4.9512e-03, -2.7564e-03,
         5.9388e-04, -2.5688e-03,  2.8824e-03, -6.0885e-04,  1.4920e-03,
         1.3303e-03,  8.9612e-04,  2.0538e-03])
##########################################################
smi_encoder.encoder.layers.1.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0249,  0.0551,  0.0463,  ..., -0.0583, -0.0169,  0.0461],
        [ 0.0577,  0.0332,  0.0659,  ...,  0.0300,  0.0617,  0.0403],
        [ 0.0606,  0.0165,  0.0082,  ..., -0.0022,  0.0222, -0.0750],
        ...,
        [ 0.0148, -0.0323,  0.0266,  ...,  0.0392, -0.0101,  0.0195],
        [-0.0675,  0.0723,  0.0342,  ...,  0.0343, -0.0175, -0.0634],
        [ 0.0670, -0.0612,  0.0230,  ..., -0.0704, -0.0105, -0.0647]])
tensor([[-0.0249,  0.0551,  0.0463,  ..., -0.0583, -0.0169,  0.0461],
        [ 0.0577,  0.0332,  0.0659,  ...,  0.0300,  0.0617,  0.0403],
        [ 0.0606,  0.0165,  0.0082,  ..., -0.0022,  0.0222, -0.0750],
        ...,
        [ 0.0143, -0.0325,  0.0266,  ...,  0.0393, -0.0101,  0.0194],
        [-0.0675,  0.0722,  0.0342,  ...,  0.0343, -0.0175, -0.0633],
        [ 0.0669, -0.0609,  0.0230,  ..., -0.0705, -0.0105, -0.0648]])
##########################################################
smi_encoder.encoder.layers.1.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-7.4982e-07, -4.1312e-07,  7.7694e-07, -2.1872e-06, -1.1808e-06,
        -2.7490e-06,  1.5545e-06,  3.7438e-07,  2.7418e-06,  4.1162e-07,
         1.2747e-07, -6.1285e-07,  7.7844e-08,  9.9165e-07,  3.2480e-08,
         3.0996e-06,  1.5067e-06, -1.6130e-07,  3.4204e-07, -1.9106e-06,
        -3.4958e-07, -1.3022e-06,  1.6610e-06, -2.1287e-06,  2.1753e-07,
         8.6553e-07, -2.3346e-06, -2.5639e-06,  7.8479e-07, -1.7634e-06,
        -9.8818e-07, -2.2678e-06, -5.6561e-07, -1.2242e-06, -1.7473e-06,
         2.3970e-07,  6.8146e-07,  1.2426e-06,  1.6408e-06, -4.4399e-07,
         9.4176e-07, -5.0642e-07, -1.4270e-06, -7.4399e-07, -2.9412e-07,
        -2.5741e-06,  2.3097e-07, -1.5783e-06,  9.8090e-07, -9.6272e-07,
        -1.4289e-06, -3.5115e-06, -2.2642e-06,  5.9576e-07, -1.0204e-06,
        -8.5635e-07,  8.2775e-07,  1.1781e-06, -1.9715e-06, -1.8667e-06,
         1.6909e-06, -5.3705e-07, -9.5197e-07, -1.0645e-06,  3.7618e-06,
         6.6449e-07, -1.3855e-06, -2.7679e-06,  1.3733e-06, -2.0231e-07,
        -1.5678e-06,  7.7150e-07,  1.5987e-06,  1.1848e-06, -1.5504e-06,
        -3.8676e-08, -1.5876e-06, -6.5033e-07,  2.2862e-06,  3.0535e-06,
         1.6156e-07,  8.9487e-08,  9.0249e-07, -2.1361e-07,  4.6503e-07,
        -3.8225e-07,  8.7515e-07, -3.7834e-07,  1.1244e-07, -1.0968e-06,
        -6.2431e-07, -1.8381e-07,  6.0775e-07, -1.3658e-07,  7.1752e-07,
         1.1415e-06, -1.7893e-07,  7.9159e-07,  3.1832e-06,  4.4135e-07,
         3.9897e-06,  2.1884e-06,  1.1255e-06, -1.6305e-06, -2.1238e-06,
         2.2717e-06,  2.0522e-06,  2.5551e-07, -4.6407e-07, -4.3543e-06,
        -1.0608e-06,  1.8796e-06,  1.5880e-06, -3.7822e-06, -4.5636e-08,
         5.9460e-07, -1.2984e-06,  1.3836e-06, -3.0422e-08, -2.8028e-06,
         1.6655e-06, -1.6437e-06,  2.1674e-06, -2.5873e-06,  2.0403e-06,
        -7.1949e-07, -3.2316e-06, -1.0420e-06, -9.2194e-14,  1.2070e-13,
        -2.7608e-13, -6.4442e-14,  6.8000e-13,  1.9999e-16, -3.4762e-13,
         1.1747e-13,  2.7138e-14,  1.7308e-13,  1.2577e-13,  1.6275e-13,
        -4.9017e-14, -4.8271e-14, -4.6580e-14, -2.7370e-14,  5.5187e-14,
        -6.7443e-14,  4.0701e-14, -2.9722e-14, -1.1289e-13,  3.9979e-15,
        -5.7527e-14,  5.2576e-14, -3.8686e-14, -8.5727e-14, -1.1767e-14,
         3.1380e-14, -1.8941e-13,  6.4096e-15,  1.0955e-13,  3.0290e-14,
         7.3637e-14,  1.4301e-13,  5.3073e-15,  9.6291e-14, -8.0254e-14,
         6.2454e-14,  2.4856e-15, -1.2547e-13, -8.5786e-14,  5.8330e-15,
         1.0400e-14, -2.3337e-14,  1.1022e-13, -4.8849e-14, -1.9470e-13,
         8.4369e-14,  1.9450e-14,  8.3889e-14,  4.7192e-14, -4.6987e-14,
         1.3148e-14,  1.8754e-13,  1.0948e-13,  3.0106e-13, -1.2821e-13,
         5.2353e-14, -1.5856e-13,  6.4768e-14,  8.9215e-14,  3.8926e-14,
        -3.7424e-14,  1.5263e-13,  3.7571e-13,  9.8057e-14,  1.2295e-13,
        -1.2430e-13, -2.3264e-13,  1.0073e-13,  3.4823e-14,  1.3856e-13,
        -1.3178e-14, -1.1971e-14, -4.4378e-15,  3.4732e-13,  1.5063e-13,
        -7.5486e-14, -6.6807e-14,  9.9552e-14,  1.0560e-13, -1.1165e-14,
        -3.2118e-14,  9.4904e-14, -1.5886e-14,  4.1625e-15,  3.0797e-14,
         1.5205e-14, -2.3966e-13,  2.8777e-14,  1.3945e-14, -6.1384e-14,
        -1.1898e-13, -9.5204e-14, -9.1049e-14,  2.7508e-14, -2.3325e-13,
        -5.6000e-14, -7.0397e-14, -6.6448e-14, -1.4688e-14,  1.3921e-14,
        -4.6391e-14,  7.5408e-14,  6.1860e-14, -6.3598e-14,  6.9711e-14,
        -2.6722e-13,  1.1836e-13, -1.1865e-13,  2.5614e-13,  3.1383e-13,
         1.1421e-14, -3.2152e-15,  1.7208e-13, -3.1918e-14,  7.7070e-14,
        -1.8400e-13,  6.2473e-14,  7.5159e-14,  1.4454e-13, -6.2518e-14,
        -2.7419e-13, -6.1305e-15, -6.0824e-14,  2.0086e-13, -4.9774e-14,
         8.7396e-14, -2.0041e-03,  2.7236e-03, -2.0594e-03,  8.0366e-04,
         9.1245e-05, -1.1118e-03,  1.4816e-03,  1.1987e-03,  1.4925e-04,
        -3.5404e-03, -7.4301e-03, -3.6037e-03,  1.5354e-04, -2.1780e-03,
        -4.5277e-03,  1.1428e-03,  7.8725e-04, -2.1027e-04,  1.1362e-03,
        -2.2029e-03, -2.0702e-03,  6.9102e-05,  3.9114e-03,  4.2877e-03,
         2.2329e-03,  2.7761e-03,  6.3725e-04,  1.6883e-03,  2.1809e-03,
         6.8828e-04,  1.5089e-03,  1.6491e-03,  8.3243e-04, -2.0998e-03,
        -1.0504e-04,  1.3016e-03, -1.3727e-03, -1.2698e-03, -1.0707e-03,
        -6.8573e-03,  1.1656e-03,  1.0515e-03, -4.9869e-03,  8.5582e-04,
        -9.4587e-04,  2.4290e-03,  1.2570e-03, -3.9684e-03,  5.1561e-03,
         7.3593e-04,  3.2859e-03, -1.8755e-03,  1.4025e-03, -2.5767e-03,
        -3.9572e-03, -1.0754e-03,  4.2644e-03,  2.8326e-03,  1.9086e-03,
         3.0868e-03, -1.3814e-03,  2.7318e-03, -2.7885e-03, -4.4587e-03,
        -3.9048e-04,  1.3196e-03, -1.5788e-03,  2.4378e-03,  3.5899e-03,
        -3.9357e-03, -1.4196e-03, -4.0285e-03, -9.1621e-04,  2.0707e-03,
         3.7605e-03,  3.0532e-03,  4.1969e-03, -3.6329e-03, -3.7981e-04,
        -5.2874e-03, -2.6083e-04,  2.8310e-04,  3.9158e-03,  1.6083e-03,
        -1.2926e-03,  1.7423e-03, -2.0437e-03,  3.1778e-03, -1.6113e-03,
        -2.8633e-04,  3.9301e-03,  1.1217e-03,  1.4267e-03,  4.6972e-03,
        -2.6350e-03,  4.1234e-03, -1.3868e-03,  1.8315e-03,  1.8530e-03,
        -2.2507e-03, -3.6092e-04,  2.9156e-03, -7.5956e-04,  3.9680e-05,
        -1.0463e-03, -3.3959e-03, -3.0086e-03, -2.5379e-05, -5.5198e-03,
         2.4395e-03,  1.2750e-03, -1.7866e-03, -2.6495e-03,  8.5372e-04,
         1.6736e-03, -8.9464e-04, -3.3265e-03,  3.8322e-03, -5.2027e-03,
         4.5834e-03, -2.3481e-03, -2.7858e-04,  7.1854e-04, -1.6824e-03,
        -3.2461e-03, -6.2779e-04,  7.4384e-04, -4.8354e-03])
##########################################################
smi_encoder.encoder.layers.1.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0195, -0.0317, -0.0510,  ..., -0.0840,  0.0122, -0.0714],
        [-0.0169, -0.0862, -0.0542,  ..., -0.0039,  0.0410,  0.0698],
        [-0.0497, -0.0115,  0.0451,  ..., -0.0327, -0.0224,  0.0855],
        ...,
        [-0.0498,  0.0312,  0.0274,  ...,  0.0140,  0.0436, -0.0074],
        [ 0.0508,  0.0038,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0864, -0.0189,  ..., -0.0154,  0.0077,  0.0106]])
tensor([[-0.0200, -0.0316, -0.0507,  ..., -0.0836,  0.0121, -0.0709],
        [-0.0170, -0.0862, -0.0541,  ..., -0.0037,  0.0411,  0.0697],
        [-0.0497, -0.0117,  0.0449,  ..., -0.0327, -0.0225,  0.0854],
        ...,
        [-0.0499,  0.0312,  0.0274,  ...,  0.0142,  0.0436, -0.0074],
        [ 0.0508,  0.0037,  0.0193,  ...,  0.0085,  0.0258, -0.0459],
        [-0.0125, -0.0865, -0.0188,  ..., -0.0150,  0.0078,  0.0106]])
##########################################################
smi_encoder.encoder.layers.1.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 9.9838e-03,  1.1960e-03, -1.8959e-03, -1.5569e-03, -1.4165e-02,
        -6.2137e-03, -8.7408e-04,  1.2291e-03,  5.4484e-04,  4.7279e-04,
        -1.2661e-03,  2.9485e-03,  4.4320e-03,  8.4153e-04,  1.0674e-03,
         1.6957e-03, -1.5561e-04, -3.1304e-03,  6.0639e-03, -2.7144e-03,
         6.6406e-03,  5.2839e-04,  7.5213e-04,  5.1356e-04,  2.0047e-03,
        -4.4046e-04, -4.3800e-03,  2.3846e-03,  4.6728e-04,  5.5838e-04,
        -1.0466e-02,  6.3573e-04, -1.0423e-03,  2.2346e-03,  1.6090e-04,
         1.1888e-03,  6.4841e-04,  2.1643e-03, -5.7452e-04, -1.2779e-02,
         8.2185e-04, -2.5223e-03,  5.2534e-04,  1.2466e-03, -2.3137e-03,
         6.0718e-04,  2.4611e-03, -7.7675e-03, -5.4698e-04,  4.0896e-03,
         2.0512e-03,  5.9703e-04,  6.4309e-04, -1.6282e-03,  3.7596e-03,
        -6.7441e-05, -3.6496e-03, -4.5245e-05,  8.2048e-03,  4.9658e-04,
        -6.1930e-03,  3.5752e-03, -5.6861e-03,  1.0006e-03, -2.9290e-04,
        -5.7035e-04,  2.5040e-03,  2.0314e-03,  1.3258e-03,  2.0027e-03,
         3.0000e-04,  5.9760e-03,  2.3527e-04, -5.7478e-03, -2.4856e-02,
        -5.5266e-03, -1.3213e-04,  5.2022e-04,  3.1579e-03, -1.4279e-03,
         1.2671e-03,  3.7696e-03,  1.7985e-03, -7.2826e-03,  1.8212e-04,
         1.3282e-03,  2.0850e-03,  6.9942e-03,  5.3775e-03,  6.6006e-04,
         3.3353e-03,  1.8910e-04, -1.9526e-03,  3.1215e-03,  5.8101e-03,
        -2.6308e-02,  1.2348e-03,  7.9083e-03,  7.5757e-04, -2.4593e-06,
        -1.3295e-03,  6.0777e-05,  2.1066e-02, -2.8010e-04,  8.4173e-03,
        -3.7676e-04,  2.1465e-03, -1.2463e-05, -1.6407e-03, -2.6938e-03,
        -2.8897e-03, -2.2730e-04,  3.9068e-03,  1.0248e-04,  2.0158e-03,
        -2.3410e-04,  3.3109e-03,  4.4057e-03, -3.2918e-03, -1.2206e-03,
         1.7358e-03, -2.0207e-04,  4.2097e-03,  3.5776e-04,  6.0988e-04,
         1.6793e-03,  1.0252e-03,  3.1714e-03])
##########################################################
smi_encoder.encoder.layers.1.linear1.weight shape: torch.Size([64, 128])
tensor([[-0.0895,  0.0425,  0.1178,  ...,  0.0771,  0.1754,  0.0051],
        [ 0.0194,  0.0102, -0.0413,  ..., -0.0141, -0.0119, -0.0830],
        [ 0.0130, -0.0617, -0.0745,  ..., -0.1027,  0.0608,  0.0702],
        ...,
        [ 0.0956,  0.1144, -0.1169,  ..., -0.0748, -0.0279, -0.0351],
        [ 0.0063, -0.0895, -0.0486,  ..., -0.0164, -0.1033, -0.0524],
        [-0.0688, -0.0352, -0.0775,  ...,  0.0486, -0.0159, -0.0310]])
tensor([[-0.0900,  0.0425,  0.1179,  ...,  0.0771,  0.1753,  0.0051],
        [ 0.0196,  0.0102, -0.0412,  ..., -0.0141, -0.0119, -0.0831],
        [ 0.0137, -0.0616, -0.0744,  ..., -0.1028,  0.0608,  0.0703],
        ...,
        [ 0.0956,  0.1144, -0.1170,  ..., -0.0747, -0.0279, -0.0351],
        [ 0.0064, -0.0895, -0.0486,  ..., -0.0165, -0.1033, -0.0523],
        [-0.0686, -0.0353, -0.0774,  ...,  0.0486, -0.0159, -0.0310]])
##########################################################
smi_encoder.encoder.layers.1.linear1.bias shape: torch.Size([64])
tensor([ 0.0390, -0.0360,  0.0304,  0.0522,  0.0824, -0.0713,  0.0320, -0.0662,
         0.0418,  0.0410, -0.0810,  0.0478,  0.0367,  0.0600,  0.0502,  0.0205,
        -0.0817,  0.0190,  0.0307, -0.0279, -0.0589,  0.0853, -0.0780,  0.0147,
        -0.0857, -0.0591,  0.0313,  0.0502, -0.0049, -0.0560, -0.0108,  0.0365,
        -0.0032, -0.0299,  0.0512, -0.0053, -0.0227,  0.0858, -0.0145, -0.0820,
        -0.0140, -0.0369,  0.0268, -0.0360, -0.0799, -0.0019,  0.0174, -0.0067,
         0.0582, -0.0320,  0.0775,  0.0108,  0.0556, -0.0371, -0.0313, -0.0403,
         0.0199, -0.0528, -0.0291,  0.0233,  0.0368, -0.0160,  0.0090,  0.0428])
tensor([ 0.0416, -0.0352,  0.0321,  0.0597,  0.0814, -0.0625,  0.0282, -0.0661,
         0.0470,  0.0415, -0.0811,  0.0463,  0.0293,  0.0578,  0.0481,  0.0065,
        -0.0807,  0.0280,  0.0385, -0.0293, -0.0596,  0.0771, -0.0803,  0.0143,
        -0.0858, -0.0570,  0.0403,  0.0608, -0.0077, -0.0581, -0.0063,  0.0369,
        -0.0083, -0.0324,  0.0400, -0.0063, -0.0224,  0.0819, -0.0088, -0.0757,
        -0.0152, -0.0374,  0.0282, -0.0435, -0.0787, -0.0042,  0.0173, -0.0120,
         0.0624, -0.0306,  0.0746,  0.0135,  0.0505, -0.0371, -0.0315, -0.0353,
         0.0185, -0.0527, -0.0224,  0.0262,  0.0329, -0.0160,  0.0092,  0.0377])
##########################################################
smi_encoder.encoder.layers.1.linear2.weight shape: torch.Size([128, 64])
tensor([[ 0.0487,  0.0701,  0.0459,  ...,  0.1485,  0.0158, -0.0075],
        [ 0.0523,  0.0167,  0.0358,  ..., -0.0296,  0.0481, -0.0357],
        [-0.0974,  0.0113, -0.0708,  ..., -0.0109,  0.0739,  0.1172],
        ...,
        [-0.0331, -0.0877, -0.0229,  ...,  0.0221, -0.0387,  0.1296],
        [ 0.0667, -0.0432, -0.0640,  ..., -0.1499,  0.0471,  0.0312],
        [-0.0268, -0.0062,  0.0099,  ..., -0.0021, -0.0246, -0.0033]])
tensor([[ 0.0492,  0.0701,  0.0467,  ...,  0.1485,  0.0175, -0.0061],
        [ 0.0520,  0.0167,  0.0357,  ..., -0.0296,  0.0478, -0.0358],
        [-0.0975,  0.0113, -0.0708,  ..., -0.0110,  0.0738,  0.1171],
        ...,
        [-0.0335, -0.0876, -0.0227,  ...,  0.0220, -0.0388,  0.1293],
        [ 0.0682, -0.0432, -0.0642,  ..., -0.1499,  0.0477,  0.0319],
        [-0.0254, -0.0061,  0.0102,  ..., -0.0021, -0.0233, -0.0023]])
##########################################################
smi_encoder.encoder.layers.1.linear2.bias shape: torch.Size([128])
tensor([-0.0847, -0.0490, -0.0445, -0.1036,  0.1047,  0.0644, -0.0245, -0.0003,
         0.0468, -0.1232,  0.0717, -0.1169,  0.0174,  0.0834,  0.0273,  0.0251,
        -0.1055, -0.0227, -0.0934, -0.1000, -0.1053, -0.0765,  0.0598, -0.0744,
         0.0463, -0.1234,  0.0209,  0.0470,  0.1235, -0.0195,  0.0541, -0.0480,
         0.1148, -0.0727,  0.1159,  0.0683,  0.0448,  0.0013,  0.0749, -0.0401,
        -0.0255,  0.0300, -0.0717,  0.0446,  0.1231, -0.0057,  0.0908, -0.0754,
         0.0632, -0.0747,  0.0050,  0.0100, -0.0558, -0.1103, -0.0367, -0.1223,
         0.0116,  0.0084,  0.1070,  0.0195,  0.0647, -0.1003,  0.1218, -0.0149,
        -0.0808, -0.0539,  0.0720, -0.0909,  0.0187, -0.0974,  0.0365,  0.0534,
         0.1002,  0.0488, -0.0039,  0.0430, -0.0285,  0.0922, -0.0023, -0.1090,
        -0.0465, -0.1081, -0.1037,  0.0554,  0.1193, -0.0494, -0.0893, -0.0008,
         0.0709, -0.0112,  0.0506, -0.0140, -0.0871, -0.0452, -0.0507,  0.0925,
         0.0545,  0.0031,  0.0901, -0.0819, -0.1022,  0.1177,  0.0682,  0.0710,
         0.0319, -0.0796,  0.0767, -0.1053, -0.0900, -0.0381,  0.0686, -0.0737,
        -0.0403,  0.0102, -0.1008, -0.0361, -0.0079,  0.1185,  0.0208, -0.0328,
         0.0247, -0.0611, -0.1211,  0.0626, -0.0295,  0.0828,  0.0049, -0.0736])
tensor([-7.0611e-02, -4.9239e-02, -4.4731e-02, -1.0523e-01,  8.6399e-02,
         5.2724e-02, -2.5193e-02,  1.2701e-03,  4.3394e-02, -1.2312e-01,
         7.1531e-02, -1.1565e-01,  1.9454e-02,  8.2427e-02,  2.6326e-02,
         2.5082e-02, -1.0626e-01, -1.7830e-02, -9.1379e-02, -9.2924e-02,
        -9.2290e-02, -7.6646e-02,  5.5345e-02, -7.5517e-02,  4.7940e-02,
        -1.2354e-01,  1.8125e-02,  4.4612e-02,  1.2290e-01, -2.0389e-02,
         6.1275e-02, -5.5388e-02,  1.1407e-01, -7.0084e-02,  1.1267e-01,
         6.5678e-02,  4.1409e-02,  1.6485e-03,  7.3180e-02, -1.7266e-02,
        -2.9721e-02,  2.7008e-02, -7.1318e-02,  4.1866e-02,  1.1762e-01,
        -6.7422e-03,  9.1706e-02, -7.0066e-02,  6.2704e-02, -7.5876e-02,
         1.9178e-03,  3.2634e-05, -5.5482e-02, -1.0901e-01, -4.0980e-02,
        -1.1743e-01,  9.3275e-03,  1.1394e-02,  1.0391e-01,  1.8748e-02,
         7.1881e-02, -9.0789e-02,  1.2588e-01, -1.5693e-02, -7.9626e-02,
        -4.9967e-02,  6.6141e-02, -8.9482e-02,  1.6333e-02, -9.9475e-02,
         3.4827e-02,  5.5671e-02,  9.7804e-02,  4.7604e-02,  2.6298e-02,
         4.2876e-02, -3.1387e-02,  8.9539e-02, -2.8730e-03, -1.0912e-01,
        -4.6393e-02, -1.0711e-01, -1.0203e-01,  5.7077e-02,  1.1915e-01,
        -4.9838e-02, -8.9457e-02, -3.8684e-03,  7.4481e-02, -1.0615e-02,
         4.2147e-02, -1.4215e-02, -8.8321e-02, -4.2267e-02, -5.9189e-02,
         1.2588e-01,  5.1992e-02, -1.6818e-03,  8.9659e-02, -7.7005e-02,
        -1.0791e-01,  1.1260e-01,  5.1091e-02,  6.8281e-02, -9.3086e-05,
        -7.9961e-02,  7.5515e-02, -1.0560e-01, -9.4544e-02, -3.9994e-02,
         6.4075e-02, -7.3929e-02, -3.6339e-02,  8.1537e-03, -1.0353e-01,
        -3.7817e-02,  9.9424e-04,  1.1430e-01,  1.8405e-02, -3.1114e-02,
         2.1552e-02, -6.3363e-02, -1.1671e-01,  6.3302e-02, -3.0890e-02,
         8.1558e-02,  9.8651e-03, -6.6019e-02])
##########################################################
smi_encoder.encoder.layers.1.norm1.weight shape: torch.Size([128])
tensor([ 0.0931, -0.0223,  0.1337,  0.0439,  0.1089,  0.0537, -0.0445,  0.0071,
         0.0085, -0.0100, -0.0991,  0.1098,  0.0861,  0.0187,  0.0264,  0.0591,
         0.0442, -0.1583,  0.1600, -0.0323, -0.1474, -0.0235,  0.0388,  0.0759,
        -0.0737,  0.0703,  0.1036, -0.0217,  0.0201,  0.0004, -0.0891,  0.0873,
         0.0578, -0.1912, -0.0459,  0.0239, -0.0045, -0.0894,  0.0341, -0.0652,
        -0.0095,  0.0712, -0.0486, -0.0282,  0.0549, -0.0014,  0.0285, -0.1477,
         0.0665, -0.0964, -0.0734, -0.0065, -0.0068,  0.0472, -0.0420, -0.0155,
         0.1058,  0.0129, -0.1255,  0.0242, -0.0873,  0.1207, -0.0996,  0.0317,
         0.0311, -0.0650, -0.0776,  0.0681, -0.1110, -0.0737, -0.0301,  0.1787,
        -0.0520, -0.1453, -0.0710,  0.0789, -0.1433, -0.0547, -0.0700,  0.0919,
         0.0448, -0.2299,  0.0469, -0.1489,  0.0156, -0.0176, -0.1678, -0.1463,
         0.0934, -0.0465, -0.0241, -0.1157,  0.0414,  0.0382, -0.0824, -0.0798,
         0.0086, -0.1015,  0.0905,  0.0572,  0.0983,  0.0404, -0.1792, -0.0465,
        -0.0473, -0.0560, -0.0406,  0.1451,  0.0944,  0.1542,  0.0511, -0.0316,
         0.0639,  0.0247, -0.0271, -0.0663,  0.0597, -0.0974,  0.1039, -0.0519,
        -0.0456,  0.0400,  0.0756,  0.0119,  0.0157, -0.0482,  0.0123,  0.0535])
tensor([ 1.0079e-01, -2.2996e-02,  1.3323e-01,  4.4052e-02,  8.5841e-02,
         4.2143e-02, -4.3773e-02,  5.6763e-03,  9.3162e-03, -1.0380e-02,
        -9.6731e-02,  1.0502e-01,  8.1438e-02,  2.1022e-02,  2.6097e-02,
         5.8554e-02,  4.7851e-02, -1.6037e-01,  1.6108e-01, -2.7960e-02,
        -2.0251e-01, -2.5715e-02,  3.8438e-02,  7.6155e-02, -7.4291e-02,
         6.9721e-02,  9.5738e-02, -2.4032e-02,  2.1324e-02,  1.8202e-04,
        -7.4717e-02,  6.3465e-02,  5.7233e-02, -1.8412e-01, -4.8291e-02,
         2.4129e-02, -4.9989e-03, -8.9421e-02,  3.5941e-02, -8.9929e-02,
        -8.9737e-03,  7.2633e-02, -4.8230e-02, -2.6600e-02,  5.7871e-02,
        -1.4266e-03,  2.7299e-02, -1.4665e-01,  6.6661e-02, -9.6901e-02,
        -7.2641e-02, -1.2093e-02, -6.7337e-03,  4.4886e-02, -3.8701e-02,
        -1.4110e-02,  1.0211e-01,  1.4724e-02, -1.2197e-01,  2.4582e-02,
        -9.2077e-02,  1.1680e-01, -9.6592e-02,  3.1973e-02,  3.1373e-02,
        -6.6454e-02, -7.5719e-02,  6.7783e-02, -1.1040e-01, -7.4949e-02,
        -3.0820e-02,  1.9547e-01, -5.2046e-02, -1.4287e-01, -8.7192e-02,
         3.5253e-02, -1.4133e-01, -5.4725e-02, -6.2570e-02,  9.2226e-02,
         4.4592e-02, -2.2951e-01,  4.8740e-02, -1.4638e-01,  1.4633e-02,
        -1.6582e-02, -1.6194e-01, -1.4901e-01,  9.1391e-02, -4.6255e-02,
        -2.2054e-02, -1.1514e-01,  4.2751e-02,  3.6536e-02, -7.5764e-02,
        -1.8328e-01,  8.2858e-03, -1.0295e-01,  8.9954e-02,  5.8830e-02,
         9.6361e-02,  4.3728e-02, -1.9655e-01, -4.5828e-02, -1.9520e-02,
        -5.7146e-02, -4.1060e-02,  1.4587e-01,  8.5809e-02,  1.3528e-01,
         5.0738e-02, -3.1178e-02,  6.8749e-02,  2.4905e-02, -2.5674e-02,
        -6.6441e-02,  5.2273e-02, -9.7301e-02,  1.0787e-01, -5.0902e-02,
        -4.4793e-02,  4.2123e-02,  7.8511e-02,  1.5231e-02,  1.5975e-02,
        -4.8017e-02,  1.2394e-02,  5.9361e-02])
##########################################################
smi_encoder.encoder.layers.1.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 1.1982e-02,  2.0468e-03, -2.3848e-03, -5.2064e-03, -1.4789e-02,
        -1.2416e-02,  4.8242e-03,  3.5687e-03, -3.1032e-03, -1.5818e-03,
         1.5652e-03, -3.7984e-05,  5.1879e-03, -2.0341e-03,  9.0671e-04,
         1.9783e-03, -3.9030e-03,  2.9178e-03,  4.0002e-03,  6.1244e-03,
         5.8953e-03,  2.4071e-03,  1.7247e-03,  6.6337e-04, -2.6861e-03,
        -2.0347e-03, -5.0347e-03, -6.6130e-03, -3.2721e-03,  8.3547e-04,
         1.5985e-02, -5.1688e-04, -3.3848e-03, -3.5967e-04, -1.7010e-03,
         3.6754e-03, -3.7511e-03, -1.8038e-03, -7.3575e-04,  2.4759e-02,
        -5.7557e-03, -4.7459e-03,  1.1299e-03, -2.4560e-03, -6.3828e-03,
        -4.1602e-03,  2.4065e-03,  5.4825e-03, -1.0880e-03, -2.6305e-03,
        -1.9449e-03, -6.7262e-03,  1.2265e-03, -4.7652e-03, -7.5119e-03,
         3.3265e-03, -4.0768e-03, -2.2651e-03, -6.9695e-03, -6.0507e-04,
         8.7670e-03,  3.8818e-03,  4.3954e-03,  1.2095e-03, -2.9497e-03,
         1.9577e-03, -2.6816e-03,  2.8984e-03, -5.9299e-04, -4.2502e-03,
         2.8965e-05,  6.0694e-03, -4.2291e-04,  4.4343e-03,  4.9439e-02,
         9.2290e-04,  4.2756e-04,  6.9540e-05, -5.7501e-03, -2.5888e-03,
         2.5150e-03, -9.3040e-04,  3.3193e-03,  5.1524e-03, -1.8462e-03,
        -4.0263e-03, -4.3146e-04, -4.6077e-03,  5.3539e-03,  1.0770e-04,
        -9.5610e-03,  1.2043e-04, -7.3540e-03,  5.5629e-03, -6.8139e-03,
         3.8031e-02,  2.4347e-04, -7.2336e-03,  1.4916e-04,  1.4620e-03,
        -1.9302e-03, -3.2893e-03, -1.3742e-02,  1.0945e-03, -2.3108e-02,
         1.5180e-03, -5.4697e-03, -9.7173e-04, -2.9264e-03, -3.0043e-03,
        -7.2083e-03,  2.4137e-03,  5.1645e-03,  1.0467e-05, -3.7752e-03,
         1.1571e-03,  6.8844e-03, -4.8015e-03, -5.5296e-03,  2.4011e-03,
        -2.6572e-03, -3.5742e-03,  5.3243e-03,  1.6080e-03, -1.3298e-05,
        -2.2523e-03,  5.9450e-03,  5.9748e-03])
##########################################################
smi_encoder.encoder.layers.1.norm2.weight shape: torch.Size([128])
tensor([-0.1604,  0.1094,  0.0098,  0.0096,  0.1173,  0.1139, -0.0488, -0.0688,
        -0.0353,  0.0134,  0.0943,  0.1054, -0.1100, -0.0946, -0.0003, -0.0273,
         0.0883,  0.1353,  0.0698, -0.1324, -0.1157,  0.1073, -0.0538, -0.0046,
         0.0351, -0.0033,  0.1450,  0.0295, -0.0579, -0.0059,  0.1985, -0.1806,
         0.0144, -0.0731,  0.0739,  0.0120,  0.0281,  0.0086,  0.1381,  0.2383,
        -0.1313, -0.0338,  0.0744, -0.0827, -0.0569,  0.0521, -0.1147, -0.0733,
         0.0415,  0.0806,  0.0170,  0.1551, -0.0036, -0.0753,  0.0461, -0.0710,
        -0.0535,  0.1703,  0.0962,  0.0318, -0.0862, -0.2200,  0.1415,  0.0029,
         0.0170, -0.0455, -0.0971, -0.1652,  0.0452, -0.0233, -0.0600,  0.1141,
        -0.0374, -0.0617,  0.0680,  0.2458, -0.0847,  0.0536,  0.1853, -0.0043,
         0.0135, -0.0125,  0.0411,  0.0774,  0.0468,  0.0068,  0.0788, -0.0422,
        -0.0602,  0.0331, -0.1742, -0.0102, -0.0294,  0.0422,  0.1117, -0.1581,
         0.0348, -0.0635,  0.0138, -0.0911, -0.0442, -0.0588,  0.1776,  0.0376,
        -0.1371,  0.0382,  0.0059,  0.0545, -0.1105,  0.1523, -0.0436, -0.0028,
        -0.0781,  0.0290,  0.1234,  0.0098,  0.1548, -0.0289, -0.0526, -0.0854,
        -0.0772,  0.0223, -0.0626,  0.0684, -0.0298,  0.0200,  0.0292, -0.1307])
tensor([-0.1581,  0.1098,  0.0100,  0.0254,  0.0831,  0.1070, -0.0484, -0.0692,
        -0.0314,  0.0201,  0.0988,  0.1154, -0.1092, -0.0943, -0.0006, -0.0280,
         0.0924,  0.1320,  0.0665, -0.1252, -0.1739,  0.1081, -0.0518, -0.0107,
         0.0338, -0.0045,  0.1367,  0.0268, -0.0599, -0.0059,  0.1943, -0.1698,
         0.0191, -0.0648,  0.0737,  0.0064,  0.0239,  0.0061,  0.1388,  0.2423,
        -0.1307, -0.0336,  0.0733, -0.0819, -0.0542,  0.0508, -0.1170, -0.0750,
         0.0444,  0.0817,  0.0141,  0.1492, -0.0029, -0.0745,  0.0451, -0.0614,
        -0.0530,  0.1713,  0.0863,  0.0316, -0.1046, -0.2156,  0.1411,  0.0015,
         0.0168, -0.0408, -0.0905, -0.1646,  0.0433, -0.0352, -0.0612,  0.1372,
        -0.0318, -0.0587,  0.1444,  0.2239, -0.0910,  0.0515,  0.1855, -0.0073,
         0.0126, -0.0169,  0.0381,  0.0759,  0.0530,  0.0034,  0.0701, -0.0510,
        -0.0595,  0.0317, -0.1718, -0.0155, -0.0370,  0.0354,  0.1093, -0.3129,
         0.0332, -0.0641,  0.0174, -0.0850, -0.0459, -0.0521,  0.1755,  0.0351,
        -0.1175,  0.0370,  0.0063,  0.0662, -0.1052,  0.1255, -0.0398, -0.0052,
        -0.0728,  0.0288,  0.1246,  0.0094,  0.1454, -0.0182, -0.0527, -0.0853,
        -0.0766,  0.0306, -0.0568,  0.0789, -0.0311,  0.0251,  0.0452, -0.1263])
##########################################################
smi_encoder.encoder.layers.1.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.3108e-02, -8.3912e-04,  7.6147e-03, -1.8928e-02, -2.2214e-02,
        -1.6350e-02, -1.3435e-03, -6.0402e-03,  5.8510e-03, -7.7361e-03,
         1.1409e-04, -4.9607e-03, -5.7025e-03, -9.5588e-04,  1.9795e-03,
        -2.7417e-03, -3.9214e-03,  1.0731e-02,  9.0876e-03, -9.1419e-03,
        -3.9568e-03, -1.6475e-03,  1.0335e-02,  1.4901e-02,  1.2454e-02,
         9.2527e-04, -2.2723e-03, -5.9584e-03, -3.9578e-03, -3.0915e-03,
         8.6081e-03,  9.1889e-04,  1.0860e-02, -1.5415e-02, -3.2739e-03,
        -1.1241e-02, -1.4976e-02,  9.6750e-03, -1.3198e-04,  1.8212e-02,
         3.7819e-03,  1.0794e-02,  6.3705e-04,  3.9431e-03,  1.2604e-02,
         2.4136e-03, -5.0908e-03, -1.0039e-02,  2.2936e-03, -2.2582e-03,
        -8.2011e-03, -8.7457e-03,  3.5035e-05, -5.9187e-04, -1.3687e-02,
        -7.7724e-03,  1.9899e-03,  3.6759e-03, -1.8273e-03,  5.5075e-03,
        -1.7271e-02, -7.4534e-03,  3.9539e-03,  4.6256e-03,  9.5736e-03,
        -1.5150e-02,  5.5603e-03, -3.0449e-03, -3.7360e-03,  1.6577e-02,
         1.9981e-03,  1.2908e-03,  3.9754e-03,  2.8353e-03,  8.7946e-02,
         4.8377e-03,  3.9668e-03, -5.0879e-03,  6.8526e-04,  6.0072e-03,
         6.4128e-03,  4.7797e-03,  3.9546e-03,  2.7627e-03,  7.3544e-03,
         1.1128e-02, -2.1935e-03,  1.2027e-02, -1.1579e-02,  2.3396e-03,
         8.2774e-03,  7.4616e-03,  8.1873e-03,  1.2546e-02, -1.1514e-02,
        -3.6136e-02, -3.1207e-03,  1.0519e-02,  8.3438e-03, -8.3452e-03,
         1.8312e-02,  9.7707e-03, -1.0195e-02, -5.0293e-03,  3.3549e-02,
         1.5582e-03,  1.4587e-03, -7.3224e-03,  6.7674e-03, -2.5344e-03,
         9.9936e-03,  3.2516e-03, -6.6694e-03, -7.6292e-03, -3.6617e-03,
        -6.2769e-03,  9.0922e-03,  1.3219e-02,  2.1883e-03, -6.1237e-03,
         2.7168e-03, -1.5397e-02, -8.0216e-03,  6.1166e-03,  6.2034e-03,
         8.8664e-03,  3.1146e-02, -1.0487e-02])
##########################################################
prot_encoder.embedding.weight shape: torch.Size([29, 128])
tensor([[ 2.4886e-01,  1.9467e-01,  2.3676e-01,  ..., -1.7926e-01,
         -8.3672e-01,  6.2781e-01],
        [ 3.8768e-01, -8.0246e-01, -1.1083e-01,  ..., -6.9111e-02,
         -1.7946e-02,  8.1375e-01],
        [-3.6332e-02, -6.9242e-01, -1.1287e+00,  ..., -7.9413e-01,
         -4.9074e-01, -8.7455e-01],
        ...,
        [ 7.5512e-01, -5.5864e-01, -5.0096e-01,  ...,  2.4155e-01,
          5.0867e-01, -1.3138e+00],
        [-3.2454e-02, -7.2644e-01,  7.3096e-01,  ..., -9.9326e-01,
          4.8812e-01,  1.4374e-03],
        [-1.9197e+00,  1.5667e-01,  3.5023e-01,  ...,  7.4790e-01,
         -3.3693e-01, -4.8888e-01]])
tensor([[ 2.4886e-01,  1.9467e-01,  2.3676e-01,  ..., -1.7926e-01,
         -8.3672e-01,  6.2781e-01],
        [ 3.8753e-01, -8.0254e-01, -1.1071e-01,  ..., -6.9387e-02,
         -1.8003e-02,  8.1328e-01],
        [-3.6332e-02, -6.9242e-01, -1.1287e+00,  ..., -7.9413e-01,
         -4.9074e-01, -8.7455e-01],
        ...,
        [ 7.5512e-01, -5.5864e-01, -5.0096e-01,  ...,  2.4155e-01,
          5.0867e-01, -1.3138e+00],
        [-3.2454e-02, -7.2644e-01,  7.3096e-01,  ..., -9.9326e-01,
          4.8812e-01,  1.4374e-03],
        [-1.9197e+00,  1.5667e-01,  3.5023e-01,  ...,  7.4790e-01,
         -3.3693e-01, -4.8888e-01]])
##########################################################
prot_encoder.dense.weight shape: torch.Size([300, 2500])
tensor([[-0.0037,  0.0270,  0.0112,  ...,  0.0026, -0.0091,  0.0142],
        [ 0.0146, -0.0088,  0.0107,  ...,  0.0010, -0.0487, -0.0201],
        [-0.0355, -0.0042,  0.0091,  ..., -0.0074,  0.0256,  0.0019],
        ...,
        [ 0.0091,  0.0098,  0.0081,  ...,  0.0077, -0.0320, -0.0211],
        [-0.0137,  0.0166, -0.0059,  ..., -0.0083,  0.0411,  0.0027],
        [-0.0080, -0.0160,  0.0077,  ..., -0.0022,  0.0121,  0.0224]])
tensor([[-0.0041,  0.0269,  0.0108,  ...,  0.0025, -0.0092,  0.0141],
        [ 0.0144, -0.0089,  0.0105,  ...,  0.0010, -0.0486, -0.0201],
        [-0.0359, -0.0034,  0.0084,  ..., -0.0076,  0.0255,  0.0017],
        ...,
        [ 0.0101,  0.0112,  0.0070,  ...,  0.0074, -0.0322, -0.0214],
        [-0.0139,  0.0183, -0.0051,  ..., -0.0083,  0.0411,  0.0027],
        [-0.0079, -0.0160,  0.0076,  ..., -0.0021,  0.0121,  0.0224]])
##########################################################
prot_encoder.dense.bias shape: torch.Size([300])
tensor([-0.0078,  0.0094, -0.0063, -0.0140,  0.0074,  0.0195, -0.0125,  0.0059,
         0.0096, -0.0005, -0.0186,  0.0013, -0.0123,  0.0081, -0.0027, -0.0117,
        -0.0083,  0.0044,  0.0033, -0.0121,  0.0047,  0.0170,  0.0196,  0.0009,
         0.0023, -0.0177, -0.0168,  0.0094, -0.0172,  0.0051, -0.0088,  0.0029,
         0.0172,  0.0185,  0.0027, -0.0102,  0.0097, -0.0132, -0.0148, -0.0030,
        -0.0174,  0.0108, -0.0040,  0.0165, -0.0176, -0.0044,  0.0107, -0.0140,
         0.0087, -0.0003, -0.0091,  0.0036,  0.0112, -0.0167,  0.0190,  0.0162,
        -0.0141,  0.0004,  0.0045,  0.0113, -0.0163, -0.0021, -0.0133, -0.0196,
         0.0016, -0.0107, -0.0144, -0.0139,  0.0147,  0.0026, -0.0056,  0.0153,
        -0.0144,  0.0161,  0.0169, -0.0040,  0.0194, -0.0103, -0.0020, -0.0047,
         0.0035,  0.0160, -0.0132,  0.0038,  0.0160,  0.0170, -0.0016, -0.0085,
        -0.0102, -0.0090,  0.0012,  0.0163, -0.0095, -0.0087, -0.0005, -0.0134,
         0.0032,  0.0065, -0.0032,  0.0200,  0.0068,  0.0068, -0.0199,  0.0191,
         0.0131, -0.0103, -0.0075,  0.0094, -0.0198,  0.0125, -0.0149, -0.0109,
        -0.0118, -0.0199, -0.0129, -0.0078,  0.0031,  0.0063,  0.0183, -0.0197,
        -0.0022, -0.0105, -0.0067,  0.0004, -0.0052, -0.0043, -0.0143, -0.0137,
        -0.0121,  0.0019,  0.0193,  0.0067, -0.0141,  0.0137, -0.0161, -0.0068,
         0.0089,  0.0186,  0.0196, -0.0116, -0.0072, -0.0124,  0.0144,  0.0112,
         0.0134, -0.0162,  0.0187, -0.0024, -0.0150,  0.0094, -0.0188,  0.0039,
        -0.0002,  0.0028, -0.0120,  0.0164, -0.0079, -0.0087, -0.0197, -0.0182,
         0.0069, -0.0078,  0.0057, -0.0155, -0.0104, -0.0114, -0.0001, -0.0087,
         0.0087, -0.0048, -0.0050, -0.0036, -0.0048,  0.0138, -0.0128,  0.0111,
        -0.0160,  0.0177, -0.0136, -0.0129, -0.0142,  0.0101, -0.0178,  0.0115,
         0.0190,  0.0069,  0.0034, -0.0080,  0.0184,  0.0152, -0.0040,  0.0194,
         0.0012, -0.0030, -0.0005, -0.0155,  0.0028,  0.0063,  0.0047,  0.0046,
        -0.0150,  0.0034,  0.0050, -0.0025, -0.0089, -0.0160, -0.0081, -0.0002,
         0.0014, -0.0046, -0.0176,  0.0086, -0.0040,  0.0095, -0.0148,  0.0121,
         0.0048,  0.0006,  0.0050, -0.0023,  0.0062, -0.0028,  0.0040,  0.0128,
        -0.0065,  0.0193,  0.0016,  0.0025,  0.0140,  0.0172, -0.0089,  0.0150,
        -0.0156,  0.0008,  0.0124,  0.0110,  0.0161, -0.0191, -0.0133, -0.0008,
         0.0073,  0.0079, -0.0071,  0.0161, -0.0130, -0.0044, -0.0036,  0.0022,
        -0.0023, -0.0199, -0.0099, -0.0166, -0.0118,  0.0176, -0.0132, -0.0168,
         0.0152, -0.0183, -0.0154,  0.0155,  0.0097, -0.0147, -0.0133,  0.0113,
         0.0097,  0.0137, -0.0002, -0.0160,  0.0082,  0.0055,  0.0137, -0.0051,
        -0.0073,  0.0121, -0.0074,  0.0075, -0.0044, -0.0181,  0.0007, -0.0171,
         0.0046,  0.0112, -0.0181, -0.0197, -0.0067, -0.0131,  0.0120,  0.0101,
         0.0012,  0.0008, -0.0099, -0.0051, -0.0015, -0.0189, -0.0015,  0.0177,
         0.0098,  0.0008,  0.0181,  0.0087])
tensor([-8.0714e-03,  9.2323e-03, -7.1250e-03, -1.4262e-02,  7.0308e-03,
         1.9770e-02, -1.2669e-02,  6.0584e-03,  9.7635e-03, -3.5543e-04,
        -1.8016e-02,  1.0226e-03, -1.1981e-02,  7.5441e-03, -1.9135e-03,
        -1.1141e-02, -8.5735e-03,  3.6285e-03,  3.2308e-03, -1.2265e-02,
         4.9192e-03,  1.6603e-02,  1.9597e-02,  8.3216e-04,  5.3034e-04,
        -1.7932e-02, -1.6604e-02,  9.5555e-03, -1.7384e-02,  4.9892e-03,
        -8.7826e-03, -5.6441e-05,  1.7151e-02,  1.9211e-02,  2.7940e-03,
        -9.9261e-03,  9.6333e-03, -1.3268e-02, -1.4906e-02, -3.0827e-03,
        -1.7481e-02,  1.0872e-02, -3.8717e-03,  1.7270e-02, -1.7798e-02,
        -3.7718e-03,  1.0966e-02, -1.4140e-02,  8.2264e-03, -5.0939e-04,
        -9.8925e-03,  4.6132e-03,  1.1037e-02, -1.6669e-02,  1.8656e-02,
         1.6265e-02, -1.4306e-02,  5.2559e-04,  4.8052e-03,  1.1252e-02,
        -1.6787e-02, -2.3082e-03, -1.2896e-02, -1.9497e-02,  2.2747e-03,
        -1.0960e-02, -1.4324e-02, -1.3580e-02,  1.5066e-02,  2.5536e-03,
        -5.8515e-03,  1.5620e-02, -1.4350e-02,  1.6205e-02,  1.6615e-02,
        -4.0935e-03,  1.9295e-02, -1.0482e-02, -1.5347e-03, -4.6522e-03,
         3.6475e-03,  1.5910e-02, -1.3315e-02,  3.8848e-03,  1.6051e-02,
         1.6848e-02, -1.4658e-03, -7.9546e-03, -1.0012e-02, -9.4354e-03,
         1.5941e-03,  1.6818e-02, -9.7371e-03, -8.6436e-03, -1.2610e-03,
        -1.3367e-02,  3.2343e-03,  6.2096e-03, -3.6308e-03,  1.9893e-02,
         7.3045e-03,  6.3598e-03, -1.9802e-02,  1.8532e-02,  1.2893e-02,
        -1.0526e-02, -7.5012e-03,  7.0551e-03, -1.9448e-02,  1.2449e-02,
        -1.5233e-02, -1.0916e-02, -1.2129e-02, -1.9914e-02, -1.2926e-02,
        -7.5078e-03,  2.6836e-03,  6.4137e-03,  1.7563e-02, -1.8629e-02,
        -2.1610e-03, -1.0724e-02, -6.6657e-03,  6.3580e-05, -5.2070e-03,
        -2.2704e-03, -1.4520e-02, -1.4129e-02, -1.1962e-02, -8.2229e-04,
         1.8946e-02,  4.0031e-03, -1.3380e-02,  1.3728e-02, -1.9217e-02,
        -6.7990e-03,  7.1762e-03,  1.8454e-02,  1.9948e-02, -1.1744e-02,
        -7.4897e-03, -1.5031e-02,  1.4141e-02,  1.1187e-02,  1.3281e-02,
        -1.6505e-02,  1.9232e-02, -2.2029e-03, -1.5235e-02,  8.7180e-03,
        -1.8655e-02,  4.3712e-03, -4.3846e-04,  3.2296e-03, -1.1929e-02,
         1.5955e-02, -9.0205e-03, -9.3615e-03, -1.9041e-02, -1.7756e-02,
         6.6072e-03, -8.2247e-03,  4.3802e-03, -1.5512e-02, -1.0218e-02,
        -1.1410e-02, -1.1657e-03, -8.6358e-03,  8.7487e-03, -5.4264e-03,
        -5.8770e-03, -3.3596e-03, -4.1297e-03,  1.3865e-02, -1.3311e-02,
         1.2418e-02, -1.6278e-02,  1.8390e-02, -1.3600e-02, -1.2670e-02,
        -1.4352e-02,  9.6946e-03, -1.7391e-02,  1.1558e-02,  1.8670e-02,
         6.6181e-03,  3.3713e-03, -8.0704e-03,  1.8693e-02,  1.4994e-02,
        -3.9891e-03,  1.9558e-02,  1.3140e-03, -3.5661e-03, -4.0612e-04,
        -1.6749e-02,  2.9054e-03,  7.2368e-03,  4.7071e-03,  4.7428e-03,
        -1.4212e-02,  3.4100e-03,  4.2264e-03, -2.5580e-03, -8.6994e-03,
        -1.6853e-02, -7.2028e-03, -6.7365e-05,  1.2002e-03, -4.3548e-03,
        -1.7560e-02,  8.6349e-03, -3.7688e-03,  9.5211e-03, -1.4770e-02,
         1.2435e-02,  4.7682e-03,  9.2309e-04,  4.3408e-03, -4.4320e-03,
         5.4689e-03, -4.3673e-03,  4.0708e-03,  1.2522e-02, -7.8085e-03,
         1.9576e-02,  1.2722e-03,  1.2871e-03,  1.4111e-02,  1.6816e-02,
        -8.7280e-03,  1.5085e-02, -1.5859e-02,  5.0143e-05,  1.2299e-02,
         1.0601e-02,  1.5479e-02, -1.8216e-02, -1.2365e-02, -8.0303e-04,
         6.7834e-03,  7.6390e-03, -7.6307e-03,  1.5903e-02, -1.3077e-02,
        -4.5396e-03, -3.9597e-03,  2.5099e-03, -2.1669e-03, -1.9681e-02,
        -1.0274e-02, -1.6380e-02, -1.1762e-02,  1.7267e-02, -1.2924e-02,
        -1.6385e-02,  1.4352e-02, -1.8636e-02, -1.6283e-02,  1.4403e-02,
         9.7970e-03, -1.4777e-02, -1.3423e-02,  1.0772e-02,  9.7192e-03,
         1.3779e-02, -2.5960e-04, -1.6389e-02,  8.9731e-03,  4.5251e-03,
         1.3313e-02, -5.9882e-03, -6.7632e-03,  1.2458e-02, -7.4658e-03,
         7.5199e-03, -4.9283e-03, -1.9316e-02,  5.5463e-04, -1.7828e-02,
         4.6096e-03,  1.0862e-02, -2.1964e-02, -2.1447e-02, -6.9120e-03,
        -1.3612e-02,  1.2167e-02,  1.0525e-02,  2.8725e-03,  7.2824e-04,
        -9.9757e-03, -5.2695e-03, -1.5171e-03, -1.8644e-02, -1.8271e-03,
         1.7816e-02,  9.8072e-03,  1.0080e-03,  1.7809e-02,  8.6037e-03])
##########################################################
prot_encoder.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[ 0.0503, -0.0715,  0.0261,  ..., -0.0332, -0.0942, -0.0156],
        [ 0.0263,  0.0133, -0.0377,  ..., -0.0665, -0.0282,  0.0554],
        [ 0.0484, -0.0458,  0.0446,  ...,  0.0246,  0.0615, -0.0126],
        ...,
        [-0.1742, -0.0315,  0.0576,  ...,  0.0088, -0.0130, -0.1515],
        [ 0.0713, -0.0506, -0.0112,  ..., -0.1150,  0.0077, -0.1120],
        [ 0.0098, -0.0417,  0.1165,  ...,  0.1320,  0.0088,  0.1617]])
tensor([[ 0.0503, -0.0716,  0.0258,  ..., -0.0327, -0.0942, -0.0156],
        [ 0.0261,  0.0133, -0.0379,  ..., -0.0665, -0.0282,  0.0551],
        [ 0.0486, -0.0460,  0.0443,  ...,  0.0251,  0.0618, -0.0125],
        ...,
        [-0.1741, -0.0314,  0.0577,  ...,  0.0092, -0.0128, -0.1514],
        [ 0.0711, -0.0505, -0.0113,  ..., -0.1149,  0.0078, -0.1120],
        [ 0.0099, -0.0416,  0.1166,  ...,  0.1320,  0.0088,  0.1614]])
##########################################################
prot_encoder.ffn.dense1.bias shape: torch.Size([64])
tensor([ 0.0297, -0.0547, -0.0600,  0.0521,  0.0715, -0.0048, -0.0319,  0.0107,
        -0.0165,  0.0362,  0.0324, -0.0323, -0.0178, -0.0340,  0.0117,  0.0323,
         0.0229, -0.0794,  0.0714,  0.0722,  0.0588, -0.0495, -0.0550,  0.0873,
         0.0316, -0.0507, -0.0502,  0.0142,  0.0365, -0.0353,  0.0208,  0.0866,
         0.0366,  0.0116,  0.0822,  0.0141, -0.0440,  0.0156, -0.0507, -0.0500,
         0.0653,  0.0340, -0.0737, -0.0443, -0.0444,  0.0032,  0.0811, -0.0764,
        -0.0070, -0.0238,  0.0005, -0.0264,  0.0288, -0.0374,  0.0324,  0.0759,
        -0.0589, -0.0091,  0.0213, -0.0699,  0.0037,  0.0478,  0.0315,  0.0161])
tensor([ 0.0315, -0.0552, -0.0584,  0.0525,  0.0695, -0.0066, -0.0329,  0.0100,
        -0.0162,  0.0338,  0.0322, -0.0315, -0.0170, -0.0366,  0.0129,  0.0318,
         0.0196, -0.0786,  0.0719,  0.0707,  0.0604, -0.0476, -0.0555,  0.0871,
         0.0312, -0.0509, -0.0533,  0.0152,  0.0347, -0.0354,  0.0214,  0.0871,
         0.0388,  0.0127,  0.0818,  0.0137, -0.0433,  0.0157, -0.0509, -0.0503,
         0.0639,  0.0345, -0.0721, -0.0419, -0.0455,  0.0026,  0.0818, -0.0765,
        -0.0073, -0.0241,  0.0004, -0.0258,  0.0290, -0.0386,  0.0301,  0.0770,
        -0.0585, -0.0098,  0.0208, -0.0695,  0.0018,  0.0491,  0.0315,  0.0149])
##########################################################
prot_encoder.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[ 0.0523, -0.0017,  0.1822,  ...,  0.0078, -0.0809,  0.0037],
        [ 0.1536,  0.0376,  0.0536,  ..., -0.0579, -0.0979,  0.0493],
        [ 0.2531, -0.0082,  0.0605,  ..., -0.1020,  0.1484,  0.0509],
        ...,
        [-0.0069, -0.0873,  0.0598,  ..., -0.0587, -0.0400,  0.0350],
        [ 0.0056, -0.1181, -0.0976,  ...,  0.0867, -0.1583, -0.0225],
        [-0.0235,  0.0529, -0.0406,  ...,  0.0532, -0.0308, -0.0094]])
tensor([[ 0.0523, -0.0016,  0.1822,  ...,  0.0077, -0.0808,  0.0037],
        [ 0.1536,  0.0376,  0.0536,  ..., -0.0579, -0.0979,  0.0493],
        [ 0.2529, -0.0081,  0.0605,  ..., -0.1021,  0.1484,  0.0506],
        ...,
        [-0.0072, -0.0872,  0.0598,  ..., -0.0588, -0.0399,  0.0349],
        [ 0.0055, -0.1181, -0.0976,  ...,  0.0866, -0.1582, -0.0226],
        [-0.0237,  0.0527, -0.0410,  ...,  0.0530, -0.0310, -0.0098]])
##########################################################
prot_encoder.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.1085,  0.0881,  0.0972, -0.1037,  0.0206, -0.0317,  0.1064,  0.0867,
        -0.0329,  0.0112,  0.1055, -0.0727, -0.0676,  0.0085,  0.0947, -0.0934,
         0.0792,  0.0911, -0.0653, -0.0117, -0.0045, -0.0669,  0.0188,  0.0378,
        -0.0807, -0.0966, -0.0464,  0.1238,  0.0840,  0.0648, -0.0143,  0.1207,
         0.0097,  0.0954,  0.1107, -0.0344,  0.0608,  0.0045, -0.0935, -0.0367,
        -0.0883,  0.0650,  0.0185,  0.0673,  0.0060, -0.0021,  0.0208,  0.0594,
         0.0337,  0.0192,  0.1068,  0.0002,  0.0044, -0.1193,  0.0257,  0.0713,
        -0.0135,  0.0358,  0.1199,  0.1230,  0.1066,  0.1234, -0.1138,  0.1096,
        -0.0125,  0.0621,  0.0413, -0.0858, -0.0326, -0.0455,  0.0032, -0.0210,
        -0.0274, -0.0494,  0.0205,  0.0986, -0.0654,  0.0584, -0.0786,  0.0140,
         0.0012,  0.0935,  0.0796, -0.0746, -0.1014, -0.0944, -0.1169,  0.0218,
         0.0927, -0.0562,  0.0057,  0.0659, -0.0863, -0.0790,  0.1092, -0.0801,
         0.0002,  0.0457, -0.1164, -0.1204,  0.0604, -0.1208,  0.0626, -0.1037,
        -0.0146, -0.0459, -0.0171, -0.1031, -0.0405,  0.0072, -0.0030, -0.0812,
        -0.1111, -0.0840,  0.0370,  0.0025, -0.0636,  0.0479,  0.0571, -0.0786,
         0.1110, -0.0077, -0.1045,  0.1029,  0.0823,  0.0206,  0.0941,  0.0071])
tensor([ 0.1075,  0.0881,  0.0960, -0.1023,  0.0207, -0.0315,  0.1060,  0.0864,
        -0.0324,  0.0116,  0.1055, -0.0721, -0.0698,  0.0084,  0.0943, -0.0934,
         0.0808,  0.0911, -0.0651, -0.0120, -0.0049, -0.0674,  0.0188,  0.0374,
        -0.0797, -0.0961, -0.0463,  0.1233,  0.0839,  0.0648, -0.0147,  0.1201,
         0.0097,  0.0956,  0.1096, -0.0337,  0.0594,  0.0043, -0.0938, -0.0338,
        -0.0888,  0.0656,  0.0183,  0.0662,  0.0052, -0.0033,  0.0365,  0.0588,
         0.0343,  0.0178,  0.1062,  0.0002,  0.0041, -0.1191,  0.0249,  0.0706,
        -0.0146,  0.0346,  0.1197,  0.1227,  0.1064,  0.1230, -0.1139,  0.1092,
        -0.0131,  0.0621,  0.0412, -0.0860, -0.0323, -0.0456,  0.0029, -0.0204,
        -0.0276, -0.0494,  0.0202,  0.1133, -0.0659,  0.0582, -0.0783,  0.0145,
         0.0020,  0.0912,  0.0787, -0.0752, -0.1027, -0.0949, -0.1149,  0.0216,
         0.0915, -0.0554,  0.0051,  0.0652, -0.0864, -0.0803,  0.1089, -0.0801,
         0.0004,  0.0457, -0.1163, -0.1186,  0.0596, -0.1208,  0.0627, -0.1049,
        -0.0143, -0.0464, -0.0173, -0.1032, -0.0409,  0.0068, -0.0036, -0.0807,
        -0.1115, -0.0842,  0.0365,  0.0021, -0.0637,  0.0478,  0.0569, -0.0793,
         0.1104, -0.0078, -0.1051,  0.1020,  0.0818,  0.0191,  0.0938,  0.0043])
##########################################################
prot_encoder.addnorm.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.9998, 0.9999, 1.0000, 0.9985, 1.0000, 0.9999, 0.9997, 0.9999, 0.9986,
        0.9993, 1.0000, 0.9994, 1.0007, 0.9998, 0.9997, 0.9999, 0.9994, 0.9999,
        0.9999, 1.0002, 1.0000, 0.9999, 0.9997, 0.9999, 1.0001, 0.9996, 0.9995,
        1.0000, 1.0003, 1.0001, 0.9999, 0.9998, 0.9998, 1.0001, 0.9998, 1.0001,
        1.0001, 0.9999, 1.0000, 1.0058, 1.0000, 1.0000, 0.9995, 0.9998, 0.9999,
        0.9997, 1.0030, 0.9997, 1.0000, 0.9998, 0.9997, 1.0000, 0.9999, 0.9999,
        0.9998, 0.9996, 0.9998, 0.9998, 0.9999, 0.9999, 0.9999, 0.9994, 0.9999,
        0.9997, 0.9994, 0.9999, 1.0000, 0.9999, 0.9999, 0.9999, 0.9999, 0.9997,
        1.0001, 0.9999, 0.9998, 1.0149, 1.0001, 0.9999, 0.9998, 0.9996, 0.9997,
        0.9991, 0.9998, 0.9999, 1.0006, 1.0003, 0.9989, 1.0000, 0.9996, 0.9996,
        1.0000, 0.9997, 1.0000, 0.9999, 1.0000, 0.9999, 0.9997, 1.0000, 0.9998,
        0.9990, 1.0000, 1.0000, 0.9999, 0.9999, 0.9969, 0.9998, 0.9999, 0.9999,
        0.9998, 0.9999, 0.9999, 0.9996, 1.0000, 0.9999, 0.9997, 0.9999, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9999, 0.9997, 1.0001, 0.9998, 1.0000, 0.9996,
        0.9999, 0.9998])
##########################################################
prot_encoder.addnorm.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.0089e-04,  3.1233e-05, -1.9334e-04,  7.9665e-04,  7.5640e-05,
         7.4514e-05,  3.6229e-05,  1.0415e-05, -9.6764e-05, -1.7408e-04,
         2.9419e-05,  7.2215e-04,  6.5743e-05,  5.3176e-05, -7.1949e-05,
         3.6820e-05,  2.9332e-04, -9.0650e-05,  1.1557e-04, -1.2397e-04,
        -5.8969e-05,  7.4882e-05,  8.1080e-05, -9.7123e-05,  4.2642e-04,
         2.3293e-04, -1.3374e-04, -1.2728e-04,  6.8595e-05,  3.0098e-05,
        -1.1536e-04, -1.3909e-04,  1.5285e-05,  1.6351e-04, -6.9016e-04,
         3.3080e-04,  1.4374e-04, -4.3576e-05, -1.2176e-04,  2.5839e-04,
        -1.4839e-04,  1.0666e-04, -3.9954e-05, -2.8696e-04, -1.4347e-04,
        -2.8046e-04,  1.3512e-03,  8.7761e-06,  1.8760e-04, -2.5274e-04,
         1.0610e-04,  5.1234e-05,  5.0492e-06,  1.8675e-04, -1.7508e-04,
        -1.7584e-04, -2.4137e-04, -2.4048e-04, -1.9643e-05, -1.9637e-05,
         1.9356e-05,  6.9616e-06,  1.0836e-05, -5.4910e-05, -5.8278e-05,
        -1.1881e-05,  7.6118e-05, -1.6734e-05,  1.4028e-04,  3.0189e-04,
        -1.7189e-05,  9.8866e-05, -2.3790e-05, -3.8218e-05, -2.9951e-05,
         4.9828e-04, -6.0018e-05, -5.0566e-05,  1.1704e-04,  1.1631e-04,
         3.2348e-04, -5.5533e-04, -1.5680e-04, -1.8080e-04, -1.6446e-04,
         1.6890e-04,  8.2285e-04, -4.0473e-05, -5.0491e-04,  6.9644e-05,
        -2.3612e-05, -1.2339e-04, -1.2845e-05, -3.4402e-04, -5.5087e-05,
        -3.3645e-05,  3.1875e-04,  4.4403e-05,  2.2038e-04,  4.6846e-04,
        -1.2274e-04,  3.3406e-05,  2.1935e-05, -2.8799e-04,  1.0938e-06,
        -1.2162e-04, -6.0373e-05, -3.2635e-05, -3.0214e-04, -1.7310e-04,
        -2.7481e-04,  9.1920e-05, -9.1867e-05,  2.0078e-05, -7.6816e-05,
        -1.0455e-04,  5.3460e-06, -4.2558e-06, -1.0102e-07, -1.2629e-04,
        -9.6647e-05,  5.2343e-05, -8.2356e-05, -2.5351e-04, -6.8616e-05,
        -3.2188e-04, -3.2305e-05, -9.5016e-04])
##########################################################
prot_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0360,  0.0327, -0.0003,  ...,  0.0040,  0.0485,  0.0618],
        [-0.0258,  0.0015, -0.0451,  ..., -0.0367, -0.0107, -0.0531],
        [-0.0580,  0.0605, -0.0402,  ..., -0.0754,  0.0719, -0.0084],
        ...,
        [ 0.0019,  0.0116, -0.0675,  ...,  0.0393,  0.0178,  0.0429],
        [ 0.0168,  0.0616, -0.0355,  ...,  0.0508, -0.0290, -0.0186],
        [-0.0198,  0.0367,  0.0169,  ...,  0.0361, -0.0127,  0.0481]])
tensor([[-0.0360,  0.0327, -0.0003,  ...,  0.0041,  0.0485,  0.0618],
        [-0.0258,  0.0015, -0.0451,  ..., -0.0367, -0.0107, -0.0531],
        [-0.0580,  0.0606, -0.0402,  ..., -0.0754,  0.0719, -0.0084],
        ...,
        [ 0.0019,  0.0116, -0.0676,  ...,  0.0393,  0.0179,  0.0428],
        [ 0.0167,  0.0615, -0.0355,  ...,  0.0508, -0.0290, -0.0185],
        [-0.0197,  0.0367,  0.0170,  ...,  0.0361, -0.0127,  0.0480]])
##########################################################
prot_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 7.1489e-07, -3.9577e-06, -1.0773e-05, -2.0291e-05, -2.1433e-05,
        -1.1705e-05,  2.8433e-06,  3.3417e-06, -7.3139e-06,  1.9028e-05,
         6.0429e-06, -1.1352e-05, -6.1380e-06,  1.9351e-06,  1.0167e-05,
         4.9895e-07,  1.7669e-06, -1.5542e-06, -5.7724e-06, -7.6150e-06,
        -8.5813e-06,  5.5728e-06, -1.1341e-05, -8.1425e-06,  3.5415e-06,
         3.9375e-06,  1.1909e-05, -1.7576e-06,  7.7128e-06,  3.4501e-07,
         5.2892e-06,  9.5485e-06,  4.0139e-06,  9.3496e-06,  1.9458e-05,
        -2.3970e-06,  2.2883e-06,  8.7971e-06,  1.7349e-05,  5.3372e-06,
         1.7755e-06, -1.3135e-05, -1.6539e-05,  6.1018e-06, -1.9686e-06,
        -2.4279e-06, -1.7475e-05,  9.5367e-06,  2.7858e-06, -1.0495e-06,
        -7.9465e-06, -2.5496e-06,  5.5308e-06, -2.1873e-06, -3.0523e-06,
        -1.0039e-07,  7.5365e-06, -3.4776e-06,  1.9547e-06, -8.4321e-06,
         2.9647e-06,  4.6695e-06,  4.6974e-06, -2.4522e-06, -7.2045e-06,
        -1.3228e-05,  5.2419e-06,  9.8757e-06,  7.0472e-06, -2.5900e-05,
        -1.7301e-06, -1.1783e-05, -1.9424e-05,  6.8198e-06, -1.1940e-05,
        -8.1140e-06,  5.2435e-06, -6.1444e-06,  3.0460e-05,  2.2298e-05,
         2.3669e-05,  2.1343e-06, -4.7839e-07, -7.5789e-06, -8.5090e-06,
         8.6812e-06, -1.2934e-05, -6.4503e-06, -8.3508e-06,  5.7555e-06,
        -9.5511e-06, -1.7826e-06, -1.3438e-05, -9.9932e-06,  2.3466e-06,
         1.3954e-05,  7.5414e-06, -5.9228e-06, -4.2034e-06,  1.7760e-05,
         2.1128e-05, -4.0241e-07, -4.8359e-07, -9.1269e-06,  7.2225e-06,
        -3.0271e-07,  5.1992e-06, -1.3514e-05,  7.7457e-06, -5.4071e-06,
         8.8493e-06,  1.1486e-06,  5.3177e-06, -1.3888e-06, -2.7383e-05,
        -5.8838e-06, -1.8708e-05,  3.9242e-06,  5.0332e-06, -1.3557e-06,
         2.6266e-05, -1.3800e-05,  1.0132e-05, -5.2093e-07, -1.0884e-05,
        -1.3632e-05,  2.2763e-06,  1.2075e-05, -1.1773e-13, -3.5019e-13,
        -3.6851e-13,  1.4900e-12,  9.2991e-14,  3.1670e-13, -1.2551e-12,
         3.3941e-13,  9.9255e-13, -9.9071e-13, -1.2323e-12,  6.1147e-13,
        -1.2694e-13,  3.8064e-13,  1.3176e-12, -4.8524e-13,  6.0502e-13,
        -1.3662e-12,  3.2317e-13, -5.5268e-13, -2.0244e-13, -1.6259e-13,
        -3.7602e-13,  4.9790e-13, -3.3468e-13, -8.0448e-13, -1.0943e-12,
        -7.9802e-13,  6.3502e-13,  3.1810e-13,  4.8130e-13,  3.9705e-13,
         3.7691e-13, -5.4667e-13, -6.8993e-13, -3.2504e-13,  5.1467e-13,
        -1.1183e-12,  8.5251e-14,  1.1815e-12, -5.4534e-13, -6.5734e-14,
         1.2299e-13, -5.6400e-13, -1.0928e-13,  5.5477e-13,  7.2267e-13,
        -1.5426e-13, -3.1069e-13,  4.2075e-14,  1.8275e-13,  1.0242e-12,
         2.5859e-14, -1.0684e-12, -2.6080e-13, -1.1753e-13,  8.6282e-14,
        -5.8663e-13, -3.7792e-13, -1.3035e-12, -6.7034e-13,  1.7618e-13,
         6.6984e-13, -4.3880e-13,  5.2899e-13, -4.8233e-13, -5.6239e-13,
         7.8890e-13, -1.5799e-14, -7.1111e-13, -1.0521e-12, -4.6081e-14,
        -4.2014e-14,  9.7359e-13,  2.5213e-14,  7.7187e-14,  2.9218e-13,
        -7.9259e-14,  1.0610e-12,  1.0632e-12, -4.8582e-13,  8.0760e-13,
        -8.1795e-13, -8.0193e-13, -6.2638e-13,  1.8702e-13, -1.0030e-12,
        -4.3066e-13,  4.9952e-13,  5.5684e-13,  1.3854e-13, -5.7274e-13,
         2.3631e-13, -7.8093e-13,  2.7588e-13,  1.3168e-12,  1.5581e-12,
        -2.2554e-14,  5.3480e-13,  7.1497e-13, -1.1091e-12,  1.2353e-12,
        -5.4996e-13,  2.1522e-12,  1.3934e-13, -7.4229e-13,  3.9072e-13,
        -1.2419e-12,  3.3754e-13, -7.2462e-13, -2.7901e-13, -2.5004e-13,
         2.7275e-13,  8.7945e-14, -6.3238e-13,  1.3615e-13, -2.6112e-13,
        -3.3165e-13,  2.4103e-13, -4.0148e-13, -5.5507e-13, -5.6682e-13,
         6.0317e-15, -5.4554e-13,  1.9150e-13, -4.3127e-13, -1.8363e-13,
        -7.7678e-13, -2.6444e-04,  1.3882e-04,  1.3429e-04,  8.1103e-05,
        -1.7337e-04,  2.5293e-04,  1.3844e-04, -1.8086e-04, -2.0915e-04,
         1.3066e-04, -2.1516e-04, -3.8354e-05, -4.4041e-05, -2.1973e-04,
        -3.5866e-06,  1.8548e-05,  6.8381e-06,  3.7760e-05,  1.5730e-04,
        -1.2725e-04, -1.9135e-04,  2.9230e-05, -1.4682e-04, -5.7259e-06,
        -1.9423e-04, -5.1880e-05, -1.8547e-04,  1.3800e-04,  3.1667e-04,
         8.3958e-06,  1.2477e-04, -2.3448e-05, -8.9561e-05, -1.0983e-04,
         1.8396e-04,  1.6459e-04,  3.1771e-05,  2.4137e-05, -8.5681e-05,
        -5.2198e-05, -1.7008e-04, -2.3742e-04,  1.0085e-04, -1.4165e-04,
        -1.9118e-04,  1.8115e-05,  2.2531e-05,  2.6959e-05,  2.8543e-05,
         1.2252e-04,  1.1908e-05,  5.2816e-05, -9.0459e-06, -2.0162e-04,
         1.1951e-04,  4.1371e-04,  2.7549e-04, -1.0480e-04, -3.2845e-04,
         1.2279e-04,  2.1083e-04,  5.8720e-05, -5.5136e-05, -3.6484e-05,
        -1.2984e-04,  2.9731e-05, -1.1827e-04, -6.9268e-05, -4.6552e-05,
         2.6582e-05, -4.1322e-05, -6.8532e-05,  5.5984e-05,  1.3231e-04,
         2.1081e-04,  1.1892e-04, -3.0512e-04, -1.4320e-05, -7.8812e-05,
        -3.6702e-05, -1.4237e-04,  2.7533e-05, -4.6330e-05,  1.5438e-04,
         7.0004e-05, -2.2504e-04, -3.7354e-05,  7.2294e-05,  1.8358e-04,
        -8.3048e-05,  4.5275e-06, -8.9878e-05,  7.7147e-05, -2.8428e-04,
         8.9276e-05, -3.5506e-04, -2.2463e-04, -2.6529e-04,  5.3961e-05,
         5.1252e-05,  5.3976e-05,  1.1780e-05,  9.6137e-05,  1.9029e-04,
        -3.5232e-05,  4.5329e-05,  2.4338e-04, -1.1453e-04,  1.7494e-04,
        -5.3931e-05, -8.0125e-05, -7.9697e-06, -5.9833e-05,  2.1989e-04,
         1.9567e-04,  1.9213e-05, -1.2894e-04, -9.8287e-05, -8.8158e-06,
        -8.1135e-06, -2.0342e-04,  4.3001e-05,  3.2104e-04,  6.3690e-05,
        -2.6316e-04, -1.4327e-05, -1.1709e-04,  1.4005e-04])
##########################################################
prot_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0777,  0.0435, -0.0862,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0485, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0306,  0.0483],
        [-0.0517, -0.0149,  0.0659,  ...,  0.0579, -0.0457,  0.0403]])
tensor([[-0.0777,  0.0435, -0.0863,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0486, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0102,  0.0043,  ...,  0.0216, -0.0773,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0305,  0.0483],
        [-0.0517, -0.0147,  0.0659,  ...,  0.0581, -0.0458,  0.0404]])
##########################################################
prot_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.2108e-04, -4.5521e-05, -1.4397e-04,  9.2044e-04,  1.3262e-05,
         2.9103e-05, -3.1126e-05, -8.8270e-05, -3.8298e-04, -1.1529e-04,
        -1.8714e-06,  6.8494e-04, -1.8581e-04, -2.5730e-05, -1.1684e-04,
         2.5508e-05,  2.4952e-04,  2.5889e-05,  2.2209e-05, -1.1193e-04,
        -1.1208e-04,  2.0314e-05,  4.3444e-06, -4.5860e-05,  3.9241e-04,
         1.4079e-04, -2.0792e-04, -3.6569e-06,  5.9205e-05,  9.3978e-05,
        -1.8243e-04, -7.3362e-05,  2.1306e-04,  3.6849e-05, -6.4107e-04,
         1.4855e-04,  1.8190e-04, -5.1281e-05, -9.1416e-07,  9.9452e-04,
        -8.9173e-05,  1.5529e-04,  1.5465e-05, -1.8808e-04, -1.3124e-05,
        -2.8991e-04,  1.2657e-03,  3.4524e-05,  1.6192e-04, -2.6001e-04,
         9.3360e-06,  3.2196e-05, -1.1914e-05,  1.5965e-05, -1.5639e-04,
        -1.2594e-04, -1.8233e-04, -2.4027e-04, -5.4182e-05, -5.0583e-05,
        -1.4820e-05, -6.3984e-06, -2.4422e-05, -1.0192e-04, -3.0811e-05,
        -1.7462e-05, -9.9808e-05,  5.4725e-05,  2.0576e-04,  2.6839e-04,
        -1.0319e-04,  2.5052e-04,  4.9202e-05, -4.5226e-05,  1.7345e-05,
        -2.1560e-04, -2.7111e-05, -4.6642e-05,  8.5532e-06,  1.1956e-04,
         3.2928e-04, -5.0468e-04, -1.1852e-04, -7.2390e-05, -8.4212e-05,
         3.2496e-04,  6.9725e-04, -1.0019e-05, -4.1569e-04,  8.1697e-05,
         1.1254e-05, -1.8993e-04,  1.0826e-05, -3.3618e-04,  2.7789e-05,
         1.0327e-05,  2.8340e-04, -1.3051e-05,  2.6654e-04,  4.4555e-04,
        -3.0606e-05,  1.5696e-05, -6.7762e-06, -2.4769e-04, -5.3272e-05,
        -1.1237e-04,  2.0227e-05, -3.6556e-06, -4.7457e-05, -2.5320e-05,
        -2.1367e-04,  1.0043e-04, -2.3354e-05, -3.5351e-05, -7.4177e-05,
        -5.2176e-05,  3.6228e-05, -3.4699e-05, -4.0669e-05, -2.5546e-04,
        -4.5015e-05, -1.0602e-05,  1.1650e-05, -7.2853e-05, -4.5653e-05,
        -2.6455e-04, -8.6353e-05, -8.7379e-04])
##########################################################
prot_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[ 0.0824,  0.0825, -0.0318,  ..., -0.0883, -0.0329, -0.0422],
        [-0.0047, -0.0468, -0.1117,  ..., -0.0019,  0.0441, -0.0453],
        [ 0.0131, -0.0403, -0.0018,  ..., -0.0119,  0.1607, -0.0902],
        ...,
        [ 0.0721,  0.0074,  0.1011,  ...,  0.0998, -0.0638, -0.0154],
        [ 0.0396,  0.0467, -0.0178,  ..., -0.0647, -0.0854, -0.0202],
        [ 0.0008,  0.0630, -0.0281,  ...,  0.1022, -0.0480,  0.0668]])
tensor([[ 0.0826,  0.0826, -0.0317,  ..., -0.0879, -0.0329, -0.0419],
        [-0.0048, -0.0468, -0.1117,  ..., -0.0021,  0.0441, -0.0453],
        [ 0.0131, -0.0403, -0.0018,  ..., -0.0120,  0.1607, -0.0902],
        ...,
        [ 0.0721,  0.0075,  0.1012,  ...,  0.0987, -0.0639, -0.0149],
        [ 0.0396,  0.0467, -0.0178,  ..., -0.0647, -0.0854, -0.0201],
        [ 0.0009,  0.0630, -0.0279,  ...,  0.1022, -0.0480,  0.0668]])
##########################################################
prot_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([-0.0250,  0.0180, -0.0861,  0.0376, -0.0467,  0.0681,  0.0507, -0.0192,
         0.0337, -0.0159,  0.0222,  0.0514, -0.0768,  0.0162,  0.0261,  0.0345,
         0.0281,  0.0324,  0.0413,  0.0028, -0.0356,  0.0813, -0.0696,  0.0608,
        -0.0431, -0.0643, -0.0072,  0.0071,  0.0649,  0.0702, -0.0061,  0.0290,
        -0.0727, -0.0272, -0.0382,  0.0734, -0.0835, -0.0438, -0.0425,  0.0427,
        -0.0032,  0.0075, -0.0350,  0.0270, -0.0527, -0.0279,  0.0828, -0.0536,
         0.0573,  0.0599,  0.0368, -0.0062, -0.0522, -0.0149,  0.0005,  0.0297,
         0.0508, -0.0860, -0.0782,  0.0585,  0.0812,  0.0567, -0.0077,  0.0127])
tensor([-0.0327,  0.0167, -0.0871,  0.0357, -0.0445,  0.0677,  0.0520, -0.0166,
         0.0318, -0.0167,  0.0230,  0.0513, -0.0772,  0.0139,  0.0273,  0.0351,
         0.0260,  0.0350,  0.0426,  0.0027, -0.0358,  0.0815, -0.0681,  0.0622,
        -0.0434, -0.0649, -0.0066,  0.0088,  0.0634,  0.0659, -0.0056,  0.0303,
        -0.0723, -0.0235, -0.0377,  0.0693, -0.0838, -0.0432, -0.0429,  0.0410,
        -0.0019,  0.0076, -0.0351,  0.0317, -0.0521, -0.0282,  0.0799, -0.0535,
         0.0554,  0.0607,  0.0363, -0.0070, -0.0547, -0.0154,  0.0010,  0.0302,
         0.0469, -0.0865, -0.0782,  0.0572,  0.0775,  0.0553, -0.0071,  0.0114])
##########################################################
prot_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.0995, -0.0299,  0.0387,  ..., -0.0413,  0.0845, -0.0300],
        [-0.0538, -0.0272, -0.0492,  ...,  0.0903, -0.0592, -0.0130],
        [ 0.0745,  0.1085, -0.0388,  ..., -0.0178,  0.0272,  0.0621],
        ...,
        [-0.1472, -0.0397,  0.0126,  ...,  0.0078,  0.0414, -0.0910],
        [ 0.0598,  0.0548,  0.0209,  ...,  0.0355, -0.1051, -0.1374],
        [-0.0340,  0.0573, -0.0574,  ...,  0.0051,  0.1215, -0.0763]])
tensor([[-0.0995, -0.0297,  0.0387,  ..., -0.0411,  0.0845, -0.0300],
        [-0.0538, -0.0272, -0.0492,  ...,  0.0903, -0.0592, -0.0130],
        [ 0.0745,  0.1085, -0.0388,  ..., -0.0178,  0.0271,  0.0622],
        ...,
        [-0.1472, -0.0397,  0.0126,  ...,  0.0078,  0.0414, -0.0910],
        [ 0.0600,  0.0548,  0.0209,  ...,  0.0356, -0.1050, -0.1374],
        [-0.0342,  0.0581, -0.0572,  ...,  0.0055,  0.1215, -0.0761]])
##########################################################
prot_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([-0.1182,  0.0646,  0.0008, -0.0595,  0.0710, -0.0074, -0.0845, -0.1114,
         0.0555,  0.0241, -0.1157,  0.0894, -0.0410, -0.0008,  0.0374,  0.0021,
        -0.0535,  0.0135,  0.0153,  0.0757,  0.0807,  0.0810, -0.0713,  0.0207,
         0.1064, -0.0170,  0.0162,  0.0275, -0.0396, -0.0285, -0.0726, -0.0859,
        -0.0350, -0.1200,  0.0271, -0.0607,  0.1068, -0.0537,  0.0798, -0.0467,
        -0.0325,  0.0945,  0.0455, -0.0038, -0.0678,  0.1204,  0.0363,  0.0999,
        -0.0391, -0.1018, -0.0562,  0.0251,  0.0028,  0.1054,  0.0747,  0.0139,
         0.0395,  0.0414, -0.0185,  0.0687,  0.0981,  0.0435, -0.0411, -0.0493,
         0.1250, -0.0381,  0.0445,  0.1141,  0.0302,  0.0075,  0.0767,  0.1089,
         0.0577, -0.1065,  0.0402, -0.0100, -0.1008,  0.0900, -0.0211,  0.0569,
         0.0043,  0.1239, -0.0032, -0.1046, -0.0472, -0.0728,  0.0371, -0.1220,
        -0.0720, -0.0652, -0.0181, -0.0107, -0.0156, -0.0628,  0.0205, -0.0876,
        -0.0442, -0.0234,  0.0045,  0.0475,  0.1056,  0.0616,  0.0599,  0.0487,
        -0.0669,  0.0971,  0.0804,  0.1205,  0.0237, -0.0217, -0.0002,  0.0236,
         0.1213,  0.0462,  0.0240,  0.0174, -0.1079, -0.0424, -0.0862,  0.1223,
        -0.0236, -0.0300,  0.0469,  0.1132, -0.0838, -0.0935, -0.0828, -0.0944])
tensor([-1.1542e-01,  6.5075e-02,  1.6024e-03, -5.0471e-02,  7.0967e-02,
        -7.1057e-03, -8.3711e-02, -1.1182e-01,  5.1380e-02,  2.5908e-02,
        -1.1549e-01,  9.1485e-02, -4.0639e-02, -1.5508e-03,  3.6499e-02,
         2.3160e-03, -5.1993e-02,  1.3717e-02,  1.5722e-02,  7.2907e-02,
         8.1261e-02,  8.0709e-02, -7.1139e-02,  2.0497e-02,  1.0113e-01,
        -1.2961e-02,  1.0843e-02,  2.7269e-02, -3.9204e-02, -2.8308e-02,
        -7.2816e-02, -8.5849e-02, -3.4690e-02, -1.1954e-01,  2.3020e-02,
        -6.0153e-02,  1.0183e-01, -5.3816e-02,  7.9734e-02, -4.1332e-02,
        -3.2382e-02,  9.4799e-02,  4.2427e-02, -3.0845e-03, -6.7146e-02,
         1.1887e-01,  2.9014e-02,  1.0025e-01, -3.8995e-02, -9.7673e-02,
        -5.5893e-02,  2.4871e-02,  2.4282e-03,  1.0441e-01,  7.5446e-02,
         1.3995e-02,  3.9760e-02,  4.0832e-02, -1.7501e-02,  6.8890e-02,
         9.8056e-02,  4.3033e-02, -3.8934e-02, -4.8082e-02,  1.2544e-01,
        -3.8032e-02,  4.2384e-02,  1.1259e-01,  2.9998e-02,  1.0222e-02,
         7.6046e-02,  1.0161e-01,  5.7609e-02, -1.0709e-01,  4.0385e-02,
        -8.3643e-04, -9.9791e-02,  8.9574e-02, -2.0904e-02,  5.7206e-02,
         5.1233e-03,  1.2385e-01, -1.9557e-03, -1.0430e-01, -4.7151e-02,
        -7.2453e-02,  2.7274e-02, -1.1882e-01, -7.2638e-02, -6.5799e-02,
        -1.7879e-02, -1.0069e-02, -1.5514e-02, -6.0329e-02,  2.0304e-02,
        -8.5905e-02, -4.7135e-02, -2.2814e-02,  5.2662e-03,  4.9042e-02,
         1.0582e-01,  5.9545e-02,  6.1080e-02,  4.7507e-02, -6.3577e-02,
         9.7813e-02,  8.0664e-02,  1.1941e-01,  2.2898e-02, -2.1612e-02,
        -6.6413e-05,  2.3830e-02,  1.2146e-01,  4.6345e-02,  2.4337e-02,
         1.7200e-02, -1.0772e-01, -4.2267e-02, -8.5657e-02,  1.1217e-01,
        -2.3324e-02, -2.9471e-02,  4.5784e-02,  1.1353e-01, -8.3319e-02,
        -9.3321e-02, -8.0711e-02, -8.9825e-02])
##########################################################
prot_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([-0.0924, -0.0175, -0.0650,  0.1297,  0.1115,  0.0677, -0.1348, -0.0759,
         0.1306,  0.1052,  0.0042,  0.1583, -0.2938, -0.0309, -0.0337, -0.0185,
         0.1644,  0.1398,  0.0366, -0.1069, -0.0575,  0.0857,  0.0157,  0.0101,
        -0.0643,  0.0722,  0.0666,  0.0307, -0.1042, -0.0634, -0.1260, -0.0998,
        -0.1094, -0.0824,  0.1378, -0.1279, -0.1061,  0.0201,  0.0033,  0.2012,
         0.0651,  0.1798,  0.1236, -0.0686,  0.0883,  0.1102, -0.2611, -0.1244,
         0.1451, -0.0750, -0.0786,  0.1893, -0.0299, -0.0256, -0.1079,  0.1197,
         0.0891,  0.1654, -0.0030, -0.0060, -0.0097,  0.0704, -0.0285, -0.0377,
         0.1143, -0.0514,  0.0403, -0.0316,  0.0576,  0.0844,  0.0666, -0.0464,
         0.0092,  0.0528,  0.0099, -0.0934, -0.0248,  0.0300, -0.0105,  0.1380,
         0.1109,  0.2327,  0.0715,  0.0571, -0.1219, -0.1904, -0.0992, -0.0091,
         0.1325, -0.1587, -0.1131, -0.0851,  0.0343, -0.1200, -0.0195,  0.0450,
        -0.1093, -0.0035,  0.1699,  0.1117, -0.0303,  0.0125,  0.0155,  0.0791,
         0.0964, -0.0687,  0.0516,  0.0387,  0.0719,  0.0528,  0.1554,  0.0931,
        -0.0091, -0.0286,  0.0299,  0.0145,  0.0301,  0.0100, -0.0223,  0.0348,
        -0.0098, -0.0125, -0.0275, -0.0259, -0.0788, -0.2235, -0.0171, -0.1600])
tensor([-0.0914, -0.0169, -0.0649,  0.1181,  0.1115,  0.0685, -0.1328, -0.0751,
         0.1205,  0.0990,  0.0044,  0.1551, -0.2966, -0.0304, -0.0304, -0.0187,
         0.1614,  0.1393,  0.0360, -0.1092, -0.0578,  0.0860,  0.0137,  0.0100,
        -0.0649,  0.0687,  0.0602,  0.0306, -0.1060, -0.0653, -0.1260, -0.0991,
        -0.1077, -0.0836,  0.1366, -0.1297, -0.1053,  0.0204,  0.0055,  0.2301,
         0.0653,  0.1796,  0.1195, -0.0672,  0.0866,  0.1084, -0.2731, -0.1238,
         0.1452, -0.0721, -0.0760,  0.1898, -0.0297, -0.0254, -0.1062,  0.1177,
         0.0889,  0.1650, -0.0034, -0.0044, -0.0117,  0.0648, -0.0285, -0.0388,
         0.1125, -0.0529,  0.0404, -0.0309,  0.0546,  0.0839,  0.0666, -0.0408,
         0.0098,  0.0537,  0.0099, -0.1986, -0.0283,  0.0293, -0.0135,  0.1354,
         0.1087,  0.2294,  0.0698,  0.0555, -0.1264, -0.1922, -0.0896, -0.0104,
         0.1320, -0.1552, -0.1142, -0.0834,  0.0338, -0.1189, -0.0200,  0.0445,
        -0.1065, -0.0045,  0.1696,  0.1025, -0.0312,  0.0138,  0.0149,  0.0785,
         0.0643, -0.0658,  0.0528,  0.0352,  0.0692,  0.0504,  0.1562,  0.0903,
        -0.0078, -0.0284,  0.0280,  0.0137,  0.0300,  0.0105, -0.0227,  0.0388,
        -0.0081, -0.0142, -0.0311, -0.0240, -0.0792, -0.2222, -0.0169, -0.1589])
##########################################################
prot_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 9.0686e-04, -1.4963e-03,  1.0241e-03,  7.2148e-03,  6.3758e-04,
         5.6608e-04, -2.2294e-04,  5.8294e-04, -2.6250e-03, -6.2462e-04,
        -8.1057e-04,  4.5661e-03,  4.1551e-04, -4.7096e-04,  1.1756e-03,
         2.8018e-04,  1.6037e-03,  3.1067e-04,  1.4388e-03,  8.9716e-04,
         1.0108e-03,  2.9711e-04,  2.2465e-04,  1.5418e-04, -6.4554e-03,
         2.7533e-03, -3.7643e-03,  8.7699e-04, -1.0158e-03, -1.5223e-03,
         1.0244e-03,  6.0254e-04, -1.8321e-03, -6.6257e-04, -4.0676e-03,
        -1.4343e-03, -1.8486e-03, -1.2164e-03, -1.9914e-03,  1.3305e-03,
        -1.5880e-03,  1.2744e-03, -1.0041e-04,  2.3022e-03,  4.5189e-04,
        -2.2854e-03, -4.7940e-03, -5.6246e-04,  1.1055e-03,  2.3145e-03,
        -5.1147e-04,  1.6388e-04, -2.4404e-04, -2.1364e-04,  1.5671e-03,
        -1.0535e-03, -2.0795e-03, -1.3639e-03,  1.6900e-03,  1.1932e-03,
        -1.9055e-03,  5.4048e-04,  1.4372e-03,  9.9348e-04, -4.2620e-04,
        -6.6373e-04, -1.5999e-03, -1.6089e-03,  3.0990e-03,  2.4648e-03,
        -1.2274e-03, -5.0034e-03, -1.2160e-03, -9.0282e-04,  3.0096e-03,
        -3.4991e-03,  9.7162e-04, -1.1172e-03, -8.3628e-04,  7.7692e-04,
         2.5458e-03, -2.2209e-03, -9.3623e-04, -7.0711e-04,  1.2654e-03,
        -1.3074e-03, -7.8578e-03,  2.9635e-03, -2.4055e-03, -6.4703e-04,
        -1.5101e-04,  1.7432e-03, -1.0656e-03,  2.6975e-03, -1.5621e-03,
        -2.3265e-04, -1.9986e-03,  2.2745e-03,  1.8010e-03,  4.0985e-03,
         9.2467e-05, -2.1312e-03,  1.3743e-03, -2.7104e-03, -8.0321e-04,
         1.0204e-03,  7.8931e-04, -8.0538e-04, -7.2143e-04,  4.4006e-04,
        -1.2081e-03,  8.8763e-04,  4.7862e-04,  6.1269e-04, -5.6409e-05,
        -6.3623e-04,  9.4354e-04, -7.5426e-04,  2.1192e-03, -7.4517e-03,
        -1.7744e-04, -9.2936e-04, -4.2293e-04,  1.3173e-03,  2.8864e-04,
         1.2036e-03,  2.3406e-03,  5.7947e-03])
##########################################################
prot_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([ 0.0969,  0.0382, -0.0654, -0.1394, -0.0111, -0.0032,  0.0367,  0.0591,
        -0.1161,  0.1357, -0.0291, -0.0963, -0.0225, -0.1079, -0.1995,  0.0665,
         0.0918,  0.0295,  0.0498, -0.0841,  0.0363,  0.0772,  0.0007, -0.0644,
         0.1456, -0.1337, -0.1912, -0.0370, -0.0298, -0.0222,  0.0085,  0.0099,
         0.0110,  0.0422, -0.0901,  0.0329,  0.1185, -0.0328, -0.0129,  0.1934,
        -0.0426,  0.0003,  0.1180,  0.0443, -0.0703,  0.0565, -0.0804,  0.0408,
        -0.0355,  0.1444, -0.0494, -0.0284,  0.1045, -0.0525,  0.0910,  0.1038,
         0.0117,  0.0290, -0.1474,  0.0214, -0.0204,  0.0863, -0.1221,  0.0930,
         0.0584, -0.0278,  0.1026, -0.0802, -0.0943, -0.0943,  0.0542, -0.1756,
         0.0383, -0.0529,  0.0110, -0.2052, -0.0643, -0.0389,  0.0118, -0.0339,
         0.0715,  0.0111, -0.1168, -0.0270,  0.0163, -0.0209,  0.1791,  0.1239,
         0.0636,  0.0637, -0.0041, -0.0269, -0.0387, -0.0503,  0.1114,  0.1089,
         0.0924,  0.1775,  0.0303, -0.1471,  0.0042, -0.1774,  0.0998,  0.0650,
         0.1076, -0.0377,  0.0130, -0.1247, -0.1285, -0.0196, -0.0105, -0.0260,
        -0.0014,  0.1761, -0.0207,  0.0557,  0.0034,  0.0167,  0.0362,  0.2525,
        -0.0205, -0.0420, -0.0977,  0.0211, -0.0425,  0.0059, -0.1016,  0.0943])
tensor([ 0.0920,  0.0384, -0.0653, -0.1231, -0.0094, -0.0030,  0.0361,  0.0594,
        -0.1044,  0.1321, -0.0290, -0.0950, -0.0245, -0.1077, -0.1983,  0.0664,
         0.0852,  0.0274,  0.0494, -0.0811,  0.0380,  0.0765,  0.0006, -0.0643,
         0.1437, -0.1325, -0.1870, -0.0364, -0.0289, -0.0222,  0.0129,  0.0107,
         0.0097,  0.0411, -0.0874,  0.0324,  0.1112, -0.0331, -0.0113,  0.2256,
        -0.0420,  0.0047,  0.1114,  0.0441, -0.0685,  0.0495, -0.1099,  0.0384,
        -0.0351,  0.1392, -0.0482, -0.0251,  0.1043, -0.0498,  0.0892,  0.1003,
         0.0114,  0.0265, -0.1469,  0.0216, -0.0195,  0.0832, -0.1207,  0.0919,
         0.0568, -0.0280,  0.1009, -0.0784, -0.0922, -0.0942,  0.0522, -0.1701,
         0.0375, -0.0558,  0.0112, -0.2695, -0.0627, -0.0376,  0.0118, -0.0322,
         0.0698,  0.0047, -0.1151, -0.0271,  0.0132, -0.0238,  0.1693,  0.1207,
         0.0638,  0.0610, -0.0051, -0.0257, -0.0387, -0.0462,  0.1110,  0.1075,
         0.0899,  0.1774,  0.0242, -0.1394,  0.0046, -0.1766,  0.0995,  0.0633,
         0.0795, -0.0389,  0.0136, -0.1231, -0.1273, -0.0196, -0.0080, -0.0260,
        -0.0008,  0.1759, -0.0206,  0.0555,  0.0015,  0.0168,  0.0353,  0.2486,
        -0.0204, -0.0419, -0.0972,  0.0218, -0.0420,  0.0098, -0.1001,  0.0892])
##########################################################
prot_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 1.8369e-03,  9.6771e-04, -1.6719e-03, -6.7672e-03,  3.0805e-03,
        -8.5774e-04,  1.2747e-03, -1.6012e-03,  4.4263e-03,  1.2275e-03,
         1.1860e-04, -4.1302e-03, -1.0882e-03,  9.1695e-04,  5.8004e-04,
         9.2218e-06,  4.6400e-04, -4.1322e-05,  3.8419e-04,  3.7588e-03,
         1.4613e-03, -3.9024e-04,  2.2487e-04,  7.8290e-04, -1.8463e-03,
        -3.3483e-03,  1.9993e-03,  1.2406e-03, -2.4908e-04,  4.9642e-04,
        -4.7126e-03, -9.3297e-04,  1.6110e-03,  3.4380e-04,  4.9804e-03,
         1.3527e-03, -3.6120e-03,  1.2014e-03,  2.2882e-03,  2.6721e-03,
         2.9047e-04,  3.5316e-03, -2.2550e-03,  1.0754e-03, -6.9568e-04,
        -3.7688e-03,  1.4326e-03,  6.8322e-04, -5.9868e-05,  3.0305e-03,
        -2.2028e-04,  7.4217e-04, -6.6667e-04,  2.9277e-03,  5.6619e-04,
        -8.5615e-04,  6.1681e-04, -2.8210e-03, -5.4560e-04,  4.6405e-04,
         1.3284e-03, -1.8254e-04, -1.5523e-03,  1.5899e-03,  9.2602e-04,
         5.7439e-04, -2.4954e-03,  2.4223e-03,  5.3558e-04, -3.6125e-03,
        -1.8163e-03,  4.4298e-03, -1.1376e-03,  2.2457e-03,  4.0846e-04,
         1.3614e-03, -1.2526e-03,  2.1009e-03,  5.8662e-05, -3.0206e-04,
         1.2716e-03, -2.7405e-03, -6.3147e-04,  1.5490e-04, -1.6550e-03,
         8.4841e-05, -6.2431e-03,  2.7479e-03, -2.1865e-03, -1.3228e-03,
        -6.3151e-05, -2.3053e-03,  3.8991e-04, -5.8340e-03, -4.8818e-04,
         1.5319e-04, -3.9575e-03,  3.0397e-04,  2.6016e-03, -3.0394e-03,
         6.2195e-04,  1.1405e-03,  1.4604e-03, -2.5025e-03,  1.2082e-03,
        -1.8107e-03,  1.0018e-03,  7.5623e-04,  1.3486e-03,  4.8103e-04,
         6.0685e-05, -1.2787e-04,  7.2546e-04,  2.3131e-04, -1.0071e-03,
        -1.2736e-03,  1.7061e-03, -5.9872e-04,  9.3410e-04, -4.2045e-03,
        -3.9449e-04, -5.5858e-04,  1.2107e-03,  5.7724e-04, -3.5449e-04,
        -8.4435e-04, -2.2842e-03,  4.0893e-03])
##########################################################
prot_encoder.encoder.layers.1.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0360,  0.0327, -0.0003,  ...,  0.0040,  0.0485,  0.0618],
        [-0.0258,  0.0015, -0.0451,  ..., -0.0367, -0.0107, -0.0531],
        [-0.0580,  0.0605, -0.0402,  ..., -0.0754,  0.0719, -0.0084],
        ...,
        [ 0.0019,  0.0116, -0.0675,  ...,  0.0393,  0.0178,  0.0429],
        [ 0.0168,  0.0616, -0.0355,  ...,  0.0508, -0.0290, -0.0186],
        [-0.0198,  0.0367,  0.0169,  ...,  0.0361, -0.0127,  0.0481]])
tensor([[-0.0360,  0.0327, -0.0003,  ...,  0.0040,  0.0485,  0.0618],
        [-0.0258,  0.0015, -0.0451,  ..., -0.0367, -0.0107, -0.0531],
        [-0.0580,  0.0605, -0.0402,  ..., -0.0754,  0.0719, -0.0084],
        ...,
        [ 0.0020,  0.0116, -0.0675,  ...,  0.0393,  0.0178,  0.0429],
        [ 0.0169,  0.0616, -0.0355,  ...,  0.0508, -0.0291, -0.0186],
        [-0.0196,  0.0367,  0.0169,  ...,  0.0361, -0.0127,  0.0481]])
##########################################################
prot_encoder.encoder.layers.1.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-5.9336e-08,  1.6624e-07, -2.1558e-07,  1.4275e-07, -3.1168e-07,
        -1.9712e-07, -4.7152e-08,  1.2265e-07,  4.4958e-07, -1.0230e-07,
        -2.6436e-08, -1.2731e-07, -1.5699e-07,  5.9560e-08, -3.3836e-07,
         2.3451e-07,  1.7024e-08, -1.5061e-09,  2.9436e-07, -5.8949e-08,
         1.1276e-07, -1.3157e-07, -1.5905e-07, -2.2648e-08, -7.3369e-08,
         2.2575e-07, -1.4193e-07, -1.0357e-07, -6.9550e-08,  2.3619e-07,
        -7.9090e-08,  1.3118e-08,  3.6952e-07,  2.1450e-07,  6.4291e-07,
         2.3667e-07, -2.9918e-07, -3.5066e-07,  1.6454e-07,  6.2269e-07,
         1.1243e-06,  6.5371e-07,  2.0161e-07,  3.1459e-07,  1.9135e-07,
        -5.8851e-07,  3.9209e-07,  9.7105e-08, -4.2267e-07,  4.3871e-07,
        -5.7799e-08, -7.2178e-08,  2.0785e-07,  2.4478e-07, -3.8204e-07,
        -4.9094e-08, -1.6783e-07,  3.4551e-09, -1.0064e-07,  3.3430e-07,
         3.7809e-07, -1.5172e-07,  9.2360e-07,  2.0036e-07,  1.1075e-06,
         3.0470e-07,  3.3636e-07, -9.3717e-08, -6.0609e-07,  2.2744e-07,
        -3.9257e-07, -2.8715e-07, -6.3699e-07, -2.7876e-07, -4.2600e-07,
         2.3876e-07,  4.9003e-07, -5.4641e-07, -7.1794e-07,  7.0121e-07,
        -4.6821e-07,  5.3723e-07, -1.7795e-07,  4.9957e-08, -1.6616e-07,
         6.7064e-08,  5.3434e-08, -5.7602e-07, -5.7564e-08,  5.8092e-08,
         1.0287e-07, -1.1690e-07, -1.9287e-07, -1.1251e-07, -3.3258e-07,
        -3.9123e-07, -5.3977e-07, -4.1271e-07,  2.7992e-08,  4.4552e-07,
         1.1853e-06,  1.6417e-07, -1.7881e-07, -2.0019e-07,  1.7588e-07,
         1.0956e-06, -4.5456e-07,  3.4093e-07,  7.5185e-07, -3.6610e-07,
         9.7259e-07,  5.1575e-07,  7.1471e-08, -1.0574e-07,  2.4739e-07,
         1.1165e-07,  2.9830e-07, -7.1577e-08, -5.0422e-08, -6.1426e-08,
         3.4114e-07, -1.8082e-07,  2.4167e-07,  7.1687e-08, -3.7255e-07,
         6.1895e-08, -1.9836e-07, -8.2650e-08, -3.3774e-14, -4.6888e-14,
        -2.4682e-14,  6.4155e-14, -1.9010e-14, -1.4348e-14, -4.3413e-14,
        -1.0886e-15,  4.2234e-14,  1.8628e-14,  4.3002e-14,  7.0293e-14,
         7.4585e-15,  4.0147e-14,  1.8972e-14, -6.7685e-15, -1.4027e-14,
        -4.3756e-14, -1.0503e-14,  8.4689e-15, -3.1173e-14,  2.1831e-14,
         7.4224e-15, -3.7877e-14,  2.7256e-14, -1.5534e-14,  1.7798e-14,
        -3.2450e-15, -2.3812e-15,  7.4482e-15,  4.4201e-14, -1.5304e-14,
        -5.4923e-14,  1.7628e-15, -2.9004e-14, -4.0066e-14, -1.7853e-14,
         9.7346e-15,  6.5452e-14,  2.3344e-14, -1.7380e-14,  1.6659e-14,
        -8.8282e-15, -9.8588e-15, -3.6645e-14, -2.9573e-14,  1.2507e-14,
         7.6990e-15,  2.1925e-15, -7.6696e-15,  2.9389e-15,  3.4745e-14,
         1.5945e-14, -2.7591e-15, -1.3490e-14, -2.0967e-14, -2.6265e-15,
         2.9767e-15, -1.8946e-14,  1.0922e-15, -4.5826e-14,  2.0667e-14,
        -3.2572e-15,  1.4000e-14, -1.1521e-14,  2.2348e-14, -1.8834e-14,
         2.5728e-14, -4.2176e-15,  1.5050e-14,  3.0376e-14, -2.3967e-14,
         1.1988e-14, -1.6178e-14,  9.5820e-15,  4.1370e-14, -3.4449e-15,
         5.5284e-14,  2.0584e-14,  2.7013e-14,  2.1670e-14,  3.7870e-14,
         4.3468e-15,  3.2103e-15,  2.9668e-15,  2.4874e-14,  9.2627e-15,
         3.0197e-14,  2.9356e-14,  1.2299e-14, -7.5394e-15, -3.1864e-14,
        -3.5550e-15, -3.4642e-15,  9.6973e-15, -2.2448e-14,  5.5244e-15,
        -4.2032e-15,  2.9236e-15, -1.4545e-16, -8.0279e-15,  2.4701e-14,
        -2.9234e-14,  3.1525e-14, -2.2165e-14, -7.0927e-15, -1.9460e-15,
        -1.3087e-14, -9.2107e-15, -1.2157e-14,  1.2815e-14,  1.4156e-14,
         2.6074e-14,  1.3167e-14, -3.8418e-14,  1.9545e-14, -8.2191e-15,
         2.2157e-14, -4.7482e-14,  3.7696e-14, -2.6986e-14, -2.1080e-14,
         1.1785e-14,  2.0124e-14,  1.6839e-14,  2.7824e-14, -1.7491e-14,
         2.1512e-14,  2.5536e-03, -1.6235e-03,  2.2180e-03, -1.0323e-03,
         2.8442e-04,  1.6213e-03,  1.4169e-04,  8.4694e-04,  6.2063e-04,
        -4.8519e-04,  4.3948e-04,  4.3650e-04,  3.8929e-04, -5.3193e-04,
         1.8516e-04, -1.9573e-03,  1.0685e-03, -3.7719e-04, -1.6036e-03,
        -1.4746e-03,  2.7035e-04, -5.7983e-04,  1.0377e-04, -4.5192e-04,
        -1.0342e-03,  9.1031e-04,  5.8999e-04, -1.7149e-05,  1.2273e-03,
         7.4174e-04,  1.0557e-03,  6.0890e-04,  1.7978e-03,  2.4101e-03,
         2.2137e-03,  1.4913e-03, -1.0223e-03,  8.9043e-04,  1.9403e-03,
         1.3624e-04,  1.0056e-03,  2.9696e-03, -1.0294e-03,  1.3957e-03,
        -7.0738e-04, -1.8644e-03,  1.2019e-03, -1.2656e-03, -1.8129e-03,
         5.1373e-07,  1.2621e-03,  1.2449e-04, -2.1414e-03, -9.7144e-04,
         3.2433e-04, -1.7574e-03,  1.4389e-03, -2.3134e-04,  8.9323e-05,
        -1.2022e-03, -4.9437e-04,  1.9656e-03,  3.2970e-04, -6.8502e-04,
         1.5027e-03,  1.6242e-03,  7.8574e-04,  2.4446e-03, -1.8063e-03,
         2.5740e-04, -1.9679e-03,  1.2701e-03, -9.4142e-04, -9.8931e-04,
        -1.3890e-03,  2.1513e-03, -3.4579e-04, -8.5998e-04, -1.0831e-03,
         8.3348e-04,  2.5617e-03,  5.5018e-04, -1.8174e-03,  2.1981e-03,
         1.7497e-04, -4.2269e-04, -2.6509e-03,  4.6056e-04,  2.5784e-04,
         5.1158e-04, -1.0061e-04,  1.4757e-03, -1.7212e-03, -1.5356e-03,
        -4.2669e-04,  6.4301e-04,  2.3951e-04,  1.0722e-03,  3.7654e-03,
        -7.5425e-04,  8.2216e-04, -1.8344e-05,  1.1630e-03, -1.7618e-03,
        -4.2578e-04,  2.4125e-04, -1.1443e-03, -1.6938e-03, -2.7435e-03,
         2.9306e-03, -6.4429e-05, -8.4306e-04,  1.9683e-03, -1.0382e-03,
        -6.8180e-04, -3.9221e-04,  9.6991e-05,  8.2793e-06,  1.8924e-04,
        -8.0528e-04, -8.3428e-04,  8.3348e-04, -1.9495e-03, -1.1296e-03,
         6.5182e-04, -5.4444e-04, -8.7992e-04, -1.6080e-03])
##########################################################
prot_encoder.encoder.layers.1.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0777,  0.0435, -0.0862,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0485, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0306,  0.0483],
        [-0.0517, -0.0149,  0.0659,  ...,  0.0579, -0.0457,  0.0403]])
tensor([[-0.0777,  0.0434, -0.0863,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0131,  0.0485, -0.0817,  ..., -0.0294, -0.0180, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0771, -0.0280, -0.0076,  ...,  0.0062,  0.0306,  0.0483],
        [-0.0517, -0.0149,  0.0658,  ...,  0.0579, -0.0457,  0.0404]])
##########################################################
prot_encoder.encoder.layers.1.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 8.7510e-04,  5.9326e-04, -7.1102e-04, -5.7617e-03,  3.1115e-03,
         4.2785e-05,  1.7436e-03, -1.6237e-03,  3.9980e-03, -2.1718e-04,
        -9.5812e-05, -2.8517e-03, -1.5100e-03,  1.2179e-03,  3.9712e-04,
         6.1533e-04, -1.0436e-03, -9.2180e-04,  9.2850e-04,  4.5204e-03,
         1.9819e-03, -1.2388e-04,  5.0621e-04,  1.0400e-03, -5.6422e-04,
        -3.1868e-03,  8.6192e-04,  1.1169e-03, -8.9788e-04, -1.7623e-04,
        -3.8137e-03, -1.2426e-03,  2.1272e-04,  1.7025e-03,  3.7808e-03,
         7.5901e-04, -2.8640e-03,  4.1734e-04,  6.8830e-04,  1.0815e-04,
         1.9441e-04,  2.4579e-03, -2.0811e-03,  7.1690e-06, -6.4153e-04,
        -4.9955e-03,  1.0173e-03,  1.9342e-04,  1.2654e-03,  3.3124e-03,
         5.5231e-04,  1.6763e-03,  3.2366e-04,  2.0784e-03,  3.7639e-04,
         3.5849e-04, -4.5783e-04, -2.8149e-03,  1.3783e-04,  1.1862e-04,
         8.7696e-04, -1.5879e-03, -6.2777e-04,  3.5321e-04,  1.3278e-04,
         9.8761e-04, -2.2992e-03,  2.3026e-03,  1.1726e-03, -2.6007e-03,
        -1.7296e-03,  4.5096e-03,  5.7388e-04,  1.9727e-03,  5.1560e-04,
         3.0852e-03, -1.4004e-03,  1.1851e-03,  5.4498e-04, -9.8077e-05,
        -9.4312e-05, -3.1697e-03,  5.9233e-05, -4.3431e-04, -2.3080e-03,
        -2.6717e-05, -6.0209e-03,  1.5931e-03, -6.2670e-04, -1.1441e-03,
         8.9006e-04, -1.8780e-03,  1.2130e-03, -5.6165e-03,  8.0620e-05,
         6.5860e-05, -3.9235e-03,  2.7243e-04,  2.8530e-03, -4.8003e-03,
         4.6514e-04,  1.0798e-03,  8.0415e-04, -1.7194e-03,  6.7724e-04,
        -1.5992e-03,  1.0013e-04,  4.4033e-05,  1.5181e-03, -3.6558e-04,
         6.7367e-04,  3.0894e-04,  2.5246e-04,  1.0628e-04,  4.7462e-05,
        -1.0017e-04,  1.5307e-03,  9.0219e-04,  3.9709e-04, -4.2831e-03,
         8.8411e-04,  4.9596e-04,  1.9539e-03, -1.2370e-04, -7.4934e-04,
         1.0122e-04, -2.2766e-03,  4.3594e-03])
##########################################################
prot_encoder.encoder.layers.1.linear1.weight shape: torch.Size([64, 128])
tensor([[ 0.0824,  0.0825, -0.0318,  ..., -0.0883, -0.0329, -0.0422],
        [-0.0047, -0.0468, -0.1117,  ..., -0.0019,  0.0441, -0.0453],
        [ 0.0131, -0.0403, -0.0018,  ..., -0.0119,  0.1607, -0.0902],
        ...,
        [ 0.0721,  0.0074,  0.1011,  ...,  0.0998, -0.0638, -0.0154],
        [ 0.0396,  0.0467, -0.0178,  ..., -0.0647, -0.0854, -0.0202],
        [ 0.0008,  0.0630, -0.0281,  ...,  0.1022, -0.0480,  0.0668]])
tensor([[ 0.0822,  0.0825, -0.0318,  ..., -0.0885, -0.0329, -0.0421],
        [-0.0050, -0.0468, -0.1118,  ..., -0.0020,  0.0441, -0.0456],
        [ 0.0132, -0.0403, -0.0018,  ..., -0.0119,  0.1607, -0.0902],
        ...,
        [ 0.0721,  0.0074,  0.1011,  ...,  0.1000, -0.0639, -0.0155],
        [ 0.0397,  0.0467, -0.0178,  ..., -0.0647, -0.0854, -0.0201],
        [ 0.0002,  0.0630, -0.0282,  ...,  0.1016, -0.0481,  0.0656]])
##########################################################
prot_encoder.encoder.layers.1.linear1.bias shape: torch.Size([64])
tensor([-0.0250,  0.0180, -0.0861,  0.0376, -0.0467,  0.0681,  0.0507, -0.0192,
         0.0337, -0.0159,  0.0222,  0.0514, -0.0768,  0.0162,  0.0261,  0.0345,
         0.0281,  0.0324,  0.0413,  0.0028, -0.0356,  0.0813, -0.0696,  0.0608,
        -0.0431, -0.0643, -0.0072,  0.0071,  0.0649,  0.0702, -0.0061,  0.0290,
        -0.0727, -0.0272, -0.0382,  0.0734, -0.0835, -0.0438, -0.0425,  0.0427,
        -0.0032,  0.0075, -0.0350,  0.0270, -0.0527, -0.0279,  0.0828, -0.0536,
         0.0573,  0.0599,  0.0368, -0.0062, -0.0522, -0.0149,  0.0005,  0.0297,
         0.0508, -0.0860, -0.0782,  0.0585,  0.0812,  0.0567, -0.0077,  0.0127])
tensor([-0.0267,  0.0161, -0.0860,  0.0361, -0.0462,  0.0668,  0.0490, -0.0172,
         0.0294, -0.0171,  0.0205,  0.0481, -0.0772,  0.0129,  0.0262,  0.0356,
         0.0285,  0.0310,  0.0411,  0.0013, -0.0367,  0.0811, -0.0684,  0.0595,
        -0.0428, -0.0641, -0.0050,  0.0070,  0.0630,  0.0675, -0.0053,  0.0284,
        -0.0719, -0.0263, -0.0380,  0.0712, -0.0842, -0.0444, -0.0429,  0.0424,
        -0.0032,  0.0050, -0.0338,  0.0267, -0.0532, -0.0303,  0.0799, -0.0535,
         0.0591,  0.0596,  0.0380, -0.0061, -0.0521, -0.0131,  0.0015,  0.0301,
         0.0483, -0.0895, -0.0808,  0.0566,  0.0760,  0.0568, -0.0074,  0.0071])
##########################################################
prot_encoder.encoder.layers.1.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.0995, -0.0299,  0.0387,  ..., -0.0413,  0.0845, -0.0300],
        [-0.0538, -0.0272, -0.0492,  ...,  0.0903, -0.0592, -0.0130],
        [ 0.0745,  0.1085, -0.0388,  ..., -0.0178,  0.0272,  0.0621],
        ...,
        [-0.1472, -0.0397,  0.0126,  ...,  0.0078,  0.0414, -0.0910],
        [ 0.0598,  0.0548,  0.0209,  ...,  0.0355, -0.1051, -0.1374],
        [-0.0340,  0.0573, -0.0574,  ...,  0.0051,  0.1215, -0.0763]])
tensor([[-0.0993, -0.0299,  0.0387,  ..., -0.0406,  0.0845, -0.0300],
        [-0.0538, -0.0272, -0.0492,  ...,  0.0903, -0.0592, -0.0129],
        [ 0.0744,  0.1085, -0.0388,  ..., -0.0178,  0.0272,  0.0622],
        ...,
        [-0.1472, -0.0396,  0.0126,  ...,  0.0077,  0.0414, -0.0910],
        [ 0.0603,  0.0552,  0.0207,  ...,  0.0379, -0.1051, -0.1355],
        [-0.0342,  0.0570, -0.0575,  ...,  0.0051,  0.1212, -0.0763]])
##########################################################
prot_encoder.encoder.layers.1.linear2.bias shape: torch.Size([128])
tensor([-0.1182,  0.0646,  0.0008, -0.0595,  0.0710, -0.0074, -0.0845, -0.1114,
         0.0555,  0.0241, -0.1157,  0.0894, -0.0410, -0.0008,  0.0374,  0.0021,
        -0.0535,  0.0135,  0.0153,  0.0757,  0.0807,  0.0810, -0.0713,  0.0207,
         0.1064, -0.0170,  0.0162,  0.0275, -0.0396, -0.0285, -0.0726, -0.0859,
        -0.0350, -0.1200,  0.0271, -0.0607,  0.1068, -0.0537,  0.0798, -0.0467,
        -0.0325,  0.0945,  0.0455, -0.0038, -0.0678,  0.1204,  0.0363,  0.0999,
        -0.0391, -0.1018, -0.0562,  0.0251,  0.0028,  0.1054,  0.0747,  0.0139,
         0.0395,  0.0414, -0.0185,  0.0687,  0.0981,  0.0435, -0.0411, -0.0493,
         0.1250, -0.0381,  0.0445,  0.1141,  0.0302,  0.0075,  0.0767,  0.1089,
         0.0577, -0.1065,  0.0402, -0.0100, -0.1008,  0.0900, -0.0211,  0.0569,
         0.0043,  0.1239, -0.0032, -0.1046, -0.0472, -0.0728,  0.0371, -0.1220,
        -0.0720, -0.0652, -0.0181, -0.0107, -0.0156, -0.0628,  0.0205, -0.0876,
        -0.0442, -0.0234,  0.0045,  0.0475,  0.1056,  0.0616,  0.0599,  0.0487,
        -0.0669,  0.0971,  0.0804,  0.1205,  0.0237, -0.0217, -0.0002,  0.0236,
         0.1213,  0.0462,  0.0240,  0.0174, -0.1079, -0.0424, -0.0862,  0.1223,
        -0.0236, -0.0300,  0.0469,  0.1132, -0.0838, -0.0935, -0.0828, -0.0944])
tensor([-0.1164,  0.0653,  0.0012, -0.0621,  0.0718, -0.0065, -0.0846, -0.1105,
         0.0589,  0.0259, -0.1145,  0.0861, -0.0404, -0.0016,  0.0360,  0.0028,
        -0.0524,  0.0132,  0.0157,  0.0719,  0.0777,  0.0803, -0.0703,  0.0217,
         0.1055, -0.0195,  0.0157,  0.0274, -0.0397, -0.0282, -0.0710, -0.0848,
        -0.0339, -0.1196,  0.0277, -0.0599,  0.1068, -0.0529,  0.0787, -0.0456,
        -0.0317,  0.0936,  0.0439, -0.0035, -0.0674,  0.1181,  0.0360,  0.1003,
        -0.0387, -0.1019, -0.0549,  0.0251,  0.0033,  0.1029,  0.0755,  0.0152,
         0.0400,  0.0403, -0.0169,  0.0684,  0.0974,  0.0409, -0.0385, -0.0490,
         0.1255, -0.0381,  0.0416,  0.1131,  0.0305,  0.0067,  0.0743,  0.1056,
         0.0562, -0.1027,  0.0388, -0.0149, -0.0984,  0.0896, -0.0204,  0.0559,
         0.0051,  0.1229, -0.0031, -0.1037, -0.0462, -0.0726,  0.0417, -0.1181,
        -0.0725, -0.0643, -0.0171, -0.0097, -0.0142, -0.0601,  0.0212, -0.0867,
        -0.0423, -0.0226,  0.0054,  0.0455,  0.1051,  0.0573,  0.0613,  0.0483,
        -0.0658,  0.0977,  0.0800,  0.1175,  0.0250, -0.0211, -0.0003,  0.0237,
         0.1204,  0.0467,  0.0250,  0.0135, -0.1059, -0.0420, -0.0845,  0.1074,
        -0.0235, -0.0293,  0.0447,  0.1120, -0.0826, -0.0936, -0.0681, -0.0954])
##########################################################
prot_encoder.encoder.layers.1.norm1.weight shape: torch.Size([128])
tensor([-0.0924, -0.0175, -0.0650,  0.1297,  0.1115,  0.0677, -0.1348, -0.0759,
         0.1306,  0.1052,  0.0042,  0.1583, -0.2938, -0.0309, -0.0337, -0.0185,
         0.1644,  0.1398,  0.0366, -0.1069, -0.0575,  0.0857,  0.0157,  0.0101,
        -0.0643,  0.0722,  0.0666,  0.0307, -0.1042, -0.0634, -0.1260, -0.0998,
        -0.1094, -0.0824,  0.1378, -0.1279, -0.1061,  0.0201,  0.0033,  0.2012,
         0.0651,  0.1798,  0.1236, -0.0686,  0.0883,  0.1102, -0.2611, -0.1244,
         0.1451, -0.0750, -0.0786,  0.1893, -0.0299, -0.0256, -0.1079,  0.1197,
         0.0891,  0.1654, -0.0030, -0.0060, -0.0097,  0.0704, -0.0285, -0.0377,
         0.1143, -0.0514,  0.0403, -0.0316,  0.0576,  0.0844,  0.0666, -0.0464,
         0.0092,  0.0528,  0.0099, -0.0934, -0.0248,  0.0300, -0.0105,  0.1380,
         0.1109,  0.2327,  0.0715,  0.0571, -0.1219, -0.1904, -0.0992, -0.0091,
         0.1325, -0.1587, -0.1131, -0.0851,  0.0343, -0.1200, -0.0195,  0.0450,
        -0.1093, -0.0035,  0.1699,  0.1117, -0.0303,  0.0125,  0.0155,  0.0791,
         0.0964, -0.0687,  0.0516,  0.0387,  0.0719,  0.0528,  0.1554,  0.0931,
        -0.0091, -0.0286,  0.0299,  0.0145,  0.0301,  0.0100, -0.0223,  0.0348,
        -0.0098, -0.0125, -0.0275, -0.0259, -0.0788, -0.2235, -0.0171, -0.1600])
tensor([-0.0909, -0.0174, -0.0658,  0.1143,  0.1107,  0.0680, -0.1350, -0.0780,
         0.1198,  0.1007,  0.0045,  0.1587, -0.2940, -0.0314, -0.0282, -0.0184,
         0.1620,  0.1397,  0.0366, -0.1046, -0.0605,  0.0856,  0.0160,  0.0093,
        -0.0629,  0.0713,  0.0571,  0.0306, -0.1043, -0.0634, -0.1267, -0.0997,
        -0.1093, -0.0816,  0.1386, -0.1280, -0.1017,  0.0202,  0.0035,  0.2379,
         0.0648,  0.1798,  0.1180, -0.0690,  0.0869,  0.1071, -0.2687, -0.1240,
         0.1453, -0.0699, -0.0785,  0.1891, -0.0301, -0.0232, -0.1067,  0.1173,
         0.0893,  0.1647, -0.0029, -0.0056, -0.0090,  0.0671, -0.0254, -0.0355,
         0.1135, -0.0515,  0.0374, -0.0299,  0.0550,  0.0845,  0.0661, -0.0309,
         0.0100,  0.0570,  0.0099, -0.2077, -0.0222,  0.0296, -0.0106,  0.1373,
         0.1102,  0.2326,  0.0697,  0.0570, -0.1220, -0.1909, -0.0826, -0.0124,
         0.1330, -0.1579, -0.1130, -0.0849,  0.0342, -0.1195, -0.0180,  0.0480,
        -0.1095, -0.0043,  0.1695,  0.1019, -0.0303,  0.0128,  0.0147,  0.0783,
         0.0667, -0.0688,  0.0517,  0.0405,  0.0709,  0.0530,  0.1551,  0.0930,
        -0.0090, -0.0296,  0.0298,  0.0158,  0.0293,  0.0100, -0.0229,  0.0100,
        -0.0099, -0.0127, -0.0276, -0.0257, -0.0786, -0.2239, -0.0111, -0.1589])
##########################################################
prot_encoder.encoder.layers.1.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 6.0251e-04, -1.3265e-03,  2.2216e-03, -5.2697e-03,  1.7814e-03,
        -7.7152e-04, -1.6840e-04,  3.1696e-03,  3.1279e-03, -1.1045e-05,
         6.1746e-04, -2.6581e-03,  5.8462e-04, -2.4315e-03,  5.5226e-04,
         1.2308e-03, -1.2902e-04, -7.5398e-04,  7.8457e-04, -2.7412e-03,
        -2.4627e-03, -8.9584e-04,  1.9042e-04,  2.1329e-03,  4.9361e-04,
        -2.7342e-03,  2.0943e-03,  2.3495e-04,  1.1513e-03,  8.3603e-04,
         3.3593e-03,  1.2567e-03,  1.3899e-04, -6.0057e-04,  1.6407e-03,
        -2.1609e-04,  1.7332e-03,  1.0310e-03, -1.0705e-03,  6.6748e-04,
        -1.8310e-04,  1.2143e-03, -1.1164e-03,  7.5148e-04, -5.9802e-04,
        -3.9458e-03, -1.1771e-04,  3.4446e-04,  2.1605e-04, -1.5435e-03,
        -2.3378e-05,  3.9604e-04,  1.4998e-03, -2.6408e-03,  1.5586e-04,
        -6.4221e-04, -6.7072e-04, -1.3083e-03,  8.8986e-04,  7.8997e-04,
        -1.0465e-03, -2.2395e-03,  2.4157e-03, -1.8335e-04, -1.0340e-04,
        -1.1478e-03, -4.7595e-03, -2.6869e-03,  1.4461e-03, -2.4053e-03,
        -2.8739e-03, -5.9801e-03, -2.1345e-03,  3.4409e-03, -1.2562e-03,
        -5.5981e-03,  3.8381e-03,  7.3068e-04,  5.9229e-04, -3.3095e-04,
        -5.4627e-04, -1.5662e-03, -8.9704e-04, -9.6090e-04,  1.9551e-03,
         5.5711e-04,  4.3872e-03,  2.8450e-03, -4.3546e-04,  9.7728e-04,
        -1.2593e-04,  2.3011e-03,  1.8973e-03,  4.4408e-03,  7.7431e-04,
        -2.4989e-03,  4.2912e-03, -7.9784e-04,  9.7782e-04, -2.8325e-03,
         3.7713e-04, -2.7219e-03,  2.4152e-03, -2.2195e-03, -1.4021e-03,
         2.0221e-03, -6.6654e-04, -3.1843e-03,  6.0963e-04, -1.1073e-03,
         2.9048e-04, -4.5035e-04,  6.4060e-04, -7.3413e-05, -3.2992e-06,
        -4.1198e-03,  2.7549e-03,  5.3301e-04,  1.7963e-03, -1.1115e-02,
         1.1691e-04, -1.0916e-03, -1.7331e-03,  1.8777e-04,  1.0130e-03,
         6.4525e-04,  1.1143e-02, -1.1458e-03])
##########################################################
prot_encoder.encoder.layers.1.norm2.weight shape: torch.Size([128])
tensor([ 0.0969,  0.0382, -0.0654, -0.1394, -0.0111, -0.0032,  0.0367,  0.0591,
        -0.1161,  0.1357, -0.0291, -0.0963, -0.0225, -0.1079, -0.1995,  0.0665,
         0.0918,  0.0295,  0.0498, -0.0841,  0.0363,  0.0772,  0.0007, -0.0644,
         0.1456, -0.1337, -0.1912, -0.0370, -0.0298, -0.0222,  0.0085,  0.0099,
         0.0110,  0.0422, -0.0901,  0.0329,  0.1185, -0.0328, -0.0129,  0.1934,
        -0.0426,  0.0003,  0.1180,  0.0443, -0.0703,  0.0565, -0.0804,  0.0408,
        -0.0355,  0.1444, -0.0494, -0.0284,  0.1045, -0.0525,  0.0910,  0.1038,
         0.0117,  0.0290, -0.1474,  0.0214, -0.0204,  0.0863, -0.1221,  0.0930,
         0.0584, -0.0278,  0.1026, -0.0802, -0.0943, -0.0943,  0.0542, -0.1756,
         0.0383, -0.0529,  0.0110, -0.2052, -0.0643, -0.0389,  0.0118, -0.0339,
         0.0715,  0.0111, -0.1168, -0.0270,  0.0163, -0.0209,  0.1791,  0.1239,
         0.0636,  0.0637, -0.0041, -0.0269, -0.0387, -0.0503,  0.1114,  0.1089,
         0.0924,  0.1775,  0.0303, -0.1471,  0.0042, -0.1774,  0.0998,  0.0650,
         0.1076, -0.0377,  0.0130, -0.1247, -0.1285, -0.0196, -0.0105, -0.0260,
        -0.0014,  0.1761, -0.0207,  0.0557,  0.0034,  0.0167,  0.0362,  0.2525,
        -0.0205, -0.0420, -0.0977,  0.0211, -0.0425,  0.0059, -0.1016,  0.0943])
tensor([ 0.0944,  0.0402, -0.0653, -0.1257, -0.0118, -0.0033,  0.0370,  0.0599,
        -0.1063,  0.1330, -0.0339, -0.0969, -0.0193, -0.1079, -0.1980,  0.0664,
         0.0926,  0.0289,  0.0501, -0.0803,  0.0414,  0.0777,  0.0019, -0.0641,
         0.1398, -0.1328, -0.1873, -0.0368, -0.0297, -0.0217,  0.0041,  0.0104,
         0.0112,  0.0422, -0.0957,  0.0348,  0.1181, -0.0324, -0.0128,  0.2802,
        -0.0428, -0.0007,  0.1132,  0.0453, -0.0691,  0.0532, -0.1188,  0.0406,
        -0.0355,  0.1439, -0.0504, -0.0278,  0.1043, -0.0500,  0.0895,  0.1006,
         0.0122,  0.0289, -0.1460,  0.0240, -0.0205,  0.0844, -0.1184,  0.0917,
         0.0675, -0.0286,  0.0978, -0.0801, -0.0931, -0.0937,  0.0506, -0.1715,
         0.0348, -0.0513,  0.0202, -0.3141, -0.0624, -0.0387,  0.0112, -0.0296,
         0.0714,  0.0121, -0.1160, -0.0274,  0.0145, -0.0219,  0.1722,  0.1208,
         0.0695,  0.0630, -0.0052, -0.0268, -0.0390, -0.0461,  0.1106,  0.1158,
         0.0928,  0.1766,  0.0266, -0.1406,  0.0066, -0.1765,  0.0996,  0.0652,
         0.0819, -0.0378,  0.0145, -0.1216, -0.1286, -0.0189, -0.0117, -0.0246,
        -0.0006,  0.1751, -0.0213,  0.0542,  0.0056,  0.0167,  0.0359,  0.2436,
        -0.0203, -0.0423, -0.0971,  0.0231, -0.0441,  0.0052, -0.0921,  0.0981])
##########################################################
prot_encoder.encoder.layers.1.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 6.9986e-04,  4.5158e-03, -3.9775e-04,  8.5681e-03,  5.6279e-04,
         7.0752e-05, -1.5260e-03,  1.6791e-03, -7.1206e-03, -7.6209e-04,
         4.0897e-03,  5.6400e-03, -3.3182e-03,  6.0859e-04,  8.8018e-04,
         2.4460e-04,  1.4603e-04,  2.9148e-04,  8.5718e-04,  3.6031e-03,
        -5.7663e-03,  6.9112e-04, -1.0387e-03, -2.5426e-03,  9.8861e-04,
         3.7802e-03, -1.4572e-03, -9.0600e-04,  8.1379e-04,  6.0135e-04,
         3.7632e-03,  5.2506e-03,  2.7931e-04, -2.6490e-03,  2.0413e-03,
        -6.0062e-04,  1.7167e-03, -1.0995e-03, -2.5756e-04,  3.1826e-03,
         8.2029e-04, -9.4861e-04, -1.7838e-03, -2.6063e-03,  6.8908e-04,
        -3.2422e-03, -6.1402e-03,  1.5017e-03,  1.4277e-03, -8.3684e-04,
         1.5199e-03, -3.7166e-04,  4.8717e-04,  4.2820e-03,  6.4066e-04,
         9.1131e-04, -2.0007e-03, -3.6648e-04, -2.5903e-04,  2.2865e-03,
         2.2842e-04, -2.6558e-03, -2.2886e-03,  1.0766e-03,  5.9906e-03,
         5.7940e-03, -2.9624e-03,  1.8359e-03, -4.2091e-04,  7.6644e-04,
        -2.5951e-03,  2.5809e-03, -8.0779e-04, -5.7651e-03, -5.0686e-03,
         1.1109e-02, -1.7352e-03,  4.0888e-04,  1.3890e-03,  1.5874e-04,
         1.8827e-03,  3.8130e-04,  1.7455e-03,  6.9290e-04, -4.1169e-04,
        -1.6191e-03,  4.9174e-03,  1.7900e-04, -4.3614e-03,  6.8085e-04,
         3.0543e-03, -2.0931e-03, -2.9878e-03, -5.1306e-03,  1.2253e-03,
        -5.3631e-03,  2.2410e-03,  1.1792e-04,  1.8459e-04,  1.9403e-04,
         4.9985e-03,  2.3141e-03,  1.4047e-03, -2.4393e-04, -3.1765e-03,
        -9.6502e-05,  7.8266e-04,  2.3046e-03, -1.0786e-03,  3.0899e-04,
         2.6612e-03,  1.3267e-03, -4.9151e-04, -4.8650e-05,  7.1001e-04,
        -9.4693e-03, -2.5477e-03,  4.0716e-04,  6.9309e-04, -7.6259e-03,
        -8.7278e-04, -8.0345e-04,  2.2694e-03,  3.2935e-03,  1.0732e-03,
         3.2464e-04, -1.8430e-02, -1.1075e-03])
##########################################################
cross_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0353,  0.0362, -0.0046,  ..., -0.0475, -0.0435,  0.0414],
        [-0.0293,  0.0085,  0.0074,  ...,  0.0250, -0.0540, -0.0287],
        [-0.0428, -0.0002, -0.0028,  ..., -0.0562,  0.0488, -0.0342],
        ...,
        [-0.0197, -0.0352,  0.0400,  ..., -0.0514,  0.0089, -0.0326],
        [ 0.0122, -0.0524,  0.0167,  ..., -0.0356, -0.0057, -0.0241],
        [-0.0294,  0.0581,  0.0535,  ..., -0.0125, -0.0439, -0.0239]])
tensor([[-0.0353,  0.0362, -0.0046,  ..., -0.0475, -0.0435,  0.0414],
        [-0.0293,  0.0085,  0.0074,  ...,  0.0250, -0.0540, -0.0287],
        [-0.0428, -0.0002, -0.0028,  ..., -0.0562,  0.0488, -0.0342],
        ...,
        [-0.0193, -0.0352,  0.0401,  ..., -0.0514,  0.0089, -0.0325],
        [ 0.0126, -0.0523,  0.0167,  ..., -0.0356, -0.0057, -0.0240],
        [-0.0292,  0.0581,  0.0535,  ..., -0.0125, -0.0440, -0.0240]])
##########################################################
cross_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 2.7450e-06, -6.3112e-06,  3.5826e-06,  5.9405e-06, -4.2013e-06,
         6.2637e-06, -5.3171e-06,  1.9039e-06,  1.1243e-06, -2.9503e-06,
        -1.9581e-06,  2.6116e-06, -5.9837e-06,  5.5255e-06,  3.3665e-06,
         6.1207e-06, -1.4855e-05, -1.2368e-05, -1.1653e-05, -2.4731e-06,
         8.1701e-06, -1.1974e-05, -6.7589e-06,  4.7568e-06, -9.3325e-06,
         6.0933e-06, -8.8136e-06, -1.6142e-05, -1.6249e-05,  2.9444e-06,
         1.8177e-05, -8.5036e-06, -1.8825e-07,  1.3409e-06, -2.9651e-06,
        -2.9473e-06, -8.7081e-07, -5.4251e-06,  3.8072e-06, -3.6245e-06,
        -3.0406e-06, -8.8342e-07,  4.2873e-07, -3.2775e-06,  3.1383e-06,
        -2.8971e-06,  5.8822e-07, -2.0907e-06, -3.3768e-06,  1.9995e-06,
        -1.0772e-06,  3.0850e-07, -7.8365e-06,  2.7613e-06, -9.3907e-07,
        -1.4454e-06, -1.7977e-06,  5.9060e-07, -4.2511e-06,  3.0291e-07,
        -2.9851e-06, -6.4263e-07, -2.5289e-06, -2.4335e-06,  3.5463e-06,
         3.6150e-06,  2.4501e-06, -4.2925e-06, -3.5102e-06,  2.1421e-06,
         1.4969e-06, -1.2397e-06, -2.2511e-06,  9.4022e-07, -1.1186e-06,
         3.8444e-06,  2.8002e-07,  2.1924e-06,  3.6081e-06, -1.7425e-06,
         1.0137e-06, -4.5564e-06,  1.8117e-06,  4.3049e-06, -2.3384e-06,
        -3.8381e-06,  1.7505e-06, -1.9982e-06, -5.9427e-07,  1.3941e-06,
        -6.2950e-07,  4.8775e-06, -3.8774e-06,  3.7160e-06, -5.4645e-07,
         7.7400e-06,  1.7416e-05,  5.2986e-06,  7.1208e-06, -2.5553e-06,
         1.6334e-06,  1.8742e-05,  2.6097e-05, -7.8961e-06, -1.5577e-05,
         3.0838e-06,  1.2680e-07, -2.1959e-05,  1.0478e-06, -1.0997e-06,
        -4.8180e-06, -1.1612e-05,  2.4307e-06, -4.2758e-06,  5.9398e-06,
        -6.8033e-06, -7.7130e-06, -1.2188e-06,  6.0780e-07,  1.6806e-05,
         9.5418e-07,  1.7417e-05,  5.0630e-06, -3.0524e-06, -8.8740e-06,
        -1.4119e-06,  8.6391e-06,  3.1350e-06,  2.3697e-14, -4.7985e-14,
        -1.0267e-13,  4.5759e-14,  3.5541e-14,  2.2333e-14, -7.4972e-16,
         4.9025e-14, -1.0062e-13, -5.9377e-14, -1.7106e-14,  1.7577e-14,
        -2.3007e-15,  2.8328e-15,  1.2834e-14, -3.0822e-14, -6.1727e-14,
        -5.4363e-14, -1.8376e-13, -1.1053e-13, -5.2649e-14,  7.2831e-14,
        -3.0182e-13, -1.4437e-14, -4.3248e-14, -3.7533e-16, -6.4686e-14,
         3.9620e-14, -4.3961e-15,  8.9930e-14,  7.8565e-14, -1.3473e-13,
        -3.2855e-14,  2.1150e-13, -1.4142e-13, -6.6132e-14, -4.1417e-14,
         9.9192e-14, -2.1715e-13, -4.2979e-14, -3.2547e-14,  1.0226e-13,
         1.7606e-13,  4.9427e-14, -7.4654e-15,  2.4163e-13, -6.4827e-14,
        -1.2820e-13,  2.3252e-14,  9.5817e-14, -1.9390e-14,  9.2780e-15,
        -4.3519e-14,  2.5405e-14, -2.2446e-14,  4.2278e-14, -5.1700e-14,
        -1.9332e-14,  3.3207e-14,  4.2439e-14,  7.9913e-15, -6.3048e-14,
         3.9266e-17, -7.7028e-14,  7.1879e-14,  5.1057e-14,  1.6108e-13,
        -1.2464e-13, -2.4824e-13,  8.9599e-14, -1.4580e-13, -1.9621e-14,
         3.2219e-14, -1.7566e-14,  2.3558e-14, -1.1416e-13,  2.5723e-14,
        -9.5014e-14, -1.0335e-14, -7.1182e-14, -3.3830e-14,  5.8905e-14,
         7.5684e-14, -1.8555e-13, -4.5433e-15, -5.5335e-14,  4.7150e-14,
        -1.0952e-13,  8.5635e-14,  5.7076e-16,  8.2009e-14, -5.7298e-14,
         4.9326e-14, -1.4893e-13, -3.5351e-14, -1.1471e-13, -1.2214e-13,
        -2.0516e-13, -1.6924e-13, -1.2464e-13,  2.0158e-14,  1.5388e-13,
         1.0043e-13, -3.6881e-14, -3.5358e-14, -9.1846e-14, -3.2417e-14,
         5.2965e-14,  1.3067e-13, -2.3496e-14,  1.3971e-13, -2.5080e-13,
        -9.2643e-14,  3.2764e-14,  3.5087e-15, -8.2370e-15,  6.6148e-14,
        -1.0229e-13, -5.7949e-14,  7.3503e-14,  3.8029e-14,  1.3917e-13,
         1.8469e-13, -1.7456e-13,  3.2697e-14, -9.1905e-14, -3.1785e-14,
        -7.0318e-14,  1.0291e-02, -1.7023e-02,  1.4183e-02,  1.6570e-03,
        -2.8246e-04, -4.5458e-03,  1.9008e-02,  1.0409e-02,  1.4581e-02,
        -4.5072e-03,  2.3840e-03, -1.7499e-02, -1.5337e-03,  1.6940e-02,
        -5.4783e-03,  1.9685e-03,  5.4491e-03,  2.4783e-03, -2.0941e-03,
        -4.9849e-03,  3.6882e-03,  2.0024e-02, -1.6294e-02, -2.2746e-02,
         2.0231e-03,  8.1827e-03, -1.0652e-02,  2.3127e-02,  5.3105e-03,
        -1.0756e-04,  1.6441e-02, -1.5795e-02, -3.3293e-02,  2.6808e-02,
         9.0801e-03, -8.0526e-03, -2.9840e-03, -1.7764e-02,  6.1698e-03,
         7.5073e-04,  9.9543e-03,  7.2928e-03,  8.9517e-03,  1.1923e-02,
         4.3016e-03,  1.0398e-02,  3.1152e-02, -1.2259e-02, -1.7382e-02,
         3.8692e-03, -9.6626e-03,  1.3671e-02, -1.6009e-02,  1.5626e-02,
        -1.8689e-02, -9.2742e-03,  1.4830e-02,  1.8786e-02, -6.2613e-04,
         2.5328e-02, -1.5325e-02,  1.1024e-03,  1.3410e-02,  8.8111e-03,
         1.0086e-02,  1.6859e-02,  1.6355e-02,  1.6266e-02, -1.3002e-02,
         2.2733e-02, -1.3355e-02, -6.6902e-03,  1.5685e-02, -2.5677e-03,
        -7.0117e-03,  8.6263e-03,  2.1949e-02, -1.7032e-02,  2.5418e-03,
         8.5734e-03,  1.9704e-02,  6.1748e-05, -2.3801e-02,  1.0038e-02,
         1.8054e-02, -1.4214e-02, -7.2826e-03,  6.0857e-03, -5.2005e-03,
         2.0086e-02, -5.8333e-04, -2.4660e-02,  9.0053e-03,  1.9595e-02,
        -1.9891e-02,  1.2275e-03, -2.1336e-02,  1.1651e-02,  6.1472e-03,
         2.4381e-03,  1.1123e-02, -4.0912e-03, -6.8776e-03, -1.8973e-02,
         6.9694e-03, -4.6268e-03, -4.2290e-03, -1.2482e-02, -1.6122e-02,
        -1.6509e-02, -1.4862e-02, -1.1897e-02,  3.3329e-02, -3.6825e-03,
         1.8985e-04, -1.7041e-02,  1.0505e-02, -1.2013e-02, -5.8877e-03,
         5.4229e-03,  8.0962e-03,  3.4221e-02, -1.2343e-02,  1.8798e-02,
         1.7347e-02,  6.8359e-03,  4.4943e-03, -1.4461e-03])
##########################################################
cross_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[ 8.7909e-05,  3.0279e-02, -9.1567e-03,  ...,  7.5423e-02,
         -2.2786e-02,  4.5643e-02],
        [ 6.7810e-02,  7.4392e-02, -3.5738e-02,  ..., -3.9617e-02,
         -2.6409e-02,  4.3155e-02],
        [-1.1801e-02, -2.2520e-02, -8.7259e-02,  ...,  6.7634e-02,
         -7.3776e-02, -2.1436e-02],
        ...,
        [-5.8160e-02, -2.1201e-02, -7.6753e-02,  ...,  7.9017e-02,
          7.6030e-03,  3.9384e-02],
        [-5.1556e-02,  5.9830e-02, -6.0876e-02,  ..., -4.8621e-03,
          7.4306e-03,  2.2564e-02],
        [-2.7383e-02,  8.7618e-02, -8.0539e-02,  ..., -1.8069e-02,
         -4.0330e-02,  4.2306e-02]])
tensor([[ 2.9292e-06,  3.0766e-02, -9.1023e-03,  ...,  7.5495e-02,
         -2.2966e-02,  4.5810e-02],
        [ 6.7573e-02,  7.4451e-02, -3.5927e-02,  ..., -3.9921e-02,
         -2.6389e-02,  4.3016e-02],
        [-1.1743e-02, -2.2289e-02, -8.6988e-02,  ...,  6.7888e-02,
         -7.3642e-02, -2.1375e-02],
        ...,
        [-5.8263e-02, -2.0931e-02, -7.6636e-02,  ...,  7.9089e-02,
          7.6452e-03,  3.9443e-02],
        [-5.0301e-02,  5.8447e-02, -5.9986e-02,  ..., -4.4141e-03,
          8.5607e-03,  2.1571e-02],
        [-2.7271e-02,  8.7617e-02, -8.0438e-02,  ..., -1.7960e-02,
         -4.0322e-02,  4.2309e-02]])
##########################################################
cross_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.3119e-02,  1.2786e-02, -6.6465e-03,  2.4783e-03, -2.3081e-02,
         7.4825e-05, -1.3192e-02, -2.9213e-04, -4.2955e-03,  3.9942e-02,
         3.1616e-02,  2.9194e-02,  3.3928e-03,  1.8949e-03, -8.6617e-03,
         8.6386e-04, -4.1106e-03, -1.6451e-02, -9.6029e-03, -2.1480e-02,
        -3.5253e-02,  1.2512e-03, -4.6202e-02, -2.0378e-02,  6.3648e-03,
         1.1746e-03, -1.1261e-02, -1.6181e-03,  4.2755e-02, -1.4992e-03,
        -1.6671e-02, -1.9094e-02, -1.0050e-02,  4.5385e-04, -6.8787e-04,
         4.4118e-05, -5.7630e-03, -3.5187e-03, -5.8169e-03,  1.6980e-02,
        -5.2870e-03, -8.5837e-03,  7.2547e-03, -1.5523e-03, -5.3374e-03,
        -1.3945e-03,  2.6784e-04, -1.9954e-03, -6.4492e-03,  6.5158e-03,
        -8.4050e-03, -1.3931e-02, -9.0388e-03, -6.6150e-03, -8.9826e-03,
        -8.6882e-03,  2.3997e-02, -5.9116e-03, -2.0636e-03, -1.4916e-03,
         8.2246e-03, -4.7363e-03,  4.2551e-03,  2.6970e-03,  2.0734e-03,
         2.9325e-03, -2.3761e-02, -3.8490e-03, -1.6926e-02,  1.2486e-02,
        -6.0143e-03,  5.2741e-03, -4.4141e-03, -1.9247e-02, -2.4150e-01,
         4.1491e-02,  2.7343e-03, -1.0750e-02,  1.7535e-03, -1.0471e-03,
        -7.1013e-03, -2.2914e-02,  6.5674e-04,  9.6453e-03, -5.7833e-03,
         7.4990e-03, -4.8555e-03,  1.6136e-02, -1.0080e-02, -5.5935e-03,
        -1.1704e-02,  1.7334e-03, -2.3471e-03,  7.4307e-04, -4.6658e-03,
         3.0479e-02,  2.2854e-02, -1.8609e-03, -3.2827e-02, -2.7159e-03,
        -1.2691e-02,  1.3179e-04,  1.2405e-03, -1.5022e-02, -9.4379e-02,
         5.2784e-03,  2.0570e-03,  4.2538e-03, -7.6663e-03, -8.6489e-03,
        -4.4815e-03, -4.7533e-03, -1.5953e-02, -1.6011e-04,  2.3373e-02,
         1.0335e-02, -1.3078e-02, -1.4950e-02,  1.2946e-02, -6.1972e-03,
         1.4864e-03, -2.1673e-03, -3.1754e-03,  1.9317e-02, -1.3155e-02,
        -5.5371e-03,  2.3103e-02, -2.6113e-03])
##########################################################
cross_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[-8.5764e-02,  2.8943e-02, -1.6837e-02,  ..., -4.0641e-03,
          5.8848e-02,  3.7130e-02],
        [ 1.6531e-05, -3.3828e-02,  8.9408e-02,  ...,  6.2196e-02,
         -7.3387e-02, -3.4448e-03],
        [-1.0393e-01, -2.1149e-02, -9.6680e-02,  ..., -3.4806e-05,
         -3.3989e-02,  3.6266e-02],
        ...,
        [-1.6072e-01, -3.0629e-02, -8.6348e-02,  ..., -7.7527e-03,
         -4.3250e-02, -9.8251e-02],
        [ 3.9429e-02, -1.0872e-01, -3.5363e-02,  ..., -8.7523e-02,
         -5.8449e-03, -2.1717e-02],
        [ 6.5519e-02,  8.1892e-02,  5.4372e-02,  ...,  1.4225e-02,
         -1.5980e-02,  1.9886e-02]])
tensor([[-0.0859,  0.0290, -0.0166,  ..., -0.0040,  0.0591,  0.0371],
        [-0.0007, -0.0338,  0.0891,  ...,  0.0622, -0.0731, -0.0034],
        [-0.1036, -0.0213, -0.0963,  ..., -0.0002, -0.0342,  0.0362],
        ...,
        [-0.1607, -0.0307, -0.0866,  ..., -0.0081, -0.0458, -0.0982],
        [ 0.0403, -0.1090, -0.0355,  ..., -0.0883, -0.0111, -0.0216],
        [ 0.0666,  0.0817,  0.0547,  ...,  0.0137, -0.0193,  0.0199]])
##########################################################
cross_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([-0.0145, -0.0367,  0.0249,  0.0319,  0.0287, -0.0240, -0.0234,  0.0359,
        -0.0376,  0.0108,  0.0444,  0.0066, -0.0208,  0.0294, -0.0128, -0.0081,
         0.0088, -0.0125,  0.0345, -0.0108, -0.0767, -0.0520,  0.0595,  0.0274,
        -0.0528,  0.0860, -0.0149, -0.0442, -0.0850, -0.0149, -0.0225, -0.0061,
         0.0782, -0.0314, -0.0694, -0.0434, -0.0475, -0.0129, -0.0341,  0.0638,
         0.0335,  0.0604, -0.0118,  0.0108, -0.0807, -0.0799,  0.0845,  0.0535,
        -0.0814, -0.0264, -0.0756,  0.0357, -0.0511, -0.0090, -0.0264,  0.0735,
         0.0397, -0.0280,  0.0379,  0.0194, -0.0360,  0.0532,  0.0857,  0.0562])
tensor([-0.0182, -0.0287,  0.0264,  0.0172,  0.0316, -0.0288, -0.0225,  0.0355,
        -0.0370, -0.0024,  0.0575, -0.0169, -0.0205,  0.0337, -0.0087, -0.0105,
         0.0051, -0.0122,  0.0426, -0.0033, -0.0770, -0.0514,  0.0811,  0.0208,
        -0.0560,  0.0876, -0.0059, -0.0418, -0.0827, -0.0172, -0.0150, -0.0124,
         0.0685, -0.0303, -0.0705, -0.0450, -0.0468, -0.0175, -0.0346,  0.0649,
         0.0363,  0.0643, -0.0153,  0.0231, -0.0802, -0.0775,  0.0929,  0.0558,
        -0.0835, -0.0273, -0.0759,  0.0364, -0.0523, -0.0217, -0.0293,  0.0754,
         0.0441, -0.0290,  0.0326,  0.0204, -0.0356,  0.0622,  0.1080,  0.0620])
##########################################################
cross_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.0059,  0.0426, -0.0152,  ...,  0.1233,  0.0256,  0.0641],
        [ 0.0312,  0.0418,  0.0733,  ...,  0.0383,  0.0377,  0.0073],
        [ 0.1452,  0.1367,  0.0222,  ..., -0.0423,  0.0406,  0.0344],
        ...,
        [-0.1098,  0.0397, -0.0216,  ...,  0.0217, -0.0015, -0.0108],
        [ 0.0647, -0.0804,  0.0253,  ..., -0.0363, -0.0299,  0.0260],
        [-0.1038,  0.0424,  0.0299,  ..., -0.0060, -0.0236,  0.0362]])
tensor([[-0.0062,  0.0425, -0.0153,  ...,  0.1230,  0.0252,  0.0636],
        [ 0.0315,  0.0415,  0.0735,  ...,  0.0390,  0.0388,  0.0082],
        [ 0.1446,  0.1369,  0.0229,  ..., -0.0425,  0.0393,  0.0333],
        ...,
        [-0.1097,  0.0396, -0.0218,  ...,  0.0216, -0.0016, -0.0109],
        [ 0.0650, -0.0798,  0.0257,  ..., -0.0356, -0.0292,  0.0267],
        [-0.1038,  0.0409,  0.0294,  ..., -0.0070, -0.0231,  0.0367]])
##########################################################
cross_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([ 0.1209,  0.0081, -0.0134, -0.0315, -0.0781,  0.1205,  0.0826, -0.0848,
        -0.1103,  0.0260, -0.0703,  0.0899, -0.0316,  0.0591,  0.1090,  0.1024,
         0.1157, -0.1129,  0.0313, -0.0341, -0.0630,  0.0269, -0.0783,  0.0498,
        -0.1152,  0.0540, -0.1142, -0.0113, -0.1176,  0.0217, -0.0057, -0.0094,
         0.0549, -0.0603, -0.0682,  0.0054, -0.0621, -0.0321,  0.0180,  0.0998,
        -0.0978,  0.0664,  0.0850, -0.0424,  0.0513, -0.0632,  0.0755,  0.0577,
         0.0159,  0.0930, -0.0421,  0.1031, -0.0252, -0.0990,  0.0180,  0.1203,
        -0.0562,  0.0491, -0.0111, -0.0282, -0.0183,  0.0055,  0.0166, -0.0926,
        -0.1171, -0.0756, -0.1243, -0.1249, -0.0445,  0.0219, -0.0025,  0.0595,
         0.0795,  0.1185,  0.0156,  0.0267, -0.0662, -0.0612,  0.0370, -0.0562,
         0.0142, -0.0423, -0.0952,  0.0586,  0.0929, -0.1239,  0.0395, -0.1183,
         0.0977,  0.0950,  0.0152, -0.0850, -0.0843, -0.0609,  0.0665, -0.0565,
        -0.0789, -0.0399,  0.0139, -0.0432, -0.0021,  0.0943, -0.0237, -0.0842,
         0.0897, -0.1084, -0.1164, -0.1117, -0.0071,  0.0122,  0.1152,  0.0611,
         0.0609, -0.1181,  0.0207,  0.0115, -0.0991, -0.0778,  0.0139,  0.1063,
         0.0311, -0.0181,  0.0111,  0.0727, -0.0466,  0.0367,  0.0340,  0.0929])
tensor([ 0.1164,  0.0213, -0.0183, -0.0277, -0.0693,  0.1145,  0.0706, -0.0821,
        -0.1135,  0.0059, -0.0519,  0.0579, -0.0390,  0.0555,  0.1054,  0.1035,
         0.1082, -0.1138,  0.0241, -0.0477, -0.0743,  0.0368, -0.0204,  0.0404,
        -0.1152,  0.0431, -0.0839, -0.0211, -0.1362,  0.0185, -0.0107,  0.0059,
         0.0499, -0.0650, -0.0643,  0.0014, -0.0612, -0.0367,  0.0217,  0.0958,
        -0.0975,  0.0556,  0.0916, -0.0464,  0.0474, -0.0640,  0.0704,  0.0520,
         0.0153,  0.0917, -0.0484,  0.1061, -0.0348, -0.1005,  0.0150,  0.1185,
        -0.0606,  0.0507, -0.0312, -0.0260, -0.0230, -0.0091,  0.0164, -0.0867,
        -0.1204, -0.0670, -0.1366, -0.1166, -0.0511,  0.0503, -0.0061,  0.0575,
         0.0702,  0.1130,  0.0231,  0.0287, -0.0674, -0.0671,  0.0264, -0.0575,
         0.0055, -0.0537, -0.0945,  0.0523,  0.0845, -0.1328,  0.0350, -0.0953,
         0.0908,  0.0995, -0.0224, -0.0805, -0.0850, -0.0595,  0.0679,  0.0555,
        -0.0583, -0.0416, -0.0014, -0.0377, -0.0211,  0.0908, -0.0220, -0.0423,
         0.1350, -0.1086, -0.1143, -0.1329, -0.0103,  0.0082,  0.1310,  0.0487,
         0.0922, -0.1134,  0.0047,  0.0168, -0.0937, -0.0594,  0.0136,  0.1034,
         0.0211, -0.0212,  0.0108,  0.0515, -0.0256,  0.0346,  0.0329,  0.0959])
##########################################################
cross_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([ 0.0973,  0.0466,  0.0862,  0.0712, -0.0960, -0.0397,  0.0381, -0.0016,
         0.0563, -0.0991,  0.0803, -0.0423, -0.0059, -0.0204,  0.0791, -0.0992,
         0.0562,  0.0434,  0.0528,  0.0496, -0.0581, -0.0155, -0.0412,  0.0652,
         0.0843, -0.0294, -0.0139, -0.0193, -0.0871,  0.0163,  0.0591,  0.1235,
         0.0588,  0.0254,  0.0408,  0.0183, -0.0044,  0.0577,  0.0520,  0.0541,
         0.0260,  0.0173,  0.0604,  0.0114,  0.0143, -0.0299,  0.0281, -0.0604,
        -0.0502, -0.0844,  0.0475, -0.0531,  0.0333, -0.0348,  0.0661,  0.0451,
        -0.1196,  0.0170, -0.0245, -0.0084, -0.0705,  0.0018,  0.0189,  0.0201,
        -0.0422,  0.0832,  0.0557,  0.0409,  0.0522,  0.0187,  0.0452, -0.0317,
         0.0028,  0.1109,  0.1396,  0.0794,  0.0355,  0.0462, -0.0504, -0.0265,
         0.0372,  0.1025,  0.0445, -0.0602, -0.0935, -0.0351,  0.1228,  0.0444,
         0.0560, -0.0701,  0.0144, -0.0013,  0.0559,  0.0631, -0.0200,  0.0678,
         0.0822, -0.0615,  0.1176,  0.0693,  0.0326, -0.0771,  0.0405, -0.0169,
        -0.0684, -0.0598,  0.0438, -0.0066,  0.0702, -0.0188, -0.0125,  0.0121,
        -0.0227, -0.0799, -0.0859,  0.0944, -0.0677, -0.0356, -0.0961,  0.0431,
        -0.0228,  0.0029,  0.0049, -0.0721, -0.0224,  0.1423,  0.1624, -0.0242])
tensor([ 0.1008,  0.0422,  0.0870,  0.0287, -0.0883, -0.0384,  0.0409,  0.0006,
         0.0268, -0.1041,  0.0932, -0.0381,  0.0004, -0.0207,  0.0791, -0.0970,
         0.0554,  0.0443,  0.0575,  0.0504, -0.1592, -0.0134, -0.0927,  0.0646,
         0.0810, -0.0035,  0.0027, -0.0179, -0.0933,  0.0162,  0.0545,  0.0614,
         0.0602,  0.0181,  0.0405,  0.0183, -0.0042,  0.0583,  0.0430,  0.0248,
         0.0261,  0.0189,  0.0600,  0.0116,  0.0154, -0.0321,  0.0067, -0.0593,
        -0.0507, -0.0787,  0.0489, -0.0574,  0.0339, -0.0351,  0.0665,  0.0432,
        -0.1166,  0.0115, -0.0261, -0.0094, -0.0677, -0.0140,  0.0096,  0.0187,
        -0.0439,  0.0803, -0.0120,  0.0413,  0.0582, -0.0087,  0.0477, -0.0431,
         0.0066,  0.1062,  0.3387,  0.0127,  0.0261,  0.0469, -0.0442, -0.0249,
         0.0399,  0.1022,  0.0387, -0.0602, -0.1006, -0.0252,  0.1145,  0.0669,
         0.0571, -0.0660,  0.0132, -0.0030,  0.0558,  0.0629, -0.0162,  0.2446,
         0.0632, -0.0608,  0.1100,  0.0312,  0.0382, -0.0757,  0.0271, -0.0353,
         0.0390, -0.0595,  0.0432, -0.0090,  0.0717, -0.0151, -0.0161,  0.0142,
        -0.0257, -0.0794, -0.0934,  0.0876, -0.0679, -0.0360, -0.0927,  0.0414,
        -0.0214,  0.0074,  0.0070, -0.0864, -0.0217,  0.1428,  0.1467, -0.0192])
##########################################################
cross_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-8.9811e-03,  1.4688e-02, -7.0442e-03, -7.4267e-04,  6.8633e-03,
        -6.3334e-03, -1.1925e-02,  5.0312e-05, -8.8325e-03, -2.8222e-02,
         2.5957e-02, -4.2640e-02, -1.4675e-02, -8.6866e-03, -4.8961e-03,
        -2.6716e-03, -6.3569e-03, -7.2259e-03, -1.6913e-02, -2.0232e-02,
        -1.3018e-02,  1.1655e-02,  6.5121e-02, -1.1301e-02,  2.1656e-03,
        -1.7680e-02,  3.8828e-02, -8.9306e-03, -3.1602e-02,  1.0123e-03,
        -1.1549e-02,  1.3811e-02, -7.6113e-03, -9.9491e-03,  7.4798e-03,
        -5.2424e-03, -2.9873e-03, -3.0568e-03,  3.2901e-03, -4.4318e-03,
        -2.1230e-03, -1.1277e-02,  6.2047e-03, -2.1538e-03, -5.4228e-03,
         1.4138e-03, -1.8305e-03, -8.2302e-03, -4.3789e-03, -5.5921e-03,
        -3.8611e-03,  2.6692e-03, -8.0162e-03,  7.6925e-04, -2.3227e-03,
        -3.8816e-03, -1.2367e-02,  2.5759e-04, -2.0661e-02,  3.0638e-03,
        -6.9818e-03, -1.9341e-02,  3.4008e-03,  5.5420e-03,  7.2398e-04,
         1.6556e-03, -2.2341e-02,  9.3518e-03, -1.6035e-02,  3.6808e-02,
        -8.7488e-03, -3.9759e-03, -1.1575e-02, -3.5706e-05,  1.0834e-02,
         1.3216e-03, -2.0590e-03, -7.7341e-03, -1.3998e-02, -7.2293e-03,
        -1.2694e-02, -1.9406e-02,  8.8080e-04, -1.0342e-02,  4.5922e-04,
        -1.4039e-02, -1.7135e-03,  2.5733e-02, -9.4031e-03,  2.8024e-03,
        -4.2904e-02,  4.3249e-03,  1.1009e-03,  2.6880e-04, -1.0242e-03,
         1.5368e-01,  2.2783e-02, -1.7143e-03, -2.0602e-02,  5.7527e-03,
        -2.5977e-02, -2.3204e-03,  4.0013e-03,  4.7601e-02,  6.7323e-02,
        -9.1420e-03,  6.2390e-03, -3.7708e-02, -5.5325e-03, -1.6072e-03,
         1.9708e-02, -1.3683e-02,  4.8467e-02,  2.6885e-03, -2.1285e-02,
         1.4899e-03,  8.0579e-03,  1.2496e-02, -2.5141e-03, -6.4545e-03,
        -1.0702e-02, -8.2523e-03, -6.4231e-03, -2.3054e-02,  2.5656e-02,
        -1.3644e-03, -2.4070e-03,  4.8916e-03])
##########################################################
cross_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([ 0.0098,  0.0303, -0.0941,  0.1208, -0.0211, -0.0029,  0.0724, -0.0854,
         0.1197,  0.0230,  0.0217, -0.0945,  0.0149, -0.0071, -0.0196,  0.0325,
         0.0444,  0.0087,  0.0394, -0.0503, -0.0731,  0.0884,  0.0898, -0.0275,
         0.0074,  0.1351, -0.0793,  0.0998,  0.0417,  0.0092,  0.0284,  0.1823,
        -0.1056,  0.0650,  0.0191, -0.0417,  0.0463,  0.0167, -0.0881,  0.0130,
         0.0123, -0.0393, -0.0243, -0.0333,  0.0102,  0.0352, -0.0382, -0.0119,
         0.0079,  0.0318, -0.0384,  0.0306, -0.0177, -0.0234, -0.0029, -0.0696,
        -0.0146, -0.0630,  0.0420, -0.0382,  0.0257,  0.0361,  0.0615,  0.0402,
         0.0045,  0.0784, -0.1433,  0.0465,  0.0050, -0.1115,  0.0039, -0.0352,
         0.0144,  0.0829,  0.1445,  0.0518, -0.0242, -0.0431,  0.0771, -0.0023,
        -0.0149, -0.0595, -0.0839,  0.0244,  0.0049,  0.0624,  0.0026,  0.0941,
        -0.0091,  0.0710, -0.0758, -0.0122, -0.0055, -0.0031, -0.0455,  0.1702,
        -0.1107, -0.0163, -0.1142, -0.1163,  0.0859, -0.0235, -0.0268,  0.0981,
        -0.1545, -0.0326, -0.0777,  0.0903,  0.0022,  0.0032,  0.0285, -0.0410,
        -0.1017, -0.0532,  0.0289,  0.1171, -0.0078,  0.1414,  0.0663, -0.0080,
        -0.0172, -0.1096, -0.0093, -0.1366,  0.0658,  0.0065,  0.0960,  0.0300])
tensor([ 0.0280,  0.0376, -0.0876,  0.0888,  0.0362,  0.0025,  0.0613, -0.0841,
         0.1030,  0.0083, -0.0991, -0.0504,  0.0298, -0.0092, -0.0200,  0.0722,
         0.0368, -0.0087,  0.0374, -0.0603, -0.1946,  0.0880,  0.0859, -0.0268,
         0.0287,  0.1157, -0.0416,  0.0939,  0.1001,  0.0042,  0.0336,  0.1435,
        -0.1016,  0.0639, -0.0014, -0.0431,  0.0431,  0.0293, -0.0827,  0.0170,
        -0.0110, -0.0348, -0.0589, -0.0331,  0.0099,  0.0370, -0.0187, -0.0031,
         0.0064,  0.0514, -0.0438,  0.0575, -0.0322, -0.0240, -0.0126, -0.0809,
        -0.0125, -0.0668,  0.0516, -0.0323,  0.0112,  0.0286,  0.0573,  0.0230,
        -0.0462,  0.0672, -0.1316,  0.0239,  0.0426, -0.1233,  0.0071, -0.0419,
        -0.0504,  0.0763,  0.2146,  0.0126, -0.0166, -0.0480,  0.0672,  0.0116,
        -0.0139, -0.0511, -0.0805,  0.0161, -0.0447,  0.0752, -0.0228,  0.0846,
         0.0142,  0.0817, -0.0617,  0.0122,  0.0051,  0.0047, -0.0506,  0.3398,
        -0.0733, -0.0135, -0.0930, -0.0873,  0.0899, -0.0158, -0.0245,  0.0585,
        -0.1259, -0.0233, -0.0697,  0.1317,  0.0010,  0.0123,  0.0954, -0.0239,
        -0.1170, -0.0410,  0.0418,  0.1091,  0.0514,  0.1476,  0.0643, -0.0626,
         0.0020, -0.1084, -0.0046, -0.1368,  0.0467,  0.0091,  0.0681,  0.0504])
##########################################################
cross_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.0245e-02,  4.5880e-02, -6.6730e-03, -1.3094e-02, -7.6261e-02,
        -2.7490e-03, -2.2931e-02, -1.3391e-02,  2.2484e-02, -6.7116e-02,
         6.9621e-02,  3.2609e-03, -3.6466e-02,  8.6854e-05, -2.5794e-03,
         2.0811e-02, -1.8470e-02,  1.2663e-02, -1.9181e-03,  1.2881e-02,
        -2.9630e-02,  1.6913e-03,  7.1397e-02,  3.3472e-02, -9.3718e-03,
         6.9692e-03, -5.3938e-02, -3.0353e-03, -4.3108e-02, -1.0857e-02,
        -7.8451e-03, -2.8751e-02,  8.6961e-03,  7.5182e-03,  2.7533e-02,
        -1.6023e-03,  7.0941e-03, -9.2365e-03,  9.0278e-03, -1.6812e-02,
         3.4263e-02,  3.0229e-02, -4.0616e-02,  1.6498e-02,  7.1828e-04,
         1.0582e-02,  3.7731e-03,  2.3093e-02,  1.6523e-02,  1.6793e-02,
         9.8262e-03,  2.5949e-02,  4.6835e-02,  3.4078e-03, -4.7969e-03,
         7.9462e-03,  6.3527e-03,  1.1742e-03, -4.0882e-02, -6.7393e-03,
        -3.9688e-03, -3.6745e-02,  4.5961e-03,  2.3894e-02,  5.3702e-02,
         1.7624e-02, -1.8902e-02,  2.8759e-02, -5.8327e-02, -1.0780e-02,
        -1.4213e-02, -1.5860e-03, -6.8773e-02, -9.7331e-03,  2.2701e-02,
        -3.7677e-02, -4.2718e-03,  5.9679e-03, -5.9676e-03, -4.4411e-02,
         4.7368e-02,  4.7109e-03, -2.1681e-02, -1.2319e-02, -3.0143e-02,
         3.5599e-03, -3.1055e-03,  3.8651e-02,  1.8354e-02, -1.5936e-03,
         4.7693e-02, -1.8707e-02, -3.2328e-03,  1.7141e-03, -1.1333e-02,
         5.1990e-02, -8.8293e-03, -9.9047e-03, -2.4903e-03,  2.9685e-03,
        -9.9577e-03, -1.5365e-04, -1.6827e-02,  4.1253e-02,  4.6695e-03,
        -6.7635e-03, -1.9995e-02, -2.3117e-03, -1.3496e-02, -4.4181e-02,
         6.1634e-02,  3.6692e-02, -3.0785e-02, -9.7545e-03, -3.1635e-02,
         9.3337e-03, -2.4719e-02,  3.7382e-02,  1.4899e-03, -2.9903e-02,
         3.5814e-02, -7.0595e-03, -3.2240e-02,  6.0448e-03,  4.2950e-02,
         8.8064e-03,  3.1637e-02,  6.0077e-03])
##########################################################
linear.weight shape: torch.Size([300, 600])
tensor([[ 0.0011,  0.0205,  0.0139,  ...,  0.0115, -0.0162, -0.0280],
        [-0.0111, -0.0161, -0.0231,  ...,  0.0334,  0.0063,  0.0375],
        [ 0.0288, -0.0003, -0.0241,  ..., -0.0191,  0.0107, -0.0403],
        ...,
        [ 0.0277, -0.0146, -0.0132,  ...,  0.0031,  0.0106, -0.0391],
        [-0.0287, -0.0138, -0.0250,  ..., -0.0045, -0.0038, -0.0078],
        [ 0.0299,  0.0383,  0.0140,  ...,  0.0316,  0.0063, -0.0108]])
tensor([[ 1.7853e-05,  2.0628e-02,  1.1934e-02,  ...,  1.4006e-02,
         -1.2397e-02, -2.4001e-02],
        [-1.3442e-02, -1.5126e-02, -2.4693e-02,  ...,  3.5110e-02,
          9.0650e-03,  4.0112e-02],
        [ 2.6446e-02,  6.4367e-04, -2.4689e-02,  ..., -1.4286e-02,
          1.5846e-02, -3.5746e-02],
        ...,
        [ 2.7872e-02, -1.4645e-02, -1.3083e-02,  ...,  3.1929e-03,
          1.0594e-02, -3.9077e-02],
        [-2.8628e-02, -1.3720e-02, -2.4809e-02,  ..., -4.4983e-03,
         -3.7875e-03, -7.7753e-03],
        [ 2.9962e-02,  3.8316e-02,  1.4106e-02,  ...,  3.1626e-02,
          6.3381e-03, -1.0745e-02]])
##########################################################
linear.bias shape: torch.Size([300])
tensor([ 0.0114,  0.0370, -0.0002,  0.0403,  0.0362,  0.0028,  0.0096, -0.0181,
        -0.0033,  0.0107,  0.0175, -0.0203, -0.0388,  0.0150,  0.0269,  0.0130,
        -0.0375,  0.0085, -0.0037, -0.0341, -0.0314,  0.0196, -0.0209, -0.0371,
         0.0374,  0.0243,  0.0328, -0.0265, -0.0269, -0.0226,  0.0130, -0.0362,
        -0.0120,  0.0027, -0.0140, -0.0160,  0.0194, -0.0026, -0.0073, -0.0213,
        -0.0202, -0.0329,  0.0193, -0.0214,  0.0037, -0.0210, -0.0137,  0.0330,
        -0.0408,  0.0173, -0.0153, -0.0119, -0.0326,  0.0256,  0.0194,  0.0216,
         0.0201, -0.0093,  0.0141, -0.0365, -0.0165,  0.0216,  0.0333,  0.0131,
         0.0144,  0.0267,  0.0025,  0.0051, -0.0253,  0.0318,  0.0311,  0.0358,
        -0.0300, -0.0145,  0.0198,  0.0022, -0.0198, -0.0342,  0.0166, -0.0281,
        -0.0012,  0.0115, -0.0217,  0.0177,  0.0228,  0.0200, -0.0304, -0.0063,
         0.0299,  0.0260,  0.0150, -0.0175, -0.0338, -0.0331, -0.0114, -0.0311,
         0.0222, -0.0289, -0.0043, -0.0182,  0.0291,  0.0408, -0.0066, -0.0249,
         0.0358,  0.0332, -0.0169, -0.0033, -0.0374, -0.0292,  0.0330,  0.0284,
         0.0187, -0.0189,  0.0300,  0.0286,  0.0273, -0.0119, -0.0170, -0.0163,
        -0.0046,  0.0276, -0.0272, -0.0132,  0.0138,  0.0404,  0.0303, -0.0289,
         0.0400,  0.0262, -0.0140,  0.0086,  0.0085, -0.0120,  0.0346, -0.0149,
        -0.0211, -0.0326, -0.0145, -0.0351,  0.0114,  0.0373,  0.0020, -0.0187,
         0.0250, -0.0155, -0.0397,  0.0278,  0.0167, -0.0308, -0.0282,  0.0184,
         0.0372,  0.0024, -0.0357, -0.0255, -0.0065,  0.0074,  0.0231,  0.0097,
         0.0055, -0.0332, -0.0404,  0.0125,  0.0129,  0.0221, -0.0395,  0.0214,
        -0.0389, -0.0206, -0.0193,  0.0134, -0.0186, -0.0343, -0.0405,  0.0392,
         0.0265, -0.0170,  0.0192, -0.0291, -0.0355, -0.0341, -0.0376,  0.0201,
        -0.0281,  0.0003, -0.0320,  0.0306,  0.0126,  0.0399,  0.0073, -0.0082,
        -0.0032, -0.0092,  0.0238, -0.0227, -0.0307, -0.0355, -0.0351, -0.0284,
        -0.0094, -0.0035,  0.0401,  0.0181,  0.0110, -0.0225, -0.0036,  0.0299,
        -0.0363,  0.0339,  0.0106, -0.0287, -0.0005, -0.0160,  0.0204,  0.0268,
        -0.0155,  0.0196,  0.0254, -0.0277,  0.0212, -0.0344, -0.0238, -0.0204,
        -0.0232, -0.0343, -0.0117,  0.0289,  0.0063,  0.0382,  0.0351,  0.0159,
        -0.0349,  0.0305, -0.0254, -0.0076,  0.0027,  0.0153, -0.0037, -0.0361,
         0.0187,  0.0247, -0.0235, -0.0383, -0.0274,  0.0237,  0.0022,  0.0086,
        -0.0060,  0.0104,  0.0289, -0.0193,  0.0243,  0.0136,  0.0103, -0.0232,
        -0.0280,  0.0109, -0.0260, -0.0181,  0.0078,  0.0348,  0.0227, -0.0195,
         0.0088,  0.0254, -0.0088, -0.0312, -0.0370,  0.0057,  0.0331,  0.0353,
        -0.0184,  0.0353,  0.0007,  0.0253, -0.0156, -0.0251, -0.0179, -0.0332,
         0.0254, -0.0335,  0.0304,  0.0289,  0.0112,  0.0005, -0.0006,  0.0287,
        -0.0037,  0.0115,  0.0400,  0.0074, -0.0125, -0.0271, -0.0215, -0.0058,
        -0.0116,  0.0100, -0.0366, -0.0127])
tensor([ 0.0180,  0.0528,  0.0051,  0.0602,  0.0507,  0.0262,  0.0297, -0.0199,
        -0.0029,  0.0275,  0.0358, -0.0233, -0.0409,  0.0309,  0.0467,  0.0143,
        -0.0412,  0.0146, -0.0092, -0.0381, -0.0357,  0.0233, -0.0263, -0.0341,
         0.0381,  0.0236,  0.0359, -0.0266, -0.0300, -0.0348,  0.0138, -0.0320,
        -0.0141, -0.0029, -0.0214, -0.0194,  0.0204, -0.0056, -0.0090, -0.0252,
        -0.0246, -0.0301,  0.0152, -0.0256,  0.0016, -0.0178, -0.0155,  0.0324,
        -0.0415,  0.0048, -0.0104, -0.0194, -0.0347,  0.0264,  0.0215,  0.0181,
         0.0165, -0.0048,  0.0109, -0.0287, -0.0166,  0.0187,  0.0246,  0.0062,
         0.0129,  0.0196,  0.0035,  0.0049, -0.0279,  0.0261,  0.0371,  0.0309,
        -0.0284, -0.0129,  0.0212, -0.0056, -0.0195, -0.0347,  0.0126, -0.0293,
        -0.0026,  0.0050, -0.0210,  0.0169,  0.0167,  0.0145, -0.0300, -0.0063,
         0.0265,  0.0165,  0.0103, -0.0133, -0.0321, -0.0327, -0.0142, -0.0337,
         0.0181, -0.0231, -0.0041, -0.0149,  0.0263,  0.0369, -0.0081, -0.0188,
         0.0253,  0.0299, -0.0166, -0.0016, -0.0364, -0.0278,  0.0297,  0.0251,
         0.0181, -0.0154,  0.0209,  0.0254,  0.0238, -0.0106, -0.0172, -0.0153,
        -0.0064,  0.0249, -0.0242, -0.0137,  0.0083,  0.0361,  0.0255, -0.0318,
         0.0363,  0.0173, -0.0112,  0.0056,  0.0064, -0.0080,  0.0279, -0.0125,
        -0.0185, -0.0302, -0.0129, -0.0334,  0.0047,  0.0344,  0.0019, -0.0227,
         0.0237, -0.0143, -0.0375,  0.0277,  0.0172, -0.0326, -0.0275,  0.0165,
         0.0358,  0.0007, -0.0342, -0.0229, -0.0053,  0.0055,  0.0208,  0.0091,
         0.0045, -0.0317, -0.0388,  0.0091,  0.0074,  0.0199, -0.0376,  0.0159,
        -0.0394, -0.0192, -0.0178,  0.0122, -0.0200, -0.0329, -0.0405,  0.0370,
         0.0261, -0.0154,  0.0181, -0.0318, -0.0334, -0.0331, -0.0379,  0.0194,
        -0.0270,  0.0007, -0.0331,  0.0304,  0.0095,  0.0387,  0.0083, -0.0069,
        -0.0066, -0.0087,  0.0238, -0.0219, -0.0302, -0.0351, -0.0347, -0.0295,
        -0.0117, -0.0053,  0.0402,  0.0192,  0.0088, -0.0225, -0.0036,  0.0303,
        -0.0374,  0.0338,  0.0103, -0.0299, -0.0036, -0.0148,  0.0213,  0.0257,
        -0.0151,  0.0167,  0.0255, -0.0274,  0.0207, -0.0345, -0.0233, -0.0212,
        -0.0244, -0.0346, -0.0103,  0.0289,  0.0050,  0.0387,  0.0362,  0.0161,
        -0.0351,  0.0302, -0.0273, -0.0087,  0.0035,  0.0163, -0.0052, -0.0364,
         0.0175,  0.0238, -0.0232, -0.0392, -0.0282,  0.0224,  0.0013,  0.0083,
        -0.0056,  0.0098,  0.0295, -0.0213,  0.0230,  0.0142,  0.0103, -0.0228,
        -0.0289,  0.0119, -0.0262, -0.0175,  0.0080,  0.0352,  0.0217, -0.0187,
         0.0087,  0.0246, -0.0104, -0.0309, -0.0380,  0.0048,  0.0335,  0.0353,
        -0.0180,  0.0350,  0.0006,  0.0251, -0.0159, -0.0255, -0.0179, -0.0333,
         0.0251, -0.0338,  0.0302,  0.0286,  0.0108,  0.0003, -0.0004,  0.0284,
        -0.0039,  0.0113,  0.0397,  0.0073, -0.0124, -0.0270, -0.0217, -0.0059,
        -0.0117,  0.0100, -0.0368, -0.0130])
##########################################################
addnorm.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.0001, 0.9979, 0.9995, 0.9997, 0.9980, 0.9986, 0.9991, 1.0007, 1.0010,
        0.9988, 0.9957, 1.0024, 1.0009, 1.0002, 0.9999, 1.0009, 1.0010, 1.0008,
        1.0005, 1.0001, 1.0527, 0.9995, 1.0002, 1.0011, 0.9993, 0.9987, 0.9975,
        0.9999, 0.9941, 0.9999, 1.0019, 1.0036, 1.0009, 1.0002, 0.9997, 0.9995,
        1.0000, 1.0003, 1.0004, 1.0220, 1.0004, 1.0002, 1.0011, 0.9994, 1.0001,
        1.0005, 1.0061, 1.0003, 0.9989, 0.9982, 0.9990, 0.9996, 0.9997, 1.0001,
        0.9994, 1.0011, 1.0000, 1.0011, 1.0005, 1.0000, 1.0011, 1.0006, 1.0007,
        1.0000, 1.0007, 0.9991, 0.9953, 0.9996, 1.0004, 1.0007, 1.0001, 1.0038,
        0.9999, 1.0007, 0.9739, 1.0351, 1.0005, 0.9997, 1.0004, 1.0003, 1.0006,
        0.9987, 0.9999, 0.9994, 1.0005, 1.0019, 0.9993, 1.0019, 0.9991, 0.9998,
        0.9989, 0.9991, 1.0010, 0.9991, 0.9999, 1.1367, 0.9969, 1.0006, 0.9978,
        0.9992, 1.0006, 1.0002, 1.0045, 0.9958, 0.9632, 0.9996, 1.0001, 1.0017,
        0.9998, 0.9985, 1.0017, 1.0003, 1.0020, 0.9997, 1.0008, 0.9991, 0.9983,
        1.0039, 1.0000, 0.9987, 0.9987, 0.9992, 1.0003, 1.0012, 0.9996, 1.0005,
        1.0046, 0.9987])
##########################################################
addnorm.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-2.7646e-03, -7.1208e-04, -2.8620e-03, -3.9397e-03, -4.9594e-03,
        -1.2744e-03, -2.8612e-03, -1.7080e-03,  5.5133e-03, -2.3991e-03,
         2.4859e-03, -2.8950e-03, -2.8127e-03, -1.2332e-04,  9.0571e-04,
         7.3522e-04, -2.9498e-03,  5.0124e-04,  8.8108e-04, -5.5422e-04,
        -7.6871e-03, -2.1957e-03,  4.8275e-03,  3.1300e-03,  1.1996e-03,
         1.9204e-03, -5.0001e-03,  3.9889e-04, -6.5987e-04, -3.9308e-04,
        -2.0382e-03, -8.4264e-03,  1.6811e-04,  3.1455e-03,  2.2053e-03,
         8.4165e-06,  7.9595e-04,  1.7670e-03,  2.2652e-03, -3.3157e-03,
         1.8364e-03,  4.1764e-03, -2.6988e-03,  3.9860e-03, -1.5282e-04,
         2.5899e-03,  2.9464e-03,  2.0131e-03,  4.6278e-04, -2.1023e-03,
         9.9493e-04,  1.7609e-03,  3.2866e-03, -1.5765e-04, -1.4393e-04,
         3.5398e-03,  1.0788e-03,  1.6312e-03, -3.8889e-03, -5.0651e-04,
         2.1291e-03, -1.8639e-03,  1.1355e-03,  3.3222e-04,  2.0936e-03,
         1.5548e-03, -7.7403e-03,  2.0109e-03, -4.1619e-03,  2.2087e-03,
         8.0165e-04,  1.4331e-03, -4.5210e-03, -2.7564e-03,  2.2928e-02,
        -8.0624e-03, -2.8690e-04, -7.9247e-04, -7.5999e-04, -2.9575e-03,
         3.4427e-03, -1.9827e-03, -5.7534e-03, -5.8406e-04, -1.5717e-03,
         3.2205e-03,  4.5387e-04,  3.5283e-03,  1.8282e-03, -3.5765e-03,
         2.8323e-03,  6.2071e-04, -1.1286e-03,  2.6976e-03, -2.1251e-04,
        -3.7156e-03,  1.2566e-03, -1.8335e-03, -3.1340e-03,  3.0798e-03,
         8.5455e-04, -6.7403e-04, -4.1320e-04,  2.3640e-03,  1.2786e-02,
        -1.2316e-03, -5.2037e-03,  5.3843e-03, -1.7347e-04, -2.3570e-03,
         2.8995e-03,  2.9521e-03, -1.4671e-03, -7.7269e-04,  9.8963e-04,
         4.3832e-04,  1.5200e-03,  4.5417e-03, -3.4883e-04,  9.4660e-05,
         1.0382e-03, -1.8772e-03, -3.0790e-03, -3.8585e-04,  3.2192e-03,
        -1.8335e-03,  5.1538e-03, -2.1575e-03])
##########################################################
decoder.embedding.weight shape: torch.Size([287, 128])
tensor([[ 0.9874,  1.2941,  0.9143,  ...,  0.4894, -0.3203,  0.3934],
        [-0.5261,  2.1522,  0.7848,  ..., -0.9731, -1.0407,  0.4749],
        [ 0.4337,  1.2056, -0.5450,  ...,  0.0390,  1.5873, -0.4872],
        ...,
        [ 0.0962,  1.3969,  1.0249,  ...,  1.0251,  1.7431, -1.0641],
        [ 1.1256, -0.0460, -0.9004,  ...,  1.8042, -0.5991,  0.6124],
        [-0.0832,  0.6061, -0.5140,  ..., -0.0373,  1.4086, -0.4230]])
tensor([[ 0.9874,  1.2941,  0.9143,  ...,  0.4894, -0.3203,  0.3934],
        [-0.5261,  2.1522,  0.7848,  ..., -0.9731, -1.0407,  0.4749],
        [ 0.4272,  1.2082, -0.5321,  ...,  0.0490,  1.5859, -0.4650],
        ...,
        [ 0.0962,  1.3969,  1.0249,  ...,  1.0251,  1.7431, -1.0641],
        [ 1.1256, -0.0460, -0.9004,  ...,  1.8042, -0.5991,  0.6124],
        [-0.0832,  0.6061, -0.5140,  ..., -0.0373,  1.4086, -0.4230]])
##########################################################
decoder.blks.block0.attention1.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0823, -0.0444, -0.0790,  ..., -0.0015,  0.0103,  0.0374],
        [-0.0422,  0.0088,  0.0522,  ...,  0.1850, -0.1152, -0.0543],
        [ 0.0553, -0.0473, -0.1306,  ...,  0.0482,  0.0615,  0.0288],
        ...,
        [-0.0533,  0.1800, -0.0498,  ...,  0.0564, -0.0152, -0.0822],
        [-0.0195, -0.0220,  0.1572,  ..., -0.0108, -0.1329, -0.1517],
        [-0.0273, -0.0458, -0.0618,  ...,  0.0562,  0.0658, -0.1200]])
tensor([[-0.1288, -0.0294, -0.1056,  ...,  0.0065,  0.0292,  0.0556],
        [-0.0046, -0.0412,  0.0738,  ...,  0.2116, -0.1817, -0.0649],
        [ 0.0465, -0.0877, -0.1275,  ...,  0.0428,  0.0646,  0.0134],
        ...,
        [-0.0344,  0.2059, -0.0565,  ...,  0.0822,  0.0033, -0.0848],
        [ 0.0267, -0.0328,  0.1331,  ..., -0.0399, -0.1397, -0.1513],
        [-0.0118, -0.0325, -0.0592,  ...,  0.1187,  0.0518, -0.1796]])
##########################################################
decoder.blks.block0.attention1.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.0718,  0.0197,  0.1876,  ..., -0.0363,  0.1341, -0.0432],
        [-0.1021,  0.0625, -0.1095,  ...,  0.1458,  0.1238,  0.0581],
        [-0.0686,  0.0634, -0.1654,  ...,  0.0183,  0.0870,  0.1473],
        ...,
        [-0.1056,  0.0184, -0.0286,  ..., -0.0647,  0.0921, -0.1686],
        [ 0.0447,  0.0776, -0.0984,  ...,  0.0834, -0.1908,  0.0891],
        [ 0.0211, -0.0433, -0.0795,  ..., -0.0243,  0.0343,  0.2260]])
tensor([[-0.0828, -0.0085,  0.1900,  ..., -0.0416,  0.1349, -0.0684],
        [-0.0982,  0.0978, -0.0999,  ...,  0.1253,  0.0890,  0.0778],
        [-0.0706,  0.0761, -0.1491,  ...,  0.0291,  0.0596,  0.1668],
        ...,
        [-0.1322,  0.0044, -0.0109,  ..., -0.0446,  0.0790, -0.2054],
        [ 0.0360,  0.0597, -0.0951,  ...,  0.0942, -0.2020,  0.0989],
        [ 0.0149, -0.0583, -0.0908,  ..., -0.0408,  0.0240,  0.2100]])
##########################################################
decoder.blks.block0.attention1.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0225,  0.0144, -0.0118,  ..., -0.0076,  0.0604,  0.0111],
        [ 0.0085,  0.0191,  0.0738,  ..., -0.0230, -0.0244,  0.0510],
        [ 0.0001, -0.0216, -0.0324,  ...,  0.0678,  0.0192, -0.0301],
        ...,
        [ 0.0084, -0.0133, -0.0078,  ...,  0.0220,  0.0510, -0.0138],
        [-0.0139,  0.0294,  0.0246,  ..., -0.0649,  0.0309, -0.0276],
        [ 0.0256,  0.0309,  0.0077,  ..., -0.0144, -0.0114,  0.0407]])
tensor([[-0.0001,  0.0149, -0.0181,  ..., -0.0241,  0.0653,  0.0145],
        [ 0.0057,  0.0378,  0.0712,  ..., -0.0571, -0.0319,  0.0679],
        [-0.0320, -0.0347, -0.0371,  ...,  0.1053,  0.0048, -0.0362],
        ...,
        [ 0.0330, -0.0270, -0.0274,  ...,  0.0252,  0.0484, -0.0181],
        [-0.0195,  0.0370,  0.0309,  ..., -0.0653,  0.0127, -0.0312],
        [ 0.0278,  0.0375, -0.0007,  ..., -0.0135, -0.0071,  0.0511]])
##########################################################
decoder.blks.block0.attention1.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0438, -0.0163,  0.0202,  ...,  0.0324,  0.0383,  0.0109],
        [ 0.0127, -0.0514,  0.0026,  ..., -0.0158, -0.0006, -0.0163],
        [ 0.0054, -0.0039,  0.0254,  ..., -0.0475,  0.0319, -0.0064],
        ...,
        [ 0.0085, -0.0505,  0.0188,  ...,  0.0300, -0.0015,  0.0161],
        [-0.0295,  0.0351, -0.0309,  ...,  0.0183, -0.0627, -0.0013],
        [ 0.0317, -0.0530,  0.0006,  ...,  0.0056,  0.0381, -0.0223]])
tensor([[ 3.6315e-02, -1.6483e-02,  1.9312e-02,  ...,  3.2086e-02,
          3.4166e-02,  1.7544e-02],
        [ 1.1341e-02, -6.3188e-02,  1.0789e-02,  ..., -1.4341e-02,
          1.1302e-02, -1.7557e-02],
        [ 8.4161e-03, -9.8499e-03,  4.9661e-02,  ..., -2.4841e-02,
          5.1980e-02, -9.3078e-03],
        ...,
        [ 2.0249e-02, -4.7594e-02,  1.1417e-02,  ...,  6.2354e-02,
          1.3635e-02,  3.2192e-02],
        [-2.6784e-02,  4.1062e-02, -3.0197e-02,  ...,  3.4000e-02,
         -6.0602e-02,  4.3559e-05],
        [ 2.4413e-02, -4.3694e-02,  1.6376e-03,  ...,  1.9760e-02,
          4.2307e-02, -1.2300e-02]])
##########################################################
decoder.blks.block0.addnorm1.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.0215, 0.9970, 0.9959, 1.0106, 0.9985, 0.9822, 0.9918, 1.0352, 0.9837,
        0.9871, 1.0741, 1.0432, 0.9821, 0.9620, 0.9608, 0.9826, 0.9323, 0.9618,
        1.0695, 1.0050, 1.0713, 1.0131, 0.9917, 0.9342, 1.0018, 1.0317, 1.0020,
        0.9984, 0.9808, 1.0064, 0.9653, 0.9892, 1.0410, 0.9835, 0.9976, 1.0149,
        0.9737, 0.9701, 1.0465, 1.0640, 0.9968, 1.0428, 1.0314, 0.9859, 1.0025,
        1.0179, 0.9743, 1.0138, 0.9898, 1.0590, 0.9540, 0.9801, 0.9966, 0.9930,
        0.9761, 1.0180, 0.9785, 1.0709, 1.0324, 0.9688, 1.0503, 0.9764, 1.0314,
        1.0208, 0.9626, 0.9592, 0.9993, 0.9855, 0.9799, 1.0716, 0.9975, 0.9807,
        1.0471, 0.9743, 1.0131, 0.9800, 0.9973, 0.9885, 0.9336, 0.9529, 1.0088,
        0.9522, 0.9772, 0.9781, 1.0404, 0.9551, 0.9334, 1.0083, 1.0100, 0.9592,
        0.9739, 0.9851, 1.0330, 0.9580, 1.0128, 0.9931, 1.0316, 1.0200, 1.0011,
        1.0273, 0.9907, 1.0058, 0.9560, 0.9894, 1.0406, 0.9848, 0.9694, 0.9851,
        1.0091, 1.0047, 0.9970, 0.9633, 0.9418, 1.0103, 0.9958, 1.0195, 1.0087,
        1.0145, 1.0303, 1.0577, 1.0126, 0.9743, 0.9972, 0.9888, 0.9837, 1.0085,
        1.0036, 1.0091])
##########################################################
decoder.blks.block0.addnorm1.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0865,  0.0617,  0.0245,  0.0665, -0.0107, -0.0073, -0.0023, -0.0765,
         0.0014, -0.0352,  0.0224, -0.0311, -0.0572, -0.0322, -0.0137, -0.0970,
         0.0414, -0.1086,  0.0143,  0.0462,  0.0333,  0.0678, -0.0087, -0.0592,
        -0.0603,  0.0544, -0.0074, -0.0621, -0.0105, -0.0144, -0.0370, -0.0375,
        -0.0185, -0.0597, -0.0132, -0.0477, -0.0319, -0.0518, -0.1093,  0.0263,
         0.0307, -0.0071, -0.0401,  0.0080,  0.0407,  0.0205,  0.0030, -0.0885,
         0.0177,  0.0080,  0.0731, -0.0173, -0.0164,  0.0114,  0.0245, -0.0550,
        -0.0666,  0.0206,  0.0702,  0.0087, -0.0272,  0.0142,  0.0512, -0.0244,
        -0.0404,  0.0329,  0.0193,  0.0809,  0.0066,  0.1071, -0.0105,  0.0378,
        -0.0389,  0.0270, -0.0085, -0.0799,  0.0045,  0.0190, -0.0057, -0.0447,
         0.0082,  0.0588,  0.0397,  0.0281,  0.0963, -0.0849,  0.0055,  0.1263,
        -0.0150, -0.0823,  0.0433, -0.0229,  0.0224,  0.1252,  0.0159,  0.0364,
        -0.0204, -0.0607, -0.0395,  0.1031,  0.0217, -0.0106,  0.0302,  0.0410,
        -0.0446,  0.0693,  0.0044,  0.0353, -0.0322,  0.0034, -0.0429, -0.0210,
        -0.0262,  0.0271, -0.0056, -0.0046, -0.0076,  0.0511, -0.0267, -0.0304,
        -0.0058, -0.0549, -0.0048, -0.0239, -0.0328,  0.0258,  0.0217,  0.0293])
##########################################################
decoder.blks.block0.attention2.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0824,  0.0200, -0.0355,  ...,  0.0219,  0.2505,  0.0242],
        [ 0.0327, -0.0409, -0.0314,  ...,  0.0223,  0.0577, -0.0871],
        [-0.1211, -0.0555,  0.0308,  ..., -0.0410, -0.1919, -0.0682],
        ...,
        [-0.1197, -0.0613, -0.0257,  ..., -0.0928, -0.0421,  0.0024],
        [-0.1070, -0.1072, -0.1232,  ...,  0.0979,  0.0734, -0.0817],
        [ 0.0891, -0.0325, -0.0083,  ..., -0.0038,  0.0953, -0.0850]])
tensor([[-0.0802,  0.0201, -0.0364,  ...,  0.0221,  0.2488,  0.0225],
        [ 0.0310, -0.0414, -0.0307,  ...,  0.0224,  0.0587, -0.0862],
        [-0.1212, -0.0561,  0.0312,  ..., -0.0414, -0.1920, -0.0677],
        ...,
        [-0.1194, -0.0596, -0.0250,  ..., -0.1000, -0.0408,  0.0047],
        [-0.1053, -0.1088, -0.1239,  ...,  0.1008,  0.0714, -0.0841],
        [ 0.0892, -0.0333, -0.0086,  ..., -0.0003,  0.0942, -0.0855]])
##########################################################
decoder.blks.block0.attention2.W_k.weight shape: torch.Size([128, 128])
tensor([[ 0.0016,  0.0321, -0.0813,  ...,  0.0913, -0.0607, -0.0637],
        [-0.0074,  0.0365, -0.0562,  ...,  0.0832, -0.0115,  0.0366],
        [ 0.1196, -0.0377,  0.0878,  ..., -0.0501, -0.0820, -0.0975],
        ...,
        [-0.0939,  0.0407, -0.0186,  ..., -0.1173,  0.0031,  0.0492],
        [-0.1042, -0.0816,  0.0848,  ..., -0.0400,  0.1501,  0.0877],
        [ 0.0700,  0.0778,  0.0492,  ...,  0.0812, -0.0287,  0.0103]])
tensor([[ 0.0011,  0.0325, -0.0810,  ...,  0.0916, -0.0598, -0.0626],
        [-0.0072,  0.0359, -0.0563,  ...,  0.0828, -0.0123,  0.0359],
        [ 0.1194, -0.0376,  0.0879,  ..., -0.0497, -0.0812, -0.0969],
        ...,
        [-0.0939,  0.0402, -0.0187,  ..., -0.1179,  0.0018,  0.0484],
        [-0.1043, -0.0816,  0.0851,  ..., -0.0398,  0.1507,  0.0886],
        [ 0.0700,  0.0778,  0.0490,  ...,  0.0810, -0.0291,  0.0100]])
##########################################################
decoder.blks.block0.attention2.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0042, -0.0524,  0.0487,  ..., -0.0004,  0.0307,  0.0054],
        [-0.0083, -0.0155,  0.0127,  ..., -0.0118, -0.0131, -0.0615],
        [ 0.0380,  0.0034, -0.0037,  ...,  0.0029, -0.0476, -0.0265],
        ...,
        [-0.0019, -0.0417,  0.0092,  ...,  0.0437,  0.0160,  0.0244],
        [-0.0694, -0.0012,  0.0054,  ..., -0.0415,  0.0610, -0.0300],
        [ 0.0310,  0.0381,  0.0140,  ..., -0.0169, -0.0138, -0.0241]])
tensor([[-0.0029, -0.0518,  0.0526,  ..., -0.0013,  0.0238,  0.0090],
        [-0.0076, -0.0150,  0.0122,  ..., -0.0121, -0.0161, -0.0617],
        [ 0.0363,  0.0041, -0.0084,  ...,  0.0035, -0.0387, -0.0296],
        ...,
        [-0.0035, -0.0434,  0.0098,  ...,  0.0434,  0.0158,  0.0237],
        [-0.0695, -0.0014,  0.0060,  ..., -0.0414,  0.0588, -0.0280],
        [ 0.0317,  0.0372,  0.0175,  ..., -0.0172, -0.0244, -0.0215]])
##########################################################
decoder.blks.block0.attention2.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0628, -0.0306, -0.0046,  ...,  0.0068,  0.0090,  0.0089],
        [ 0.0608,  0.0384,  0.0198,  ..., -0.0362,  0.0110,  0.0118],
        [ 0.0602, -0.0246, -0.0146,  ...,  0.0161, -0.0125, -0.0413],
        ...,
        [ 0.0055,  0.0378,  0.0022,  ...,  0.0337, -0.0458,  0.0311],
        [ 0.0109,  0.0405, -0.0497,  ...,  0.0080, -0.0330, -0.0750],
        [ 0.0200, -0.0590,  0.0221,  ..., -0.0067, -0.0098, -0.0552]])
tensor([[ 0.0589, -0.0189, -0.0014,  ...,  0.0062,  0.0083,  0.0185],
        [ 0.0568,  0.0399,  0.0249,  ..., -0.0328,  0.0067,  0.0111],
        [ 0.0584, -0.0211, -0.0107,  ...,  0.0191, -0.0116, -0.0381],
        ...,
        [ 0.0034,  0.0352,  0.0027,  ...,  0.0332, -0.0610,  0.0322],
        [ 0.0099,  0.0424, -0.0476,  ...,  0.0099, -0.0336, -0.0730],
        [ 0.0130, -0.0526,  0.0278,  ..., -0.0049, -0.0085, -0.0526]])
##########################################################
decoder.blks.block0.addnorm2.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.0341, 0.9956, 0.9978, 1.0104, 1.0016, 0.9673, 0.9858, 1.0397, 0.9805,
        0.9822, 1.0760, 1.0400, 0.9868, 0.9616, 0.9607, 0.9951, 0.9353, 0.9756,
        1.0710, 1.0096, 1.0721, 1.0178, 0.9929, 0.9326, 1.0065, 1.0333, 1.0003,
        0.9975, 0.9834, 1.0098, 0.9587, 1.0002, 1.0352, 0.9910, 0.9966, 1.0160,
        0.9745, 0.9666, 1.0536, 1.0587, 0.9938, 1.0318, 1.0266, 0.9852, 1.0030,
        1.0124, 0.9688, 1.0166, 0.9902, 1.0524, 0.9622, 0.9773, 0.9916, 0.9884,
        0.9751, 1.0251, 0.9827, 1.0646, 1.0299, 0.9661, 1.0521, 0.9721, 1.0313,
        1.0170, 0.9616, 0.9605, 0.9966, 0.9934, 0.9798, 1.0806, 0.9989, 0.9751,
        1.0453, 0.9709, 1.0167, 0.9855, 0.9953, 0.9829, 0.9327, 0.9552, 1.0146,
        0.9679, 0.9771, 0.9779, 1.0506, 0.9615, 0.9342, 1.0202, 1.0071, 0.9633,
        0.9842, 0.9839, 1.0312, 0.9734, 1.0147, 0.9951, 1.0283, 1.0180, 0.9988,
        1.0287, 0.9904, 1.0121, 0.9541, 0.9933, 1.0422, 0.9905, 0.9574, 0.9807,
        1.0033, 1.0053, 1.0025, 0.9629, 0.9339, 1.0100, 0.9859, 1.0177, 1.0089,
        1.0163, 1.0287, 1.0588, 1.0082, 0.9715, 0.9935, 0.9899, 0.9809, 1.0043,
        1.0028, 1.0142])
##########################################################
decoder.blks.block0.addnorm2.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0827,  0.0584,  0.0168,  0.0647, -0.0104, -0.0083, -0.0034, -0.0750,
        -0.0063, -0.0320,  0.0224, -0.0349, -0.0608, -0.0347, -0.0121, -0.0995,
         0.0471, -0.1118,  0.0169,  0.0486,  0.0359,  0.0688, -0.0114, -0.0580,
        -0.0630,  0.0548, -0.0097, -0.0642, -0.0072, -0.0171, -0.0418, -0.0378,
        -0.0195, -0.0547, -0.0114, -0.0465, -0.0332, -0.0522, -0.1069,  0.0280,
         0.0342, -0.0131, -0.0402,  0.0068,  0.0424,  0.0168,  0.0034, -0.0982,
         0.0192,  0.0081,  0.0710, -0.0170, -0.0197,  0.0039,  0.0221, -0.0592,
        -0.0647,  0.0200,  0.0692,  0.0121, -0.0273,  0.0186,  0.0533, -0.0188,
        -0.0410,  0.0322,  0.0183,  0.0855,  0.0051,  0.1105, -0.0087,  0.0378,
        -0.0441,  0.0248, -0.0108, -0.0817,  0.0046,  0.0123, -0.0034, -0.0446,
         0.0030,  0.0620,  0.0397,  0.0247,  0.1018, -0.0855,  0.0072,  0.1282,
        -0.0173, -0.0851,  0.0478, -0.0224,  0.0233,  0.1249,  0.0101,  0.0382,
        -0.0213, -0.0640, -0.0349,  0.1066,  0.0198, -0.0114,  0.0278,  0.0361,
        -0.0419,  0.0724,  0.0087,  0.0355, -0.0348,  0.0075, -0.0438, -0.0192,
        -0.0237,  0.0256,  0.0006, -0.0053, -0.0034,  0.0473, -0.0218, -0.0297,
        -0.0050, -0.0589, -0.0095, -0.0273, -0.0279,  0.0271,  0.0232,  0.0254])
##########################################################
decoder.blks.block0.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[-0.0286,  0.0116, -0.0444,  ..., -0.0025,  0.0436, -0.0129],
        [ 0.0242, -0.0317,  0.0175,  ..., -0.0282,  0.0204, -0.0140],
        [ 0.0257, -0.0411,  0.0584,  ...,  0.0212, -0.0326,  0.0039],
        ...,
        [ 0.0221,  0.0022,  0.0441,  ..., -0.0377, -0.0142,  0.0570],
        [-0.0377, -0.0114,  0.0312,  ...,  0.0476, -0.0641,  0.0494],
        [-0.0225, -0.0089,  0.0436,  ..., -0.0699,  0.1031, -0.0112]])
tensor([[-0.0249, -0.0061, -0.0347,  ...,  0.0032,  0.0453, -0.0139],
        [ 0.0165, -0.0303,  0.0167,  ..., -0.0227,  0.0170, -0.0185],
        [ 0.0241, -0.0357,  0.0646,  ...,  0.0218, -0.0389,  0.0009],
        ...,
        [ 0.0114,  0.0041,  0.0617,  ..., -0.0245, -0.0083,  0.0706],
        [-0.0445, -0.0182,  0.0375,  ...,  0.0510, -0.0673,  0.0421],
        [-0.0176,  0.0109,  0.0470,  ..., -0.0755,  0.0969, -0.0023]])
##########################################################
decoder.blks.block0.ffn.dense1.bias shape: torch.Size([64])
tensor([ 0.0526,  0.0248,  0.0376,  0.0706,  0.0666, -0.0107, -0.0606,  0.0432,
         0.0868,  0.0335, -0.0634,  0.0362,  0.0628,  0.0615, -0.0198, -0.0034,
        -0.0727, -0.0608,  0.0064, -0.0631,  0.0305, -0.0323,  0.0057,  0.0366,
         0.0201,  0.0771,  0.0369,  0.0347, -0.0559,  0.0656,  0.0491,  0.0856,
        -0.0553, -0.0491,  0.0158,  0.0254,  0.0170, -0.0464, -0.0871,  0.0303,
        -0.0032, -0.0272, -0.0574,  0.0040, -0.0868,  0.0688, -0.0870, -0.0847,
         0.0464, -0.0784, -0.0453,  0.0290,  0.0594, -0.0694, -0.0674,  0.0498,
         0.0748, -0.0660, -0.0782,  0.0602, -0.0429,  0.0136, -0.0080,  0.0132])
tensor([ 0.0526,  0.0228,  0.0351,  0.0634,  0.0737, -0.0119, -0.0560,  0.0320,
         0.1082,  0.0404, -0.0401,  0.0430,  0.0576,  0.0481, -0.0144, -0.0027,
        -0.0789, -0.0665,  0.0054, -0.0572,  0.0328, -0.0308,  0.0094,  0.0531,
         0.0195,  0.0718,  0.0344,  0.0385, -0.0549,  0.0560,  0.0559,  0.0850,
        -0.0588, -0.0467,  0.0150,  0.0409,  0.0121, -0.0530, -0.0914,  0.0431,
        -0.0012, -0.0163, -0.0580,  0.0048, -0.0949,  0.0752, -0.1027, -0.0888,
         0.0502, -0.0659, -0.0453,  0.0225,  0.0564, -0.0663, -0.0651,  0.0487,
         0.0778, -0.0604, -0.0765,  0.0600, -0.0438,  0.0117, -0.0049,  0.0234])
##########################################################
decoder.blks.block0.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[ 0.0365, -0.0468,  0.0457,  ...,  0.0631,  0.0526,  0.0666],
        [ 0.0736, -0.0211,  0.0207,  ...,  0.0321,  0.0235,  0.0353],
        [ 0.0323, -0.0404,  0.0501,  ..., -0.0010, -0.0114,  0.0410],
        ...,
        [ 0.0306,  0.0195,  0.0153,  ..., -0.0715, -0.0477,  0.0115],
        [ 0.0269, -0.0112, -0.0050,  ..., -0.0268, -0.0103, -0.0365],
        [-0.0058,  0.0490, -0.0073,  ..., -0.0017, -0.0174,  0.0229]])
tensor([[ 0.0252, -0.0448,  0.0515,  ...,  0.0278,  0.0486,  0.0567],
        [ 0.0799, -0.0209,  0.0234,  ...,  0.0481,  0.0427,  0.0548],
        [ 0.0334, -0.0332,  0.0474,  ...,  0.0038, -0.0020,  0.0456],
        ...,
        [ 0.0367,  0.0182,  0.0048,  ..., -0.0652, -0.0465,  0.0194],
        [ 0.0316, -0.0165,  0.0004,  ..., -0.0133, -0.0040, -0.0301],
        [-0.0032,  0.0543, -0.0048,  ...,  0.0156, -0.0095,  0.0449]])
##########################################################
decoder.blks.block0.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.0794,  0.0021, -0.0828, -0.0739, -0.1086,  0.0596,  0.0404, -0.0436,
        -0.1218,  0.0296, -0.0372,  0.0284, -0.1223, -0.0771,  0.0364, -0.0351,
         0.0351, -0.0845, -0.0620,  0.0861,  0.1046,  0.0379,  0.0862, -0.0508,
        -0.1149, -0.0566, -0.0927, -0.0689, -0.0497, -0.0887, -0.0314, -0.0028,
         0.0372, -0.0013, -0.0179, -0.0171,  0.1055, -0.0861, -0.0936, -0.1078,
         0.0900, -0.0898,  0.0087, -0.1201, -0.0288,  0.0890,  0.1115, -0.0963,
         0.0555,  0.0868,  0.0309,  0.1045,  0.0272, -0.0229, -0.1029,  0.0588,
        -0.0361,  0.0839,  0.0265, -0.0642,  0.0806,  0.1240, -0.0943,  0.1036,
        -0.0158,  0.0959,  0.1229, -0.1162,  0.0623, -0.0986, -0.0557,  0.0083,
         0.1136, -0.0305, -0.0222,  0.0590,  0.0671, -0.0246, -0.0894, -0.0598,
         0.0613, -0.0581, -0.1027,  0.0925,  0.0176, -0.0850,  0.0759, -0.0142,
         0.0796, -0.0878,  0.1183, -0.0447,  0.0602,  0.0582, -0.0698,  0.0691,
         0.0263, -0.0427, -0.1234, -0.0225, -0.0146,  0.0753,  0.0942, -0.0299,
         0.0936,  0.0949,  0.0797, -0.0256,  0.0709,  0.0999,  0.0312,  0.0708,
        -0.1104,  0.0366,  0.1224,  0.1058,  0.0554, -0.1211,  0.0813,  0.0878,
        -0.1211,  0.0588, -0.1247, -0.1023,  0.0666,  0.0759, -0.1214, -0.0990])
tensor([ 0.0933,  0.0178, -0.0764, -0.0446, -0.1108,  0.0458,  0.0404, -0.0768,
        -0.1041,  0.0178, -0.0332,  0.0005, -0.1417, -0.0939,  0.0134, -0.0804,
         0.0528, -0.1362, -0.0574,  0.0922,  0.0945,  0.0624,  0.0785, -0.0548,
        -0.1338, -0.0096, -0.0959, -0.0937, -0.0485, -0.0951, -0.0495, -0.0141,
         0.0291, -0.0253, -0.0334, -0.0344,  0.0788, -0.1042, -0.1327, -0.0948,
         0.0885, -0.0794,  0.0019, -0.1135, -0.0062,  0.0980,  0.1113, -0.1301,
         0.0548,  0.0638,  0.0627,  0.0943,  0.0225, -0.0171, -0.0903,  0.0177,
        -0.0611,  0.0859,  0.0412, -0.0558,  0.0632,  0.1176, -0.0682,  0.0809,
        -0.0333,  0.1176,  0.1267, -0.0737,  0.0596, -0.0390, -0.0533,  0.0207,
         0.0973, -0.0254, -0.0231,  0.0185,  0.0674, -0.0246, -0.0849, -0.0701,
         0.0559, -0.0307, -0.0695,  0.1026,  0.0660, -0.1213,  0.0759,  0.0324,
         0.0757, -0.1041,  0.1356, -0.0594,  0.0630,  0.1057, -0.0563,  0.0853,
         0.0201, -0.0550, -0.1342,  0.0254,  0.0199,  0.0746,  0.1050, -0.0191,
         0.0679,  0.1188,  0.0838, -0.0014,  0.0532,  0.1022,  0.0103,  0.0506,
        -0.1145,  0.0594,  0.1180,  0.0912,  0.0475, -0.0870,  0.0636,  0.0732,
        -0.1106,  0.0397, -0.1192, -0.1045,  0.0552,  0.0766, -0.1008, -0.0716])
##########################################################
decoder.blks.block0.addnorm3.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.0549, 1.0125, 1.0086, 1.0017, 0.9987, 0.9874, 1.0063, 1.0547, 1.0171,
        0.9841, 1.1127, 1.0453, 1.0179, 0.9705, 0.9889, 1.0236, 0.9652, 1.0031,
        1.0924, 1.0200, 1.0970, 1.0056, 1.0145, 0.9476, 1.0267, 1.0427, 1.0027,
        1.0021, 0.9836, 1.0201, 0.9822, 0.9977, 1.0355, 1.0196, 1.0014, 1.0205,
        0.9803, 0.9692, 1.0616, 1.0706, 1.0226, 1.0247, 1.0386, 0.9921, 1.0209,
        1.0115, 0.9914, 1.0339, 1.0094, 1.0836, 0.9805, 0.9811, 1.0069, 0.9974,
        0.9904, 1.0487, 0.9966, 1.0527, 1.0606, 0.9710, 1.0553, 0.9903, 1.0433,
        1.0322, 0.9717, 1.0053, 1.0073, 1.0213, 0.9818, 1.0876, 0.9953, 0.9809,
        1.0550, 1.0065, 1.0265, 1.0023, 1.0149, 0.9938, 0.9398, 0.9616, 1.0109,
        0.9795, 1.0001, 0.9853, 1.0201, 0.9941, 0.9057, 1.0247, 1.0350, 1.0203,
        0.9898, 0.9853, 1.0250, 1.0156, 1.0299, 1.0042, 1.0266, 1.0564, 0.9928,
        1.0507, 1.0037, 1.0230, 0.9777, 1.0169, 1.0450, 0.9994, 0.9683, 0.9946,
        1.0192, 1.0082, 1.0061, 0.9786, 0.9635, 1.0369, 0.9728, 1.0122, 1.0362,
        1.0239, 1.0322, 1.0681, 1.0008, 0.9783, 1.0030, 1.0016, 0.9901, 1.0066,
        1.0103, 1.0195])
##########################################################
decoder.blks.block0.addnorm3.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0879,  0.0594,  0.0219,  0.0753, -0.0140, -0.0139, -0.0002, -0.0748,
         0.0068, -0.0265,  0.0252, -0.0386, -0.0678, -0.0386, -0.0156, -0.0991,
         0.0544, -0.1184,  0.0113,  0.0444,  0.0514,  0.0608, -0.0140, -0.0615,
        -0.0725,  0.0605, -0.0070, -0.0670, -0.0036, -0.0178, -0.0498, -0.0380,
        -0.0224, -0.0582, -0.0112, -0.0558, -0.0343, -0.0554, -0.0896,  0.0231,
         0.0246,  0.0004, -0.0331,  0.0011,  0.0357,  0.0168, -0.0009, -0.1082,
         0.0167,  0.0035,  0.0807, -0.0142, -0.0113, -0.0035,  0.0127, -0.0699,
        -0.0521,  0.0164,  0.0753,  0.0155, -0.0151,  0.0123,  0.0526, -0.0302,
        -0.0449,  0.0547,  0.0147,  0.0995,  0.0065,  0.1144,  0.0022,  0.0393,
        -0.0433,  0.0267, -0.0045, -0.0930,  0.0008,  0.0223, -0.0036, -0.0380,
         0.0144,  0.0659,  0.0468,  0.0355,  0.0972, -0.1000,  0.0172,  0.1325,
        -0.0115, -0.0899,  0.0533, -0.0223,  0.0193,  0.1378,  0.0134,  0.0462,
        -0.0216, -0.0718, -0.0304,  0.1165,  0.0162, -0.0114,  0.0423,  0.0464,
        -0.0377,  0.0683,  0.0041,  0.0371, -0.0307,  0.0058, -0.0474, -0.0184,
        -0.0368,  0.0260, -0.0034, -0.0075,  0.0048,  0.0531, -0.0187, -0.0171,
        -0.0006, -0.0646, -0.0105, -0.0320, -0.0409,  0.0250,  0.0217,  0.0282])
##########################################################
decoder.blks.block1.attention1.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.1546, -0.0728, -0.0216,  ..., -0.2482,  0.0639,  0.0532],
        [ 0.1905,  0.2098,  0.0059,  ...,  0.0294,  0.0698,  0.0757],
        [-0.0264, -0.0102,  0.0005,  ...,  0.0409,  0.1288,  0.0877],
        ...,
        [-0.0341, -0.0805,  0.0857,  ...,  0.0741, -0.0118, -0.1175],
        [-0.0455,  0.1892,  0.0080,  ...,  0.0720,  0.0793, -0.0451],
        [ 0.1506,  0.0058, -0.1486,  ...,  0.0208, -0.0805, -0.0827]])
tensor([[-0.1438, -0.0472, -0.0074,  ..., -0.2407,  0.0636,  0.0552],
        [ 0.1975,  0.1917,  0.0145,  ...,  0.0475,  0.0658,  0.0701],
        [-0.0284, -0.0206,  0.0113,  ...,  0.0431,  0.1265,  0.0871],
        ...,
        [-0.0413, -0.0774,  0.0739,  ...,  0.0710, -0.0097, -0.1136],
        [-0.0466,  0.1935,  0.0056,  ...,  0.0637,  0.0741, -0.0497],
        [ 0.1564,  0.0242, -0.1522,  ...,  0.0470, -0.0772, -0.0831]])
##########################################################
decoder.blks.block1.attention1.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.0948,  0.0138,  0.2811,  ..., -0.1464, -0.0622, -0.0009],
        [ 0.0944,  0.0739,  0.0748,  ...,  0.0527, -0.0646,  0.0401],
        [-0.0844,  0.0715,  0.1054,  ...,  0.0149, -0.0810, -0.1376],
        ...,
        [-0.1053,  0.0436, -0.1302,  ...,  0.0734, -0.0430,  0.0770],
        [-0.0136,  0.1057, -0.0125,  ...,  0.2021,  0.0159, -0.0246],
        [ 0.0498, -0.0769, -0.0046,  ..., -0.1923,  0.1880, -0.0269]])
tensor([[-0.0946,  0.0073,  0.2862,  ..., -0.1477, -0.0619, -0.0157],
        [ 0.0934,  0.0655,  0.0697,  ...,  0.0475, -0.0590,  0.0509],
        [-0.0610,  0.0728,  0.1113,  ...,  0.0048, -0.0821, -0.1306],
        ...,
        [-0.0843,  0.0493, -0.1366,  ...,  0.0653, -0.0406,  0.0636],
        [-0.0206,  0.1062, -0.0134,  ...,  0.2082,  0.0182, -0.0252],
        [ 0.0404, -0.0742,  0.0011,  ..., -0.1861,  0.1914, -0.0229]])
##########################################################
decoder.blks.block1.attention1.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0165,  0.0414,  0.0038,  ...,  0.0744, -0.0487,  0.0283],
        [-0.0338, -0.0180,  0.0476,  ..., -0.0012,  0.0097, -0.0763],
        [ 0.0095, -0.0147,  0.0222,  ...,  0.0384,  0.0483, -0.0016],
        ...,
        [-0.0011, -0.0429, -0.0242,  ..., -0.0570,  0.0457,  0.0281],
        [ 0.0065,  0.0258,  0.0354,  ..., -0.0056, -0.0035, -0.0305],
        [-0.0274,  0.0088,  0.0165,  ...,  0.0118,  0.0196, -0.0043]])
tensor([[-0.0314,  0.0325,  0.0142,  ...,  0.0797, -0.0527,  0.0274],
        [-0.0166,  0.0097,  0.0391,  ...,  0.0084,  0.0066, -0.0757],
        [ 0.0114, -0.0071,  0.0107,  ...,  0.0297,  0.0487,  0.0024],
        ...,
        [ 0.0005, -0.0917, -0.0304,  ..., -0.0902,  0.0507,  0.0175],
        [ 0.0067,  0.0449,  0.0237,  ..., -0.0064, -0.0066, -0.0196],
        [-0.0146,  0.0303,  0.0166,  ...,  0.0278,  0.0374, -0.0111]])
##########################################################
decoder.blks.block1.attention1.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0383, -0.0059,  0.0448,  ..., -0.0012,  0.0695,  0.0813],
        [ 0.0323,  0.0176,  0.0282,  ...,  0.0055, -0.0156, -0.0090],
        [-0.0165,  0.0446,  0.0045,  ..., -0.0122, -0.0112, -0.0306],
        ...,
        [-0.0011,  0.0197,  0.0055,  ..., -0.0229,  0.0002,  0.0327],
        [ 0.0186,  0.0268, -0.0427,  ..., -0.0351,  0.0312,  0.0205],
        [ 0.0009,  0.0088,  0.0034,  ..., -0.0149, -0.0054, -0.0012]])
tensor([[ 0.0442,  0.0094,  0.0435,  ..., -0.0224,  0.0458,  0.0748],
        [ 0.0325,  0.0062,  0.0243,  ...,  0.0614, -0.0167, -0.0165],
        [-0.0329,  0.0402, -0.0019,  ..., -0.0413, -0.0353,  0.0063],
        ...,
        [ 0.0264,  0.0204,  0.0046,  ..., -0.0094,  0.0127,  0.0388],
        [ 0.0216,  0.0260, -0.0469,  ..., -0.0479,  0.0492,  0.0235],
        [-0.0009,  0.0009, -0.0017,  ...,  0.0066, -0.0158, -0.0078]])
##########################################################
decoder.blks.block1.addnorm1.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.0009, 0.9909, 0.9958, 1.0342, 0.9969, 0.9550, 1.0052, 0.9853, 1.0066,
        1.0016, 1.1114, 1.0519, 0.9844, 0.9831, 0.9401, 0.9753, 0.9287, 1.0273,
        1.0660, 1.0332, 1.0237, 1.0054, 0.9964, 0.9825, 1.0400, 1.0630, 0.9946,
        1.0025, 0.9911, 0.9688, 0.9256, 0.9822, 1.0324, 1.0051, 1.0080, 0.9667,
        0.9713, 0.9747, 0.9897, 1.0179, 0.9817, 0.9829, 1.0121, 0.9838, 1.0374,
        0.9541, 0.9942, 1.0493, 1.0240, 1.0671, 1.0150, 1.0335, 1.0148, 1.0062,
        0.9884, 1.0543, 0.9602, 1.0314, 1.0695, 0.9853, 0.9728, 1.0247, 1.0384,
        1.0204, 0.9909, 0.9755, 1.0128, 1.0238, 1.0037, 1.0299, 0.9755, 0.9976,
        1.0458, 1.0064, 0.9580, 1.0235, 0.9596, 1.0060, 0.9390, 0.9918, 0.9660,
        0.9770, 0.9607, 0.9726, 0.9899, 1.0083, 0.8600, 1.0535, 0.9778, 1.0343,
        0.9569, 0.9354, 1.0381, 1.0091, 1.0340, 1.0164, 0.9851, 0.9686, 0.9672,
        1.0492, 1.0242, 1.0284, 0.9776, 1.0017, 0.9705, 0.9881, 0.9713, 1.0222,
        1.0174, 0.9786, 0.9953, 1.0094, 0.9644, 1.0327, 0.9738, 1.0075, 1.0352,
        0.9838, 1.0053, 0.9709, 1.0133, 1.0118, 0.9901, 0.9701, 0.9571, 1.0042,
        0.9958, 1.0165])
##########################################################
decoder.blks.block1.addnorm1.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0990,  0.0331,  0.0139,  0.0694, -0.0065, -0.0328, -0.0112, -0.0593,
         0.0262, -0.0153,  0.0497, -0.0474, -0.0400, -0.0331, -0.0212, -0.0874,
         0.0491, -0.1233,  0.0028,  0.0115,  0.0288,  0.0674, -0.0247, -0.0591,
        -0.0703,  0.0195, -0.0024, -0.0400,  0.0090, -0.0152, -0.0491, -0.0433,
        -0.0196, -0.0585, -0.0100, -0.0544, -0.0366, -0.0423, -0.0799,  0.0225,
         0.0151,  0.0024, -0.0149,  0.0210,  0.0067, -0.0125,  0.0073, -0.0951,
        -0.0020,  0.0105,  0.0853, -0.0021,  0.0102, -0.0075,  0.0271, -0.0488,
        -0.0502,  0.0308,  0.0662,  0.0180, -0.0322,  0.0028,  0.0401, -0.0344,
        -0.0529,  0.0383,  0.0274,  0.0910, -0.0004,  0.1011, -0.0092,  0.0420,
        -0.0395,  0.0372,  0.0018, -0.1045, -0.0129,  0.0031, -0.0032, -0.0483,
         0.0245,  0.0771,  0.0373,  0.0377,  0.1027, -0.0868,  0.0385,  0.1190,
        -0.0217, -0.0745,  0.0586, -0.0217,  0.0291,  0.1280,  0.0100,  0.0434,
        -0.0055, -0.0445, -0.0381,  0.1224,  0.0290, -0.0305,  0.0357,  0.0325,
        -0.0376,  0.0568, -0.0003,  0.0491, -0.0266, -0.0033, -0.0390, -0.0094,
        -0.0329,  0.0482, -0.0067, -0.0030, -0.0007,  0.0403, -0.0272, -0.0376,
        -0.0224, -0.0275, -0.0174, -0.0324, -0.0414,  0.0399,  0.0056,  0.0035])
##########################################################
decoder.blks.block1.attention2.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0501, -0.1180, -0.1457,  ...,  0.0316,  0.0414, -0.0351],
        [ 0.1294,  0.0137,  0.0368,  ...,  0.0198,  0.0994,  0.0737],
        [ 0.0090,  0.1065,  0.0020,  ...,  0.0846,  0.0387,  0.2310],
        ...,
        [ 0.1353, -0.1899,  0.0902,  ..., -0.0105,  0.1238, -0.1403],
        [-0.0242, -0.0313,  0.0058,  ..., -0.2355, -0.0411, -0.0683],
        [-0.0964,  0.0865, -0.0773,  ..., -0.0096, -0.0884,  0.0237]])
tensor([[-0.0497, -0.1197, -0.1462,  ...,  0.0311,  0.0413, -0.0358],
        [ 0.1310,  0.0131,  0.0386,  ...,  0.0200,  0.0996,  0.0736],
        [ 0.0094,  0.1078,  0.0031,  ...,  0.0850,  0.0385,  0.2317],
        ...,
        [ 0.1332, -0.1902,  0.0932,  ..., -0.0105,  0.1236, -0.1379],
        [-0.0391, -0.0295,  0.0148,  ..., -0.2372, -0.0424, -0.0541],
        [-0.0959,  0.0871, -0.0764,  ..., -0.0101, -0.0891,  0.0248]])
##########################################################
decoder.blks.block1.attention2.W_k.weight shape: torch.Size([128, 128])
tensor([[ 0.0839, -0.0748,  0.0347,  ..., -0.0811,  0.0031, -0.1101],
        [-0.0224, -0.1170, -0.0709,  ..., -0.0193, -0.0366, -0.0377],
        [ 0.1252,  0.0416,  0.0410,  ..., -0.0291, -0.0448, -0.2118],
        ...,
        [-0.0156,  0.1602,  0.0022,  ..., -0.0078, -0.2130,  0.0451],
        [-0.0081,  0.0504, -0.0637,  ..., -0.0112, -0.1492,  0.1770],
        [-0.0275,  0.0077, -0.0081,  ..., -0.0063, -0.0314, -0.0183]])
tensor([[ 0.0840, -0.0749,  0.0348,  ..., -0.0815,  0.0026, -0.1107],
        [-0.0229, -0.1166, -0.0705,  ..., -0.0191, -0.0354, -0.0369],
        [ 0.1257,  0.0413,  0.0406,  ..., -0.0294, -0.0460, -0.2132],
        ...,
        [-0.0165,  0.1611,  0.0029,  ..., -0.0071, -0.2102,  0.0474],
        [-0.0079,  0.0506, -0.0636,  ..., -0.0111, -0.1493,  0.1771],
        [-0.0278,  0.0083, -0.0079,  ..., -0.0058, -0.0299, -0.0173]])
##########################################################
decoder.blks.block1.attention2.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0291, -0.0384, -0.0087,  ...,  0.0237, -0.0519,  0.0353],
        [-0.0290,  0.0714,  0.0624,  ...,  0.0122,  0.0216, -0.0325],
        [ 0.0701, -0.0369,  0.0209,  ..., -0.0331,  0.0547, -0.0166],
        ...,
        [-0.0052,  0.0716,  0.0550,  ..., -0.0130, -0.0139,  0.0339],
        [ 0.0054,  0.0481,  0.0224,  ..., -0.0698,  0.0233, -0.0271],
        [-0.0503, -0.0043, -0.0202,  ...,  0.0362,  0.0074, -0.0139]])
tensor([[-0.0275, -0.0371, -0.0062,  ...,  0.0238, -0.0516,  0.0377],
        [-0.0286,  0.0734,  0.0615,  ...,  0.0126,  0.0278, -0.0321],
        [ 0.0695, -0.0360,  0.0183,  ..., -0.0322,  0.0603, -0.0186],
        ...,
        [-0.0027,  0.0701,  0.0585,  ..., -0.0145, -0.0278,  0.0358],
        [ 0.0059,  0.0490,  0.0227,  ..., -0.0691,  0.0318, -0.0271],
        [-0.0497, -0.0030, -0.0214,  ...,  0.0357,  0.0038, -0.0150]])
##########################################################
decoder.blks.block1.attention2.W_o.weight shape: torch.Size([128, 128])
tensor([[-0.0247,  0.0890, -0.0366,  ..., -0.0215, -0.0709, -0.0249],
        [ 0.0090, -0.0561, -0.0473,  ..., -0.0420,  0.0776,  0.0090],
        [-0.0024,  0.0278, -0.0184,  ...,  0.0223, -0.0417, -0.0186],
        ...,
        [-0.0347,  0.0074,  0.0248,  ...,  0.0206, -0.0274,  0.0179],
        [ 0.0491, -0.1008, -0.0191,  ..., -0.0019, -0.0195, -0.0846],
        [-0.0117,  0.0017,  0.0098,  ...,  0.0189, -0.0466, -0.0172]])
tensor([[-3.3911e-02,  8.4359e-02, -4.7032e-02,  ..., -1.9449e-02,
         -7.4655e-02, -2.8194e-02],
        [ 4.3146e-03, -5.9001e-02, -5.2156e-02,  ..., -4.0812e-02,
          6.6411e-02,  9.8724e-03],
        [-9.2323e-06,  3.0657e-02, -1.9910e-02,  ...,  1.5094e-02,
         -3.8299e-02, -3.2024e-02],
        ...,
        [-3.5954e-02,  1.2483e-02,  1.7643e-02,  ...,  1.3020e-02,
         -3.8922e-02,  8.0055e-03],
        [ 5.0097e-02, -9.8023e-02, -1.8771e-02,  ..., -5.7297e-03,
         -1.7858e-02, -8.9008e-02],
        [-1.5037e-02,  9.3652e-03,  1.0036e-02,  ...,  9.8327e-03,
         -4.5895e-02, -2.7453e-02]])
##########################################################
decoder.blks.block1.addnorm2.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.0040, 0.9883, 0.9841, 1.0303, 0.9938, 0.9530, 1.0049, 0.9864, 1.0090,
        1.0015, 1.1072, 1.0481, 0.9892, 0.9775, 0.9330, 0.9790, 0.9320, 1.0404,
        1.0700, 1.0342, 1.0201, 0.9947, 1.0033, 0.9786, 1.0438, 1.0591, 0.9939,
        0.9984, 0.9880, 0.9718, 0.9221, 0.9844, 1.0246, 1.0153, 1.0082, 0.9662,
        0.9715, 0.9777, 0.9997, 1.0097, 0.9787, 0.9747, 1.0106, 0.9820, 1.0294,
        0.9493, 0.9888, 1.0506, 1.0208, 1.0663, 1.0262, 1.0310, 1.0092, 1.0058,
        0.9871, 1.0496, 0.9556, 1.0287, 1.0681, 0.9826, 0.9751, 1.0244, 1.0427,
        1.0224, 0.9951, 0.9733, 1.0106, 1.0341, 0.9979, 1.0377, 0.9798, 0.9938,
        1.0490, 0.9965, 0.9493, 1.0383, 0.9690, 1.0000, 0.9409, 0.9951, 0.9684,
        0.9844, 0.9591, 0.9756, 1.0034, 1.0087, 0.8574, 1.0605, 0.9753, 1.0295,
        0.9599, 0.9333, 1.0360, 1.0314, 1.0249, 1.0228, 0.9860, 0.9687, 0.9662,
        1.0618, 1.0176, 1.0293, 0.9820, 1.0126, 0.9648, 0.9822, 0.9636, 1.0236,
        1.0256, 0.9787, 0.9950, 1.0111, 0.9516, 1.0333, 0.9668, 1.0120, 1.0346,
        0.9788, 1.0029, 0.9705, 1.0083, 1.0146, 0.9945, 0.9688, 0.9540, 0.9957,
        0.9934, 1.0177])
##########################################################
decoder.blks.block1.addnorm2.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0990,  0.0322,  0.0131,  0.0738, -0.0039, -0.0307, -0.0178, -0.0592,
         0.0257, -0.0148,  0.0495, -0.0530, -0.0390, -0.0287, -0.0174, -0.0886,
         0.0539, -0.1219,  0.0044,  0.0129,  0.0289,  0.0668, -0.0274, -0.0601,
        -0.0686,  0.0204, -0.0030, -0.0440,  0.0091, -0.0169, -0.0516, -0.0440,
        -0.0146, -0.0577, -0.0090, -0.0557, -0.0363, -0.0476, -0.0814,  0.0228,
         0.0168,  0.0013, -0.0146,  0.0228,  0.0091, -0.0163,  0.0080, -0.0956,
        -0.0021,  0.0121,  0.0867, -0.0032,  0.0116, -0.0076,  0.0272, -0.0505,
        -0.0477,  0.0319,  0.0637,  0.0255, -0.0351,  0.0002,  0.0438, -0.0334,
        -0.0565,  0.0382,  0.0298,  0.0913,  0.0028,  0.1046, -0.0098,  0.0447,
        -0.0473,  0.0390, -0.0012, -0.1021, -0.0094,  0.0018, -0.0026, -0.0508,
         0.0285,  0.0795,  0.0381,  0.0404,  0.1025, -0.0889,  0.0429,  0.1177,
        -0.0228, -0.0759,  0.0620, -0.0220,  0.0304,  0.1304,  0.0151,  0.0423,
        -0.0072, -0.0451, -0.0362,  0.1222,  0.0278, -0.0297,  0.0419,  0.0374,
        -0.0344,  0.0570, -0.0026,  0.0477, -0.0269, -0.0008, -0.0414, -0.0115,
        -0.0324,  0.0462, -0.0060, -0.0039, -0.0019,  0.0447, -0.0242, -0.0365,
        -0.0252, -0.0274, -0.0159, -0.0337, -0.0434,  0.0365,  0.0087, -0.0030])
##########################################################
decoder.blks.block1.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[ 0.0853, -0.0585, -0.0170,  ..., -0.0283,  0.0251,  0.0072],
        [-0.0188,  0.0305, -0.0030,  ...,  0.0316,  0.0242,  0.0040],
        [ 0.0037, -0.0139, -0.0222,  ...,  0.0229, -0.0105,  0.0720],
        ...,
        [-0.0035, -0.0373,  0.0110,  ...,  0.0039,  0.0261,  0.0038],
        [ 0.0179, -0.0015, -0.0503,  ..., -0.0021, -0.0290, -0.0011],
        [ 0.0279,  0.0606,  0.0378,  ..., -0.0090, -0.0661, -0.0967]])
tensor([[ 8.3360e-02, -5.8374e-02, -1.9694e-02,  ..., -1.7882e-02,
          2.6675e-02,  4.6001e-03],
        [-8.6832e-03,  2.9711e-02, -2.3682e-05,  ...,  1.7829e-02,
          3.8593e-02,  6.8584e-03],
        [ 7.4536e-03, -1.5394e-02, -1.5032e-02,  ...,  2.6381e-02,
         -1.2621e-02,  7.7325e-02],
        ...,
        [-4.6302e-03, -3.0154e-02,  2.8786e-03,  ..., -1.5543e-03,
          2.4138e-02,  2.5198e-03],
        [ 2.1439e-02, -5.3263e-03, -4.6269e-02,  ..., -9.0578e-03,
         -2.5948e-02,  8.3064e-03],
        [ 2.0922e-02,  5.0223e-02,  4.5570e-02,  ..., -2.4204e-02,
         -7.5003e-02, -7.9284e-02]])
##########################################################
decoder.blks.block1.ffn.dense1.bias shape: torch.Size([64])
tensor([-0.0420,  0.0580, -0.0091, -0.0642,  0.0065,  0.0039, -0.0074, -0.0210,
        -0.0119,  0.0587,  0.0243, -0.0405,  0.0465, -0.0776, -0.0790,  0.0227,
        -0.0778, -0.0848,  0.0716, -0.0269,  0.0469, -0.0864,  0.0403,  0.0819,
         0.0091,  0.0726,  0.0805, -0.0627,  0.0061,  0.0402,  0.0135, -0.0442,
        -0.0370,  0.0707,  0.0148, -0.0633, -0.0869, -0.0620,  0.0204, -0.0103,
         0.0500,  0.0863, -0.0023, -0.0185,  0.0780,  0.0062,  0.0545, -0.0037,
        -0.0351, -0.0702, -0.0106,  0.0691,  0.0841, -0.0232, -0.0817, -0.0869,
        -0.0864, -0.0271, -0.0123,  0.0515,  0.0188, -0.0524, -0.0090, -0.0781])
tensor([-0.0421,  0.0495, -0.0086, -0.0651,  0.0016, -0.0040, -0.0111, -0.0343,
        -0.0153,  0.0672,  0.0270, -0.0393,  0.0686, -0.0762, -0.0682,  0.0296,
        -0.0741, -0.0791,  0.0745, -0.0315,  0.0572, -0.0857,  0.0385,  0.0822,
         0.0065,  0.0765,  0.0774, -0.0526,  0.0044,  0.0445,  0.0212, -0.0477,
        -0.0410,  0.0789,  0.0147, -0.0689, -0.0906, -0.0640,  0.0276, -0.0155,
         0.0476,  0.0902, -0.0119, -0.0131,  0.0744,  0.0054,  0.0557, -0.0010,
        -0.0311, -0.0683, -0.0035,  0.0746,  0.0849, -0.0172, -0.0844, -0.0757,
        -0.0885, -0.0223, -0.0040,  0.0552,  0.0127, -0.0593, -0.0050, -0.0858])
##########################################################
decoder.blks.block1.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[-0.0267,  0.0735,  0.0299,  ...,  0.0471,  0.0275, -0.0541],
        [ 0.0618,  0.0405, -0.0098,  ..., -0.0339,  0.0329, -0.0061],
        [ 0.0117,  0.0469,  0.0221,  ..., -0.0132,  0.0511,  0.0429],
        ...,
        [ 0.0828, -0.0018,  0.0305,  ...,  0.0163,  0.0659, -0.0325],
        [-0.0009, -0.0740, -0.0046,  ...,  0.0130,  0.0436, -0.0246],
        [-0.0097, -0.0209,  0.0175,  ..., -0.0491,  0.0122, -0.0180]])
tensor([[-0.0050,  0.0660,  0.0387,  ...,  0.0623,  0.0236, -0.0415],
        [ 0.0576,  0.0513, -0.0057,  ..., -0.0326,  0.0374, -0.0064],
        [-0.0016,  0.0477,  0.0251,  ..., -0.0198,  0.0565,  0.0329],
        ...,
        [ 0.0774,  0.0154,  0.0452,  ...,  0.0189,  0.0745, -0.0227],
        [-0.0150, -0.0738,  0.0011,  ...,  0.0183,  0.0446, -0.0305],
        [-0.0195, -0.0173,  0.0163,  ..., -0.0480,  0.0202, -0.0120]])
##########################################################
decoder.blks.block1.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.0022, -0.0257,  0.0483, -0.0153, -0.1000,  0.0476, -0.1179, -0.0063,
         0.0523,  0.0012, -0.0390, -0.0771,  0.0026, -0.0306,  0.0606,  0.0105,
        -0.0209,  0.1114, -0.0892, -0.0635, -0.1064,  0.0072,  0.0908,  0.0242,
        -0.0937,  0.0405,  0.0299, -0.0003,  0.1225, -0.0159, -0.0733,  0.0271,
         0.0494, -0.0365,  0.0355, -0.0876,  0.0181,  0.0918, -0.0071,  0.1009,
        -0.0668, -0.0585,  0.0530,  0.0138, -0.0742, -0.0272,  0.1153, -0.0776,
         0.0378, -0.1005, -0.0313, -0.0758,  0.0726,  0.0035, -0.0809,  0.0806,
        -0.0562, -0.0264,  0.0244, -0.0116,  0.0988,  0.0369, -0.0756,  0.0843,
         0.0084, -0.0967,  0.0745,  0.0306, -0.1095, -0.0202,  0.0357, -0.0606,
         0.1237, -0.0366,  0.0746, -0.0572,  0.1165,  0.1216, -0.1099,  0.1112,
        -0.0535, -0.1076, -0.0954,  0.0238,  0.0627, -0.0983,  0.0459,  0.0719,
         0.0088, -0.0157, -0.0400,  0.0435, -0.0010,  0.0467, -0.0899, -0.0738,
        -0.0686, -0.0093,  0.0613,  0.0938, -0.0233,  0.1236, -0.0868, -0.0444,
         0.0019,  0.0528, -0.0902, -0.0680,  0.0802, -0.0892,  0.0807, -0.0188,
        -0.0423, -0.1108,  0.0454,  0.0630, -0.0822, -0.1228, -0.0947, -0.0922,
        -0.1168, -0.0362,  0.0052,  0.0753, -0.0667, -0.1001,  0.0571,  0.0748])
tensor([ 0.0439, -0.0113,  0.0472,  0.0155, -0.0967,  0.0404, -0.1192, -0.0263,
         0.0724,  0.0136, -0.0244, -0.0857, -0.0166, -0.0478,  0.0524, -0.0204,
         0.0069,  0.0556, -0.0788, -0.0595, -0.0909,  0.0251,  0.0694,  0.0039,
        -0.1139,  0.0429,  0.0250, -0.0286,  0.1227, -0.0252, -0.0829,  0.0005,
         0.0352, -0.0590,  0.0323, -0.1039,  0.0010,  0.0745, -0.0491,  0.0902,
        -0.0661, -0.0486,  0.0434,  0.0209, -0.0803, -0.0275,  0.1191, -0.1048,
         0.0522, -0.1026,  0.0019, -0.0606,  0.0666, -0.0169, -0.0701,  0.0610,
        -0.0703, -0.0197,  0.0289,  0.0013,  0.0735,  0.0301, -0.0551,  0.0626,
        -0.0271, -0.0547,  0.0803,  0.0692, -0.0994,  0.0253,  0.0330, -0.0420,
         0.0981, -0.0289,  0.0690, -0.0895,  0.1052,  0.1193, -0.0982,  0.0775,
        -0.0455, -0.0664, -0.0710,  0.0404,  0.1118, -0.1371,  0.0626,  0.1116,
         0.0029, -0.0423, -0.0037,  0.0316,  0.0101,  0.1012, -0.0920, -0.0488,
        -0.0632, -0.0337,  0.0414,  0.1436, -0.0064,  0.1015, -0.0648, -0.0221,
        -0.0160,  0.0712, -0.0844, -0.0485,  0.0653, -0.0789,  0.0625, -0.0168,
        -0.0506, -0.0720,  0.0378,  0.0591, -0.0619, -0.1049, -0.0996, -0.1046,
        -0.1155, -0.0399,  0.0038,  0.0592, -0.0930, -0.0713,  0.0478,  0.0704])
##########################################################
decoder.blks.block1.addnorm3.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.1042, 1.0836, 1.0657, 1.0900, 1.0521, 1.0705, 1.0309, 1.0420, 1.0886,
        1.0674, 1.1833, 1.0993, 1.1096, 1.0234, 1.0254, 1.0807, 1.0477, 1.1130,
        1.1516, 1.0989, 1.0874, 1.0416, 1.0999, 1.0653, 1.1545, 1.1265, 1.0242,
        1.1123, 1.0362, 1.0072, 0.9971, 1.0468, 1.0735, 1.0877, 1.0425, 1.0894,
        1.0371, 1.0378, 1.0594, 1.0587, 1.0410, 1.0329, 1.0976, 1.0213, 1.1065,
        0.9887, 1.0430, 1.1441, 1.1110, 1.1813, 1.1083, 1.0683, 1.0642, 1.0724,
        1.0270, 1.1055, 1.0625, 1.0585, 1.1023, 1.0124, 1.0456, 1.0633, 1.0801,
        1.0733, 1.0416, 1.0733, 1.0623, 1.0699, 1.0776, 1.0622, 1.0156, 1.0746,
        1.1085, 1.0663, 0.9848, 1.1311, 1.0257, 1.0497, 0.9839, 1.0637, 1.0204,
        1.0903, 1.0282, 1.0674, 1.0527, 1.0741, 0.9030, 1.1912, 1.0512, 1.1725,
        1.0027, 1.0297, 1.0627, 1.1205, 1.1156, 1.0662, 1.0300, 1.0351, 1.0351,
        1.1436, 1.0779, 1.0676, 1.0449, 1.0470, 1.0356, 1.0786, 1.0154, 1.0889,
        1.0900, 1.0081, 1.0445, 1.0820, 1.0922, 1.1085, 1.0082, 1.0489, 1.1138,
        1.0669, 1.0619, 1.0458, 1.0152, 1.1074, 1.0765, 1.0309, 1.0541, 1.0661,
        1.0386, 1.0580])
##########################################################
decoder.blks.block1.addnorm3.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.1364,  0.0594,  0.0414,  0.1162, -0.0197, -0.0618, -0.0048, -0.1000,
         0.0570, -0.0370,  0.0592, -0.0603, -0.1008, -0.0220, -0.0117, -0.1273,
         0.0778, -0.1650, -0.0059,  0.0144,  0.0583,  0.0682, -0.0641, -0.1061,
        -0.1355,  0.0455, -0.0226, -0.0865,  0.0253, -0.0031, -0.0875, -0.0537,
        -0.0174, -0.1003,  0.0070, -0.0901, -0.0368, -0.0890, -0.1075,  0.0256,
         0.0104,  0.0123,  0.0158,  0.0280,  0.0129,  0.0020,  0.0207, -0.1415,
        -0.0078,  0.0110,  0.1354,  0.0080,  0.0282, -0.0252,  0.0360, -0.0910,
        -0.0921,  0.0458,  0.0736,  0.0270, -0.0391,  0.0039,  0.0525, -0.0410,
        -0.0719,  0.0727,  0.0300,  0.1308, -0.0285,  0.1256, -0.0215,  0.0542,
        -0.0501,  0.0507,  0.0248, -0.1371, -0.0029,  0.0182, -0.0083, -0.0414,
         0.0454,  0.1279,  0.0718,  0.0837,  0.1414, -0.1363,  0.0540,  0.1720,
         0.0189, -0.1168,  0.0590, -0.0530,  0.0185,  0.1923,  0.0427,  0.0584,
        -0.0145, -0.0462, -0.0690,  0.1757,  0.0146, -0.0252,  0.0702,  0.0512,
        -0.0606,  0.0904,  0.0079,  0.0640, -0.0237, -0.0280, -0.0436, -0.0078,
        -0.0842,  0.0622, -0.0088,  0.0177,  0.0146,  0.0833, -0.0432, -0.0333,
        -0.0209, -0.0550, -0.0293, -0.0497, -0.0812,  0.0740,  0.0114, -0.0045])
##########################################################
decoder.dense.weight shape: torch.Size([287, 128])
tensor([[ 0.0012, -0.0056,  0.0020,  ..., -0.0269,  0.0167,  0.0070],
        [-0.0236,  0.0642,  0.0313,  ...,  0.0192,  0.0087,  0.0081],
        [ 0.0119, -0.0277,  0.0022,  ...,  0.0133,  0.0709,  0.0102],
        ...,
        [-0.0201,  0.0410, -0.0022,  ..., -0.0004,  0.0005,  0.0398],
        [ 0.0109, -0.0153,  0.0122,  ..., -0.0215, -0.0232,  0.0445],
        [ 0.0585, -0.0441, -0.0083,  ...,  0.0014,  0.0175, -0.0383]])
tensor([[-0.0116, -0.0096,  0.0004,  ..., -0.0351,  0.0174,  0.0064],
        [-0.0442,  0.0553,  0.0268,  ...,  0.0064,  0.0091,  0.0074],
        [-0.0023, -0.0326, -0.0003,  ...,  0.0052,  0.0705,  0.0098],
        ...,
        [-0.0334,  0.0359, -0.0048,  ..., -0.0084,  0.0007,  0.0385],
        [-0.0056, -0.0200,  0.0079,  ..., -0.0319, -0.0223,  0.0443],
        [ 0.0421, -0.0479, -0.0116,  ..., -0.0089,  0.0190, -0.0397]])
##########################################################
decoder.dense.bias shape: torch.Size([287])
tensor([ 0.0428, -0.0159, -0.0641,  0.0610,  0.0436,  0.0185, -0.0209, -0.0083,
        -0.0696, -0.0103,  0.0637,  0.0864, -0.0262, -0.0503,  0.0670, -0.0433,
         0.0135,  0.0773,  0.0452,  0.0452,  0.0629,  0.0505,  0.0101,  0.0550,
        -0.0415, -0.0430, -0.0031,  0.0438, -0.0543, -0.0396, -0.0287, -0.0036,
         0.0108, -0.0732,  0.0761,  0.0859,  0.0467, -0.0262,  0.0802,  0.0416,
         0.0105,  0.0076,  0.0830,  0.0861, -0.0331,  0.0569,  0.0642,  0.0109,
         0.0337, -0.0033,  0.0861,  0.0674,  0.0387, -0.0822, -0.0429, -0.0440,
         0.0069,  0.0332, -0.0849, -0.0526,  0.0338, -0.0034,  0.0663,  0.0476,
        -0.0310, -0.0768,  0.0706, -0.0455,  0.0802,  0.0831,  0.0851,  0.0327,
         0.0513, -0.0557,  0.0584,  0.0766, -0.0802, -0.0087,  0.0072, -0.0159,
        -0.0447, -0.0823, -0.0274, -0.0808,  0.0190, -0.0226, -0.0439,  0.0338,
         0.0088, -0.0553, -0.0669,  0.0567, -0.0120,  0.0852, -0.0738,  0.0342,
        -0.0794,  0.0345,  0.0832, -0.0126, -0.0530,  0.0756,  0.0549,  0.0542,
         0.0462, -0.0089,  0.0476,  0.0111, -0.0484, -0.0137, -0.0875, -0.0183,
        -0.0181,  0.0554, -0.0631,  0.0784,  0.0797, -0.0580, -0.0295,  0.0395,
        -0.0343, -0.0498,  0.0843, -0.0737, -0.0827,  0.0620, -0.0832, -0.0680,
         0.0052, -0.0624, -0.0114,  0.0443, -0.0190,  0.0418,  0.0076, -0.0156,
         0.0205, -0.0364, -0.0421, -0.0046,  0.0725, -0.0094, -0.0607, -0.0851,
         0.0457, -0.0640,  0.0373,  0.0145, -0.0017,  0.0437,  0.0026,  0.0060,
        -0.0372, -0.0635, -0.0249,  0.0065, -0.0613, -0.0510,  0.0627, -0.0082,
         0.0591, -0.0875,  0.0804, -0.0713,  0.0793, -0.0556,  0.0055,  0.0245,
        -0.0271, -0.0709, -0.0030,  0.0038,  0.0847, -0.0013, -0.0635, -0.0767,
         0.0237,  0.0081,  0.0704, -0.0740,  0.0766,  0.0799, -0.0129,  0.0490,
         0.0068,  0.0167,  0.0683,  0.0488, -0.0584, -0.0010,  0.0111,  0.0457,
        -0.0013, -0.0016,  0.0865,  0.0104,  0.0295,  0.0808,  0.0037, -0.0066,
        -0.0069,  0.0532,  0.0083,  0.0183, -0.0331,  0.0201,  0.0411,  0.0394,
        -0.0277, -0.0095,  0.0109,  0.0098,  0.0426,  0.0309, -0.0459, -0.0247,
         0.0419,  0.0633,  0.0488,  0.0715, -0.0348,  0.0694, -0.0663,  0.0494,
        -0.0883, -0.0447, -0.0450, -0.0287, -0.0107,  0.0279, -0.0553,  0.0036,
         0.0312,  0.0661,  0.0692,  0.0555,  0.0190,  0.0538,  0.0464,  0.0623,
         0.0143,  0.0782, -0.0302, -0.0242,  0.0643, -0.0791, -0.0418, -0.0097,
        -0.0286, -0.0397,  0.0454, -0.0768,  0.0764, -0.0568, -0.0485, -0.0067,
         0.0628, -0.0015,  0.0131,  0.0433, -0.0386, -0.0355, -0.0199,  0.0613,
        -0.0075,  0.0814,  0.0475,  0.0307,  0.0828, -0.0195, -0.0834, -0.0661,
         0.0703,  0.0562, -0.0399,  0.0147, -0.0289, -0.0482, -0.0733, -0.0604,
        -0.0070,  0.0110,  0.0853,  0.0017,  0.0566,  0.0843, -0.0559])
tensor([ 0.0270, -0.0393, -0.0808,  0.1695,  0.4379,  0.5084,  0.3550,  0.3461,
         0.1986,  0.1536,  0.2595,  0.1894,  0.1031,  0.0501,  0.2146,  0.1103,
         0.1510,  0.1762,  0.1881,  0.1644,  0.0908,  0.1708,  0.0991,  0.1164,
        -0.0102, -0.0062,  0.0444,  0.0936, -0.0108,  0.0100,  0.0064,  0.0278,
         0.0570, -0.0630,  0.1117,  0.0868,  0.0965,  0.0011,  0.1023,  0.0642,
         0.0658,  0.0404,  0.1092,  0.0664, -0.0082,  0.0382,  0.0418,  0.0632,
         0.0107, -0.0209,  0.0668,  0.0463,  0.0213, -0.0721, -0.0609, -0.0307,
         0.0196,  0.0145, -0.1027, -0.0365,  0.0140,  0.0095,  0.0453,  0.0266,
        -0.0471, -0.0669,  0.0470, -0.0622,  0.0624,  0.0642,  0.0614,  0.0148,
         0.0609, -0.0744,  0.0367,  0.0578, -0.0967, -0.0265, -0.0104, -0.0370,
        -0.0638, -0.0986, -0.0463, -0.1012, -0.0008, -0.0424, -0.0602,  0.0147,
        -0.0121, -0.0736, -0.0827,  0.0374, -0.0281,  0.0608, -0.0659,  0.0101,
        -0.0960,  0.0167,  0.0590, -0.0325, -0.0713,  0.0587,  0.0359,  0.0318,
         0.0275, -0.0262,  0.0275, -0.0075, -0.0646, -0.0295, -0.1029, -0.0395,
        -0.0376,  0.0358, -0.0815,  0.0572,  0.0558, -0.0734, -0.0471,  0.0182,
        -0.0564, -0.0664,  0.0678, -0.0941, -0.1060,  0.0422, -0.1048, -0.0901,
        -0.0135, -0.0778, -0.0321,  0.0278, -0.0407,  0.0201, -0.0117, -0.0349,
         0.0028, -0.0561, -0.0617, -0.0270,  0.0473, -0.0310, -0.0805, -0.1062,
         0.0262, -0.0815,  0.0181, -0.0077, -0.0203,  0.0252, -0.0151, -0.0117,
        -0.0539, -0.0844, -0.0419, -0.0110, -0.0790, -0.0710,  0.0422, -0.0311,
         0.0389, -0.1016,  0.0612, -0.0906,  0.0609, -0.0748, -0.0119,  0.0023,
        -0.0461, -0.0911, -0.0207, -0.0159,  0.0621, -0.0228, -0.0817, -0.0955,
         0.0085, -0.0105,  0.0484, -0.0905,  0.0537,  0.0599, -0.0310,  0.0278,
        -0.0111, -0.0054,  0.0495,  0.0298, -0.0757, -0.0226, -0.0082,  0.0280,
        -0.0211, -0.0226,  0.0649, -0.0100,  0.0108,  0.0604, -0.0117, -0.0250,
        -0.0286,  0.0329, -0.0101, -0.0033, -0.0510,  0.0009,  0.0211,  0.0201,
        -0.0480, -0.0307, -0.0078, -0.0056,  0.0239,  0.0104, -0.0630, -0.0423,
         0.0209,  0.0433,  0.0288,  0.0493, -0.0569,  0.0511, -0.0836,  0.0272,
        -0.1093, -0.0602, -0.0630, -0.0486, -0.0311,  0.0050, -0.0718, -0.0148,
         0.0129,  0.0473,  0.0500,  0.0361, -0.0026,  0.0346,  0.0256,  0.0439,
        -0.0056,  0.0581, -0.0485, -0.0447,  0.0429, -0.1020, -0.0608, -0.0264,
        -0.0495, -0.0572,  0.0242, -0.0969,  0.0546, -0.0775, -0.0672, -0.0250,
         0.0439, -0.0224, -0.0102,  0.0209, -0.0539, -0.0518, -0.0419,  0.0430,
        -0.0254,  0.0616,  0.0275,  0.0106,  0.0598, -0.0401, -0.0978, -0.0835,
         0.0491,  0.0336, -0.0594, -0.0080, -0.0475, -0.0700, -0.0922, -0.0776,
        -0.0284, -0.0079,  0.0662, -0.0182,  0.0405,  0.0646, -0.0758])
##########################################################
{'prot_encoder.encoder.layers.1.self_attn.in_proj_weight': tensor(1.0226e-05), 'smi_encoder.embedding.weight': tensor(1.7947e-05), 'prot_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(2.3193e-05), 'prot_encoder.encoder.layers.1.self_attn.out_proj.weight': tensor(2.6428e-05), 'prot_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(2.8478e-05), 'smi_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(2.8715e-05), 'prot_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(4.1296e-05), 'prot_encoder.embedding.weight': tensor(4.3567e-05), 'smi_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(4.4164e-05), 'smi_encoder.encoder.layers.1.self_attn.in_proj_weight': tensor(6.5171e-05), 'prot_encoder.encoder.layers.0.linear2.weight': tensor(7.7731e-05), 'prot_encoder.encoder.layers.1.linear1.weight': tensor(8.3151e-05), 'cross_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(8.4312e-05), 'prot_encoder.ffn.dense2.weight': tensor(0.0001), 'prot_encoder.encoder.layers.1.linear2.weight': tensor(0.0001), 'prot_encoder.encoder.layers.0.linear1.weight': tensor(0.0001), 'smi_encoder.encoder.layers.1.self_attn.out_proj.weight': tensor(0.0001), 'smi_encoder.encoder.layers.0.linear2.weight': tensor(0.0001), 'prot_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(0.0001), 'prot_encoder.addnorm.ln.bias': tensor(0.0002), 'cross_encoder.encoder.layers.0.linear1.weight': tensor(0.0002), 'cross_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(0.0002), 'smi_encoder.encoder.layers.1.linear2.weight': tensor(0.0002), 'smi_encoder.encoder.layers.1.linear1.weight': tensor(0.0002), 'prot_encoder.dense.weight': tensor(0.0002), 'smi_encoder.encoder.layers.0.linear1.weight': tensor(0.0003), 'prot_encoder.ffn.dense1.weight': tensor(0.0003), 'smi_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(0.0003), 'prot_encoder.encoder.layers.1.self_attn.in_proj_bias': tensor(0.0004), 'prot_encoder.dense.bias': tensor(0.0004), 'cross_encoder.encoder.layers.0.linear2.weight': tensor(0.0004), 'prot_encoder.addnorm.ln.weight': tensor(0.0004), 'decoder.blks.block1.attention2.W_k.weight': tensor(0.0006), 'decoder.blks.block0.attention2.W_k.weight': tensor(0.0006), 'smi_encoder.encoder.layers.1.self_attn.in_proj_bias': tensor(0.0007), 'prot_encoder.ffn.dense2.bias': tensor(0.0008), 'linear.weight': tensor(0.0009), 'smi_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(0.0009), 'prot_encoder.ffn.dense1.bias': tensor(0.0010), 'prot_encoder.encoder.layers.1.linear1.bias': tensor(0.0014), 'prot_encoder.encoder.layers.0.linear2.bias': tensor(0.0014), 'prot_encoder.encoder.layers.1.self_attn.out_proj.bias': tensor(0.0014), 'prot_encoder.encoder.layers.0.linear1.bias': tensor(0.0014), 'decoder.embedding.weight': tensor(0.0014), 'prot_encoder.encoder.layers.1.linear2.bias': tensor(0.0014), 'prot_encoder.encoder.layers.0.norm2.bias': tensor(0.0016), 'prot_encoder.encoder.layers.0.norm1.bias': tensor(0.0016), 'prot_encoder.encoder.layers.1.norm1.bias': tensor(0.0017), 'decoder.blks.block1.attention2.W_q.weight': tensor(0.0019), 'decoder.blks.block0.attention2.W_q.weight': tensor(0.0020), 'prot_encoder.encoder.layers.1.norm2.bias': tensor(0.0022), 'addnorm.ln.bias': tensor(0.0025), 'linear.bias': tensor(0.0026), 'smi_encoder.encoder.layers.0.linear2.bias': tensor(0.0026), 'decoder.blks.block0.attention2.W_v.weight': tensor(0.0026), 'decoder.blks.block1.attention2.W_v.weight': tensor(0.0027), 'smi_encoder.encoder.layers.1.self_attn.out_proj.bias': tensor(0.0030), 'prot_encoder.encoder.layers.0.norm1.weight': tensor(0.0031), 'prot_encoder.encoder.layers.0.norm2.weight': tensor(0.0032), 'prot_encoder.encoder.layers.1.norm1.weight': tensor(0.0032), 'smi_encoder.encoder.layers.0.norm2.bias': tensor(0.0034), 'smi_encoder.encoder.layers.1.linear1.bias': tensor(0.0034), 'addnorm.ln.weight': tensor(0.0034), 'smi_encoder.encoder.layers.0.linear1.bias': tensor(0.0037), 'cross_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(0.0038), 'smi_encoder.encoder.layers.1.linear2.bias': tensor(0.0039), 'prot_encoder.encoder.layers.1.norm2.weight': tensor(0.0040), 'smi_encoder.encoder.layers.0.norm2.weight': tensor(0.0040), 'smi_encoder.encoder.layers.0.norm1.bias': tensor(0.0041), 'smi_encoder.encoder.layers.1.norm1.bias': tensor(0.0046), 'smi_encoder.encoder.layers.0.norm1.weight': tensor(0.0048), 'smi_encoder.encoder.layers.1.norm1.weight': tensor(0.0048), 'cross_encoder.encoder.layers.0.linear1.bias': tensor(0.0048), 'decoder.blks.block1.ffn.dense1.bias': tensor(0.0049), 'decoder.blks.block1.attention2.W_o.weight': tensor(0.0053), 'decoder.blks.block0.ffn.dense1.bias': tensor(0.0055), 'decoder.blks.block0.attention2.W_o.weight': tensor(0.0055), 'smi_encoder.encoder.layers.1.norm2.weight': tensor(0.0068), 'decoder.blks.block1.ffn.dense1.weight': tensor(0.0068), 'decoder.blks.block1.ffn.dense2.weight': tensor(0.0069), 'decoder.blks.block0.ffn.dense2.weight': tensor(0.0077), 'decoder.blks.block0.ffn.dense1.weight': tensor(0.0080), 'smi_encoder.encoder.layers.1.norm2.bias': tensor(0.0082), 'decoder.blks.block1.attention1.W_q.weight': tensor(0.0087), 'decoder.blks.block1.attention1.W_k.weight': tensor(0.0092), 'cross_encoder.encoder.layers.0.linear2.bias': tensor(0.0095), 'cross_encoder.encoder.layers.0.norm1.weight': tensor(0.0117), 'cross_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(0.0123), 'cross_encoder.encoder.layers.0.norm1.bias': tensor(0.0124), 'decoder.blks.block0.attention1.W_o.weight': tensor(0.0132), 'decoder.blks.block1.attention1.W_o.weight': tensor(0.0136), 'decoder.blks.block0.attention1.W_v.weight': tensor(0.0137), 'decoder.blks.block1.attention1.W_v.weight': tensor(0.0139), 'decoder.dense.weight': tensor(0.0163), 'decoder.blks.block0.ffn.dense2.bias': tensor(0.0165), 'decoder.blks.block1.ffn.dense2.bias': tensor(0.0172), 'cross_encoder.encoder.layers.0.norm2.weight': tensor(0.0187), 'cross_encoder.encoder.layers.0.norm2.bias': tensor(0.0204), 'decoder.blks.block0.attention1.W_k.weight': tensor(0.0214), 'decoder.blks.block0.attention1.W_q.weight': tensor(0.0219), 'decoder.blks.block0.addnorm1.ln.weight': tensor(0.0247), 'decoder.blks.block0.addnorm2.ln.weight': tensor(0.0248), 'decoder.blks.block0.addnorm3.ln.weight': tensor(0.0252), 'decoder.blks.block1.addnorm1.ln.weight': tensor(0.0264), 'decoder.blks.block1.addnorm2.ln.weight': tensor(0.0274), 'decoder.dense.bias': tensor(0.0321), 'decoder.blks.block1.addnorm1.ln.bias': tensor(0.0367), 'decoder.blks.block0.addnorm1.ln.bias': tensor(0.0369), 'decoder.blks.block0.addnorm2.ln.bias': tensor(0.0372), 'decoder.blks.block1.addnorm2.ln.bias': tensor(0.0375), 'decoder.blks.block0.addnorm3.ln.bias': tensor(0.0387), 'decoder.blks.block1.addnorm3.ln.bias': tensor(0.0562), 'decoder.blks.block1.addnorm3.ln.weight': tensor(0.0685)}