smi_encoder.embedding.weight shape: torch.Size([287, 128])
tensor([[ 1.0131, -0.2699, -1.8087,  ..., -0.3295, -0.7485, -1.9519],
        [ 0.0252,  0.2658,  0.8077,  ..., -0.9470, -1.1543, -0.1074],
        [ 0.2496, -1.1481, -0.6821,  ..., -0.5859,  0.6502, -0.0364],
        ...,
        [ 0.4938,  0.4496,  0.6148,  ...,  1.5956,  0.0266, -0.2141],
        [ 0.7097,  0.5078,  0.7414,  ..., -0.3503,  1.2614, -0.1880],
        [ 1.8792,  0.3156,  1.0133,  ..., -1.0239,  0.4238, -0.2535]])
tensor([[ 1.0131, -0.2699, -1.8087,  ..., -0.3295, -0.7485, -1.9519],
        [-0.1782,  0.4510,  1.0469,  ..., -0.4763, -1.0399, -0.3413],
        [ 0.2496, -1.1481, -0.6821,  ..., -0.5859,  0.6502, -0.0364],
        ...,
        [ 0.4938,  0.4496,  0.6148,  ...,  1.5956,  0.0266, -0.2141],
        [ 0.7097,  0.5078,  0.7414,  ..., -0.3503,  1.2614, -0.1880],
        [ 1.8792,  0.3156,  1.0133,  ..., -1.0239,  0.4238, -0.2535]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0309,  0.0685,  0.0575,  ..., -0.0724, -0.0210,  0.0573],
        [ 0.0717,  0.0413,  0.0819,  ...,  0.0373,  0.0766,  0.0501],
        [ 0.0753,  0.0205,  0.0102,  ..., -0.0027,  0.0276, -0.0932],
        ...,
        [ 0.0184, -0.0401,  0.0330,  ...,  0.0487, -0.0125,  0.0242],
        [-0.0838,  0.0898,  0.0424,  ...,  0.0426, -0.0217, -0.0788],
        [ 0.0833, -0.0759,  0.0286,  ..., -0.0874, -0.0131, -0.0803]])
tensor([[ 0.1847, -0.1514, -0.1735,  ..., -0.2166, -0.2441, -0.1659],
        [ 0.2900,  0.2632, -0.1495,  ..., -0.1691, -0.1446,  0.2628],
        [ 0.2836, -0.1922,  0.2329,  ..., -0.2160,  0.2362,  0.1207],
        ...,
        [ 0.2390,  0.1729, -0.1942,  ...,  0.2696,  0.2101, -0.1944],
        [ 0.1338,  0.3102,  0.2763,  ...,  0.2791, -0.2124, -0.2522],
        [-0.1390, -0.3394,  0.1726,  ..., -0.3095,  0.2476,  0.1233]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 2.0570e-01, -2.1952e-01, -2.4068e-01, -2.1802e-01,  2.1914e-01,
         1.7182e-01,  2.1373e-01,  2.1944e-01, -2.2613e-01, -2.1378e-01,
         2.1670e-01, -2.0522e-01, -2.0105e-01, -2.0639e-01, -2.2007e-01,
         2.1653e-01, -2.1987e-01,  2.9838e-01, -2.1856e-01, -1.9353e-01,
         2.2199e-01, -1.9328e-01,  2.2829e-01, -2.1219e-01, -2.2812e-01,
         2.2477e-01, -2.3218e-01, -2.0945e-01,  2.6058e-01, -2.2291e-01,
        -2.2556e-01,  2.0075e-01,  2.1748e-01,  1.4914e-01,  2.1516e-01,
         2.2343e-01,  2.0764e-01,  2.1931e-01,  2.2314e-01, -2.2152e-01,
        -2.1963e-01, -2.2281e-01, -2.5469e-01, -2.1458e-01,  2.2745e-01,
        -2.1940e-01, -2.2890e-01, -2.3133e-01, -1.8641e-01, -2.0627e-01,
        -1.9518e-01,  2.2241e-01, -1.6299e-01, -2.1385e-01, -2.2637e-01,
        -2.1504e-01,  2.3348e-01, -2.2515e-01, -2.1922e-01, -2.0187e-01,
        -2.0154e-01, -2.1421e-01, -2.1119e-01,  1.9647e-01,  2.2029e-01,
         2.1865e-01,  2.1209e-01, -2.1636e-01,  2.2387e-01, -2.1883e-01,
         2.2391e-01, -2.0642e-01,  1.6894e-01,  2.1058e-01,  2.1271e-01,
        -2.0846e-01,  2.1148e-01, -2.0587e-01, -2.1363e-01, -2.3439e-01,
        -2.2116e-01,  2.2143e-01,  2.2094e-01,  2.2079e-01, -2.2033e-01,
         2.1860e-01,  1.9983e-01, -2.2116e-01, -2.2029e-01, -2.1998e-01,
         2.2004e-01, -2.1713e-01,  2.1919e-01, -2.2154e-01,  2.1686e-01,
        -2.1591e-01,  2.1967e-01, -2.2090e-01,  2.1810e-01, -2.2099e-01,
        -2.1979e-01, -2.1812e-01,  2.2201e-01, -2.2065e-01,  2.1724e-01,
         2.1819e-01,  1.4261e-01, -2.1858e-01,  2.2047e-01, -2.1961e-01,
        -2.1625e-01, -2.2099e-01, -2.1666e-01, -2.1670e-01,  2.2042e-01,
        -2.2228e-01, -2.1989e-01, -2.1705e-01,  1.9481e-01, -2.2084e-01,
         2.2266e-01, -2.1510e-01,  2.2682e-01, -2.2261e-01, -2.2254e-01,
        -2.1904e-01, -2.2124e-01, -2.1536e-01, -2.1737e-05, -1.6554e-06,
        -7.7881e-06, -3.5327e-06,  7.6115e-07, -2.7709e-06, -5.5550e-08,
         7.6297e-06, -3.2250e-06, -4.1587e-06, -5.2764e-06, -9.6605e-07,
         6.5137e-06, -4.1241e-06, -4.7083e-06, -7.2962e-06,  5.9725e-06,
        -2.7874e-06, -3.8546e-06,  4.3069e-07, -2.1708e-05, -2.6876e-06,
        -9.6760e-06, -4.3606e-06, -3.3728e-08, -5.6152e-06, -2.2463e-05,
        -6.7419e-06, -1.4517e-05,  2.1882e-06,  9.5356e-06,  3.3779e-06,
        -2.4070e-07,  1.0435e-05,  4.7817e-06,  9.0325e-08, -2.3340e-07,
         3.9891e-06,  4.3104e-06, -2.5122e-06, -6.0439e-06, -1.5920e-06,
         2.2634e-06,  4.1612e-06, -4.3948e-06,  3.3497e-06,  1.0971e-05,
        -9.7052e-08, -5.2998e-06, -5.4366e-06,  1.6097e-07,  5.4637e-06,
         6.9119e-06,  1.1106e-06, -2.7573e-06, -4.8482e-06,  1.2131e-07,
         4.1542e-06,  1.2619e-05, -3.6352e-06, -1.1582e-06,  1.1848e-05,
         6.0041e-06, -9.1548e-06, -8.0582e-06,  8.8304e-06,  6.9770e-06,
         2.2917e-06, -4.7260e-06,  8.7365e-07, -1.9218e-06, -3.2686e-06,
         9.4531e-06,  1.1822e-05,  7.4172e-06,  1.6178e-06, -8.8862e-06,
        -3.5676e-06, -2.0569e-06, -8.2198e-06,  9.8022e-06, -2.0604e-06,
        -3.5493e-06,  1.8523e-06,  3.8787e-06, -5.6773e-06,  1.1861e-05,
         4.0689e-06,  1.9616e-06, -5.0561e-06, -1.8336e-05, -1.4868e-05,
         8.0650e-06,  1.1769e-05,  4.8143e-06, -1.6215e-05, -1.7314e-06,
         9.8330e-06,  8.4944e-06, -2.0368e-06,  1.8493e-07,  7.5392e-07,
         4.5127e-06, -1.4581e-05,  1.0406e-05, -1.6065e-06,  7.6011e-06,
         1.6408e-05, -2.2196e-06,  9.3555e-06,  8.6365e-06,  5.2667e-06,
        -6.2789e-06, -6.6032e-06,  6.8153e-07,  5.5729e-06, -5.3229e-06,
         6.5903e-07,  7.6255e-06, -7.7835e-06,  4.1607e-06, -1.0747e-07,
        -1.1961e-05,  1.8883e-06,  1.2282e-05,  3.7642e-06,  3.9580e-06,
        -2.7194e-06, -2.1257e-01,  2.1871e-01, -2.2030e-01,  2.1879e-01,
         2.2045e-01, -2.1915e-01, -2.1751e-01, -2.2119e-01, -2.2066e-01,
         2.2103e-01,  2.1998e-01, -2.2135e-01, -2.1980e-01, -2.2041e-01,
         2.1903e-01, -1.5092e-01,  2.2207e-01, -2.1627e-01, -2.1925e-01,
         2.1948e-01,  2.1430e-01,  2.1653e-01,  2.2123e-01,  2.2070e-01,
        -2.1688e-01,  2.1701e-01,  2.1750e-01,  2.2014e-01,  2.1807e-01,
         2.2208e-01, -2.2065e-01, -2.1825e-01, -2.1795e-01, -2.2426e-01,
        -2.1629e-01, -2.1951e-01,  2.2179e-01, -2.2086e-01,  2.2059e-01,
        -2.1948e-01,  2.2100e-01,  1.7100e-01,  2.1798e-01,  1.8283e-01,
         2.2016e-01, -2.1712e-01,  2.1985e-01, -2.1987e-01,  2.2109e-01,
        -2.2494e-01,  2.2201e-01,  2.2726e-01,  1.9831e-01,  2.2103e-01,
        -2.2245e-01, -2.1761e-01, -2.2171e-01, -2.1984e-01,  2.1836e-01,
         2.2258e-01,  2.0543e-01, -2.2280e-01, -2.2203e-01,  2.1516e-01,
         2.2169e-01,  2.1963e-01, -2.1997e-01,  2.1989e-01,  2.2138e-01,
         2.1883e-01,  2.1768e-01,  2.1996e-01, -2.2071e-01, -2.1852e-01,
         2.1819e-01,  2.2066e-01,  2.1458e-01, -2.2882e-01,  2.1913e-01,
        -2.2227e-01, -2.2238e-01, -2.1263e-01,  2.2101e-01,  2.2229e-01,
        -2.2088e-01, -1.8103e-01, -2.2179e-01, -2.2362e-01, -2.2918e-01,
         2.2138e-01,  2.1881e-01,  2.2015e-01,  1.9761e-01,  1.6050e-01,
        -2.2365e-01,  2.1833e-01, -2.2631e-01, -2.2057e-01,  2.2005e-01,
         2.2108e-01, -2.2128e-01, -2.1596e-01,  2.1917e-01, -2.2128e-01,
         2.1279e-01,  2.1808e-01,  2.1704e-01,  2.1971e-01, -2.2115e-01,
         2.1998e-01,  2.2065e-01, -2.1970e-01, -2.1965e-01, -2.1869e-01,
         2.1936e-01, -2.1842e-01,  2.2021e-01,  2.0497e-01, -2.1986e-01,
         2.1881e-01,  2.2195e-01, -2.1790e-01, -2.1803e-01, -2.1891e-01,
         2.2052e-01, -2.2074e-01, -2.2447e-01,  2.2133e-01])
##########################################################
smi_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0195, -0.0317, -0.0510,  ..., -0.0840,  0.0122, -0.0714],
        [-0.0169, -0.0862, -0.0542,  ..., -0.0039,  0.0410,  0.0698],
        [-0.0497, -0.0115,  0.0451,  ..., -0.0327, -0.0224,  0.0855],
        ...,
        [-0.0498,  0.0312,  0.0274,  ...,  0.0140,  0.0436, -0.0074],
        [ 0.0508,  0.0038,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0864, -0.0189,  ..., -0.0154,  0.0077,  0.0106]])
tensor([[ 0.1843, -0.1960, -0.2987,  ..., -0.3095, -0.2213, -0.2809],
        [-0.4999, -0.0666, -0.4628,  ..., -0.2814, -0.4251,  0.0934],
        [-0.3322,  0.2444, -0.2590,  ..., -0.2574,  0.2017, -0.1252],
        ...,
        [-0.2928,  0.2777, -0.0247,  ...,  0.2280,  0.2518,  0.2235],
        [-0.2322,  0.2767,  0.1400,  ...,  0.2263,  0.2891,  0.1562],
        [-0.2223,  0.1178, -0.2077,  ...,  0.2041,  0.2211,  0.2328]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2205, -0.2064, -0.0871, -0.1971,  0.2203, -0.2200,  0.2204, -0.2165,
        -0.2136,  0.2118,  0.2205,  0.2204, -0.2198, -0.2200, -0.1640, -0.2204,
         0.2187, -0.2209, -0.2220, -0.2207,  0.2207, -0.2186,  0.2152, -0.2208,
        -0.2111, -0.2203, -0.2209,  0.2196, -0.2173,  0.2132,  0.2207,  0.2190,
         0.2170,  0.2206, -0.2000,  0.1958,  0.2021, -0.2228, -0.2198,  0.2151,
        -0.2102, -0.2209,  0.2199, -0.2185,  0.2196,  0.2091, -0.2197,  0.2208,
         0.2207,  0.2204,  0.2203, -0.2034,  0.2073,  0.2170, -0.2187, -0.2198,
        -0.2206,  0.2148,  0.2206,  0.1513,  0.2177,  0.2205,  0.2207,  0.2200,
         0.2203,  0.2195, -0.2201,  0.2171, -0.2195,  0.2196, -0.2150,  0.2211,
         0.2328,  0.2205, -0.2189, -0.2208, -0.2209,  0.2188, -0.2209,  0.2208,
         0.2192,  0.2200, -0.2204, -0.2193,  0.2180,  0.2081,  0.2210,  0.2215,
         0.2203, -0.2196, -0.2189, -0.2187,  0.2193,  0.2204, -0.2204, -0.2211,
         0.2117,  0.2208, -0.2206,  0.2201, -0.2201,  0.2193, -0.2212, -0.2187,
         0.2194,  0.2210, -0.2177, -0.2210,  0.2202, -0.2208,  0.2190,  0.2164,
         0.2204,  0.2207,  0.2153,  0.2199, -0.2208, -0.2187,  0.2200, -0.2193,
        -0.2195,  0.2200, -0.2190, -0.2189,  0.2134,  0.2203,  0.2157,  0.2205])
##########################################################
smi_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[-0.1111,  0.0528,  0.1464,  ...,  0.0958,  0.2178,  0.0063],
        [ 0.0242,  0.0127, -0.0512,  ..., -0.0175, -0.0148, -0.1031],
        [ 0.0161, -0.0766, -0.0925,  ..., -0.1276,  0.0755,  0.0872],
        ...,
        [ 0.1188,  0.1421, -0.1452,  ..., -0.0928, -0.0347, -0.0436],
        [ 0.0079, -0.1112, -0.0604,  ..., -0.0204, -0.1283, -0.0651],
        [-0.0854, -0.0438, -0.0962,  ...,  0.0604, -0.0198, -0.0385]])
tensor([[ 0.1138, -0.2267,  0.3601,  ..., -0.1468,  0.1268,  0.2372],
        [ 0.2388, -0.3864,  0.1984,  ..., -0.4516,  0.0827,  0.2091],
        [ 0.2772, -0.4422,  0.1176,  ..., -0.0184,  0.1297,  0.3139],
        ...,
        [-0.0912, -0.0872,  0.0686,  ..., -0.3249, -0.2222,  0.1741],
        [ 0.2257, -0.3381,  0.1720,  ...,  0.2558, -0.4522,  0.1458],
        [-0.2910,  0.1076, -0.2953,  ...,  0.2906,  0.1098, -0.3140]])
##########################################################
smi_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([ 0.0390, -0.0360,  0.0304,  0.0522,  0.0824, -0.0713,  0.0320, -0.0662,
         0.0418,  0.0410, -0.0810,  0.0478,  0.0367,  0.0600,  0.0502,  0.0205,
        -0.0817,  0.0190,  0.0307, -0.0279, -0.0589,  0.0853, -0.0780,  0.0147,
        -0.0857, -0.0591,  0.0313,  0.0502, -0.0049, -0.0560, -0.0108,  0.0365,
        -0.0032, -0.0299,  0.0512, -0.0053, -0.0227,  0.0858, -0.0145, -0.0820,
        -0.0140, -0.0369,  0.0268, -0.0360, -0.0799, -0.0019,  0.0174, -0.0067,
         0.0582, -0.0320,  0.0775,  0.0108,  0.0556, -0.0371, -0.0313, -0.0403,
         0.0199, -0.0528, -0.0291,  0.0233,  0.0368, -0.0160,  0.0090,  0.0428])
tensor([-0.1809, -0.2492, -0.1888,  0.2733,  0.2876, -0.2929,  0.2521, -0.2005,
        -0.1790,  0.2582, -0.2448,  0.2671,  0.2584, -0.1617,  0.2706, -0.1346,
        -0.2996, -0.2143, -0.1857, -0.2485, -0.2786, -0.1357, -0.2963, -0.2057,
         0.1096, -0.2783, -0.1872,  0.2641,  0.2172, -0.2743,  0.2129,  0.2593,
        -0.2404, -0.2505, -0.1687,  0.2155,  0.1937, -0.1346,  0.2294,  0.0258,
         0.2069,  0.1864,  0.2469,  0.1828, -0.3155,  0.2186,  0.2396,  0.2185,
         0.2759, -0.2523, -0.1394, -0.2099,  0.2735,  0.1833,  0.1927,  0.1759,
        -0.2013,  0.1648, -0.2609,  0.2432,  0.2580, -0.2366, -0.2144,  0.2593])
##########################################################
smi_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[ 0.0605,  0.0871,  0.0570,  ...,  0.1844,  0.0197, -0.0093],
        [ 0.0649,  0.0208,  0.0444,  ..., -0.0368,  0.0598, -0.0444],
        [-0.1210,  0.0141, -0.0879,  ..., -0.0136,  0.0918,  0.1455],
        ...,
        [-0.0411, -0.1089, -0.0285,  ...,  0.0274, -0.0481,  0.1610],
        [ 0.0828, -0.0537, -0.0795,  ..., -0.1862,  0.0585,  0.0387],
        [-0.0333, -0.0077,  0.0123,  ..., -0.0026, -0.0305, -0.0040]])
tensor([[-0.1626, -0.1062, -0.1713,  ..., -0.0365, -0.2090, -0.2308],
        [ 0.2793,  0.2465,  0.2558,  ...,  0.1844,  0.2768,  0.1768],
        [-0.1132, -0.1242, -0.0406,  ..., -0.2329,  0.0121, -0.1270],
        ...,
        [-0.2643, -0.3472, -0.2525,  ..., -0.1932, -0.2705, -0.0568],
        [ 0.3039,  0.1523,  0.1405,  ...,  0.0346,  0.2809,  0.2679],
        [ 0.1866,  0.2230,  0.2301,  ...,  0.2181,  0.1859,  0.2170]])
##########################################################
smi_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([-0.0847, -0.0490, -0.0445, -0.1036,  0.1047,  0.0644, -0.0245, -0.0003,
         0.0468, -0.1232,  0.0717, -0.1169,  0.0174,  0.0834,  0.0273,  0.0251,
        -0.1055, -0.0227, -0.0934, -0.1000, -0.1053, -0.0765,  0.0598, -0.0744,
         0.0463, -0.1234,  0.0209,  0.0470,  0.1235, -0.0195,  0.0541, -0.0480,
         0.1148, -0.0727,  0.1159,  0.0683,  0.0448,  0.0013,  0.0749, -0.0401,
        -0.0255,  0.0300, -0.0717,  0.0446,  0.1231, -0.0057,  0.0908, -0.0754,
         0.0632, -0.0747,  0.0050,  0.0100, -0.0558, -0.1103, -0.0367, -0.1223,
         0.0116,  0.0084,  0.1070,  0.0195,  0.0647, -0.1003,  0.1218, -0.0149,
        -0.0808, -0.0539,  0.0720, -0.0909,  0.0187, -0.0974,  0.0365,  0.0534,
         0.1002,  0.0488, -0.0039,  0.0430, -0.0285,  0.0922, -0.0023, -0.1090,
        -0.0465, -0.1081, -0.1037,  0.0554,  0.1193, -0.0494, -0.0893, -0.0008,
         0.0709, -0.0112,  0.0506, -0.0140, -0.0871, -0.0452, -0.0507,  0.0925,
         0.0545,  0.0031,  0.0901, -0.0819, -0.1022,  0.1177,  0.0682,  0.0710,
         0.0319, -0.0796,  0.0767, -0.1053, -0.0900, -0.0381,  0.0686, -0.0737,
        -0.0403,  0.0102, -0.1008, -0.0361, -0.0079,  0.1185,  0.0208, -0.0328,
         0.0247, -0.0611, -0.1211,  0.0626, -0.0295,  0.0828,  0.0049, -0.0736])
tensor([-0.3080,  0.1709, -0.2073, -0.2408,  0.3261, -0.1504, -0.2461, -0.2215,
        -0.1744,  0.1153, -0.1489,  0.1027, -0.2030, -0.1375, -0.2120, -0.1958,
         0.1143,  0.2019, -0.3263,  0.1201, -0.3263,  0.1429,  0.2824, -0.2970,
        -0.1730, -0.2649, -0.1997, -0.1748, -0.0980, -0.2553, -0.1644,  0.1739,
         0.3389,  0.1478,  0.3366, -0.1671,  0.2638,  0.2148, -0.1452, -0.2501,
         0.1943, -0.1921, -0.3009,  0.2677, -0.0987,  0.2422, -0.1299,  0.1396,
         0.2880, -0.2989, -0.2173,  0.2294, -0.2333,  0.1104,  0.1876,  0.0986,
        -0.2094,  0.2351, -0.1133,  0.2470, -0.1545,  0.1167,  0.0135, -0.1948,
        -0.3033, -0.2796,  0.2951, -0.3102,  0.2407, -0.3186,  0.2589,  0.2763,
        -0.1231, -0.1690,  0.2000, -0.1764,  0.1919, -0.1300,  0.2183, -0.2908,
        -0.2423, -0.3332, -0.3256,  0.2751,  0.3435, -0.2714, -0.3123, -0.2265,
        -0.1431,  0.2102,  0.2714, -0.2417,  0.1390, -0.2753,  0.1690,  0.3160,
        -0.1593, -0.2172, -0.1466,  0.1373, -0.3238,  0.3390,  0.2978,  0.2929,
        -0.1863, -0.3057,  0.2879, -0.3288,  0.1288, -0.2627, -0.1549, -0.2500,
         0.1803,  0.2298,  0.1173, -0.2599, -0.2281,  0.3394,  0.2437,  0.1590,
         0.2448, -0.2864, -0.3455, -0.1614,  0.1948, -0.1386,  0.2282,  0.1464])
##########################################################
smi_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([ 0.1157, -0.0277,  0.1660,  0.0545,  0.1352,  0.0667, -0.0553,  0.0088,
         0.0105, -0.0124, -0.1230,  0.1363,  0.1069,  0.0232,  0.0328,  0.0735,
         0.0548, -0.1966,  0.1987, -0.0401, -0.1831, -0.0292,  0.0481,  0.0943,
        -0.0915,  0.0874,  0.1286, -0.0269,  0.0250,  0.0005, -0.1106,  0.1084,
         0.0717, -0.2375, -0.0571,  0.0297, -0.0055, -0.1110,  0.0424, -0.0810,
        -0.0118,  0.0884, -0.0604, -0.0350,  0.0682, -0.0017,  0.0354, -0.1834,
         0.0826, -0.1197, -0.0912, -0.0081, -0.0084,  0.0586, -0.0522, -0.0192,
         0.1314,  0.0160, -0.1559,  0.0301, -0.1084,  0.1500, -0.1236,  0.0394,
         0.0386, -0.0807, -0.0963,  0.0846, -0.1379, -0.0915, -0.0374,  0.2219,
        -0.0645, -0.1804, -0.0882,  0.0980, -0.1779, -0.0679, -0.0870,  0.1141,
         0.0557, -0.2855,  0.0583, -0.1849,  0.0194, -0.0219, -0.2084, -0.1817,
         0.1160, -0.0577, -0.0300, -0.1437,  0.0514,  0.0474, -0.1023, -0.0991,
         0.0107, -0.1260,  0.1124,  0.0710,  0.1221,  0.0501, -0.2225, -0.0578,
        -0.0587, -0.0696, -0.0504,  0.1802,  0.1172,  0.1914,  0.0635, -0.0392,
         0.0794,  0.0306, -0.0337, -0.0823,  0.0742, -0.1210,  0.1290, -0.0645,
        -0.0566,  0.0496,  0.0939,  0.0148,  0.0195, -0.0599,  0.0152,  0.0664])
tensor([ 0.3370, -0.2755,  0.3806,  0.3425,  0.3556, -0.1452,  0.1689,  0.2258,
         0.3149, -0.1948,  0.0957,  0.3622,  0.3198, -0.1991,  0.2570, -0.1504,
         0.3085, -0.4239,  0.4486,  0.1958, -0.4040,  0.1933,  0.3023, -0.0253,
        -0.3141, -0.1372, -0.0765, -0.2522,  0.2372,  0.1835, -0.3297,  0.3305,
         0.3796, -0.4613, -0.2971,  0.0956, -0.1832, -0.4388,  0.2648, -0.1775,
        -0.2348,  0.3062,  0.1644,  0.1904,  0.2854, -0.0141,  0.2619,  0.0396,
         0.3066, -0.3457, -0.3147, -0.2239,  0.1948, -0.1855, -0.2749, -0.2317,
         0.3529,  0.2351,  0.1103, -0.1488,  0.2190, -0.0745, -0.3222,  0.3254,
        -0.2608, -0.3041, -0.3200,  0.2547, -0.3476, -0.3155, -0.2676,  0.4456,
        -0.4139,  0.0801,  0.1839, -0.1259,  0.0481, -0.2135,  0.1346,  0.3380,
         0.2229, -0.5141, -0.1652, -0.4100,  0.2390, -0.2406, -0.4340, -0.4295,
        -0.1134, -0.2779, -0.2526, -0.3601,  0.2607, -0.3201,  0.1187, -0.3209,
         0.2367, -0.3517, -0.1056, -0.1493, -0.1646,  0.2695, -0.4663, -0.3714,
        -0.2803, -0.2961, -0.2942,  0.3994,  0.3506,  0.4318,  0.2830, -0.2697,
        -0.1447, -0.2281, -0.2639,  0.1720, -0.1432,  0.1086, -0.1202,  0.3202,
        -0.2794, -0.2203, -0.1049,  0.2244, -0.2232,  0.1815,  0.2190, -0.1550])
##########################################################
smi_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2210,  0.2125, -0.1425, -0.1863,  0.2197, -0.2176, -0.2230, -0.2203,
        -0.2186,  0.1764, -0.2194,  0.2187, -0.2184, -0.2212, -0.2194, -0.2225,
         0.2152,  0.2222, -0.2273,  0.2191, -0.2204,  0.2224, -0.1842, -0.2073,
         0.2044, -0.2182, -0.2215, -0.2203, -0.2179, -0.2175, -0.2188,  0.2171,
         0.2136, -0.2199,  0.2071, -0.2087, -0.1680,  0.2289, -0.2192, -0.2106,
         0.2184, -0.2192, -0.2249,  0.2257,  0.2161,  0.2203, -0.2199, -0.2259,
         0.2199, -0.2204, -0.2195,  0.2187,  0.2300,  0.2320,  0.2185,  0.2201,
        -0.2196,  0.2212, -0.2181, -0.2093, -0.2002,  0.2155, -0.2182, -0.0955,
         0.2182, -0.2205,  0.2192,  0.1936,  0.2179, -0.2189,  0.2193,  0.2224,
         0.0054, -0.2188,  0.2019, -0.2200,  0.2228, -0.2208,  0.2210,  0.2242,
         0.2802, -0.2192, -0.2216,  0.2160,  0.2206, -0.1991, -0.2210, -0.2266,
         0.2219,  0.2232,  0.2196,  0.2247,  0.2258,  0.1972,  0.2169,  0.2247,
        -0.2039, -0.2214, -0.2281,  0.2224, -0.2200,  0.2198,  0.2230,  0.2172,
        -0.2182, -0.2220,  0.2162, -0.2214,  0.2177, -0.2235,  0.2183, -0.2100,
         0.2214,  0.2158, -0.2489, -0.2252, -0.2199,  0.2158,  0.2189,  0.2050,
         0.2202,  0.1732, -0.2339, -0.2226,  0.2284, -0.2192,  0.2232,  0.2208])
##########################################################
smi_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([-0.1992,  0.1358,  0.0121,  0.0119,  0.1456,  0.1415, -0.0605, -0.0855,
        -0.0438,  0.0166,  0.1171,  0.1309, -0.1366, -0.1175, -0.0004, -0.0339,
         0.1096,  0.1681,  0.0867, -0.1644, -0.1436,  0.1332, -0.0669, -0.0057,
         0.0436, -0.0041,  0.1800,  0.0367, -0.0719, -0.0073,  0.2465, -0.2243,
         0.0178, -0.0908,  0.0918,  0.0149,  0.0348,  0.0107,  0.1715,  0.2959,
        -0.1630, -0.0420,  0.0923, -0.1027, -0.0706,  0.0646, -0.1425, -0.0911,
         0.0516,  0.1001,  0.0212,  0.1926, -0.0045, -0.0936,  0.0573, -0.0881,
        -0.0665,  0.2115,  0.1194,  0.0395, -0.1071, -0.2732,  0.1758,  0.0036,
         0.0211, -0.0565, -0.1206, -0.2052,  0.0562, -0.0290, -0.0745,  0.1417,
        -0.0464, -0.0766,  0.0845,  0.3052, -0.1052,  0.0665,  0.2302, -0.0053,
         0.0168, -0.0155,  0.0510,  0.0962,  0.0581,  0.0085,  0.0979, -0.0524,
        -0.0748,  0.0411, -0.2163, -0.0127, -0.0365,  0.0524,  0.1387, -0.1964,
         0.0432, -0.0789,  0.0171, -0.1131, -0.0549, -0.0731,  0.2205,  0.0468,
        -0.1703,  0.0474,  0.0074,  0.0677, -0.1372,  0.1892, -0.0542, -0.0035,
        -0.0970,  0.0360,  0.1533,  0.0121,  0.1923, -0.0358, -0.0654, -0.1060,
        -0.0959,  0.0277, -0.0777,  0.0850, -0.0370,  0.0248,  0.0363, -0.1623])
tensor([-0.4429, -0.1470, -0.0879, -0.1787,  0.3640, -0.0600, -0.3301,  0.1474,
         0.2032, -0.2457, -0.1117, -0.2064,  0.1222,  0.1766,  0.3221,  0.2314,
        -0.1367,  0.4598,  0.3510,  0.0745, -0.3659, -0.1253, -0.4094, -0.2513,
         0.2442,  0.2044, -0.0673, -0.1922,  0.1708,  0.4227,  0.1301, -0.6766,
         0.2424,  0.1838,  0.3080, -0.4151,  0.2447,  0.2760, -0.0824,  0.2537,
         0.1666, -0.4218,  0.4776, -0.4417,  0.2273, -0.4099,  0.0753, -0.2478,
         0.4362,  0.3450, -0.2112,  0.3484,  0.1476,  0.1533,  0.3531,  0.1490,
         0.1869,  0.3242, -0.1423,  0.3389,  0.1454,  0.0063,  0.1837, -0.0617,
         0.2604, -0.5083, -0.3828, -0.2343,  0.3018, -0.2477, -0.4538,  0.3845,
         0.2132,  0.1380, -0.0230,  0.0635,  0.0889, -0.1910, -0.0034,  0.1431,
         0.1149, -0.2584,  0.2773,  0.2951,  0.2992,  0.2520,  0.3320, -0.3850,
         0.1746, -0.1741, -0.4040, -0.3611,  0.1940,  0.4522,  0.0114, -0.4346,
        -0.1266,  0.0850, -0.3155,  0.1549, -0.2398, -0.2940,  0.6069,  0.2850,
        -0.2650,  0.3261,  0.2388,  0.3321,  0.1105,  0.4712,  0.2470,  0.1800,
         0.1888,  0.2666, -0.2140,  0.2761,  0.1867, -0.2627, -0.3591,  0.0649,
         0.2523,  0.2428, -0.2669, -0.2581,  0.3581, -0.1990,  0.3284,  0.0942])
##########################################################
smi_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.2488,  0.1906,  0.1762,  0.1497,  0.2269, -0.1809,  0.2274,  0.2037,
         0.2141,  0.1862, -0.2254,  0.1784,  0.1542,  0.1976,  0.1871,  0.2051,
         0.2158,  0.2614, -0.3572, -0.2069,  0.2136,  0.1885, -0.2396,  0.2308,
        -0.2123, -0.1908, -0.2118, -0.2081,  0.1885,  0.1917, -0.2325, -0.2375,
         0.2302, -0.1825,  0.2208, -0.0314,  0.2204,  0.2273, -0.2037, -0.0588,
        -0.1761,  0.2366, -0.2991, -0.2425,  0.1591,  0.0465,  0.2029, -0.1913,
         0.2466, -0.2526, -0.2128,  0.2034, -0.1740, -0.1657,  0.2438, -0.2107,
         0.2127,  0.2865, -0.2005,  0.2550,  0.1253, -0.1596,  0.3405,  0.1860,
        -0.2362,  0.2879, -0.2444,  0.1970,  0.2325,  0.2224, -0.2385,  0.2418,
         0.1754,  0.1894,  0.1211, -0.1806, -0.2250, -0.1440,  0.2138, -0.1393,
        -0.0390,  0.2690, -0.2277,  0.2144,  0.2436, -0.2263, -0.2408,  0.2624,
         0.0179,  0.2004, -0.2222,  0.2899, -0.1761, -0.3075,  0.2245, -0.2491,
        -0.1011,  0.2243, -0.0914, -0.1834,  0.2478, -0.2287,  0.3056,  0.2330,
         0.1886, -0.2703,  0.2262, -0.2424, -0.2013, -0.2676,  0.1711, -0.1991,
        -0.1949,  0.2196,  0.1552, -0.2356, -0.2138, -0.2264, -0.2391, -0.0206,
        -0.1699, -0.2468,  0.2639, -0.0094, -0.1899, -0.2156,  0.2372, -0.1946])
##########################################################
prot_encoder.embedding.weight shape: torch.Size([29, 128])
tensor([[ 2.4886e-01,  1.9467e-01,  2.3676e-01,  ..., -1.7926e-01,
         -8.3672e-01,  6.2781e-01],
        [ 3.8768e-01, -8.0246e-01, -1.1083e-01,  ..., -6.9111e-02,
         -1.7946e-02,  8.1375e-01],
        [-3.6332e-02, -6.9242e-01, -1.1287e+00,  ..., -7.9413e-01,
         -4.9074e-01, -8.7455e-01],
        ...,
        [ 7.5512e-01, -5.5864e-01, -5.0096e-01,  ...,  2.4155e-01,
          5.0867e-01, -1.3138e+00],
        [-3.2454e-02, -7.2644e-01,  7.3096e-01,  ..., -9.9326e-01,
          4.8812e-01,  1.4374e-03],
        [-1.9197e+00,  1.5667e-01,  3.5023e-01,  ...,  7.4790e-01,
         -3.3693e-01, -4.8888e-01]])
tensor([[ 2.4886e-01,  1.9467e-01,  2.3676e-01,  ..., -1.7926e-01,
         -8.3672e-01,  6.2781e-01],
        [ 4.6492e-01, -6.5678e-01,  1.5218e-01,  ..., -1.8183e-01,
         -7.7182e-02,  6.9332e-01],
        [-3.6332e-02, -6.9242e-01, -1.1287e+00,  ..., -7.9413e-01,
         -4.9074e-01, -8.7455e-01],
        ...,
        [ 7.5512e-01, -5.5864e-01, -5.0096e-01,  ...,  2.4155e-01,
          5.0867e-01, -1.3138e+00],
        [-3.2454e-02, -7.2644e-01,  7.3096e-01,  ..., -9.9326e-01,
          4.8812e-01,  1.4374e-03],
        [-1.9197e+00,  1.5667e-01,  3.5023e-01,  ...,  7.4790e-01,
         -3.3693e-01, -4.8888e-01]])
##########################################################
prot_encoder.dense.weight shape: torch.Size([300, 2500])
tensor([[-0.0046,  0.0335,  0.0139,  ...,  0.0032, -0.0113,  0.0177],
        [ 0.0181, -0.0109,  0.0133,  ...,  0.0012, -0.0604, -0.0250],
        [-0.0441, -0.0052,  0.0114,  ..., -0.0092,  0.0318,  0.0023],
        ...,
        [ 0.0114,  0.0121,  0.0100,  ...,  0.0096, -0.0397, -0.0262],
        [-0.0170,  0.0206, -0.0073,  ..., -0.0103,  0.0511,  0.0034],
        [-0.0099, -0.0198,  0.0096,  ..., -0.0027,  0.0150,  0.0278]])
tensor([[ 0.1013,  0.1534,  0.0447,  ..., -0.0065, -0.0210,  0.0080],
        [-0.0289,  0.0489, -0.0126,  ...,  0.0730,  0.0114,  0.0469],
        [-0.1131, -0.1236, -0.0592,  ..., -0.0239,  0.0172, -0.0124],
        ...,
        [ 0.0206,  0.0164, -0.0114,  ...,  0.0154, -0.0338, -0.0204],
        [-0.0027,  0.0153,  0.0227,  ..., -0.0158,  0.0456, -0.0021],
        [-0.0246, -0.0665, -0.0527,  ..., -0.0097,  0.0080,  0.0208]])
##########################################################
prot_encoder.dense.bias shape: torch.Size([300])
tensor([-0.0078,  0.0094, -0.0063, -0.0140,  0.0074,  0.0195, -0.0125,  0.0059,
         0.0096, -0.0005, -0.0186,  0.0013, -0.0123,  0.0081, -0.0027, -0.0117,
        -0.0083,  0.0044,  0.0033, -0.0121,  0.0047,  0.0170,  0.0196,  0.0009,
         0.0023, -0.0177, -0.0168,  0.0094, -0.0172,  0.0051, -0.0088,  0.0029,
         0.0172,  0.0185,  0.0027, -0.0102,  0.0097, -0.0132, -0.0148, -0.0030,
        -0.0174,  0.0108, -0.0040,  0.0165, -0.0176, -0.0044,  0.0107, -0.0140,
         0.0087, -0.0003, -0.0091,  0.0036,  0.0112, -0.0167,  0.0190,  0.0162,
        -0.0141,  0.0004,  0.0045,  0.0113, -0.0163, -0.0021, -0.0133, -0.0196,
         0.0016, -0.0107, -0.0144, -0.0139,  0.0147,  0.0026, -0.0056,  0.0153,
        -0.0144,  0.0161,  0.0169, -0.0040,  0.0194, -0.0103, -0.0020, -0.0047,
         0.0035,  0.0160, -0.0132,  0.0038,  0.0160,  0.0170, -0.0016, -0.0085,
        -0.0102, -0.0090,  0.0012,  0.0163, -0.0095, -0.0087, -0.0005, -0.0134,
         0.0032,  0.0065, -0.0032,  0.0200,  0.0068,  0.0068, -0.0199,  0.0191,
         0.0131, -0.0103, -0.0075,  0.0094, -0.0198,  0.0125, -0.0149, -0.0109,
        -0.0118, -0.0199, -0.0129, -0.0078,  0.0031,  0.0063,  0.0183, -0.0197,
        -0.0022, -0.0105, -0.0067,  0.0004, -0.0052, -0.0043, -0.0143, -0.0137,
        -0.0121,  0.0019,  0.0193,  0.0067, -0.0141,  0.0137, -0.0161, -0.0068,
         0.0089,  0.0186,  0.0196, -0.0116, -0.0072, -0.0124,  0.0144,  0.0112,
         0.0134, -0.0162,  0.0187, -0.0024, -0.0150,  0.0094, -0.0188,  0.0039,
        -0.0002,  0.0028, -0.0120,  0.0164, -0.0079, -0.0087, -0.0197, -0.0182,
         0.0069, -0.0078,  0.0057, -0.0155, -0.0104, -0.0114, -0.0001, -0.0087,
         0.0087, -0.0048, -0.0050, -0.0036, -0.0048,  0.0138, -0.0128,  0.0111,
        -0.0160,  0.0177, -0.0136, -0.0129, -0.0142,  0.0101, -0.0178,  0.0115,
         0.0190,  0.0069,  0.0034, -0.0080,  0.0184,  0.0152, -0.0040,  0.0194,
         0.0012, -0.0030, -0.0005, -0.0155,  0.0028,  0.0063,  0.0047,  0.0046,
        -0.0150,  0.0034,  0.0050, -0.0025, -0.0089, -0.0160, -0.0081, -0.0002,
         0.0014, -0.0046, -0.0176,  0.0086, -0.0040,  0.0095, -0.0148,  0.0121,
         0.0048,  0.0006,  0.0050, -0.0023,  0.0062, -0.0028,  0.0040,  0.0128,
        -0.0065,  0.0193,  0.0016,  0.0025,  0.0140,  0.0172, -0.0089,  0.0150,
        -0.0156,  0.0008,  0.0124,  0.0110,  0.0161, -0.0191, -0.0133, -0.0008,
         0.0073,  0.0079, -0.0071,  0.0161, -0.0130, -0.0044, -0.0036,  0.0022,
        -0.0023, -0.0199, -0.0099, -0.0166, -0.0118,  0.0176, -0.0132, -0.0168,
         0.0152, -0.0183, -0.0154,  0.0155,  0.0097, -0.0147, -0.0133,  0.0113,
         0.0097,  0.0137, -0.0002, -0.0160,  0.0082,  0.0055,  0.0137, -0.0051,
        -0.0073,  0.0121, -0.0074,  0.0075, -0.0044, -0.0181,  0.0007, -0.0171,
         0.0046,  0.0112, -0.0181, -0.0197, -0.0067, -0.0131,  0.0120,  0.0101,
         0.0012,  0.0008, -0.0099, -0.0051, -0.0015, -0.0189, -0.0015,  0.0177,
         0.0098,  0.0008,  0.0181,  0.0087])
tensor([ 9.1075e-02, -2.0210e-02, -7.2389e-02, -1.0104e-01,  3.2045e-02,
         7.1367e-02,  3.5623e-02, -1.6408e-01, -1.1713e-02,  3.9784e-02,
        -3.5662e-02, -6.3930e-02, -4.3705e-02, -5.9281e-02, -9.8410e-03,
         4.0174e-02, -7.6110e-02,  2.8853e-02, -1.9392e-02, -4.6479e-02,
        -8.9171e-02, -6.5570e-05, -7.9170e-02,  1.0394e-01,  7.4702e-02,
        -2.9589e-02,  6.4660e-02,  1.7144e-02,  3.0014e-02,  8.9677e-02,
         2.0787e-02,  7.8283e-02,  1.0584e-01,  1.0772e-01,  2.0714e-02,
         4.4866e-02,  6.1449e-03,  7.5313e-02, -5.0904e-03, -1.5039e-03,
        -2.9941e-02,  8.9864e-03,  6.3065e-03,  8.5464e-02, -1.4504e-02,
         8.5235e-02,  2.0691e-02,  6.0074e-02, -4.5790e-02, -1.4092e-02,
         2.5053e-02, -6.7171e-02, -5.3574e-02, -2.0262e-02, -2.8989e-02,
         7.6459e-02,  6.3739e-02,  2.9585e-02,  3.6303e-02,  1.9514e-02,
        -8.8807e-02,  1.9221e-02,  2.8071e-02, -6.1242e-02,  4.8672e-02,
        -3.7036e-03, -4.2894e-02, -3.2302e-02, -1.2317e-03,  1.7026e-03,
        -4.6002e-02,  4.0437e-02, -1.2400e-02,  8.3120e-02, -4.6287e-02,
         4.4312e-02,  3.5039e-02, -3.7441e-02, -1.9121e-02,  7.4284e-03,
        -4.9306e-03,  3.2271e-02,  1.4615e-02, -5.9373e-03,  7.3438e-02,
         1.3672e-02,  6.9079e-03,  1.4637e-02, -2.5145e-02,  1.5775e-03,
         4.4274e-02,  7.5357e-03,  1.4864e-02, -6.7884e-02,  2.8938e-02,
         4.5300e-02, -1.2847e-02, -4.6047e-03, -4.8926e-03,  1.4006e-02,
         9.0023e-02,  5.0673e-02, -5.8342e-02,  2.3239e-02,  3.6434e-02,
        -4.6232e-02,  1.1990e-03,  4.1472e-02,  6.9458e-03,  1.7260e-02,
         5.1681e-02, -5.6676e-02, -3.0528e-02, -2.1493e-02, -1.3457e-02,
        -2.9832e-02,  1.2420e-03,  4.1594e-02, -1.9202e-03, -2.8007e-02,
         5.6980e-02, -7.1991e-02,  1.3976e-02,  1.4431e-02,  1.7816e-03,
         2.3529e-03, -3.6612e-02, -5.8559e-03, -5.6904e-02, -8.8708e-03,
        -1.4517e-02,  2.2082e-02, -1.9739e-02, -1.1255e-02,  1.0353e-02,
        -2.4170e-02, -3.7439e-02,  3.9394e-02,  1.0718e-01, -4.2732e-02,
        -1.2187e-02,  3.0924e-03,  3.7618e-02, -1.1991e-02,  1.8335e-02,
        -4.1221e-02,  2.5574e-02,  1.0598e-02, -3.0141e-02,  4.1959e-02,
         3.5363e-03, -2.4730e-02,  1.7394e-02,  1.9901e-02, -3.3721e-02,
         2.6010e-02,  4.2638e-03,  1.9061e-03, -6.5828e-03, -9.1493e-02,
         6.8795e-03,  1.6603e-02,  6.9471e-03,  3.6705e-02, -6.3500e-02,
        -2.0220e-02,  2.0644e-02, -1.5867e-02,  2.1758e-02,  5.5460e-02,
         1.9399e-02, -2.7669e-02, -1.3262e-02,  1.9522e-02, -4.1024e-02,
        -3.5855e-02, -5.6786e-03,  3.2116e-02, -7.5760e-02, -1.0719e-02,
        -5.5647e-04,  3.6899e-02, -4.6266e-03,  5.1027e-02,  5.0472e-02,
         9.6861e-03, -1.4151e-02, -2.8373e-02,  1.4277e-02,  6.6700e-02,
         2.0580e-02, -3.4470e-02, -6.8020e-02, -2.8013e-02, -4.3531e-02,
        -2.1325e-02,  3.2715e-02, -1.4469e-02, -2.3160e-02, -9.4636e-04,
        -9.2919e-03,  1.1967e-01,  1.7650e-02, -5.0339e-02,  1.0902e-02,
        -3.9664e-02, -2.7207e-02, -1.2623e-02, -1.3384e-02,  2.8977e-03,
         4.0425e-02,  2.4781e-02,  3.5378e-02, -1.1651e-04, -4.9288e-02,
        -4.0435e-02, -1.7382e-02, -3.5529e-03,  4.3908e-02, -7.2832e-03,
        -1.1120e-02,  2.9994e-02,  1.0250e-02,  4.9257e-02,  1.2266e-02,
         2.3735e-02,  2.9391e-02, -1.8169e-01, -5.0999e-04,  1.6234e-02,
         1.5168e-02,  2.1138e-02, -3.2686e-02,  7.3492e-02,  3.6929e-02,
        -7.5015e-03,  6.3746e-03, -2.5567e-02, -2.6084e-02, -1.6100e-02,
        -4.6999e-02,  2.3750e-02, -3.6462e-03,  4.4485e-02, -4.2545e-03,
         7.8401e-03,  8.6875e-04,  5.1001e-03, -9.5405e-03, -4.6957e-02,
        -1.7528e-02, -7.2688e-04, -3.3683e-02,  1.5180e-02, -5.8124e-02,
        -1.4032e-02,  4.0787e-02, -4.1525e-02, -1.9061e-02,  2.3414e-02,
         2.7737e-02, -2.7412e-02, -2.1930e-02,  3.1937e-02,  1.5089e-02,
        -4.3728e-02,  9.2845e-02, -6.0830e-02, -7.4184e-03, -9.4330e-03,
         1.3377e-02,  4.3783e-02,  7.4647e-02, -3.4902e-02, -2.4446e-02,
        -3.3534e-03,  1.9497e-02, -3.3782e-02,  4.8967e-02, -4.6104e-02,
         1.9914e-02,  1.8632e-02,  3.4572e-03, -2.3450e-02, -2.5925e-03,
        -3.4002e-02,  8.0497e-02,  2.2421e-02,  5.4432e-02, -7.8797e-03,
        -3.6316e-04, -8.0740e-03, -2.7499e-02, -1.3000e-02, -4.2760e-03,
        -1.1582e-01, -1.3624e-02, -5.8481e-04,  1.0653e-02, -2.6449e-02])
##########################################################
prot_encoder.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[ 0.0625, -0.0888,  0.0325,  ..., -0.0413, -0.1170, -0.0194],
        [ 0.0327,  0.0166, -0.0468,  ..., -0.0826, -0.0350,  0.0687],
        [ 0.0601, -0.0569,  0.0553,  ...,  0.0305,  0.0764, -0.0156],
        ...,
        [-0.2163, -0.0391,  0.0715,  ...,  0.0109, -0.0161, -0.1881],
        [ 0.0885, -0.0628, -0.0138,  ..., -0.1428,  0.0095, -0.1391],
        [ 0.0122, -0.0518,  0.1446,  ...,  0.1639,  0.0109,  0.2008]])
tensor([[ 0.0137, -0.1094, -0.0006,  ..., -0.0455, -0.1254, -0.0776],
        [ 0.0005,  0.0009, -0.0688,  ..., -0.0792, -0.0320,  0.0601],
        [ 0.0536, -0.0601,  0.0191,  ...,  0.0470,  0.0974, -0.0618],
        ...,
        [-0.2328, -0.0954,  0.0303,  ...,  0.0010,  0.0033, -0.2325],
        [ 0.0581, -0.1267, -0.0097,  ..., -0.1347, -0.0056, -0.1372],
        [-0.0476, -0.0845,  0.1339,  ...,  0.1032,  0.0153,  0.1885]])
##########################################################
prot_encoder.ffn.dense1.bias shape: torch.Size([64])
tensor([ 0.0297, -0.0547, -0.0600,  0.0521,  0.0715, -0.0048, -0.0319,  0.0107,
        -0.0165,  0.0362,  0.0324, -0.0323, -0.0178, -0.0340,  0.0117,  0.0323,
         0.0229, -0.0794,  0.0714,  0.0722,  0.0588, -0.0495, -0.0550,  0.0873,
         0.0316, -0.0507, -0.0502,  0.0142,  0.0365, -0.0353,  0.0208,  0.0866,
         0.0366,  0.0116,  0.0822,  0.0141, -0.0440,  0.0156, -0.0507, -0.0500,
         0.0653,  0.0340, -0.0737, -0.0443, -0.0444,  0.0032,  0.0811, -0.0764,
        -0.0070, -0.0238,  0.0005, -0.0264,  0.0288, -0.0374,  0.0324,  0.0759,
        -0.0589, -0.0091,  0.0213, -0.0699,  0.0037,  0.0478,  0.0315,  0.0161])
tensor([-0.0539, -0.0407, -0.1229,  0.0971, -0.0271,  0.1265, -0.0573, -0.0713,
        -0.1130,  0.0719,  0.1793, -0.0997, -0.0472, -0.1283,  0.0603,  0.1008,
         0.0650, -0.0614,  0.0172,  0.0371, -0.0024, -0.0501, -0.0670, -0.0148,
         0.0556, -0.0102, -0.0212,  0.0406, -0.0478,  0.0316,  0.0110,  0.1443,
        -0.0190, -0.0230,  0.1037,  0.0955, -0.0969, -0.0323, -0.1122, -0.0869,
         0.0322,  0.0781, -0.1981, -0.0760, -0.0396,  0.0888,  0.0707, -0.0431,
         0.0670, -0.0856, -0.0534,  0.0178,  0.0526, -0.1436,  0.0685,  0.0445,
         0.0127,  0.0219,  0.0719, -0.0323, -0.0815, -0.0266,  0.0056, -0.0174])
##########################################################
prot_encoder.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[ 0.0650, -0.0021,  0.2263,  ...,  0.0097, -0.1004,  0.0046],
        [ 0.1908,  0.0467,  0.0665,  ..., -0.0719, -0.1216,  0.0612],
        [ 0.3143, -0.0102,  0.0751,  ..., -0.1266,  0.1843,  0.0632],
        ...,
        [-0.0086, -0.1084,  0.0742,  ..., -0.0728, -0.0497,  0.0435],
        [ 0.0070, -0.1467, -0.1212,  ...,  0.1077, -0.1965, -0.0280],
        [-0.0292,  0.0657, -0.0505,  ...,  0.0661, -0.0383, -0.0117]])
tensor([[ 0.0564, -0.0102,  0.2166,  ..., -0.0085, -0.0813,  0.0408],
        [ 0.1854,  0.0406,  0.0598,  ..., -0.0807, -0.1454, -0.0323],
        [ 0.3232, -0.0012,  0.0807,  ..., -0.1137,  0.1803, -0.0821],
        ...,
        [ 0.0395, -0.1030,  0.0779,  ..., -0.0286,  0.0684,  0.1648],
        [ 0.0021, -0.1521, -0.1213,  ...,  0.0973, -0.2240, -0.1265],
        [-0.0198,  0.0455, -0.0312,  ...,  0.0856,  0.0068, -0.0840]])
##########################################################
prot_encoder.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.1085,  0.0881,  0.0972, -0.1037,  0.0206, -0.0317,  0.1064,  0.0867,
        -0.0329,  0.0112,  0.1055, -0.0727, -0.0676,  0.0085,  0.0947, -0.0934,
         0.0792,  0.0911, -0.0653, -0.0117, -0.0045, -0.0669,  0.0188,  0.0378,
        -0.0807, -0.0966, -0.0464,  0.1238,  0.0840,  0.0648, -0.0143,  0.1207,
         0.0097,  0.0954,  0.1107, -0.0344,  0.0608,  0.0045, -0.0935, -0.0367,
        -0.0883,  0.0650,  0.0185,  0.0673,  0.0060, -0.0021,  0.0208,  0.0594,
         0.0337,  0.0192,  0.1068,  0.0002,  0.0044, -0.1193,  0.0257,  0.0713,
        -0.0135,  0.0358,  0.1199,  0.1230,  0.1066,  0.1234, -0.1138,  0.1096,
        -0.0125,  0.0621,  0.0413, -0.0858, -0.0326, -0.0455,  0.0032, -0.0210,
        -0.0274, -0.0494,  0.0205,  0.0986, -0.0654,  0.0584, -0.0786,  0.0140,
         0.0012,  0.0935,  0.0796, -0.0746, -0.1014, -0.0944, -0.1169,  0.0218,
         0.0927, -0.0562,  0.0057,  0.0659, -0.0863, -0.0790,  0.1092, -0.0801,
         0.0002,  0.0457, -0.1164, -0.1204,  0.0604, -0.1208,  0.0626, -0.1037,
        -0.0146, -0.0459, -0.0171, -0.1031, -0.0405,  0.0072, -0.0030, -0.0812,
        -0.1111, -0.0840,  0.0370,  0.0025, -0.0636,  0.0479,  0.0571, -0.0786,
         0.1110, -0.0077, -0.1045,  0.1029,  0.0823,  0.0206,  0.0941,  0.0071])
tensor([ 0.1251,  0.0767,  0.1893,  0.0403, -0.0356, -0.0196,  0.2087,  0.1956,
        -0.1185, -0.1016,  0.0539, -0.1801,  0.0590,  0.0029,  0.0732, -0.1052,
         0.2113,  0.0059, -0.0762, -0.1518,  0.0292, -0.0899,  0.0029,  0.0968,
        -0.0419, -0.0027, -0.1763,  0.0602,  0.0635,  0.1021, -0.0965,  0.0450,
        -0.0178,  0.2108,  0.0455, -0.0943,  0.2044,  0.0151, -0.1562,  0.1292,
        -0.1824, -0.0272, -0.0777,  0.0720,  0.0334, -0.1431, -0.0710,  0.1561,
        -0.0182,  0.1402,  0.1825, -0.1151,  0.0870, -0.1924, -0.0349,  0.1612,
         0.0607, -0.0354,  0.1187,  0.0371,  0.0451,  0.1156, -0.1788,  0.0737,
         0.0506,  0.0330,  0.0111,  0.0010, -0.0027,  0.0283,  0.0653, -0.0668,
         0.0647, -0.0678, -0.0295,  0.0318, -0.0943, -0.0693, -0.1367, -0.0178,
        -0.0712, -0.0291,  0.1328, -0.1047, -0.1867, -0.1298,  0.0509, -0.0362,
        -0.0125, -0.1269,  0.1045, -0.0138, -0.0706, -0.0467,  0.2059, -0.0012,
         0.0862,  0.0607, -0.2235, -0.1148,  0.0804, -0.0875,  0.0526, -0.2320,
        -0.0911,  0.0459,  0.0515, -0.0117, -0.1324,  0.0535,  0.0462, -0.1400,
        -0.1487, -0.0432, -0.0252,  0.0018, -0.1560,  0.1203,  0.0359, -0.0205,
         0.1606,  0.0448, -0.1259,  0.0134, -0.0132,  0.0011,  0.0383,  0.0466])
##########################################################
prot_encoder.addnorm.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.8963, 0.9455, 1.3086, 0.4227, 0.8327, 0.9139, 1.0882, 0.9702, 1.2247,
        1.3515, 1.2111, 0.4723, 1.5472, 1.0817, 1.3666, 1.5446, 0.8433, 0.7794,
        1.0080, 1.1848, 0.9869, 1.2061, 0.9024, 0.5866, 0.8453, 0.7056, 0.9092,
        0.7377, 1.1627, 0.7922, 1.4603, 1.0373, 1.3815, 0.5649, 0.9599, 0.9200,
        0.5837, 0.8055, 1.1943, 0.7189, 1.1371, 0.6618, 0.7903, 0.9003, 0.9871,
        1.1223, 1.6205, 1.1353, 0.8042, 0.5474, 1.3701, 0.7932, 0.9940, 0.9518,
        0.8645, 0.8481, 1.0356, 0.9394, 1.1759, 0.5709, 0.7977, 1.2467, 0.7465,
        0.7805, 0.5953, 1.7325, 0.9819, 0.8991, 0.8609, 0.7417, 1.1991, 0.5083,
        1.1371, 1.1104, 0.9941, 1.0310, 0.8481, 1.0718, 0.8490, 0.9798, 0.6547,
        0.8338, 1.3461, 1.2593, 0.5472, 1.3004, 0.7199, 0.6467, 0.9824, 0.8720,
        1.0740, 1.0756, 1.0985, 0.8150, 0.9828, 1.9546, 1.4210, 0.9866, 1.1246,
        0.9166, 1.5909, 1.0374, 1.0870, 0.9357, 0.6849, 0.9415, 0.9495, 0.6473,
        0.9069, 0.9009, 1.0205, 0.9621, 1.0398, 0.9885, 1.4647, 1.5872, 0.9701,
        0.9582, 0.6932, 1.1646, 1.1366, 1.1624, 0.8830, 0.8081, 0.9557, 0.9444,
        0.8737, 0.9561])
##########################################################
prot_encoder.addnorm.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0168, -0.3333, -0.3983,  0.3205,  0.1262,  0.0653,  0.2863,  0.4037,
        -0.5739, -0.4243,  0.1927, -0.0233,  0.6854, -0.2324, -0.4100,  0.3905,
         0.0213, -0.3574,  0.1877, -0.3143, -0.1473,  0.3515, -0.0216, -0.1092,
         0.2654,  0.0058, -0.3560, -0.1713,  0.3281, -0.0590, -0.5164, -0.4547,
        -0.3467, -0.0461, -0.2879,  0.0566,  0.2137, -0.0123,  0.2247,  0.1546,
         0.2104, -0.3410,  0.0532, -0.1597,  0.0973, -0.3726,  0.4009, -0.1605,
        -0.0034,  0.0160,  0.4991,  0.1813,  0.1724, -0.0406, -0.1027,  0.2701,
         0.3498, -0.2226, -0.1816, -0.1720, -0.0980,  0.4346, -0.1803,  0.0975,
        -0.0298, -0.5640,  0.0838, -0.0925, -0.2469,  0.0712,  0.3992, -0.2221,
         0.3397,  0.1822,  0.1853,  0.1945, -0.3082, -0.3542, -0.0168, -0.2810,
         0.0727, -0.4535,  0.4341, -0.3059,  0.0690, -0.4990,  0.0612, -0.2170,
        -0.2145, -0.1369,  0.4234,  0.3051,  0.2277,  0.1048, -0.0867,  0.7275,
         0.5140,  0.1976, -0.1123,  0.4756, -0.5284,  0.0778, -0.1504, -0.1499,
        -0.0759, -0.3044, -0.2135, -0.1186,  0.0102, -0.0524, -0.2814,  0.1640,
         0.1239, -0.0480, -0.4146, -0.5258, -0.1168, -0.0170,  0.0800,  0.3962,
        -0.0859, -0.1108,  0.2324, -0.1725, -0.1758,  0.3564, -0.2329, -0.0595])
##########################################################
prot_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0447,  0.0406, -0.0004,  ...,  0.0050,  0.0602,  0.0768],
        [-0.0321,  0.0018, -0.0561,  ..., -0.0456, -0.0133, -0.0659],
        [-0.0721,  0.0752, -0.0500,  ..., -0.0936,  0.0893, -0.0104],
        ...,
        [ 0.0024,  0.0144, -0.0839,  ...,  0.0488,  0.0222,  0.0532],
        [ 0.0208,  0.0765, -0.0441,  ...,  0.0630, -0.0361, -0.0231],
        [-0.0245,  0.0456,  0.0210,  ...,  0.0449, -0.0157,  0.0597]])
tensor([[-0.0197, -0.0379, -0.0745,  ...,  0.0012,  0.0710,  0.0293],
        [-0.0173, -0.0536, -0.1122,  ..., -0.0254, -0.0249, -0.0877],
        [-0.0696,  0.0471, -0.0730,  ..., -0.1566,  0.1358, -0.0341],
        ...,
        [-0.0322, -0.0120, -0.1144,  ...,  0.0899, -0.0236,  0.1017],
        [ 0.0679,  0.0152, -0.1134,  ...,  0.1852, -0.0954, -0.0789],
        [-0.0317,  0.2526,  0.3008,  ..., -0.1560,  0.1105,  0.1668]])
##########################################################
prot_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-6.6570e-03,  2.3489e-02, -6.5931e-02, -4.0869e-02, -4.8354e-03,
        -7.4146e-03,  2.2218e-02, -4.3480e-02, -1.0091e-03,  4.7120e-02,
         2.6038e-03, -4.6127e-02,  9.7254e-03,  3.2509e-02,  8.5085e-03,
         7.7788e-03,  2.0769e-02,  1.8983e-02,  2.3271e-02,  4.3924e-02,
         1.7721e-03,  7.2084e-02,  2.0188e-02,  2.0417e-03, -4.1230e-02,
        -4.2627e-02,  1.8725e-02, -6.3305e-02, -3.5419e-02, -6.0875e-02,
         2.4622e-02, -4.0323e-02,  6.0417e-03,  1.4834e-02,  9.9766e-03,
        -1.1893e-02,  2.7153e-02,  1.1907e-02,  2.1657e-03,  1.0116e-02,
         1.4992e-02, -1.4714e-02,  5.1276e-03,  6.5719e-04, -2.6962e-02,
        -1.9027e-02,  3.7258e-02,  3.7764e-02,  1.6921e-02,  4.4816e-02,
         5.0105e-03,  2.9396e-02,  5.4820e-02, -1.7658e-02,  3.0564e-02,
         1.1072e-02,  4.2213e-02, -2.0509e-02, -4.7394e-02,  6.0622e-02,
        -3.9064e-02,  6.4121e-04,  1.6007e-02, -5.4836e-03,  1.6542e-02,
        -4.0724e-03, -2.5985e-03,  1.3089e-02,  2.4467e-02,  2.0557e-02,
        -1.6163e-02, -6.5217e-03, -1.5109e-02,  7.6352e-03,  1.4951e-02,
         1.2079e-02, -8.3049e-03,  2.7882e-03, -1.5613e-02, -2.6247e-03,
         1.1041e-01,  6.1560e-02, -5.5736e-02, -6.5149e-02, -4.0342e-02,
         9.1815e-03,  5.3399e-02,  1.3019e-02, -4.8429e-02,  6.4099e-02,
        -1.2710e-01,  1.0348e-01, -1.8268e-01, -2.4578e-02, -2.3737e-02,
        -7.2215e-02,  4.5402e-02, -5.2181e-02, -1.5812e-02, -4.8146e-03,
         8.6368e-02,  3.0424e-02, -5.7993e-02,  7.2726e-03,  6.0418e-03,
         4.5590e-02, -3.4574e-02,  8.6196e-02,  9.2181e-03, -1.2841e-02,
         2.4927e-02, -3.8995e-02,  2.2520e-03, -2.7221e-04, -5.5585e-03,
        -1.0151e-04,  1.3994e-02, -8.3926e-03, -3.5587e-03,  2.1020e-03,
        -1.1227e-02,  2.0649e-03, -9.9902e-03,  4.2143e-03,  1.5656e-02,
         9.3344e-03, -2.1759e-03, -1.2980e-02, -4.8872e-06, -2.0039e-06,
         2.4179e-06,  1.8825e-06,  1.4856e-06, -2.6093e-06, -4.9422e-06,
         2.7901e-06,  1.9362e-06,  1.5687e-06,  1.2429e-06,  5.9432e-06,
         4.8809e-06, -4.7093e-08, -7.4047e-07, -6.1091e-06, -2.3208e-07,
        -6.3072e-08,  6.0900e-07,  2.3636e-07, -7.5233e-07,  8.7739e-07,
        -2.3251e-07,  1.4592e-07, -3.3377e-07, -5.4346e-07,  9.1853e-07,
        -1.6177e-06, -1.3686e-06, -1.3022e-06,  1.9488e-07, -4.1939e-07,
         1.0617e-06, -1.4098e-06,  1.4537e-06, -3.2981e-07,  6.9767e-06,
         3.3770e-06,  4.5423e-06,  4.3962e-06,  3.8425e-07, -3.2995e-06,
        -3.2374e-06, -2.6258e-06, -4.9668e-06, -6.9957e-06,  2.8461e-06,
         5.0386e-06,  9.9353e-06,  1.5741e-05,  5.7061e-06, -5.4370e-06,
         1.1827e-05, -4.8955e-06,  4.7149e-06,  6.6110e-06,  5.7527e-06,
        -4.8704e-06, -4.0038e-06, -4.9527e-07, -7.2240e-06,  1.2018e-05,
         8.2763e-06,  9.6426e-07, -1.7057e-07,  6.3258e-07,  8.1417e-07,
         3.4952e-07, -9.3349e-07,  4.6533e-07, -4.6380e-07,  1.2890e-06,
         6.7168e-07,  9.2374e-07,  1.2788e-07, -8.4258e-07, -4.4956e-07,
         9.5555e-07, -1.3285e-06, -5.4495e-07, -3.1140e-06, -5.6615e-06,
         3.6542e-06,  7.8313e-06,  3.0968e-06, -2.2206e-06, -2.3957e-06,
        -1.0312e-06,  2.2782e-06, -2.8225e-06,  6.4323e-06, -7.4311e-06,
         9.5193e-06,  2.5897e-06,  8.0893e-07,  8.2840e-06,  3.4555e-06,
        -2.2491e-06, -8.7639e-08,  1.8135e-06,  4.5992e-06,  2.3727e-06,
        -2.0968e-06,  4.6322e-07, -3.5890e-07,  2.4865e-06, -1.1316e-06,
         2.2955e-06,  1.7070e-06, -3.6200e-07,  2.1571e-06, -1.3118e-06,
         3.0897e-07,  3.7784e-07, -3.7060e-07, -5.0147e-07,  1.3241e-08,
        -2.1982e-07,  7.9424e-09,  4.3173e-08,  1.5459e-07, -4.3520e-08,
         1.3936e-07,  1.0091e-07,  2.1599e-08,  3.0366e-07, -5.9589e-08,
         8.5658e-07,  1.6715e-01,  2.5641e-01, -1.0087e-01, -2.7934e-01,
         1.9628e-01,  9.4870e-02,  2.9959e-02, -7.7506e-02, -5.7550e-03,
        -2.0362e-02,  6.0533e-02, -3.1778e-01, -1.2303e-01,  1.0249e-01,
         4.4624e-02,  7.1805e-02,  1.0731e-01, -1.5808e-01, -2.0245e-01,
        -1.4341e-01,  1.9287e-01, -1.1849e-02,  1.2387e-02,  1.4323e-01,
        -1.9376e-01,  9.8400e-02,  4.7921e-02, -7.6448e-02, -4.4570e-02,
         1.2132e-01,  1.4166e-01, -1.6902e-01,  1.5533e-02,  1.4229e-01,
         2.4633e-01,  3.0299e-01,  3.7098e-02,  3.0132e-01,  1.1715e-01,
        -1.6458e-01,  2.2507e-01, -3.3373e-01, -2.0093e-01, -3.7220e-01,
         2.4869e-01, -1.1324e-01, -1.8819e-01,  4.0465e-02, -4.8582e-02,
         3.1127e-02,  1.0060e-01,  1.9588e-01, -8.7779e-02, -1.6306e-01,
        -1.6229e-03, -2.1475e-02,  3.0567e-01,  1.0974e-01,  1.3696e-02,
        -9.9121e-03,  2.5974e-01, -6.1989e-02,  4.6762e-02, -2.3056e-01,
         2.0561e-01,  1.3902e-01,  1.0114e-01,  1.2098e-01, -1.4245e-01,
        -7.4894e-02, -1.3691e-02, -1.6090e-01, -9.2247e-02, -6.9516e-02,
         1.2914e-02,  1.1980e-01, -1.9364e-01,  9.8683e-02, -3.4248e-02,
        -1.3311e-01,  6.6443e-02, -1.1199e-01, -2.1611e-01,  1.3678e-01,
         2.9222e-01, -2.2234e-02, -4.9864e-02, -1.0370e-01,  1.3296e-01,
         1.2791e-01, -1.0793e-01, -2.3753e-01,  5.4760e-02,  1.1098e-01,
         3.7505e-02,  2.6734e-02, -8.0745e-02, -1.9280e-01,  1.1716e-01,
         2.9723e-03, -1.0080e-01, -1.3146e-01, -7.3872e-02, -8.8062e-03,
         7.9138e-02,  1.4524e-01, -1.0351e-01, -2.1711e-02,  2.1463e-01,
        -3.7582e-02, -1.2214e-01,  1.7430e-01,  1.6442e-01,  5.1208e-02,
         8.0243e-02,  9.7696e-02,  4.7461e-02, -2.7034e-01, -4.7736e-02,
        -8.0729e-02,  1.9061e-01,  1.2090e-01,  1.8690e-01,  1.5115e-01,
        -1.0609e-01, -1.0067e-02,  8.6731e-02, -1.1413e-01])
##########################################################
prot_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0777,  0.0435, -0.0862,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0485, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0306,  0.0483],
        [-0.0517, -0.0149,  0.0659,  ...,  0.0579, -0.0457,  0.0403]])
tensor([[ 0.1434,  0.1194, -0.0033,  ...,  0.0261, -0.0212, -0.1086],
        [-0.1534,  0.0229, -0.0081,  ..., -0.0349, -0.0709,  0.0419],
        [ 0.8221,  0.9433, -0.5089,  ...,  0.1903,  0.3293, -0.8622],
        ...,
        [-0.2322, -0.2518,  0.1191,  ..., -0.2160, -0.0841, -0.0828],
        [ 0.7310,  0.6156, -0.5420,  ...,  0.3451,  0.4116, -0.5004],
        [ 0.1196,  0.1906, -0.0512,  ..., -0.0311, -0.1132,  0.1239]])
##########################################################
prot_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0858,  0.0673,  0.1182,  0.1387,  0.1109, -0.0201,  0.1614,  0.0788,
        -0.3719, -0.1719, -0.0253, -0.2324,  0.1484,  0.1211, -0.0582,  0.0172,
         0.0525, -0.1343, -0.1217, -0.1129, -0.2130, -0.2015, -0.1489,  0.0057,
         0.0593,  0.1279, -0.1308, -0.0073, -0.1887,  0.0802, -0.0929, -0.1887,
        -0.0629, -0.0866, -0.1460,  0.0246,  0.1184, -0.1183, -0.0181,  0.1032,
         0.0077, -0.0057, -0.0384, -0.1214, -0.1012,  0.0355,  0.1302,  0.1032,
        -0.0875,  0.1570,  0.2587, -0.0395,  0.0884, -0.1025,  0.1222,  0.0691,
        -0.0978, -0.0046,  0.0799, -0.1185, -0.0407, -0.1188, -0.0346, -0.0517,
         0.0173,  0.0277, -0.0854,  0.1812, -0.1367, -0.0455,  0.1055, -0.0760,
        -0.1479, -0.0176,  0.0439, -0.0659, -0.0676, -0.0380, -0.0237, -0.0007,
        -0.0743, -0.2203,  0.0151, -0.0240, -0.1182, -0.3276, -0.1240, -0.0909,
        -0.0791, -0.1163,  0.0193, -0.0986, -0.0928,  0.0984,  0.0639,  0.1654,
         0.0844, -0.0515,  0.0363,  0.1235,  0.0146, -0.1707,  0.0654,  0.3421,
        -0.0036,  0.0392, -0.1664, -0.0085,  0.0490,  0.1582,  0.0674,  0.0365,
        -0.0447, -0.1390, -0.0179, -0.0853, -0.0264,  0.0075, -0.0291,  0.0777,
        -0.0027, -0.0394, -0.1288,  0.0011, -0.0419,  0.0664, -0.0857, -0.1680])
##########################################################
prot_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[ 0.1023,  0.1025, -0.0395,  ..., -0.1097, -0.0409, -0.0524],
        [-0.0059, -0.0582, -0.1388,  ..., -0.0024,  0.0547, -0.0562],
        [ 0.0163, -0.0501, -0.0022,  ..., -0.0148,  0.1996, -0.1120],
        ...,
        [ 0.0895,  0.0092,  0.1255,  ...,  0.1240, -0.0793, -0.0191],
        [ 0.0492,  0.0580, -0.0221,  ..., -0.0803, -0.1060, -0.0250],
        [ 0.0010,  0.0782, -0.0348,  ...,  0.1269, -0.0597,  0.0830]])
tensor([[-0.0441,  0.0606, -0.1336,  ...,  0.1496, -0.0859, -0.0186],
        [-0.0920, -0.2157, -0.7123,  ..., -0.0069, -0.0591, -0.7014],
        [ 0.0132,  0.0940, -0.2411,  ..., -0.3599,  0.3384,  0.2979],
        ...,
        [ 0.1584, -0.0943,  0.1829,  ..., -0.1262, -0.0153,  0.1324],
        [-0.2135,  1.1023,  1.0791,  ..., -0.0843, -0.8969,  0.3449],
        [-0.4435, -0.1900, -0.0634,  ...,  0.0409,  0.2200,  0.4702]])
##########################################################
prot_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([-0.0250,  0.0180, -0.0861,  0.0376, -0.0467,  0.0681,  0.0507, -0.0192,
         0.0337, -0.0159,  0.0222,  0.0514, -0.0768,  0.0162,  0.0261,  0.0345,
         0.0281,  0.0324,  0.0413,  0.0028, -0.0356,  0.0813, -0.0696,  0.0608,
        -0.0431, -0.0643, -0.0072,  0.0071,  0.0649,  0.0702, -0.0061,  0.0290,
        -0.0727, -0.0272, -0.0382,  0.0734, -0.0835, -0.0438, -0.0425,  0.0427,
        -0.0032,  0.0075, -0.0350,  0.0270, -0.0527, -0.0279,  0.0828, -0.0536,
         0.0573,  0.0599,  0.0368, -0.0062, -0.0522, -0.0149,  0.0005,  0.0297,
         0.0508, -0.0860, -0.0782,  0.0585,  0.0812,  0.0567, -0.0077,  0.0127])
tensor([-0.2517, -0.4006, -0.3358, -0.6914, -0.5823,  0.4082, -0.0365, -0.3151,
         0.3167, -0.2475,  0.4253,  0.8343, -0.7836,  0.7428,  0.0092,  0.5273,
        -0.4783,  0.8578, -0.1079, -0.4714,  0.1068, -0.5906, -0.1546,  0.3938,
        -0.3071, -0.6020,  0.3101,  0.4989,  0.2272, -0.2186, -0.3965,  0.2983,
        -0.1178,  0.2284, -0.4307, -0.3190, -0.6375, -0.3468, -0.2794, -0.6233,
         1.3180,  1.3133,  0.3238,  0.0033,  0.0906, -0.3608, -0.1685, -0.4924,
        -0.3887, -0.1817, -0.7606, -0.5148, -0.5578, -0.5537,  0.0281, -0.1799,
        -0.3873,  0.0996,  0.1995,  0.4980, -0.2917, -0.3464,  0.7865,  0.3535])
##########################################################
prot_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.1235, -0.0371,  0.0480,  ..., -0.0513,  0.1049, -0.0373],
        [-0.0668, -0.0338, -0.0611,  ...,  0.1122, -0.0735, -0.0162],
        [ 0.0925,  0.1348, -0.0481,  ..., -0.0221,  0.0337,  0.0772],
        ...,
        [-0.1828, -0.0493,  0.0157,  ...,  0.0097,  0.0514, -0.1130],
        [ 0.0743,  0.0680,  0.0260,  ...,  0.0441, -0.1305, -0.1707],
        [-0.0423,  0.0712, -0.0713,  ...,  0.0064,  0.1508, -0.0948]])
tensor([[-0.1981, -0.1956,  0.3041,  ..., -0.1396,  0.9007,  0.1485],
        [-0.1252, -0.2711,  0.1855,  ...,  0.1075, -0.5769,  0.1367],
        [ 0.0879, -0.1431, -0.1177,  ..., -0.4737, -1.3912,  0.2411],
        ...,
        [-0.0160,  0.2120,  0.2601,  ..., -0.4545, -0.7568, -0.1258],
        [ 0.1591,  0.5043, -0.0522,  ...,  0.4633, -0.2290,  0.4684],
        [ 0.0887,  0.2878, -0.4042,  ..., -0.5835,  0.6014,  0.2455]])
##########################################################
prot_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([-0.1182,  0.0646,  0.0008, -0.0595,  0.0710, -0.0074, -0.0845, -0.1114,
         0.0555,  0.0241, -0.1157,  0.0894, -0.0410, -0.0008,  0.0374,  0.0021,
        -0.0535,  0.0135,  0.0153,  0.0757,  0.0807,  0.0810, -0.0713,  0.0207,
         0.1064, -0.0170,  0.0162,  0.0275, -0.0396, -0.0285, -0.0726, -0.0859,
        -0.0350, -0.1200,  0.0271, -0.0607,  0.1068, -0.0537,  0.0798, -0.0467,
        -0.0325,  0.0945,  0.0455, -0.0038, -0.0678,  0.1204,  0.0363,  0.0999,
        -0.0391, -0.1018, -0.0562,  0.0251,  0.0028,  0.1054,  0.0747,  0.0139,
         0.0395,  0.0414, -0.0185,  0.0687,  0.0981,  0.0435, -0.0411, -0.0493,
         0.1250, -0.0381,  0.0445,  0.1141,  0.0302,  0.0075,  0.0767,  0.1089,
         0.0577, -0.1065,  0.0402, -0.0100, -0.1008,  0.0900, -0.0211,  0.0569,
         0.0043,  0.1239, -0.0032, -0.1046, -0.0472, -0.0728,  0.0371, -0.1220,
        -0.0720, -0.0652, -0.0181, -0.0107, -0.0156, -0.0628,  0.0205, -0.0876,
        -0.0442, -0.0234,  0.0045,  0.0475,  0.1056,  0.0616,  0.0599,  0.0487,
        -0.0669,  0.0971,  0.0804,  0.1205,  0.0237, -0.0217, -0.0002,  0.0236,
         0.1213,  0.0462,  0.0240,  0.0174, -0.1079, -0.0424, -0.0862,  0.1223,
        -0.0236, -0.0300,  0.0469,  0.1132, -0.0838, -0.0935, -0.0828, -0.0944])
tensor([ 2.6234e-01, -1.2494e-02,  4.2895e-01,  8.5187e-02,  2.1739e-01,
         3.8188e-01,  3.9822e-01, -6.9756e-01, -2.0049e-01,  1.8247e-01,
         3.1428e-01, -1.4200e-01, -1.5017e-01, -4.0715e-01,  1.8971e-01,
        -1.7293e-02,  3.6802e-01,  2.5509e-01, -2.6608e-01,  4.6766e-01,
        -1.6130e-01, -2.0415e-01, -5.1285e-01,  1.0790e-05,  2.4479e-01,
         3.1666e-01, -2.9871e-01,  7.2938e-01, -2.7845e-01, -4.7883e-01,
        -4.1944e-02,  5.3401e-01, -3.5653e-01, -4.8463e-01,  1.1357e-01,
         8.5092e-02, -3.9751e-01,  1.5117e-01, -1.2398e-01, -2.3077e-01,
        -8.4486e-03,  2.6220e-02,  2.0531e-02,  6.6687e-01, -6.6206e-02,
         2.7006e-01,  5.3225e-01,  2.1069e-01, -4.5631e-01, -1.3914e-01,
         2.0872e-01, -1.6630e-01, -3.1667e-01, -6.7431e-01, -7.4940e-01,
         2.8215e-01, -4.8730e-02, -2.5329e-01,  4.0455e-01, -2.2784e-01,
         5.2557e-01,  2.1275e-02,  1.1253e+00,  1.5801e-01,  6.6371e-02,
        -3.1573e-02, -3.7185e-01,  2.3207e-01,  1.2109e-01,  1.0791e-01,
        -2.8728e-01,  6.0872e-01,  2.9600e-01,  1.1287e-01, -6.6688e-01,
         5.2537e-01, -1.2463e+00, -1.0747e-01,  9.2713e-02,  1.0797e-01,
         8.9884e-01, -6.5877e-01, -1.4052e-01, -3.9818e-01,  4.4778e-01,
         3.3617e-01, -5.3646e-01,  2.5388e-01, -3.6303e-01, -5.5503e-01,
        -2.7940e-01,  1.9475e-01, -7.8307e-01, -2.5842e-02, -4.3444e-01,
         1.4426e-01, -4.4674e-01, -1.3676e-01, -5.3436e-01,  9.1123e-02,
        -7.3381e-02,  6.1699e-01,  5.0838e-02, -1.0503e-01,  3.5546e-02,
         2.0625e-01, -1.6999e-01,  2.2073e-01, -7.3214e-02, -4.2959e-02,
         8.3531e-01,  9.4787e-02, -9.9018e-03,  1.4584e-02,  1.5521e-01,
        -1.2832e-01, -4.5381e-01,  8.9288e-01,  2.1779e-01,  5.0331e-01,
        -6.4291e-02,  1.8679e-01, -5.2655e-01, -2.3215e-01,  7.1146e-01,
        -3.7676e-01, -4.0373e-01, -8.8887e-01])
##########################################################
prot_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([-0.1148, -0.0217, -0.0807,  0.1610,  0.1385,  0.0841, -0.1674, -0.0942,
         0.1622,  0.1307,  0.0052,  0.1966, -0.3649, -0.0384, -0.0418, -0.0230,
         0.2042,  0.1736,  0.0454, -0.1327, -0.0714,  0.1064,  0.0196,  0.0126,
        -0.0798,  0.0896,  0.0827,  0.0381, -0.1295, -0.0787, -0.1564, -0.1240,
        -0.1358, -0.1024,  0.1712, -0.1588, -0.1318,  0.0249,  0.0041,  0.2499,
         0.0808,  0.2233,  0.1535, -0.0852,  0.1096,  0.1369, -0.3242, -0.1545,
         0.1802, -0.0931, -0.0976,  0.2351, -0.0371, -0.0318, -0.1339,  0.1486,
         0.1107,  0.2054, -0.0037, -0.0074, -0.0120,  0.0874, -0.0354, -0.0468,
         0.1420, -0.0639,  0.0501, -0.0392,  0.0715,  0.1048,  0.0827, -0.0577,
         0.0115,  0.0655,  0.0123, -0.1160, -0.0308,  0.0373, -0.0131,  0.1714,
         0.1377,  0.2890,  0.0888,  0.0709, -0.1514, -0.2364, -0.1232, -0.0112,
         0.1645, -0.1970, -0.1405, -0.1057,  0.0427, -0.1490, -0.0242,  0.0559,
        -0.1357, -0.0043,  0.2110,  0.1387, -0.0377,  0.0156,  0.0192,  0.0982,
         0.1197, -0.0853,  0.0640,  0.0480,  0.0893,  0.0656,  0.1930,  0.1157,
        -0.0113, -0.0355,  0.0371,  0.0180,  0.0374,  0.0125, -0.0277,  0.0432,
        -0.0122, -0.0155, -0.0342, -0.0322, -0.0979, -0.2775, -0.0212, -0.1987])
tensor([-1.0787e-01, -2.8462e-01,  1.6951e+00,  4.2788e-01, -5.2279e-01,
        -3.1039e-01, -2.9918e-01, -1.9233e-01,  3.8158e-01, -2.0975e+00,
        -3.9101e-01,  1.2234e+00, -4.2758e-02,  1.3621e+00, -4.8280e-01,
        -4.1461e-01, -2.2881e-01, -4.6273e-01, -1.3814e+00,  5.1616e-01,
         4.9163e-01,  5.2903e-01, -1.5056e+00,  2.0717e-01, -5.7904e-01,
         1.0408e-01, -1.1040e+00,  4.5998e-01, -2.0649e+00,  7.4199e-02,
        -4.7796e-01,  4.4334e-01, -2.5715e-01, -1.1807e-01,  1.7592e+00,
         2.7086e-01, -1.1885e-01, -3.7751e-01, -2.3328e-01,  2.3703e-01,
        -1.0066e+00,  6.5806e-01,  7.8867e-01, -4.2401e-01, -1.4643e+00,
        -1.4266e-01,  4.0091e-01,  7.7621e-01, -6.7182e-02, -5.3546e-02,
        -4.3707e-01,  1.6570e+00, -1.1037e+00, -7.8019e-01,  3.3980e-01,
         1.2068e-03,  1.7824e+00,  7.0967e-01,  1.2002e-01, -2.5064e-01,
        -8.9410e-02, -1.1333e+00,  1.3970e-01,  3.6045e-01,  1.3699e+00,
         1.4441e-02, -9.7944e-01,  6.9709e-01,  6.3131e-01,  8.4677e-01,
        -1.9298e+00,  1.0516e+00,  4.2189e-01,  1.4596e+00,  1.9447e-01,
         2.9042e-01,  8.5852e-04,  2.6871e-01, -9.5553e-01, -2.1653e-01,
         2.2441e-01,  1.1642e+00, -3.8444e-01,  4.4625e-01, -4.3856e-01,
        -7.7728e-01,  2.8293e-01,  1.3192e+00,  3.3769e-01, -3.6292e-01,
         3.5584e-01,  9.2658e-01, -4.1801e-01, -2.4258e-01,  7.3402e-01,
        -3.4560e-01,  1.5212e-01,  3.4431e-01,  3.4269e-01,  5.3354e-01,
        -8.0214e-01, -2.3021e-01, -5.6190e-02,  4.4875e-01, -3.3607e-01,
        -4.7096e-01,  6.0069e-01, -6.0770e-01, -7.1440e-01,  7.1825e-01,
         1.7200e-01, -2.9767e-01, -4.6961e-01,  5.5555e-01, -2.6964e-01,
         5.9816e-02, -3.7398e-01,  1.0336e-01, -9.4838e-02, -5.0130e-01,
        -8.3478e-01, -2.6106e-01,  5.7399e-01, -5.4283e-01, -1.6744e-01,
         1.3677e-01, -1.3446e+00, -5.5946e-01])
##########################################################
prot_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.3564,  0.8445,  1.2134,  0.5231, -0.5034,  0.1428,  0.6246,  0.1574,
        -0.4631,  0.3832,  0.5301,  0.3656, -0.2260,  1.6764, -0.2276, -1.7639,
         0.4806,  0.1936,  0.0595,  0.3630, -0.5988, -1.7767,  1.5216, -0.7865,
         0.1458, -0.4686, -1.7561,  0.4462,  0.3013, -0.5225,  0.3227,  0.2485,
         0.5133, -0.2178, -1.2019, -0.5408,  0.4677, -0.3602, -0.2977,  0.3416,
        -1.7536,  0.2639,  0.7107,  0.2462, -1.6146, -0.6184, -1.0577,  0.8827,
         0.3757, -0.4088,  0.4809,  0.0913, -1.7937,  0.1812,  0.7706,  0.2405,
        -0.8401, -1.5835,  0.0866,  0.3177,  0.6670,  1.1699, -1.2402, -0.6459,
        -0.3902,  0.7205, -0.0165, -0.1218,  0.5827, -0.3389, -1.7726,  1.0498,
        -0.2657,  0.4397,  0.5382, -0.3069,  1.1311, -0.0360,  0.0613,  0.1860,
        -0.0360,  0.5825, -0.2043, -0.0429, -0.6943, -0.4864,  0.5901, -1.3763,
         0.0902, -1.0647, -0.3679, -0.8162, -0.7672,  0.5187,  0.3307,  0.2608,
        -0.0694, -0.4707,  0.7789, -0.0432, -0.3095, -0.8993, -0.3016, -0.6640,
         0.3556, -0.0074, -0.7348, -1.5118,  0.2713, -0.4968,  0.5871, -0.6158,
         0.8139,  0.4991,  0.4814,  0.4901,  0.3098,  0.5212,  1.5577, -0.0617,
        -0.4160,  0.0511,  0.5651,  1.3670, -0.4255, -0.8080, -0.2001,  0.8297])
##########################################################
prot_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([ 0.1204,  0.0474, -0.0813, -0.1732, -0.0138, -0.0039,  0.0456,  0.0733,
        -0.1442,  0.1685, -0.0361, -0.1196, -0.0279, -0.1340, -0.2477,  0.0826,
         0.1141,  0.0367,  0.0618, -0.1044,  0.0450,  0.0959,  0.0009, -0.0799,
         0.1809, -0.1661, -0.2374, -0.0460, -0.0369, -0.0276,  0.0105,  0.0123,
         0.0137,  0.0525, -0.1119,  0.0409,  0.1472, -0.0407, -0.0160,  0.2401,
        -0.0528,  0.0004,  0.1465,  0.0550, -0.0872,  0.0702, -0.0999,  0.0507,
        -0.0440,  0.1793, -0.0614, -0.0353,  0.1298, -0.0652,  0.1130,  0.1289,
         0.0145,  0.0360, -0.1830,  0.0265, -0.0253,  0.1072, -0.1516,  0.1155,
         0.0725, -0.0345,  0.1274, -0.0996, -0.1172, -0.1171,  0.0673, -0.2180,
         0.0475, -0.0657,  0.0137, -0.2549, -0.0799, -0.0483,  0.0146, -0.0421,
         0.0887,  0.0138, -0.1451, -0.0335,  0.0202, -0.0259,  0.2224,  0.1539,
         0.0790,  0.0791, -0.0051, -0.0335, -0.0481, -0.0624,  0.1383,  0.1353,
         0.1148,  0.2205,  0.0376, -0.1827,  0.0052, -0.2203,  0.1239,  0.0807,
         0.1337, -0.0468,  0.0161, -0.1549, -0.1596, -0.0243, -0.0130, -0.0323,
        -0.0018,  0.2187, -0.0257,  0.0691,  0.0042,  0.0207,  0.0449,  0.3136,
        -0.0254, -0.0522, -0.1214,  0.0262, -0.0528,  0.0073, -0.1261,  0.1171])
tensor([-1.7185e-01, -6.9582e-01,  3.1761e-01, -6.4920e-01,  2.1010e-01,
        -6.9668e-02,  3.2271e-01, -6.3645e-02,  1.0916e+00,  6.8698e-03,
        -9.2734e-01, -1.3392e-02, -3.7649e-01,  7.1599e-01, -3.0579e-01,
        -9.4395e-01, -7.4308e-01, -3.5480e-01,  2.7675e-01, -3.1170e-01,
        -4.7293e-02,  4.3114e-01,  1.3247e+00, -2.7157e-01, -4.7963e-01,
        -5.4919e-02, -9.2629e-02, -2.4105e-01, -1.8754e-01,  7.7954e-01,
        -1.5160e-01,  3.9269e-01, -1.6463e+00, -8.0135e-01, -9.5724e-01,
        -1.3735e+00, -7.0976e-01,  7.0265e-01,  5.2097e-01, -1.6485e-01,
         4.8692e-02,  8.8435e-01,  9.6085e-01, -3.6748e-01,  4.2040e-02,
         2.8198e-01,  8.1577e-01,  5.5484e-01,  3.2081e-01,  7.0780e-01,
        -1.2192e+00,  4.1482e-01,  5.2931e-01,  2.8238e-01,  3.8033e-02,
        -1.1682e-01,  2.3832e-01,  8.0378e-01,  1.0730e+00, -7.0766e-01,
        -7.8579e-01, -1.5484e-01,  1.9166e+00,  5.2192e-01,  7.4776e-02,
        -4.7482e-01,  1.1066e+00,  4.0586e-01, -2.7029e-01, -1.2768e+00,
         1.6392e+00, -1.3468e+00, -5.0060e-01,  2.6750e-01, -3.6939e-01,
        -1.2398e+00,  1.0942e+00, -9.8742e-03, -6.7658e-01, -5.8725e-02,
        -7.4521e-01, -4.3162e-01, -6.5944e-01, -6.7501e-01, -8.9624e-01,
        -8.8861e-01,  5.0731e-01, -2.4831e-01,  8.7748e-01,  7.9659e-01,
         1.2415e+00,  5.6409e-02, -1.3960e+00, -3.0196e-01,  7.2646e-01,
        -3.0752e-01,  9.1405e-01,  9.7826e-01, -6.5711e-02,  3.4779e-01,
        -5.6482e-01, -9.7014e-01,  1.1654e-01, -6.5216e-02, -1.9535e-01,
         2.3021e-01,  5.4503e-01, -1.2520e-01,  6.8264e-02, -8.4157e-01,
         1.0367e+00, -6.2413e-01,  3.7781e-01,  1.0526e-01,  4.7199e-01,
        -1.4218e-01,  1.5100e-01, -1.3934e+00,  1.4722e+00,  1.3902e-03,
        -1.9929e-01, -4.9797e-02, -3.1178e-01, -2.1589e-01,  1.0930e+00,
        -8.2658e-01,  7.5374e-01, -2.7101e-01])
##########################################################
prot_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.3130, -0.0216,  0.8421,  0.6261, -0.5367, -0.3921,  0.7446,  0.8845,
         0.0424,  0.3364, -1.1251, -0.3648, -0.9394, -0.5103,  0.7989, -0.2920,
        -0.0436, -0.1653,  0.0780,  0.2347, -0.5802,  0.8378,  1.2935,  0.2751,
         1.1319,  0.7248, -1.2174, -0.9438, -0.0547, -0.9820,  0.3148, -1.1570,
         1.6494,  1.0813,  0.8846, -0.3341,  1.2618, -0.0704, -0.1664, -0.6098,
        -1.5358, -1.0937,  1.0479, -0.4806, -0.5005, -1.4432,  0.3007,  0.3694,
        -0.5198,  1.0003, -1.4405, -0.8364, -0.7116,  0.0935, -0.3657, -0.6193,
        -0.9703, -0.9583, -0.8937, -0.2165,  1.2093, -0.5832,  0.4556, -0.9289,
        -0.2584,  0.3873, -0.1666, -0.9527,  1.4371, -0.7000, -1.5070,  1.1401,
        -1.1613, -1.1036, -0.2126,  1.0126,  0.7556, -0.9994, -0.6628,  0.1597,
        -0.3359, -0.5486,  0.8628, -0.2651, -1.1183, -0.5812,  0.7369,  0.0996,
         0.7242, -0.6718, -1.4439,  0.9412, -1.0595, -0.2115,  0.9957, -0.1493,
         0.9484, -0.9006,  0.8003,  0.2635,  0.3359, -0.2864, -0.5563, -1.2405,
         0.6586, -1.4636,  0.7107,  0.8643, -1.6503, -1.2856,  0.2561,  0.7709,
        -1.4935,  0.7646, -1.0409, -1.1040, -0.5736,  0.3646,  0.9401, -1.3374,
         0.3622,  0.0896, -0.1519,  0.1135, -1.0645, -0.7683,  0.1169,  0.5494])
##########################################################
cross_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0463,  0.0476, -0.0061,  ..., -0.0623, -0.0571,  0.0543],
        [-0.0385,  0.0111,  0.0097,  ...,  0.0329, -0.0709, -0.0376],
        [-0.0562, -0.0002, -0.0037,  ..., -0.0739,  0.0641, -0.0448],
        ...,
        [-0.0258, -0.0463,  0.0526,  ..., -0.0675,  0.0116, -0.0428],
        [ 0.0161, -0.0688,  0.0219,  ..., -0.0468, -0.0075, -0.0317],
        [-0.0387,  0.0763,  0.0703,  ..., -0.0164, -0.0577, -0.0314]])
tensor([[-0.0526, -0.1916,  0.1490,  ..., -0.1805,  0.0525, -0.1489],
        [ 0.1483,  0.1083,  0.0450,  ...,  0.1465, -0.1836, -0.1013],
        [-0.1323, -0.3053,  0.2241,  ..., -0.2666,  0.2453, -0.2828],
        ...,
        [ 0.0643,  0.3069, -0.1942,  ...,  0.2845,  0.0160, -0.3333],
        [-0.0818,  0.1735, -0.1921,  ...,  0.2024,  0.1862, -0.3209],
        [ 0.0695,  0.4337, -0.2243,  ...,  0.3359, -0.1241, -0.3110]])
##########################################################
cross_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 9.5193e-02, -9.8292e-02,  1.6285e-01,  9.4200e-02,  2.0044e-01,
         1.0272e-01,  1.3305e-01,  1.7447e-01,  1.9930e-01,  1.8180e-01,
        -1.4912e-01,  1.6814e-01,  1.2643e-01,  1.2883e-01,  1.7791e-01,
        -4.1105e-02,  1.6894e-01,  2.2746e-01,  2.0993e-01, -1.9695e-01,
         1.9418e-01,  1.9646e-01,  2.1337e-01, -1.3582e-01, -8.9402e-02,
        -1.8927e-01,  1.4888e-01,  1.9571e-01,  2.1148e-01, -1.5251e-01,
        -2.0548e-01,  6.5427e-02, -1.9168e-01,  1.8688e-01,  1.6171e-01,
         2.2898e-01,  2.1512e-01,  1.6869e-01,  2.2289e-01,  9.1082e-02,
         2.0966e-01,  2.2076e-01,  1.7807e-01,  2.1660e-01,  2.0872e-01,
         2.1808e-01, -2.2970e-01,  2.1771e-01,  2.1892e-01,  2.2521e-01,
        -2.2676e-01, -2.0942e-01,  1.7428e-01,  2.0097e-01, -1.9409e-01,
         2.1199e-01,  2.0777e-01,  1.9483e-01,  2.2356e-01,  2.0892e-01,
        -2.2189e-01, -5.5944e-02,  1.8372e-01,  2.0600e-01, -1.7763e-01,
         1.7406e-01,  1.8948e-01,  1.9254e-01,  2.1018e-01,  2.1377e-01,
         5.5536e-02, -1.6951e-01, -3.9861e-02, -1.4133e-01, -1.8233e-01,
        -1.7487e-01, -1.7977e-01, -1.7323e-01,  1.7734e-01, -1.3964e-02,
         1.8651e-01,  2.2139e-01, -1.4052e-01, -1.8061e-01,  2.1597e-01,
        -2.1225e-01,  2.2173e-01,  1.9605e-01, -1.8406e-01, -2.0836e-01,
        -2.3031e-01,  1.7360e-01, -1.9339e-01, -2.1916e-01, -2.1157e-01,
        -2.1199e-01, -2.3864e-01, -1.8020e-01, -2.0484e-01, -2.1355e-01,
         2.2190e-01, -2.3019e-01,  1.9761e-01, -1.8356e-02,  2.1688e-01,
         2.2044e-01,  2.0003e-01,  1.4246e-01,  1.6993e-01, -3.0849e-02,
         2.0328e-01, -2.0077e-01,  1.9281e-01, -2.0648e-01, -1.9628e-01,
         2.0310e-01, -1.5366e-01, -2.2495e-01, -2.0139e-01,  1.3244e-01,
        -1.7436e-01, -2.0453e-01, -2.0448e-01, -1.8884e-01,  2.0501e-01,
        -1.9515e-01,  1.7896e-01, -1.6819e-01,  8.1365e-07, -9.2819e-06,
         1.0497e-05,  8.9043e-06,  3.1260e-06,  8.9423e-06,  1.4400e-05,
         3.6021e-06,  8.9678e-06,  7.8678e-06, -6.6181e-06,  2.1283e-06,
         1.9740e-06,  1.2529e-05,  4.4748e-06, -4.1293e-06,  3.4361e-07,
        -6.8417e-06,  8.6232e-06, -6.7186e-06,  5.5096e-06, -7.0972e-07,
         7.9775e-06, -3.6996e-06,  1.7076e-06, -7.5156e-06, -7.2219e-06,
         1.2675e-06,  1.2003e-06, -7.8225e-06, -4.5861e-06, -5.7951e-06,
         3.8286e-04, -1.5095e-05, -2.0142e-04, -1.5661e-06, -1.0032e-04,
        -2.3359e-04, -4.5665e-05,  1.9336e-04,  1.7897e-05, -7.7792e-05,
         1.5825e-05,  1.2226e-05,  9.6762e-05, -3.8646e-05,  1.5033e-05,
        -2.9165e-04,  7.3079e-06, -4.5805e-06,  1.0656e-05, -4.5521e-06,
         1.1327e-05,  2.7373e-06,  1.1741e-05,  1.3850e-05, -3.9162e-06,
        -1.2250e-05,  2.0149e-06, -2.4955e-06, -1.6917e-06,  2.2590e-05,
        -1.4179e-06,  1.2724e-06, -1.3783e-05, -1.3128e-04,  8.4513e-05,
        -5.8491e-06,  4.5966e-05,  6.7022e-05,  1.1639e-04,  3.3352e-04,
        -1.2735e-04, -1.8823e-05, -1.6537e-05,  1.6884e-04, -2.3163e-05,
        -1.0746e-04, -3.0991e-05, -6.7569e-05, -4.4353e-06,  1.9831e-06,
         6.8857e-06,  7.6969e-06, -8.0458e-06,  1.2716e-05, -5.1298e-06,
        -9.0231e-06,  6.9530e-06,  5.8589e-06,  1.6588e-05, -8.5118e-06,
         1.5117e-05,  1.3070e-05,  3.3523e-06,  1.1043e-05,  1.1085e-05,
         1.0060e-05,  2.0638e-06,  3.0511e-05, -1.0495e-05,  2.3352e-05,
        -2.5055e-05,  1.6735e-05, -2.6734e-05, -1.7386e-05, -9.4598e-07,
         2.3640e-06, -4.6461e-06, -6.0114e-06, -2.0150e-05,  7.1367e-06,
        -8.2580e-06,  4.3845e-06, -7.3003e-06, -6.0355e-06,  2.5602e-05,
         5.3408e-06,  2.2185e-05, -1.8976e-05,  8.4402e-06, -8.9453e-06,
        -3.0560e-06, -1.1297e-05,  6.1973e-06,  1.9188e-05, -1.2882e-06,
         8.3710e-06, -3.5909e-01,  2.0843e-01, -3.5268e-01,  2.0667e-01,
         2.2619e-01, -2.0668e-01,  1.6308e-01,  1.7351e-01,  2.3072e-01,
         2.4562e-01, -2.1552e-01, -1.8033e-01, -2.3795e-01,  1.0884e-01,
        -2.4845e-01, -2.3459e-01,  2.1469e-01,  2.9023e-01,  1.7030e-01,
         1.9329e-01,  2.3005e-01, -2.0867e-01,  2.3112e-01,  2.5438e-01,
        -1.9010e-01,  2.2763e-01, -2.3948e-01,  2.3074e-01,  2.3826e-01,
        -2.2942e-01,  3.5856e-01,  3.5189e-01, -2.3182e-01,  2.0427e-01,
        -1.9402e-01,  2.4364e-01,  2.3593e-01, -7.4879e-02, -2.3588e-01,
         3.3767e-01,  2.5496e-01, -3.1104e-01,  3.1754e-01, -2.2813e-01,
        -2.3049e-01, -2.3152e-01,  2.3636e-01, -1.9532e-01, -2.2786e-01,
         2.5079e-01, -2.3245e-01, -2.2045e-01,  2.0883e-01, -2.3532e-01,
         2.5066e-01, -2.1333e-01, -2.0975e-01,  6.0326e-02, -2.0675e-01,
        -2.3619e-01, -2.0186e-01,  2.0948e-01,  2.0822e-01,  2.0756e-01,
         2.0771e-01,  2.1172e-01,  3.1923e-01,  2.1617e-01,  2.0021e-01,
         2.3695e-01, -2.1192e-01, -2.3542e-01,  2.0548e-01,  2.2846e-01,
        -2.8377e-01,  2.4030e-01,  1.8559e-01, -2.0294e-01,  2.3168e-01,
         2.4498e-01,  1.3995e-01, -3.6684e-02,  2.5571e-01, -2.3686e-01,
         2.2786e-01, -2.4721e-01, -2.1652e-01,  3.2304e-01, -2.3559e-01,
         2.5719e-01, -3.1662e-01, -2.0514e-01,  2.3370e-01,  2.3491e-01,
        -1.6907e-01,  1.9296e-01, -2.2518e-01,  2.1241e-01,  2.1185e-01,
        -2.6782e-01, -2.1133e-01, -2.3672e-01, -2.0796e-01, -2.1352e-01,
         2.1324e-01, -1.9837e-01, -2.1424e-01, -2.1021e-01,  2.1246e-01,
        -2.4502e-01, -2.3202e-01, -1.9947e-01, -2.0730e-01,  2.0561e-01,
         2.8416e-01, -2.3326e-01, -2.2477e-01, -2.2973e-01,  2.0719e-01,
         2.4533e-01, -2.2607e-01, -2.5213e-01,  2.1264e-01,  2.2627e-01,
         2.1259e-01,  2.0779e-01,  2.1956e-01,  1.8680e-01])
##########################################################
cross_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[ 8.7909e-05,  3.0279e-02, -9.1567e-03,  ...,  7.5423e-02,
         -2.2786e-02,  4.5643e-02],
        [ 6.7810e-02,  7.4392e-02, -3.5738e-02,  ..., -3.9617e-02,
         -2.6409e-02,  4.3155e-02],
        [-1.1801e-02, -2.2520e-02, -8.7259e-02,  ...,  6.7634e-02,
         -7.3776e-02, -2.1436e-02],
        ...,
        [-5.8160e-02, -2.1201e-02, -7.6753e-02,  ...,  7.9017e-02,
          7.6030e-03,  3.9384e-02],
        [-5.1556e-02,  5.9830e-02, -6.0876e-02,  ..., -4.8621e-03,
          7.4306e-03,  2.2564e-02],
        [-2.7383e-02,  8.7618e-02, -8.0539e-02,  ..., -1.8069e-02,
         -4.0330e-02,  4.2306e-02]])
tensor([[-0.3418, -0.2635, -0.3552,  ...,  0.2011,  0.3135,  0.0212],
        [-0.0009,  0.0134, -0.0686,  ...,  0.2757,  0.2834,  0.3076],
        [ 0.0831,  0.0565, -0.0096,  ..., -0.2560, -0.1846, -0.3331],
        ...,
        [-0.0101, -0.1435, -0.0776,  ..., -0.2681, -0.1151, -0.2303],
        [ 0.2200,  0.2271,  0.1863,  ..., -0.0985, -0.3529,  0.2315],
        [ 0.3366,  0.2990,  0.2816,  ..., -0.1511, -0.3943,  0.1967]])
##########################################################
cross_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2126,  0.2234, -0.2258, -0.2208,  0.2211, -0.2138, -0.2212,  0.1948,
         0.2213,  0.2190, -0.2217,  0.2195,  0.2444, -0.2239, -0.1983,  0.2402,
         0.2203, -0.2200,  0.2274, -0.2143,  0.2222,  0.1860, -0.2209, -0.2132,
         0.2214,  0.2197, -0.2196, -0.2147, -0.2202,  0.2287,  0.2228,  0.2278,
         0.2210,  0.2388, -0.2172, -0.2187,  0.2157,  0.2228,  0.2202,  0.2839,
         0.2357,  0.2268, -0.2209,  0.2230,  0.2182,  0.2217, -0.2232, -0.2154,
        -0.2254,  0.2123,  0.2196,  0.2218,  0.2206,  0.2168, -0.2082,  0.2240,
         0.2199, -0.2206, -0.2183,  0.1982,  0.2207,  0.2272,  0.2180,  0.1958,
         0.2204,  0.2208, -0.2203, -0.2444,  0.2653, -0.2149, -0.2209, -0.2199,
         0.1936, -0.2210, -0.2214,  0.2196, -0.2146,  0.2234, -0.2088,  0.2282,
        -0.2280, -0.2233,  0.2214,  0.1777, -0.2212, -0.2186,  0.2337,  0.1630,
        -0.2242,  0.2210,  0.2087,  0.2467, -0.2267, -0.2192,  0.1963, -0.2278,
         0.2160,  0.2148,  0.2209, -0.2210, -0.2223,  0.2003, -0.1991,  0.2106,
        -0.2210,  0.2188, -0.2202, -0.2146,  0.1759,  0.2443,  0.2053, -0.2097,
        -0.1881,  0.2416, -0.2156, -0.2216,  0.2131,  0.2186, -0.2211,  0.2226,
         0.2244,  0.2170,  0.2035, -0.2195,  0.2142, -0.2229,  0.2207,  0.2188])
##########################################################
cross_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[-1.1262e-01,  3.8005e-02, -2.2109e-02,  ..., -5.3366e-03,
          7.7273e-02,  4.8756e-02],
        [ 2.1706e-05, -4.4420e-02,  1.1740e-01,  ...,  8.1670e-02,
         -9.6365e-02, -4.5234e-03],
        [-1.3647e-01, -2.7770e-02, -1.2695e-01,  ..., -4.5703e-05,
         -4.4631e-02,  4.7621e-02],
        ...,
        [-2.1105e-01, -4.0219e-02, -1.1338e-01,  ..., -1.0180e-02,
         -5.6792e-02, -1.2901e-01],
        [ 5.1774e-02, -1.4275e-01, -4.6435e-02,  ..., -1.1493e-01,
         -7.6750e-03, -2.8516e-02],
        [ 8.6034e-02,  1.0753e-01,  7.1396e-02,  ...,  1.8679e-02,
         -2.0983e-02,  2.6112e-02]])
tensor([[-0.3782,  0.2293, -0.1969,  ...,  0.2205,  0.2967,  0.1528],
        [ 0.2261,  0.1798, -0.1080,  ...,  0.3072, -0.3221,  0.2215],
        [-0.3425,  0.2791, -0.2885,  ..., -0.3676,  0.2231, -0.2604],
        ...,
        [-0.6114,  0.1074, -0.2219,  ...,  0.1990,  0.2255, -0.1146],
        [-0.3831, -0.5026,  0.2283,  ..., -0.1848,  0.4012,  0.0266],
        [ 0.2460,  0.1830, -0.0811,  ...,  0.1305, -0.1319,  0.2008]])
##########################################################
cross_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([-0.0145, -0.0367,  0.0249,  0.0319,  0.0287, -0.0240, -0.0234,  0.0359,
        -0.0376,  0.0108,  0.0444,  0.0066, -0.0208,  0.0294, -0.0128, -0.0081,
         0.0088, -0.0125,  0.0345, -0.0108, -0.0767, -0.0520,  0.0595,  0.0274,
        -0.0528,  0.0860, -0.0149, -0.0442, -0.0850, -0.0149, -0.0225, -0.0061,
         0.0782, -0.0314, -0.0694, -0.0434, -0.0475, -0.0129, -0.0341,  0.0638,
         0.0335,  0.0604, -0.0118,  0.0108, -0.0807, -0.0799,  0.0845,  0.0535,
        -0.0814, -0.0264, -0.0756,  0.0357, -0.0511, -0.0090, -0.0264,  0.0735,
         0.0397, -0.0280,  0.0379,  0.0194, -0.0360,  0.0532,  0.0857,  0.0562])
tensor([ 0.2170, -0.2630,  0.4411,  0.3571,  0.1392,  0.1003, -0.2497, -0.1944,
        -0.1407,  0.4959,  0.1763, -0.2079, -0.1416,  0.2836,  0.1246, -0.2500,
        -0.2424, -0.3377,  0.3146,  0.1997,  0.1516, -0.2783, -0.1741, -0.2059,
        -0.2892, -0.1486, -0.1441, -0.2705, -0.0850,  0.3644, -0.2579, -0.2324,
         0.2901,  0.2591, -0.1853, -0.4115,  0.2226, -0.3253, -0.2604, -0.1702,
        -0.1929,  0.2338,  0.0925,  0.1772, -0.1912, -0.3168, -0.1364, -0.0106,
        -0.2436, -0.1456, -0.4440, -0.0838, -0.2845, -0.2354,  0.3354,  0.3575,
        -0.1878,  0.1687,  0.3646, -0.2524, -0.2972,  0.3438,  0.3430, -0.1580])
##########################################################
cross_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.0077,  0.0559, -0.0199,  ...,  0.1619,  0.0337,  0.0842],
        [ 0.0410,  0.0548,  0.0963,  ...,  0.0503,  0.0496,  0.0096],
        [ 0.1906,  0.1795,  0.0291,  ..., -0.0556,  0.0533,  0.0452],
        ...,
        [-0.1441,  0.0521, -0.0283,  ...,  0.0285, -0.0019, -0.0142],
        [ 0.0850, -0.1056,  0.0332,  ..., -0.0476, -0.0392,  0.0341],
        [-0.1363,  0.0556,  0.0393,  ..., -0.0078, -0.0310,  0.0475]])
tensor([[ 0.4086,  0.2821,  0.2730,  ...,  0.6400,  0.4855,  0.1973],
        [ 0.2797,  0.2806,  0.1291,  ...,  0.1901,  0.1082, -0.0158],
        [-0.0354, -0.0467, -0.0550,  ..., -0.1686, -0.0100, -0.0984],
        ...,
        [-0.4134, -0.1738,  0.0080,  ..., -0.1887, -0.2218, -0.0556],
        [ 0.2666,  0.1205,  0.0730,  ...,  0.0196, -0.0565,  0.0038],
        [-0.5412, -0.1701, -1.1169,  ..., -0.4177, -0.2995,  0.0289]])
##########################################################
cross_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([ 0.1209,  0.0081, -0.0134, -0.0315, -0.0781,  0.1205,  0.0826, -0.0848,
        -0.1103,  0.0260, -0.0703,  0.0899, -0.0316,  0.0591,  0.1090,  0.1024,
         0.1157, -0.1129,  0.0313, -0.0341, -0.0630,  0.0269, -0.0783,  0.0498,
        -0.1152,  0.0540, -0.1142, -0.0113, -0.1176,  0.0217, -0.0057, -0.0094,
         0.0549, -0.0603, -0.0682,  0.0054, -0.0621, -0.0321,  0.0180,  0.0998,
        -0.0978,  0.0664,  0.0850, -0.0424,  0.0513, -0.0632,  0.0755,  0.0577,
         0.0159,  0.0930, -0.0421,  0.1031, -0.0252, -0.0990,  0.0180,  0.1203,
        -0.0562,  0.0491, -0.0111, -0.0282, -0.0183,  0.0055,  0.0166, -0.0926,
        -0.1171, -0.0756, -0.1243, -0.1249, -0.0445,  0.0219, -0.0025,  0.0595,
         0.0795,  0.1185,  0.0156,  0.0267, -0.0662, -0.0612,  0.0370, -0.0562,
         0.0142, -0.0423, -0.0952,  0.0586,  0.0929, -0.1239,  0.0395, -0.1183,
         0.0977,  0.0950,  0.0152, -0.0850, -0.0843, -0.0609,  0.0665, -0.0565,
        -0.0789, -0.0399,  0.0139, -0.0432, -0.0021,  0.0943, -0.0237, -0.0842,
         0.0897, -0.1084, -0.1164, -0.1117, -0.0071,  0.0122,  0.1152,  0.0611,
         0.0609, -0.1181,  0.0207,  0.0115, -0.0991, -0.0778,  0.0139,  0.1063,
         0.0311, -0.0181,  0.0111,  0.0727, -0.0466,  0.0367,  0.0340,  0.0929])
tensor([ 0.4769,  0.2589, -0.2862, -0.3227, -0.3315,  0.4394, -0.1797,  0.1705,
         0.2266, -0.2330, -0.2744,  0.3029, -0.3535,  0.1072,  0.3879,  0.0420,
         0.2598, -0.4956,  0.4283, -0.2017, -0.5348, -0.2316,  0.1625, -0.0558,
         0.2087, -0.1833,  0.1171,  0.1689,  0.0666,  0.3462,  0.3143,  0.3218,
         0.2452, -0.3339, -0.4553, -0.2418, -0.3200, -0.4355,  0.3055,  0.2044,
        -0.3876, -0.0171,  0.3901,  0.1363,  0.3434, -0.2560, -0.1363,  0.2188,
         0.1565, -0.0307,  0.2008, -0.1564,  0.2327, -0.1468, -0.1573,  0.1967,
         0.0179, -0.1814, -0.1819, -0.0248,  0.4134, -0.0510,  0.2496, -0.5263,
         0.2036,  0.1567, -0.3545, -0.0121, -0.4468, -0.2102, -0.3232,  0.2745,
         0.1482, -0.1156, -0.2430,  0.2508, -0.0910,  0.0816, -0.3712,  0.0326,
        -0.0556, -0.3690,  0.1854,  0.0071,  0.3574,  0.1679,  0.3667, -0.4605,
         0.1163, -0.1428, -0.3348, -0.0715, -0.4693, -0.4417,  0.1119,  0.3733,
        -0.1233, -0.1026,  0.2534, -0.2911, -0.2449,  0.1406, -0.1432, -0.2380,
         0.3438, -0.3687, -0.3565,  0.1771, -0.1106, -0.3717,  0.4104, -0.0205,
         0.1697, -0.3737,  0.0702, -0.1478, -0.1520, -0.2673,  0.2552, -0.2045,
         0.0579,  0.3028, -0.0937,  0.2671, -0.4575, -0.2779,  0.2893, -0.2828])
##########################################################
cross_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([ 0.1278,  0.0612,  0.1132,  0.0935, -0.1261, -0.0522,  0.0500, -0.0021,
         0.0740, -0.1301,  0.1054, -0.0555, -0.0077, -0.0267,  0.1038, -0.1302,
         0.0738,  0.0569,  0.0693,  0.0651, -0.0763, -0.0204, -0.0541,  0.0856,
         0.1107, -0.0386, -0.0182, -0.0253, -0.1144,  0.0214,  0.0777,  0.1622,
         0.0772,  0.0334,  0.0536,  0.0240, -0.0058,  0.0758,  0.0683,  0.0710,
         0.0341,  0.0227,  0.0794,  0.0150,  0.0188, -0.0392,  0.0369, -0.0794,
        -0.0659, -0.1108,  0.0624, -0.0697,  0.0438, -0.0457,  0.0868,  0.0592,
        -0.1570,  0.0223, -0.0321, -0.0111, -0.0925,  0.0024,  0.0248,  0.0264,
        -0.0554,  0.1092,  0.0732,  0.0537,  0.0686,  0.0246,  0.0594, -0.0417,
         0.0037,  0.1457,  0.1834,  0.1043,  0.0466,  0.0607, -0.0661, -0.0347,
         0.0489,  0.1346,  0.0585, -0.0791, -0.1228, -0.0461,  0.1612,  0.0583,
         0.0736, -0.0920,  0.0189, -0.0016,  0.0734,  0.0828, -0.0263,  0.0891,
         0.1079, -0.0807,  0.1544,  0.0910,  0.0428, -0.1012,  0.0532, -0.0222,
        -0.0898, -0.0785,  0.0575, -0.0087,  0.0921, -0.0247, -0.0164,  0.0158,
        -0.0298, -0.1049, -0.1128,  0.1240, -0.0889, -0.0467, -0.1262,  0.0565,
        -0.0300,  0.0039,  0.0064, -0.0947, -0.0294,  0.1869,  0.2133, -0.0317])
tensor([ 1.9517e-01,  2.2185e-01,  2.1603e-01, -7.5304e-02, -3.7808e-02,
         1.3692e-01, -1.8146e-01, -2.9267e-01,  2.9888e-01, -3.1138e-01,
        -9.7838e-02,  3.1139e-01,  6.2393e-02,  1.7377e-01,  4.5863e-01,
         2.4681e-02, -1.4311e-01, -2.9876e-01,  4.3583e-01,  7.5987e-04,
        -3.5425e-01, -7.4558e-02,  5.9675e-02,  1.0870e-02, -1.6028e-01,
         1.5968e-01,  1.3520e-01, -2.6305e-01, -3.1569e-01,  2.9004e-01,
         3.4614e-02,  3.8212e-01, -1.6184e-01, -8.0827e-02, -2.9836e-01,
        -2.4001e-01,  2.5355e-01, -1.5701e-01, -2.3240e-01, -3.6150e-02,
         1.2060e-01, -2.9909e-01, -1.7991e-01, -3.3750e-01,  2.0869e-01,
         2.4260e-01, -8.0739e-02, -3.8016e-01, -6.8677e-02, -3.4859e-01,
        -9.9071e-02, -2.0283e-01, -1.7456e-01, -5.9614e-02,  2.6065e-01,
         2.0781e-01,  6.3542e-02, -1.8904e-01,  1.9173e-01, -3.3997e-01,
         9.2909e-02,  1.7521e-01,  2.1188e-01,  1.8966e-01,  1.7507e-01,
        -8.8488e-02, -2.5598e-02,  1.6552e-01, -3.4303e-01,  2.5420e-01,
        -4.1468e-02, -2.4266e-01, -4.7992e-04,  2.0361e-01,  2.5989e-01,
         2.9019e-01,  2.4789e-01, -1.7005e-01, -4.0582e-01,  2.5353e-03,
        -1.5353e-01,  3.3006e-01, -1.0384e-01, -4.0477e-01, -3.0491e-01,
        -2.2901e-01,  4.6641e-01, -7.0608e-02,  3.1846e-01, -3.2213e-01,
         5.0698e-01, -1.2057e-01,  3.7638e-01,  1.7046e-01,  1.0499e-01,
        -3.1410e-01,  4.0316e-01, -2.3309e-01, -5.5502e-02, -1.3591e-01,
         2.5251e-01, -4.4404e-01,  1.3630e-01, -2.7055e-01,  1.2344e-01,
        -2.7731e-01, -1.4772e-01,  3.4241e-01,  4.4180e-01, -4.8276e-01,
        -3.7114e-01,  2.2994e-01, -3.8720e-01, -1.1226e-01, -3.8596e-01,
        -5.6452e-02, -1.1534e-01, -6.6939e-04,  3.1512e-02,  2.6064e-03,
         1.5238e-01, -2.3319e-01,  2.1549e-01, -2.4654e-01, -7.7343e-02,
        -1.7719e-02,  3.8323e-01,  2.5750e-01])
##########################################################
cross_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.0392,  0.2337, -0.2784, -0.2583, -0.3662,  0.3180, -0.2638,  0.2837,
         0.2789, -0.1996, -0.2649, -0.4070,  0.0035,  0.2016,  0.0496, -0.3381,
         0.2659, -0.3910,  0.4474, -0.1359, -0.3832, -0.0564,  0.2227, -0.0884,
         0.3690, -0.2600,  0.2294,  0.1651,  0.2198,  0.3179,  0.3923,  0.3415,
         0.2010, -0.2836, -0.3921, -0.2785, -0.2695,  0.3894,  0.3463,  0.0849,
        -0.2988,  0.0527, -0.0931,  0.0825,  0.2040, -0.1780, -0.1940,  0.0852,
         0.1052, -0.0268,  0.2825, -0.2463,  0.2226, -0.3692, -0.0816,  0.0369,
        -0.0913, -0.2254,  0.2960, -0.0510, -0.2507, -0.2847,  0.1993, -0.5062,
        -0.2549,  0.2501, -0.2429,  0.0371, -0.4026, -0.1810, -0.2002,  0.2156,
         0.3660, -0.2435, -0.2911,  0.2041, -0.1409,  0.0317,  0.0161, -0.0104,
        -0.2758, -0.2695,  0.2515,  0.3264,  0.2530,  0.2333,  0.3393, -0.0952,
        -0.3181, -0.2344, -0.5037,  0.0487, -0.3446, -0.3715,  0.0091,  0.1006,
         0.0552, -0.0930,  0.2396, -0.2081, -0.2352,  0.0830, -0.0281, -0.1099,
         0.2682, -0.1724, -0.2754,  0.2614, -0.1356, -0.4242,  0.3372, -0.1992,
        -0.0170,  0.3962,  0.0860, -0.2321, -0.0542, -0.1869,  0.2934,  0.1291,
        -0.1476, -0.1636,  0.1283,  0.1875, -0.1495, -0.3506,  0.2253, -0.3064])
##########################################################
cross_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([ 0.0128,  0.0398, -0.1235,  0.1586, -0.0278, -0.0038,  0.0950, -0.1121,
         0.1572,  0.0302,  0.0285, -0.1241,  0.0196, -0.0093, -0.0257,  0.0427,
         0.0583,  0.0114,  0.0518, -0.0661, -0.0960,  0.1161,  0.1179, -0.0361,
         0.0098,  0.1773, -0.1041,  0.1310,  0.0548,  0.0121,  0.0373,  0.2394,
        -0.1386,  0.0854,  0.0251, -0.0547,  0.0608,  0.0219, -0.1157,  0.0171,
         0.0162, -0.0516, -0.0319, -0.0438,  0.0134,  0.0463, -0.0502, -0.0157,
         0.0103,  0.0418, -0.0505,  0.0402, -0.0233, -0.0308, -0.0038, -0.0913,
        -0.0191, -0.0827,  0.0551, -0.0502,  0.0338,  0.0474,  0.0808,  0.0527,
         0.0059,  0.1030, -0.1881,  0.0611,  0.0066, -0.1464,  0.0051, -0.0462,
         0.0189,  0.1088,  0.1897,  0.0680, -0.0318, -0.0565,  0.1012, -0.0030,
        -0.0195, -0.0782, -0.1101,  0.0321,  0.0065,  0.0820,  0.0035,  0.1235,
        -0.0120,  0.0932, -0.0995, -0.0161, -0.0072, -0.0040, -0.0597,  0.2235,
        -0.1453, -0.0214, -0.1500, -0.1526,  0.1128, -0.0308, -0.0352,  0.1289,
        -0.2029, -0.0429, -0.1020,  0.1186,  0.0029,  0.0043,  0.0375, -0.0538,
        -0.1335, -0.0699,  0.0379,  0.1538, -0.0103,  0.1857,  0.0871, -0.0105,
        -0.0226, -0.1439, -0.0122, -0.1794,  0.0864,  0.0085,  0.1261,  0.0394])
tensor([-2.9083e-01, -5.7646e-02, -1.6081e-01,  3.4671e-01, -3.0912e-01,
        -1.9054e-02,  2.5758e-01, -2.6980e-01,  4.8814e-01, -2.5772e-02,
         1.4530e-01,  9.6273e-02, -2.1592e-01,  4.2547e-02,  1.9909e-02,
        -7.3997e-02, -6.0359e-02, -4.7465e-01, -4.0867e-01,  8.4123e-02,
         5.2085e-01, -4.0955e-02, -1.2792e-01,  1.0938e-01, -2.3042e-02,
         3.2314e-01, -7.8780e-02, -4.3962e-02, -1.0878e-01,  1.2372e-01,
         2.8022e-01,  3.6557e-01,  9.6837e-02, -5.4754e-02,  4.8277e-01,
        -2.5153e-01,  4.6173e-01, -3.7252e-01, -3.6643e-01, -8.6772e-02,
        -5.0313e-02,  1.1304e-01,  8.1196e-02, -1.6052e-01, -2.1981e-02,
        -5.2334e-02, -1.5038e-01,  3.5071e-02, -2.8755e-03,  9.1789e-02,
        -1.8578e-01, -3.2970e-02,  3.9583e-02, -5.7449e-02,  4.2753e-05,
         8.1075e-02, -7.1131e-02,  3.4748e-02, -1.3343e-01,  9.2545e-02,
        -5.4916e-01,  1.3524e-01,  2.2112e-01, -6.4586e-01, -1.6729e-01,
        -1.5351e-01, -2.3533e-02, -5.8636e-04,  4.9824e-01, -2.0089e-01,
        -1.7420e-01,  4.2858e-02,  5.8723e-02, -2.0467e-03,  3.6279e-01,
         1.3719e-02,  7.9346e-02, -1.6827e-01,  3.7690e-01,  9.1128e-02,
         7.5800e-02, -1.1133e-01, -2.8934e-01,  6.4293e-02, -4.7909e-02,
         2.7476e-01, -4.1616e-03,  3.4060e-01, -4.9150e-02,  2.9530e-01,
        -3.3704e-01,  8.8851e-02,  4.1259e-01,  4.5935e-01,  8.0672e-02,
         5.2777e-01,  6.9067e-02,  4.0299e-02, -1.2888e-01, -3.3381e-01,
         4.2854e-02,  1.4272e-01,  8.7301e-02, -1.0487e-02, -4.6077e-01,
         2.8506e-02, -4.0596e-01,  3.1398e-01, -9.3362e-02,  4.6478e-01,
        -4.4268e-02, -1.0519e-01,  4.9476e-02,  1.2765e-02, -1.3325e-01,
        -2.1715e-01,  5.7823e-02, -2.0848e-02,  1.8798e-01,  7.9043e-02,
        -9.3885e-02, -4.2754e-01, -1.1801e-01, -9.2577e-02, -3.4696e-01,
        -1.3100e-01,  3.7444e-02,  3.1494e-01])
##########################################################
cross_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.1342, -0.0530,  0.1894, -0.4142,  0.4371, -0.2167, -0.4810, -0.4030,
         0.5750, -0.1629, -0.3965,  0.0857,  0.2415,  0.0851, -0.1766, -0.1276,
        -0.0874,  0.4772, -0.4188, -0.3597, -0.4629, -0.1278,  0.1725, -0.0792,
         0.4277, -0.3405, -0.3783, -0.0452,  0.0205,  0.2920,  0.4620,  0.2492,
         0.0246, -0.1037, -0.4449,  0.4487, -0.4809,  0.5158, -0.5003,  0.1452,
        -0.1784,  0.1374, -0.1086, -0.4171,  0.1864, -0.0077,  0.4861,  0.0105,
        -0.1037, -0.4101, -0.4185, -0.3487, -0.3799, -0.4247,  0.0322,  0.1512,
         0.3919,  0.3433,  0.1529, -0.1314, -0.4534, -0.4239,  0.4125,  0.5903,
         0.2139,  0.1310,  0.1400,  0.3712, -0.5154,  0.2895, -0.1636,  0.0431,
        -0.4208, -0.3510, -0.4782,  0.0100, -0.1335, -0.3976, -0.4188, -0.1265,
         0.1382,  0.2171, -0.4519, -0.4059, -0.1343,  0.4134,  0.1397, -0.4599,
         0.4478, -0.3308,  0.4444, -0.1518, -0.4557, -0.3994, -0.1446,  0.5234,
         0.1592, -0.0701, -0.4142,  0.4698, -0.1661, -0.1241, -0.1180,  0.0967,
        -0.5001,  0.0315,  0.4311,  0.4458, -0.1369, -0.4189,  0.1029,  0.4180,
         0.1161, -0.0256, -0.1216, -0.0112, -0.0906,  0.0646,  0.4387,  0.2442,
         0.3899, -0.5681, -0.3798,  0.0165,  0.4150, -0.3563,  0.0748, -0.5469])
##########################################################
attention.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0458,  0.0096,  0.0055,  ..., -0.0666,  0.0523,  0.0694],
        [-0.0325, -0.0159, -0.0593,  ...,  0.0443, -0.0320,  0.0031],
        [-0.0147, -0.0235, -0.0038,  ...,  0.0334,  0.0799,  0.0404],
        ...,
        [ 0.0855,  0.0483,  0.0328,  ..., -0.0044, -0.0809,  0.0339],
        [ 0.0665, -0.0015,  0.0342,  ..., -0.0868, -0.0770,  0.0713],
        [ 0.0098, -0.0221,  0.0737,  ...,  0.0519,  0.0425, -0.0016]])
tensor([[-0.0826,  0.1907, -0.1259,  ...,  0.0382, -0.4065,  0.0735],
        [-0.2361,  0.3277, -0.2397,  ..., -0.1210, -0.5545,  0.0264],
        [ 0.1964, -0.2344, -0.0792,  ..., -0.0145,  0.5475, -0.0220],
        ...,
        [-0.0819, -0.2613, -0.2930,  ..., -0.3040, -0.2541, -0.2777],
        [ 0.2438,  0.4673,  0.4093,  ...,  0.1939, -0.4364,  0.1254],
        [ 0.3115,  0.3465,  0.3264,  ...,  0.1166, -0.3036, -0.3933]])
##########################################################
attention.W_k.weight shape: torch.Size([128, 128])
tensor([[ 1.7095e-02, -2.0320e-02, -8.7429e-02,  ..., -2.7701e-02,
         -4.4475e-02,  2.3476e-02],
        [-1.7038e-02, -5.1784e-02,  8.4305e-02,  ..., -3.8874e-02,
          2.3847e-02,  2.1771e-02],
        [-5.2755e-03,  5.4985e-02, -6.5252e-05,  ...,  1.2001e-02,
         -1.5861e-02,  4.6322e-02],
        ...,
        [ 4.4796e-03, -1.7301e-02,  5.3666e-02,  ...,  2.2480e-02,
          2.8691e-02,  8.1831e-02],
        [-5.7469e-02, -3.8851e-02,  1.6094e-04,  ..., -7.1423e-02,
          7.7655e-02,  5.4709e-02],
        [-5.9957e-02, -5.1503e-02, -6.5354e-02,  ..., -6.0818e-02,
         -7.2746e-02,  3.1960e-02]])
tensor([[-0.3369,  0.5392, -0.7058,  ..., -0.3309,  0.4169,  0.3332],
        [-0.1916,  0.4698, -0.5106,  ..., -0.3636,  0.1702,  0.2792],
        [ 0.2312, -0.5294,  0.6084,  ...,  0.3178, -0.3404, -0.3248],
        ...,
        [-0.1400, -0.0906,  0.1769,  ...,  0.4200,  0.1576,  0.2290],
        [-0.5415,  0.5339,  0.7667,  ..., -0.6404, -0.1736,  0.6320],
        [-0.5868,  0.5438,  0.8304,  ..., -0.6636, -0.5277,  0.5831]])
##########################################################
attention.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0352, -0.0411, -0.0823,  ..., -0.0108,  0.0555,  0.0457],
        [ 0.0772, -0.0803, -0.0024,  ...,  0.0390,  0.0862, -0.0316],
        [-0.0534,  0.0044, -0.0679,  ..., -0.0122, -0.0427,  0.0157],
        ...,
        [ 0.0705, -0.0572, -0.0343,  ..., -0.0588,  0.0866,  0.0540],
        [-0.0622, -0.0498, -0.0163,  ...,  0.0047, -0.0182,  0.0532],
        [-0.0322,  0.0352,  0.0728,  ..., -0.0326,  0.0078,  0.0323]])
tensor([[-0.2754,  0.1534, -0.1473,  ..., -0.1990, -0.3247, -0.1605],
        [ 0.3148, -0.2807, -0.0179,  ...,  0.2405,  0.4229,  0.1774],
        [ 0.1507, -0.2366, -0.4745,  ...,  0.2314, -0.0401,  0.2486],
        ...,
        [ 0.3044, -0.2626, -0.0836,  ...,  0.1473,  0.4082,  0.2658],
        [-0.2020,  0.2480,  0.2988,  ..., -0.2733,  0.0475, -0.2164],
        [ 0.0705, -0.2813, -0.2086,  ...,  0.2329, -0.0363,  0.3198]])
##########################################################
attention.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0047, -0.0852, -0.0337,  ...,  0.0277, -0.0628,  0.0262],
        [ 0.0507, -0.0055,  0.0833,  ..., -0.0003,  0.0176, -0.0209],
        [ 0.0796,  0.0212, -0.0379,  ..., -0.0266,  0.0624, -0.0143],
        ...,
        [-0.0155,  0.0833,  0.0102,  ...,  0.0593, -0.0570, -0.0694],
        [-0.0059, -0.0348, -0.0618,  ...,  0.0623, -0.0394,  0.0606],
        [-0.0730,  0.0034, -0.0829,  ...,  0.0061,  0.0402,  0.0135]])
tensor([[ 1.9215e-01,  1.3535e-01,  2.5241e-01,  ...,  2.3819e-01,
          1.1098e-01, -1.6263e-01],
        [ 1.7175e-01, -3.4145e-01, -2.4859e-01,  ..., -3.3667e-01,
          3.4994e-01, -3.5133e-01],
        [-3.0852e-04,  2.7224e-01,  2.8011e-01,  ...,  2.7862e-01,
          2.3769e-01, -2.0293e-01],
        ...,
        [ 3.2579e-01,  1.3982e-01, -6.1370e-02,  ..., -9.5119e-03,
          2.8876e-01, -3.9568e-01],
        [-3.6860e-01, -1.1385e-01,  9.1681e-05,  ...,  1.2422e-01,
         -3.8178e-01,  3.7668e-01],
        [ 2.6651e-01, -3.4495e-01, -4.1470e-01,  ..., -3.3536e-01,
          1.5042e-01, -9.1054e-02]])
##########################################################
decoder.embedding.weight shape: torch.Size([287, 128])
tensor([[ 0.9874,  1.2941,  0.9143,  ...,  0.4894, -0.3203,  0.3934],
        [-0.5261,  2.1522,  0.7848,  ..., -0.9731, -1.0407,  0.4749],
        [ 0.4337,  1.2056, -0.5450,  ...,  0.0390,  1.5873, -0.4872],
        ...,
        [ 0.0962,  1.3969,  1.0249,  ...,  1.0251,  1.7431, -1.0641],
        [ 1.1256, -0.0460, -0.9004,  ...,  1.8042, -0.5991,  0.6124],
        [-0.0832,  0.6061, -0.5140,  ..., -0.0373,  1.4086, -0.4230]])
tensor([[ 0.9874,  1.2941,  0.9143,  ...,  0.4894, -0.3203,  0.3934],
        [-0.5261,  2.1522,  0.7848,  ..., -0.9731, -1.0407,  0.4749],
        [ 0.3389,  0.8427, -0.8619,  ..., -0.2144,  1.4892, -0.0880],
        ...,
        [ 0.0962,  1.3969,  1.0249,  ...,  1.0251,  1.7431, -1.0641],
        [ 1.1256, -0.0460, -0.9004,  ...,  1.8042, -0.5991,  0.6124],
        [-0.0832,  0.6061, -0.5140,  ..., -0.0373,  1.4086, -0.4230]])
##########################################################
decoder.blks.block0.attention1.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0823, -0.0444, -0.0790,  ..., -0.0015,  0.0103,  0.0374],
        [-0.0422,  0.0088,  0.0522,  ...,  0.1850, -0.1152, -0.0543],
        [ 0.0553, -0.0473, -0.1306,  ...,  0.0482,  0.0615,  0.0288],
        ...,
        [-0.0533,  0.1800, -0.0498,  ...,  0.0564, -0.0152, -0.0822],
        [-0.0195, -0.0220,  0.1572,  ..., -0.0108, -0.1329, -0.1517],
        [-0.0273, -0.0458, -0.0618,  ...,  0.0562,  0.0658, -0.1200]])
tensor([[ 0.1532,  0.2028, -0.3989,  ...,  0.0072,  0.4105, -0.2148],
        [-0.2016,  0.3445,  0.1730,  ...,  0.2745, -0.4281,  0.2691],
        [ 0.0871,  0.3060,  0.3213,  ..., -0.0478,  0.2275,  0.0412],
        ...,
        [-0.2917,  0.3423, -0.2839,  ...,  0.0185,  0.1417, -0.2931],
        [-0.3827,  0.2364,  0.2109,  ...,  0.0981,  0.2273, -0.1862],
        [-0.3499,  0.1702,  0.2161,  ...,  0.4089,  0.2903,  0.1251]])
##########################################################
decoder.blks.block0.attention1.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.0718,  0.0197,  0.1876,  ..., -0.0363,  0.1341, -0.0432],
        [-0.1021,  0.0625, -0.1095,  ...,  0.1458,  0.1238,  0.0581],
        [-0.0686,  0.0634, -0.1654,  ...,  0.0183,  0.0870,  0.1473],
        ...,
        [-0.1056,  0.0184, -0.0286,  ..., -0.0647,  0.0921, -0.1686],
        [ 0.0447,  0.0776, -0.0984,  ...,  0.0834, -0.1908,  0.0891],
        [ 0.0211, -0.0433, -0.0795,  ..., -0.0243,  0.0343,  0.2260]])
tensor([[-0.1712,  0.3949,  0.2558,  ...,  0.2918, -0.1025,  0.2047],
        [-0.0938,  0.0102,  0.2329,  ...,  0.2953, -0.0157,  0.1808],
        [-0.0249,  0.4065, -0.5199,  ..., -0.0742,  0.3711, -0.1693],
        ...,
        [ 0.1096, -0.2292, -0.0927,  ..., -0.2428,  0.4443, -0.1313],
        [ 0.3400,  0.2967,  0.1251,  ...,  0.1869, -0.3322, -0.2253],
        [ 0.3034,  0.3412,  0.0340,  ..., -0.2597, -0.0460,  0.5596]])
##########################################################
decoder.blks.block0.attention1.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0319,  0.0204, -0.0167,  ..., -0.0107,  0.0854,  0.0157],
        [ 0.0121,  0.0270,  0.1043,  ..., -0.0325, -0.0345,  0.0721],
        [ 0.0002, -0.0306, -0.0458,  ...,  0.0959,  0.0271, -0.0426],
        ...,
        [ 0.0118, -0.0188, -0.0110,  ...,  0.0311,  0.0721, -0.0195],
        [-0.0197,  0.0416,  0.0348,  ..., -0.0918,  0.0437, -0.0390],
        [ 0.0362,  0.0437,  0.0108,  ..., -0.0203, -0.0161,  0.0575]])
tensor([[ 0.2669,  0.1265, -0.2331,  ...,  0.3438,  0.2456, -0.3397],
        [-0.1427, -0.1359,  0.2705,  ..., -0.2233, -0.2961,  0.1724],
        [ 0.1054,  0.0274,  0.1555,  ...,  0.3164,  0.0224, -0.3050],
        ...,
        [-0.2525, -0.0661, -0.2609,  ..., -0.2745,  0.4053,  0.0612],
        [ 0.2405,  0.3685,  0.3327,  ...,  0.1227, -0.2285,  0.3078],
        [ 0.0626,  0.3677,  0.2711,  ...,  0.1704, -0.0890, -0.0604]])
##########################################################
decoder.blks.block0.attention1.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0619, -0.0231,  0.0286,  ...,  0.0458,  0.0542,  0.0154],
        [ 0.0179, -0.0727,  0.0036,  ..., -0.0224, -0.0009, -0.0230],
        [ 0.0077, -0.0055,  0.0359,  ..., -0.0672,  0.0451, -0.0091],
        ...,
        [ 0.0121, -0.0714,  0.0266,  ...,  0.0424, -0.0022,  0.0228],
        [-0.0417,  0.0496, -0.0436,  ...,  0.0259, -0.0887, -0.0019],
        [ 0.0448, -0.0750,  0.0008,  ...,  0.0079,  0.0539, -0.0315]])
tensor([[-0.0318, -0.3794,  0.3825,  ...,  0.0387,  0.3984,  0.0171],
        [ 0.2730, -0.0154, -0.0057,  ...,  0.2961, -0.0733,  0.1052],
        [ 0.1709,  0.3361,  0.2937,  ...,  0.2534,  0.2923, -0.0886],
        ...,
        [-0.0914, -0.4176,  0.3654,  ..., -0.0141,  0.3317, -0.0085],
        [ 0.2769,  0.0928, -0.0343,  ...,  0.3499, -0.1648,  0.2285],
        [ 0.3611, -0.0181, -0.0556,  ...,  0.3485, -0.2938,  0.2328]])
##########################################################
decoder.blks.block0.addnorm1.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.3220, 0.6605, 0.8956, 0.8996, 1.0354, 0.9517, 0.7194, 0.7074, 1.3528,
        0.9440, 0.9226, 0.9419, 1.3572, 0.6444, 0.8699, 0.6394, 1.2909, 1.3495,
        0.9692, 1.3219, 0.8940, 0.9509, 0.8785, 0.8721, 0.8454, 1.1167, 1.3527,
        0.9934, 0.6816, 0.7586, 0.6412, 1.1557, 0.7343, 1.1146, 0.7149, 1.3511,
        0.7323, 0.6523, 0.8623, 0.9002, 0.8275, 0.6429, 0.6608, 1.0477, 1.0167,
        0.9738, 0.6673, 0.9455, 0.8329, 1.3212, 0.9603, 1.1166, 1.0321, 0.7007,
        1.3517, 1.2706, 1.2655, 0.6479, 0.8440, 1.3280, 1.2351, 1.1486, 0.8405,
        1.1057, 1.3408, 1.3466, 1.2830, 1.1065, 0.9832, 1.3374, 0.6503, 0.6292,
        1.3406, 0.9012, 1.1071, 0.8221, 0.7314, 0.9411, 1.3036, 0.7201, 0.9715,
        1.3560, 0.9769, 0.7950, 0.6479, 0.6458, 1.1719, 1.3022, 1.1696, 1.1605,
        0.8591, 1.1915, 0.9110, 1.0509, 0.9600, 0.8800, 0.6519, 1.2952, 1.2593,
        1.0207, 0.9128, 0.8837, 0.9296, 0.8852, 1.1122, 0.8961, 0.7453, 0.9791,
        1.3571, 1.2599, 0.8322, 0.7499, 1.3482, 1.0874, 0.9054, 0.6741, 1.3350,
        0.6671, 1.0667, 0.6951, 1.1141, 1.3438, 1.0099, 0.9425, 1.3505, 1.2757,
        0.6397, 0.6551])
##########################################################
decoder.blks.block0.addnorm1.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.3184,  0.1611,  0.1598,  0.0956,  0.3427, -0.2542,  0.1322,  0.1496,
         0.2973,  0.1339,  0.3539,  0.3595, -0.3566,  0.1873,  0.0259, -0.1704,
         0.3204, -0.3526, -0.3180,  0.1041, -0.0476, -0.1433, -0.3576, -0.3241,
        -0.0703, -0.0581,  0.3571, -0.3606,  0.1364, -0.2366, -0.0642, -0.2163,
         0.1420,  0.3415,  0.0293, -0.3006,  0.0874, -0.3444,  0.0627,  0.0149,
         0.2381,  0.0074, -0.1605, -0.3501, -0.0978, -0.2721,  0.1037, -0.3457,
         0.3195, -0.2234,  0.0090, -0.3259, -0.1302, -0.1926, -0.3510, -0.2876,
        -0.1149,  0.3580, -0.1857,  0.3100, -0.2467, -0.3346,  0.1156,  0.3293,
         0.2895,  0.3206,  0.3068,  0.3564,  0.3552,  0.3320, -0.3454, -0.3432,
        -0.3623,  0.1097, -0.0151, -0.1991, -0.0694,  0.0884,  0.2875,  0.0182,
         0.2632,  0.0815,  0.1290,  0.1575, -0.0744, -0.0214,  0.3450, -0.2575,
        -0.3023, -0.3372,  0.3467, -0.1459,  0.0587,  0.0830, -0.3523, -0.0081,
        -0.3257,  0.0764,  0.2503,  0.3220,  0.0822,  0.1692,  0.3539, -0.0028,
        -0.3594,  0.3445, -0.1874,  0.0010, -0.2993, -0.2525,  0.1366, -0.2954,
        -0.3221, -0.2497, -0.1136,  0.3502,  0.3485, -0.0310,  0.2549, -0.0030,
        -0.3583, -0.3539, -0.0633, -0.0119, -0.3281,  0.3468,  0.0836,  0.0794])
##########################################################
decoder.blks.block0.attention2.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0824,  0.0200, -0.0355,  ...,  0.0219,  0.2505,  0.0242],
        [ 0.0327, -0.0409, -0.0314,  ...,  0.0223,  0.0577, -0.0871],
        [-0.1211, -0.0555,  0.0308,  ..., -0.0410, -0.1919, -0.0682],
        ...,
        [-0.1197, -0.0613, -0.0257,  ..., -0.0928, -0.0421,  0.0024],
        [-0.1070, -0.1072, -0.1232,  ...,  0.0979,  0.0734, -0.0817],
        [ 0.0891, -0.0325, -0.0083,  ..., -0.0038,  0.0953, -0.0850]])
tensor([[ 0.0153, -0.0839, -0.1634,  ...,  0.0669, -0.0811, -0.2940],
        [ 0.2396,  0.2909,  0.1169,  ...,  0.1675,  0.3952,  0.2691],
        [ 0.2777,  0.0823,  0.2167,  ...,  0.3794, -0.0564,  0.0224],
        ...,
        [-0.6511, -0.1889, -0.5159,  ..., -0.0637, -0.0620,  0.0620],
        [ 0.1621, -0.1751, -0.2668,  ...,  0.4838, -0.0613, -0.1724],
        [ 0.5596,  0.3521,  0.3854,  ...,  0.4559,  0.2892,  0.2229]])
##########################################################
decoder.blks.block0.attention2.W_k.weight shape: torch.Size([128, 128])
tensor([[ 0.0016,  0.0321, -0.0813,  ...,  0.0913, -0.0607, -0.0637],
        [-0.0074,  0.0365, -0.0562,  ...,  0.0832, -0.0115,  0.0366],
        [ 0.1196, -0.0377,  0.0878,  ..., -0.0501, -0.0820, -0.0975],
        ...,
        [-0.0939,  0.0407, -0.0186,  ..., -0.1173,  0.0031,  0.0492],
        [-0.1042, -0.0816,  0.0848,  ..., -0.0400,  0.1501,  0.0877],
        [ 0.0700,  0.0778,  0.0492,  ...,  0.0812, -0.0287,  0.0103]])
tensor([[ 0.1271,  0.1359,  0.3050,  ...,  0.4368,  0.0692, -0.1870],
        [ 0.1648, -0.1647,  0.0459,  ..., -0.0602,  0.4727,  1.0565],
        [-0.2482, -0.0439, -0.3747,  ..., -0.5537, -0.5895,  0.1719],
        ...,
        [ 0.4411, -0.0445, -0.2950,  ..., -0.1572,  0.0178,  0.0199],
        [-0.4554, -0.0776,  0.3124,  ...,  0.1393,  0.1503,  1.5455],
        [ 0.0433, -0.0555, -0.1402,  ..., -0.2678, -0.2786,  1.1909]])
##########################################################
decoder.blks.block0.attention2.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0059, -0.0741,  0.0689,  ..., -0.0005,  0.0434,  0.0076],
        [-0.0117, -0.0219,  0.0180,  ..., -0.0167, -0.0185, -0.0870],
        [ 0.0537,  0.0047, -0.0052,  ...,  0.0041, -0.0673, -0.0375],
        ...,
        [-0.0027, -0.0590,  0.0130,  ...,  0.0618,  0.0227,  0.0345],
        [-0.0981, -0.0017,  0.0076,  ..., -0.0587,  0.0862, -0.0425],
        [ 0.0438,  0.0539,  0.0197,  ..., -0.0238, -0.0195, -0.0341]])
tensor([[-0.1474, -0.1696,  0.0506,  ...,  0.3601,  0.0616,  0.3653],
        [-0.3075, -0.3436, -0.3020,  ...,  0.1133, -0.3487, -0.0058],
        [ 0.0330, -0.1089, -0.0863,  ...,  0.3961, -0.1151,  0.3660],
        ...,
        [-0.3057, -0.4048, -0.3212,  ...,  0.0973, -0.3016, -0.0030],
        [-0.1092, -0.1144, -0.0815,  ...,  0.3447,  0.0279,  0.3642],
        [-0.2249, -0.2749, -0.3141,  ...,  0.0916, -0.3606,  0.0248]])
##########################################################
decoder.blks.block0.attention2.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0888, -0.0433, -0.0065,  ...,  0.0096,  0.0127,  0.0126],
        [ 0.0859,  0.0543,  0.0280,  ..., -0.0511,  0.0156,  0.0166],
        [ 0.0851, -0.0348, -0.0207,  ...,  0.0227, -0.0177, -0.0584],
        ...,
        [ 0.0077,  0.0534,  0.0031,  ...,  0.0476, -0.0648,  0.0439],
        [ 0.0155,  0.0572, -0.0702,  ...,  0.0113, -0.0467, -0.1060],
        [ 0.0283, -0.0834,  0.0313,  ..., -0.0095, -0.0139, -0.0781]])
tensor([[ 0.2043, -0.3810,  0.1065,  ..., -0.3257,  0.1192, -0.3246],
        [-0.2468,  0.1490, -0.3111,  ...,  0.0511, -0.3345,  0.1123],
        [-0.2227,  0.0466, -0.3443,  ...,  0.1177, -0.3529,  0.0261],
        ...,
        [ 0.1252, -0.2795,  0.1177,  ..., -0.2840,  0.0480, -0.2886],
        [-0.3553,  0.1671, -0.4356,  ...,  0.1267, -0.4142,  0.0060],
        [-0.3184,  0.0286, -0.3148,  ...,  0.1060, -0.3641,  0.0349]])
##########################################################
decoder.blks.block0.addnorm2.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.0317, 0.7113, 0.8430, 1.3522, 0.8457, 0.8914, 0.7725, 0.8822, 1.2188,
        1.0767, 0.8358, 0.5919, 0.8291, 1.0667, 1.1021, 0.8578, 1.2928, 0.9536,
        0.5196, 1.3121, 1.0879, 1.0898, 0.6590, 0.6311, 1.1262, 1.2315, 0.8153,
        0.8592, 0.9848, 0.5066, 0.9777, 1.2514, 1.0444, 0.8721, 1.1298, 1.2144,
        0.9731, 0.6535, 1.0718, 1.7132, 0.8783, 0.6387, 0.7449, 0.6560, 1.0453,
        0.8836, 0.8887, 0.8392, 0.7686, 1.0102, 1.3300, 0.8161, 0.9925, 0.6277,
        0.8421, 1.0796, 1.2234, 0.6505, 1.2787, 1.0773, 0.8780, 1.0376, 1.1478,
        1.1998, 0.6659, 0.8590, 1.2720, 0.8537, 0.6851, 1.3269, 0.5846, 0.9616,
        1.3450, 1.0210, 1.1733, 0.9441, 0.8263, 1.1731, 1.2050, 1.0525, 0.6288,
        1.4142, 0.8819, 0.9957, 0.7069, 0.7238, 1.0115, 1.1874, 0.9133, 1.3477,
        0.7659, 1.1763, 1.0138, 1.4857, 0.8170, 1.6985, 0.5967, 1.3590, 1.0500,
        0.8437, 1.0845, 0.8991, 0.8330, 0.9786, 0.9185, 0.8849, 1.2101, 1.1888,
        1.3621, 0.9689, 0.9549, 0.6987, 1.1957, 0.8319, 1.3733, 0.7637, 0.9238,
        0.8291, 0.9108, 1.2037, 0.6395, 1.3313, 1.0567, 1.4134, 1.3308, 0.8715,
        1.4048, 1.2776])
##########################################################
decoder.blks.block0.addnorm2.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.3630,  0.1320,  0.1373,  0.0451,  0.3261, -0.1618,  0.0685,  0.1290,
         0.2674,  0.1076,  0.2506,  0.3965, -0.3590,  0.2613,  0.0258, -0.1343,
         0.3525, -0.2569, -0.2878,  0.1851, -0.0453, -0.0971, -0.3748, -0.3942,
        -0.0500, -0.0303,  0.2981, -0.4585,  0.1067, -0.2334,  0.0077, -0.2503,
         0.1371,  0.6771,  0.0308, -0.2913,  0.0746, -0.3122,  0.0105, -0.0710,
         0.3907, -0.0896, -0.1364, -0.3876, -0.0145, -0.2759,  0.1277, -0.3435,
         0.4412, -0.1523, -0.0538, -0.2596, -0.0709, -0.1558, -0.3452, -0.3712,
        -0.0530,  0.3309, -0.2200,  0.3250, -0.2116, -0.3967,  0.0520,  0.4395,
         0.3568,  0.2565,  0.2819,  0.4525,  0.4288,  0.2833, -0.5455, -0.1091,
        -0.3613,  0.0117,  0.0020, -0.1937, -0.0318,  0.1531,  0.2725, -0.0149,
         0.1626,  0.0228,  0.0618,  0.1437, -0.0349, -0.0580,  0.2022, -0.2372,
        -0.2869, -0.2951,  0.3160, -0.3213,  0.0597, -0.0360, -0.2911, -0.0615,
        -0.4553,  0.0786,  0.2020,  0.3063,  0.0804,  0.0801,  0.3793, -0.0384,
        -0.4395,  0.3705, -0.2815, -0.0442, -0.3095, -0.0838,  0.0993, -0.3694,
        -0.3522, -0.4271, -0.2108,  0.3805,  0.3777, -0.0074,  0.2447,  0.0548,
        -0.2889, -0.3603, -0.0506,  0.0060, -0.2703,  0.3988,  0.1935,  0.0948])
##########################################################
decoder.blks.block0.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[-0.0404,  0.0164, -0.0628,  ..., -0.0035,  0.0617, -0.0183],
        [ 0.0342, -0.0448,  0.0248,  ..., -0.0398,  0.0288, -0.0198],
        [ 0.0363, -0.0581,  0.0825,  ...,  0.0300, -0.0461,  0.0055],
        ...,
        [ 0.0312,  0.0031,  0.0623,  ..., -0.0533, -0.0201,  0.0806],
        [-0.0533, -0.0161,  0.0441,  ...,  0.0673, -0.0907,  0.0698],
        [-0.0318, -0.0125,  0.0617,  ..., -0.0988,  0.1457, -0.0158]])
tensor([[-0.1197,  0.0574,  0.0361,  ..., -0.1122, -0.2974, -0.3771],
        [ 0.4357, -0.0282,  0.0833,  ...,  0.3142,  0.2979,  0.5194],
        [-0.0666, -0.3486, -0.4868,  ...,  0.3007, -0.3286, -0.0265],
        ...,
        [-0.3041, -0.0414,  0.0852,  ..., -0.1657, -0.3924,  0.0099],
        [ 0.1875, -0.5168, -0.2046,  ...,  0.3075, -0.2266, -0.0451],
        [-0.2002,  0.0094,  0.1038,  ..., -0.1564,  0.5839,  0.0741]])
##########################################################
decoder.blks.block0.ffn.dense1.bias shape: torch.Size([64])
tensor([ 0.0526,  0.0248,  0.0376,  0.0706,  0.0666, -0.0107, -0.0606,  0.0432,
         0.0868,  0.0335, -0.0634,  0.0362,  0.0628,  0.0615, -0.0198, -0.0034,
        -0.0727, -0.0608,  0.0064, -0.0631,  0.0305, -0.0323,  0.0057,  0.0366,
         0.0201,  0.0771,  0.0369,  0.0347, -0.0559,  0.0656,  0.0491,  0.0856,
        -0.0553, -0.0491,  0.0158,  0.0254,  0.0170, -0.0464, -0.0871,  0.0303,
        -0.0032, -0.0272, -0.0574,  0.0040, -0.0868,  0.0688, -0.0870, -0.0847,
         0.0464, -0.0784, -0.0453,  0.0290,  0.0594, -0.0694, -0.0674,  0.0498,
         0.0748, -0.0660, -0.0782,  0.0602, -0.0429,  0.0136, -0.0080,  0.0132])
tensor([ 4.1024e-01,  1.6457e-02,  1.7980e-02,  9.7579e-02, -1.8670e-01,
         9.2743e-02,  4.3180e-02, -4.8168e-02,  3.1604e-02, -1.2004e-01,
         9.7467e-02, -3.8542e-01,  1.5452e-02,  3.6227e-01,  2.0986e-01,
        -7.7700e-02, -6.3103e-02, -5.7253e-01, -1.1936e-01,  2.6631e-01,
         1.6377e-03,  2.9174e-02, -8.7485e-02,  3.5156e-01, -4.3180e-01,
        -1.0838e-01, -4.1867e-01,  3.9258e-01,  1.9368e-01, -1.6424e-01,
         3.2520e-01, -3.1488e-01,  1.7068e-01, -3.9510e-01, -1.4067e-01,
         3.7609e-01, -1.6425e-01,  2.9207e-01, -1.9927e-01,  1.1644e-02,
         6.9419e-01,  6.5506e-01, -5.6089e-02,  3.4682e-01,  1.2574e-03,
        -3.3702e-01,  4.6392e-02, -4.7937e-01,  2.6506e-02, -3.9605e-01,
        -1.0150e-01, -4.6547e-04,  2.2010e-01,  2.5664e-01,  2.0241e-01,
        -1.3165e-01,  5.2912e-01,  1.9988e-01,  2.6056e-01,  3.9990e-01,
         4.7847e-02,  1.8938e-02,  1.0830e-03, -7.0386e-02])
##########################################################
decoder.blks.block0.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[ 0.0516, -0.0662,  0.0646,  ...,  0.0892,  0.0744,  0.0941],
        [ 0.1041, -0.0299,  0.0292,  ...,  0.0454,  0.0333,  0.0499],
        [ 0.0457, -0.0572,  0.0709,  ..., -0.0015, -0.0162,  0.0580],
        ...,
        [ 0.0433,  0.0276,  0.0217,  ..., -0.1011, -0.0675,  0.0163],
        [ 0.0381, -0.0159, -0.0071,  ..., -0.0378, -0.0146, -0.0516],
        [-0.0082,  0.0693, -0.0103,  ..., -0.0024, -0.0246,  0.0323]])
tensor([[ 0.3950,  0.2185,  0.4451,  ...,  0.4311,  0.3431,  0.4222],
        [ 0.0033, -0.1029,  0.3147,  ...,  0.1492,  0.3303,  0.0059],
        [ 0.3647,  0.0035,  0.1707,  ..., -0.3292, -0.0581, -0.0900],
        ...,
        [ 0.3870,  1.1384,  0.4207,  ...,  0.2210,  0.2477,  1.0736],
        [-0.2955,  0.1288,  0.0420,  ..., -0.1248,  0.3536,  0.0386],
        [-0.1118, -0.0228,  0.1908,  ..., -0.0320,  0.3041, -0.0977]])
##########################################################
decoder.blks.block0.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.0794,  0.0021, -0.0828, -0.0739, -0.1086,  0.0596,  0.0404, -0.0436,
        -0.1218,  0.0296, -0.0372,  0.0284, -0.1223, -0.0771,  0.0364, -0.0351,
         0.0351, -0.0845, -0.0620,  0.0861,  0.1046,  0.0379,  0.0862, -0.0508,
        -0.1149, -0.0566, -0.0927, -0.0689, -0.0497, -0.0887, -0.0314, -0.0028,
         0.0372, -0.0013, -0.0179, -0.0171,  0.1055, -0.0861, -0.0936, -0.1078,
         0.0900, -0.0898,  0.0087, -0.1201, -0.0288,  0.0890,  0.1115, -0.0963,
         0.0555,  0.0868,  0.0309,  0.1045,  0.0272, -0.0229, -0.1029,  0.0588,
        -0.0361,  0.0839,  0.0265, -0.0642,  0.0806,  0.1240, -0.0943,  0.1036,
        -0.0158,  0.0959,  0.1229, -0.1162,  0.0623, -0.0986, -0.0557,  0.0083,
         0.1136, -0.0305, -0.0222,  0.0590,  0.0671, -0.0246, -0.0894, -0.0598,
         0.0613, -0.0581, -0.1027,  0.0925,  0.0176, -0.0850,  0.0759, -0.0142,
         0.0796, -0.0878,  0.1183, -0.0447,  0.0602,  0.0582, -0.0698,  0.0691,
         0.0263, -0.0427, -0.1234, -0.0225, -0.0146,  0.0753,  0.0942, -0.0299,
         0.0936,  0.0949,  0.0797, -0.0256,  0.0709,  0.0999,  0.0312,  0.0708,
        -0.1104,  0.0366,  0.1224,  0.1058,  0.0554, -0.1211,  0.0813,  0.0878,
        -0.1211,  0.0588, -0.1247, -0.1023,  0.0666,  0.0759, -0.1214, -0.0990])
tensor([ 4.2598e-01,  1.2087e-01,  8.8890e-02,  6.2210e-02,  1.8977e-01,
        -1.3064e-01,  1.0456e-01,  9.1372e-02,  2.4399e-01,  8.1682e-02,
         2.1757e-01,  3.5582e-01, -4.6030e-01,  2.0080e-01,  7.4435e-02,
        -1.7525e-01,  3.7952e-01, -4.3636e-01, -3.5827e-01,  2.6934e-01,
         1.3408e-01, -7.3867e-03, -4.4992e-01, -4.9700e-01, -3.1028e-01,
        -1.9918e-01,  3.0031e-01, -5.3302e-01,  1.0054e-01, -2.7008e-01,
        -1.0743e-01, -2.4902e-01,  2.2090e-01,  6.0942e-01,  1.5164e-01,
        -3.1448e-01,  1.0566e-01, -4.1766e-01, -9.1666e-02, -4.8267e-02,
         4.9902e-01, -1.7915e-01, -1.7953e-01, -5.8279e-01,  6.0035e-03,
        -1.7949e-01,  4.4763e-01, -4.2289e-01,  3.7780e-01, -1.1711e-01,
         8.9206e-02, -2.8186e-01, -3.6367e-02, -1.7793e-01, -4.3321e-01,
        -2.5484e-01, -9.9171e-03,  4.6473e-01, -1.4448e-01,  2.7993e-01,
        -1.9252e-01, -2.6075e-01,  2.1557e-02,  4.6034e-01,  2.9339e-01,
         3.5944e-01,  4.4590e-01,  3.6530e-01,  2.9867e-01,  2.0748e-01,
        -5.7418e-01,  5.7170e-01, -2.0300e-01,  1.1706e-01, -7.7087e-02,
        -1.1602e-01,  1.1698e-01,  9.0701e-02,  1.2991e-01, -1.7406e-01,
         2.6040e-01,  1.0562e-02,  1.5817e-02,  8.5877e-02, -3.7744e-02,
        -1.4081e-01,  3.6439e-01, -2.1581e-01, -1.8233e-01, -4.5110e-01,
         2.9551e-01, -9.2659e-02,  1.2048e-01,  1.3869e-01, -4.2246e-01,
         8.0528e-02, -7.1019e-01, -1.8058e-04,  9.2113e-03,  2.9281e-01,
        -3.1123e-02,  1.6805e-01,  5.5192e-01,  5.0013e-02, -2.5810e-01,
         1.1301e-01, -1.2773e-01, -2.7204e-02, -2.2757e-01, -3.0198e-02,
         1.0889e-01, -2.9088e-01, -4.0201e-01, -3.7538e-01,  4.2754e-02,
         3.8822e-01,  4.3110e-01, -1.0786e-01,  2.8596e-01,  7.0423e-02,
        -5.5858e-01, -2.9005e-01, -1.9941e-01, -1.2312e-01, -2.4286e-01,
         4.8028e-01, -8.8214e-02, -6.7014e-02])
##########################################################
decoder.blks.block0.addnorm3.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([ 0.1531,  0.0712,  0.0006,  0.1305,  0.3030,  0.0734, -0.0655,  0.0952,
         0.0742, -0.0189,  0.0834,  0.0628,  0.0645,  0.0162, -0.0251, -0.0336,
         0.1359,  0.0405, -0.0378,  0.1912,  0.0616,  0.0165,  0.0099,  0.0126,
        -0.0041,  0.0187,  0.0380,  0.0376,  0.0400,  0.0207,  0.0029,  0.1231,
         0.0055,  0.0566,  0.0514,  0.0690,  0.0145, -0.0053, -0.0110,  0.0388,
         0.0794,  0.0208,  0.0730,  0.0258,  0.0640,  0.0688,  0.0471,  0.0918,
         0.0743,  0.2533,  0.0315,  0.0064,  0.0326,  0.0996,  0.1055,  0.0173,
        -0.0065,  0.1104,  0.0443,  0.2716,  0.1932,  0.0439,  0.0407,  0.1968,
        -0.0341,  0.2837,  0.2820,  0.0404,  0.0306,  0.2584,  0.0143,  0.0153,
         0.2498,  0.0541, -0.0694, -0.0198,  0.0558,  0.0448,  0.2414, -0.0035,
         0.1296,  0.0518,  0.0192,  0.0271,  0.0547, -0.1157,  0.0901,  0.0425,
         0.0595, -0.1335, -0.0091,  0.0238,  0.0445,  0.0890, -0.0023,  0.0491,
         0.0064,  0.1958,  0.0078, -0.0303,  0.0348,  0.1254,  0.0528,  0.0041,
         0.0156, -0.0407,  0.0367,  0.0013,  0.1295,  0.1144,  0.1376,  0.0035,
         0.0664,  0.0196,  0.0540,  0.0660,  0.2101,  0.0718,  0.0191,  0.0411,
         0.0301,  0.0973,  0.1603,  0.0460,  0.1929,  0.0509, -0.0368, -0.0010])
##########################################################
decoder.blks.block0.addnorm3.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-5.9394e-02, -4.0749e-03,  1.8523e-02, -4.6311e-02, -5.0236e-02,
         2.3390e-02, -1.2025e-02, -3.5874e-02, -4.6613e-03, -2.5796e-03,
         1.4690e-02,  1.6328e-02, -1.9597e-01, -2.8081e-02,  3.6261e-03,
        -1.1908e-02,  1.6571e-01, -1.1042e-02, -4.6325e-02,  4.1827e-02,
         1.4102e-02,  6.1206e-04, -4.7182e-02,  6.3545e-03, -2.7415e-02,
         2.5819e-02, -3.1257e-02, -4.1857e-02, -7.2355e-03,  7.2227e-04,
        -8.0446e-03,  1.9773e-02,  2.0953e-03,  9.9451e-01, -7.2697e-03,
        -1.3566e-02,  1.5678e-03, -1.3923e-02, -5.3901e-03, -9.6552e-04,
        -4.0695e-02,  2.1471e-03,  2.4311e-02,  1.4682e-02, -4.5661e-03,
         2.1685e-02,  2.1386e-02, -2.2108e-02,  8.9305e-03,  3.3367e-03,
         8.7085e-04, -1.4268e-02,  6.9393e-04,  2.2968e-03, -1.4374e-01,
        -7.0661e-02, -2.3854e-04, -4.2711e-02,  7.7678e-03,  5.9952e-03,
        -4.8876e-02, -2.1601e-02, -1.8889e-02, -3.4146e-02,  2.2648e-01,
        -3.3219e-02, -1.9875e-02, -2.5127e-02, -5.2831e-02, -1.3124e-02,
        -6.0765e-03, -1.7221e-02, -3.1496e-02, -5.9983e-02, -9.9644e-03,
        -1.5051e-02, -3.8911e-04,  2.6094e-02, -1.7067e-02, -1.4934e-02,
        -3.9251e-02,  4.9375e-03, -4.2698e-03,  5.2579e-03,  1.5364e-02,
        -2.9599e-05,  1.4277e-02, -1.0306e-02, -6.0357e-03, -9.8703e-03,
         6.4115e-04,  3.8208e-03, -2.9231e-03,  9.1385e-03,  7.4167e-03,
        -2.5548e-03, -9.0867e-03, -5.3290e-02,  4.5942e-03,  3.1906e-02,
         1.1828e-02, -2.7738e-02,  6.4722e-02, -1.3370e-03, -1.4198e-02,
        -3.9930e-02,  9.8220e-03,  5.1941e-03, -6.7383e-03, -1.2450e-02,
        -6.2854e-02, -3.4704e-03, -1.5836e-02,  3.8885e-02,  2.7794e-03,
         2.5539e-02, -4.6210e-02, -4.2678e-04,  3.0060e-03, -3.9384e-03,
         2.9792e-02, -3.0166e-02,  7.6642e-03, -1.1266e-03, -2.1851e-02,
        -2.9902e-02, -2.5850e-03, -2.3926e-03])
##########################################################
decoder.dense.weight shape: torch.Size([287, 128])
tensor([[-0.0741,  0.0276, -0.0487,  ..., -0.0510, -0.0380, -0.0315],
        [-0.0186, -0.0037,  0.0396,  ..., -0.0388,  0.0078,  0.0226],
        [ 0.0610, -0.0213,  0.0384,  ..., -0.0097,  0.0097, -0.0277],
        ...,
        [ 0.0165, -0.0012, -0.0480,  ..., -0.0140, -0.0417,  0.0285],
        [-0.0028, -0.0280,  0.0226,  ..., -0.0412,  0.0175, -0.0402],
        [-0.0430, -0.0491, -0.0414,  ...,  0.0379,  0.0384, -0.0243]])
tensor([[-0.7078, -0.0909, -0.3933,  ..., -1.3019,  0.1175,  0.1126],
        [-0.7676, -0.1266, -0.2879,  ..., -1.2586,  0.1406,  0.1273],
        [-0.5994, -0.1424, -0.2255,  ..., -1.1156,  0.0871,  0.0268],
        ...,
        [-0.5927, -0.1605, -0.6174,  ..., -0.9613,  0.1640,  0.2206],
        [-0.6252, -0.1244, -0.6510,  ..., -1.0970,  0.1892,  0.1329],
        [-0.7534, -0.1846, -0.6869,  ..., -1.0431,  0.2755,  0.2073]])
##########################################################
decoder.dense.bias shape: torch.Size([287])
tensor([ 1.5530e-02,  1.3747e-02,  9.5037e-03,  1.8537e-03,  4.7955e-02,
         7.1301e-02,  7.1193e-02,  8.2868e-02,  7.2079e-02, -6.8057e-02,
        -4.7299e-02,  3.4079e-02,  2.5661e-02, -7.1259e-02,  1.7661e-02,
         6.1697e-02,  6.8515e-02,  3.3063e-02,  5.1746e-02, -2.3604e-02,
        -3.1165e-02, -1.0612e-02,  1.7000e-02, -6.3865e-02, -8.5078e-02,
         7.4699e-02,  4.2978e-04,  3.3198e-02,  3.3345e-02,  2.6696e-02,
        -1.2693e-02,  1.4966e-02, -4.0277e-02,  1.9086e-03, -5.4548e-02,
        -3.0884e-03, -6.9325e-02, -6.2363e-02,  4.0510e-02, -5.8650e-03,
        -3.9476e-02, -2.3023e-02, -5.7446e-03,  5.3421e-02, -6.9129e-02,
        -3.8691e-02,  4.6831e-02, -7.8750e-02, -3.0864e-03,  5.0477e-02,
        -1.8337e-02, -2.7729e-02, -8.4265e-02,  1.2510e-02,  1.0260e-03,
        -1.6406e-02,  1.1248e-02, -1.5770e-02,  4.5031e-02, -2.0750e-03,
         2.7533e-02,  3.6519e-04,  3.8702e-02,  3.5362e-02, -9.7188e-03,
         5.6399e-02,  9.2185e-03, -3.2760e-02,  1.6971e-02,  4.6904e-02,
         3.7614e-02, -4.4878e-02,  5.7704e-02, -3.0782e-03, -8.3716e-02,
         1.7025e-02,  4.3236e-02,  8.1092e-02,  2.6655e-02,  6.6586e-03,
        -5.1020e-02, -7.1137e-02, -7.1679e-02, -8.1379e-04, -7.4370e-02,
         8.6391e-02, -4.1375e-03, -5.1613e-03,  3.7819e-02,  5.7981e-02,
         6.5860e-02, -2.7198e-03,  8.2198e-02,  3.5509e-02, -5.9327e-02,
        -2.2611e-02,  2.9797e-02, -3.7833e-02, -3.0718e-02,  1.6600e-02,
        -1.0540e-02, -2.8219e-02, -5.5501e-03,  5.0296e-02,  3.5987e-02,
         1.8805e-02, -5.4626e-02,  8.6632e-02,  2.8832e-02, -4.4226e-02,
        -8.3114e-02, -7.3622e-02,  6.1286e-02,  6.9401e-02, -2.2451e-02,
         3.1888e-02, -5.6137e-02,  4.6803e-02,  2.8720e-02,  3.5301e-02,
        -7.5902e-02,  4.0286e-02,  4.9938e-02,  2.4890e-02, -7.8681e-02,
        -2.3876e-02, -3.5769e-03,  7.0995e-02, -8.2106e-02, -5.5497e-02,
        -4.7936e-02,  3.6657e-02,  2.0551e-02,  7.3671e-02, -1.2714e-02,
         5.8737e-02,  7.2145e-02,  5.5856e-02,  5.6892e-02, -4.0851e-02,
        -8.3951e-02,  4.1631e-03, -4.0138e-02,  5.0861e-02, -6.5245e-02,
         8.5160e-02,  2.6620e-02,  4.6764e-02,  8.9296e-03,  2.4687e-02,
        -4.3186e-02, -6.6544e-02,  8.3336e-02,  5.0528e-02,  4.4794e-02,
         6.4001e-02,  6.4381e-02, -6.7380e-03, -3.2671e-02, -6.2551e-02,
         5.0664e-02, -1.8449e-02, -1.7918e-02, -3.0498e-02, -1.0291e-02,
        -2.8916e-03, -4.6175e-02,  8.1769e-02, -5.0192e-02,  2.8757e-02,
         5.5821e-02, -8.4750e-03,  3.6721e-02,  8.7816e-02,  6.5969e-02,
         1.0482e-02, -5.9532e-03, -8.7124e-02,  7.8905e-02, -5.5499e-05,
         5.7194e-02,  8.2496e-02, -8.5477e-03,  8.5267e-02,  6.8089e-02,
        -5.6329e-02,  5.1945e-02, -7.5463e-02,  6.5143e-02, -1.2983e-02,
        -9.6553e-03,  2.2674e-02,  8.1539e-02,  4.9659e-02,  4.5846e-02,
        -4.9632e-02,  8.2642e-02,  5.5258e-02,  2.3359e-02,  5.7079e-02,
        -2.4126e-02,  7.0152e-02,  1.9007e-02,  3.0073e-02, -6.4207e-02,
        -8.7454e-02,  3.1716e-02, -8.4832e-02,  7.5406e-02, -8.2720e-03,
        -7.1425e-02,  3.9041e-05, -6.1275e-02, -1.3442e-02, -4.8598e-03,
         8.2063e-02,  3.4871e-02, -8.0810e-02,  7.8002e-02,  4.3465e-02,
         3.8703e-02,  7.9410e-02, -9.1086e-03, -1.5818e-02, -4.4330e-02,
         2.6009e-02,  4.1141e-02,  5.2820e-03,  3.8503e-02,  8.5306e-02,
         6.3623e-02, -4.8398e-02,  1.4285e-02, -5.3394e-02, -1.0089e-02,
        -3.8372e-02,  3.6245e-02, -1.1808e-02, -4.8527e-02,  7.3056e-02,
         4.0410e-02, -1.5040e-02, -8.6631e-02, -6.0661e-02,  8.8267e-02,
         8.4044e-02,  5.5583e-02, -6.2023e-02,  1.9330e-02,  3.5577e-02,
        -2.9254e-02, -1.1611e-02,  6.9371e-02, -8.6673e-02,  3.5196e-03,
         3.2203e-02, -6.8165e-02, -1.4781e-02, -4.4049e-02, -6.8594e-02,
        -4.0980e-03, -1.1097e-02,  4.9506e-02,  3.2825e-02, -2.3518e-02,
         8.1906e-02, -7.9121e-02,  2.0364e-02, -1.0084e-02,  4.4279e-02,
        -2.2001e-02, -9.0938e-03,  7.5383e-02, -5.0875e-02,  3.6275e-02,
        -3.8025e-02, -4.5542e-02,  4.7272e-02,  1.3888e-02, -5.3040e-03,
        -7.3566e-04, -4.0951e-02,  3.1375e-02,  8.8106e-02, -3.2829e-02,
         5.2111e-02,  4.8383e-02])
tensor([-1.8990, -2.0697, -2.1842, -0.8166,  1.2710,  1.2957,  1.2516,  1.2718,
         0.4000,  0.5495, -0.0481, -0.1029,  0.0045, -0.1056, -0.1987, -0.3607,
        -0.2629, -0.4859, -0.3530, -0.6964, -0.7055, -0.6932, -1.0904, -1.1571,
        -1.4200, -1.0688, -1.6590, -1.4335, -1.5262, -1.6664, -1.2693, -2.0828,
        -1.9754, -1.9120, -1.7567, -2.0506, -1.7006, -1.7742, -2.0909, -1.9352,
        -1.9477, -2.0489, -1.0074, -1.8757, -2.2226, -2.1081, -1.7324, -1.9344,
        -1.9058, -1.9198, -2.2672, -2.0604, -1.9741, -1.4143, -2.0046, -2.1241,
        -1.9336, -2.0914, -1.9203, -1.9318, -1.6714, -2.0816, -1.8190, -1.9193,
        -1.8659, -1.4007, -2.3833, -2.1124, -1.8456, -1.8277, -2.0521, -1.6852,
        -1.5115, -1.8778, -1.9826, -1.9674, -1.9868, -1.9490, -2.0919, -1.8115,
        -2.2597, -1.9888, -2.0409, -1.8315, -2.1215, -2.2216, -1.7532, -1.9328,
        -1.7511, -1.9376, -2.0360, -1.6787, -1.9194, -1.7917, -1.5696, -2.0492,
        -1.9205, -1.9054, -1.9046, -1.8287, -2.4484, -1.8758, -1.9271, -1.9962,
        -1.9236, -1.9159, -1.9192, -1.9323, -1.9066, -1.9080, -1.9125, -1.7237,
        -2.2926, -1.5340, -1.7843, -1.9420, -2.0376, -1.7967, -1.7857, -1.7860,
        -2.0683, -2.1691, -1.6360, -1.8590, -1.9055, -1.7620, -1.9592, -1.6710,
        -1.9955, -2.0409, -1.9862, -1.7975, -2.0984, -1.8932, -1.4936, -1.8797,
        -1.8435, -1.6245, -1.6169, -2.2351, -2.0205, -1.8234, -2.1168, -2.1472,
        -1.9722, -1.6179, -1.8815, -1.8503, -1.7986, -1.7209, -1.9753, -1.9905,
        -1.8595, -1.8184, -1.8075, -1.9240, -1.7577, -2.1044, -1.6707, -2.0989,
        -1.8376, -2.0183, -1.7350, -1.9831, -2.2187, -1.7453, -2.2504, -1.7921,
        -2.0357, -2.1290, -2.1907, -2.3266, -1.8916, -1.9823, -1.6253, -1.8885,
        -1.8948, -1.6921, -1.7621, -2.0181, -1.8054, -1.7742, -1.9332, -2.3438,
        -1.8009, -2.3085, -2.0948, -2.3341, -1.9792, -1.8412, -1.9915, -1.9011,
        -1.8479, -1.6526, -1.9737, -1.8538, -1.5749, -1.9468, -1.9760, -1.7438,
        -2.0195, -1.9787, -2.0382, -1.9243, -2.1345, -1.7484, -1.8005, -2.0853,
        -1.9268, -2.0275, -2.2571, -1.7804, -1.7663, -2.1356, -2.0928, -1.7887,
        -1.7379, -1.7104, -1.7937, -1.9258, -1.7013, -2.0128, -1.8346, -2.1429,
        -2.0267, -1.6795, -1.9428, -2.2769, -1.8645, -1.9329, -1.8289, -1.9961,
        -1.6293, -1.9713, -1.8534, -2.1058, -1.9950, -1.9653, -2.0850, -2.0975,
        -2.0075, -1.9347, -2.0467, -2.1615, -1.6372, -2.0189, -1.8788, -1.9058,
        -2.1738, -2.0394, -2.1286, -1.7606, -1.5628, -2.0245, -1.9123, -1.5801,
        -2.3219, -1.9946, -2.0711, -2.0224, -1.7500, -1.8813, -1.7431, -1.6579,
        -1.9196, -1.8884, -2.0998, -1.8954, -1.9891, -1.8488, -1.9715, -1.9090,
        -1.8614, -1.9474, -1.8660, -1.8552, -1.8215, -2.0242, -1.9821, -1.5981,
        -2.0732, -1.9511, -1.9884, -1.7465, -1.7563, -1.8132, -1.9909])
##########################################################
{'prot_encoder.embedding.weight': tensor(0.0118), 'prot_encoder.dense.bias': tensor(0.0297), 'smi_encoder.embedding.weight': tensor(0.0302), 'decoder.blks.block0.addnorm3.ln.bias': tensor(0.0310), 'prot_encoder.dense.weight': tensor(0.0311), 'decoder.embedding.weight': tensor(0.0378), 'prot_encoder.ffn.dense1.weight': tensor(0.0427), 'prot_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(0.0495), 'prot_encoder.ffn.dense1.bias': tensor(0.0530), 'prot_encoder.ffn.dense2.weight': tensor(0.0580), 'prot_encoder.ffn.dense2.bias': tensor(0.0653), 'prot_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(0.0654), 'prot_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(0.0912), 'cross_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(0.1350), 'smi_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(0.1445), 'cross_encoder.encoder.layers.0.norm2.weight': tensor(0.1697), 'decoder.blks.block0.attention1.W_v.weight': tensor(0.2010), 'cross_encoder.encoder.layers.0.norm1.weight': tensor(0.2020), 'decoder.blks.block0.addnorm2.ln.weight': tensor(0.2020), 'cross_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(0.2027), 'decoder.blks.block0.addnorm1.ln.weight': tensor(0.2037), 'prot_encoder.addnorm.ln.weight': tensor(0.2045), 'smi_encoder.encoder.layers.0.norm2.bias': tensor(0.2051), 'decoder.blks.block0.attention1.W_o.weight': tensor(0.2078), 'cross_encoder.encoder.layers.0.linear1.weight': tensor(0.2098), 'decoder.blks.block0.attention1.W_q.weight': tensor(0.2103), 'decoder.blks.block0.attention1.W_k.weight': tensor(0.2111), 'attention.W_v.weight': tensor(0.2124), 'decoder.blks.block0.addnorm1.ln.bias': tensor(0.2126), 'attention.W_o.weight': tensor(0.2134), 'smi_encoder.encoder.layers.0.norm1.bias': tensor(0.2146), 'decoder.blks.block0.addnorm2.ln.bias': tensor(0.2150), 'smi_encoder.encoder.layers.0.linear1.bias': tensor(0.2156), 'smi_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(0.2162), 'smi_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(0.2167), 'smi_encoder.encoder.layers.0.linear1.weight': tensor(0.2174), 'decoder.blks.block0.ffn.dense1.bias': tensor(0.2174), 'cross_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(0.2177), 'smi_encoder.encoder.layers.0.linear2.bias': tensor(0.2178), 'cross_encoder.encoder.layers.0.norm1.bias': tensor(0.2189), 'cross_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(0.2189), 'smi_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(0.2196), 'decoder.blks.block0.ffn.dense2.bias': tensor(0.2203), 'smi_encoder.encoder.layers.0.linear2.weight': tensor(0.2232), 'cross_encoder.encoder.layers.0.linear2.weight': tensor(0.2242), 'decoder.blks.block0.attention2.W_o.weight': tensor(0.2242), 'decoder.blks.block0.attention2.W_v.weight': tensor(0.2248), 'cross_encoder.encoder.layers.0.linear2.bias': tensor(0.2256), 'prot_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(0.2261), 'cross_encoder.encoder.layers.0.linear1.bias': tensor(0.2264), 'smi_encoder.encoder.layers.0.norm1.weight': tensor(0.2275), 'prot_encoder.addnorm.ln.bias': tensor(0.2281), 'decoder.blks.block0.ffn.dense1.weight': tensor(0.2329), 'decoder.blks.block0.attention2.W_q.weight': tensor(0.2382), 'smi_encoder.encoder.layers.0.norm2.weight': tensor(0.2474), 'decoder.blks.block0.ffn.dense2.weight': tensor(0.2502), 'cross_encoder.encoder.layers.0.norm2.bias': tensor(0.2763), 'prot_encoder.encoder.layers.0.linear1.weight': tensor(0.2989), 'decoder.blks.block0.attention2.W_k.weight': tensor(0.3037), 'prot_encoder.encoder.layers.0.linear2.bias': tensor(0.3130), 'prot_encoder.encoder.layers.0.linear2.weight': tensor(0.3190), 'attention.W_q.weight': tensor(0.3278), 'attention.W_k.weight': tensor(0.3628), 'prot_encoder.encoder.layers.0.linear1.bias': tensor(0.4060), 'decoder.dense.weight': tensor(0.4323), 'prot_encoder.encoder.layers.0.norm2.weight': tensor(0.5564), 'prot_encoder.encoder.layers.0.norm1.weight': tensor(0.5589), 'prot_encoder.encoder.layers.0.norm1.bias': tensor(0.5912), 'prot_encoder.encoder.layers.0.norm2.bias': tensor(0.7080), 'decoder.blks.block0.addnorm3.ln.weight': tensor(0.9403), 'decoder.dense.bias': tensor(1.8183)}