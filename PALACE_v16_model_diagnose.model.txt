smi_encoder.embedding.weight shape: torch.Size([287, 128])
tensor([[ 1.0131, -0.2699, -1.8087,  ..., -0.3295, -0.7485, -1.9519],
        [ 0.0252,  0.2658,  0.8077,  ..., -0.9470, -1.1543, -0.1074],
        [ 0.2496, -1.1481, -0.6821,  ..., -0.5859,  0.6502, -0.0364],
        ...,
        [ 0.4938,  0.4496,  0.6148,  ...,  1.5956,  0.0266, -0.2141],
        [ 0.7097,  0.5078,  0.7414,  ..., -0.3503,  1.2614, -0.1880],
        [ 1.8792,  0.3156,  1.0133,  ..., -1.0239,  0.4238, -0.2535]])
tensor([[ 1.0131, -0.2699, -1.8087,  ..., -0.3295, -0.7485, -1.9519],
        [ 0.2539,  0.4938,  1.0309,  ..., -0.7508, -0.9253, -0.3345],
        [ 0.2496, -1.1481, -0.6821,  ..., -0.5859,  0.6502, -0.0364],
        ...,
        [ 0.4938,  0.4496,  0.6148,  ...,  1.5956,  0.0266, -0.2141],
        [ 0.7097,  0.5078,  0.7414,  ..., -0.3503,  1.2614, -0.1880],
        [ 1.8792,  0.3156,  1.0133,  ..., -1.0239,  0.4238, -0.2535]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0249,  0.0551,  0.0463,  ..., -0.0583, -0.0169,  0.0461],
        [ 0.0577,  0.0332,  0.0659,  ...,  0.0300,  0.0617,  0.0403],
        [ 0.0606,  0.0165,  0.0082,  ..., -0.0022,  0.0222, -0.0750],
        ...,
        [ 0.0148, -0.0323,  0.0266,  ...,  0.0392, -0.0101,  0.0195],
        [-0.0675,  0.0723,  0.0342,  ...,  0.0343, -0.0175, -0.0634],
        [ 0.0670, -0.0612,  0.0230,  ..., -0.0704, -0.0105, -0.0647]])
tensor([[-0.2302,  0.2825,  0.2719,  ..., -0.2839, -0.2461, -0.1781],
        [ 0.2869, -0.1960, -0.1562,  ..., -0.2008,  0.2885, -0.1897],
        [ 0.2914,  0.2469,  0.2389,  ...,  0.2243, -0.2064,  0.1482],
        ...,
        [-0.2151, -0.2607, -0.1989,  ..., -0.1903,  0.2181,  0.2487],
        [-0.2994, -0.1554, -0.1920,  ..., -0.1952, -0.2428, -0.2677],
        [ 0.2973,  0.1650,  0.2461,  ...,  0.1588, -0.2363, -0.2940]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-2.0612e-01,  2.2347e-01, -2.1294e-01, -2.1538e-01, -2.1812e-01,
         1.9731e-01, -1.9142e-01, -2.2439e-01,  1.4503e-01,  2.2177e-01,
        -2.2404e-01,  2.1976e-01,  2.1535e-01,  2.2602e-01, -2.2169e-01,
         1.6233e-01,  2.1614e-01, -2.2431e-01, -2.1479e-01,  2.1179e-01,
        -2.1986e-01,  2.2507e-01,  2.1757e-01,  2.2482e-01, -1.9099e-01,
        -2.1738e-01, -2.1587e-01,  2.1990e-01,  2.2083e-01,  2.2532e-01,
         2.2493e-01,  2.2582e-01, -2.2759e-01, -1.7406e-01, -2.2794e-01,
        -2.2753e-01,  2.2590e-01, -2.2544e-01, -2.2739e-01,  2.2007e-01,
         2.2757e-01, -2.2279e-01,  2.2716e-01,  2.2625e-01,  1.9988e-01,
        -2.1832e-01,  2.2413e-01, -2.2728e-01, -2.2242e-01, -2.2570e-01,
         2.1265e-01,  2.2198e-01,  1.6072e-01, -2.2572e-01, -2.2318e-01,
        -1.9362e-01,  2.2308e-01, -2.1851e-01, -2.2402e-01,  2.0517e-01,
         2.1194e-01, -2.1659e-01, -2.2568e-01, -2.1983e-01,  2.1325e-01,
         2.1016e-01,  2.1113e-01,  1.8234e-01,  2.2334e-01,  1.9171e-01,
         2.1876e-01,  2.2301e-01, -1.9904e-01,  2.1860e-01, -2.1100e-01,
         2.0425e-01,  1.8933e-01,  2.0717e-01,  2.2335e-01,  2.1344e-01,
         1.7754e-01,  2.2338e-01, -2.1278e-01,  1.9662e-01, -2.2571e-01,
        -2.2090e-01, -2.2577e-01, -2.1120e-01, -2.2326e-01, -2.2463e-01,
        -2.0653e-01,  1.6736e-01, -2.1767e-01,  2.1892e-01, -1.8327e-01,
         2.2197e-01, -2.2419e-01,  2.2182e-01, -2.0213e-01,  2.0879e-01,
         2.2581e-01,  2.1680e-01, -2.2081e-01,  2.2611e-01, -2.2304e-01,
        -2.1856e-01,  2.1616e-01,  2.2736e-01, -2.1645e-01,  2.1960e-01,
        -2.1181e-01,  2.2432e-01, -2.2174e-01, -1.7702e-01,  2.1976e-01,
         2.2095e-01,  2.2329e-01,  1.0738e-01,  2.1144e-01,  1.9794e-01,
        -1.9454e-01,  1.7724e-01,  2.1971e-01, -1.8442e-01, -2.1649e-01,
         2.2350e-01,  2.2023e-01, -2.2442e-01, -7.9470e-07, -1.0722e-06,
        -1.9111e-06, -5.9564e-06, -1.0375e-06, -4.5667e-07, -3.3054e-07,
         1.9393e-06, -7.9920e-07, -6.2283e-07, -1.4721e-06, -7.6543e-07,
        -1.7709e-06, -1.0766e-06,  1.9504e-07,  2.2011e-06, -2.2831e-06,
        -4.4229e-07, -1.6806e-06, -1.2508e-06, -6.9239e-09, -1.9780e-07,
         1.3971e-06, -1.0701e-06, -1.7543e-06, -3.2157e-07, -2.0639e-06,
         2.0257e-07,  2.7854e-06, -1.0619e-06, -1.9134e-08,  2.5441e-07,
         2.8130e-06,  1.3774e-06, -1.3975e-06,  1.0538e-06,  1.0549e-06,
        -1.4058e-06, -5.9439e-06,  3.7584e-07,  1.5767e-06, -3.4681e-07,
         3.6682e-07,  1.7643e-06,  1.2699e-08,  3.1519e-07, -1.4136e-06,
         8.8933e-07,  8.7343e-07,  2.8108e-06,  2.5276e-06,  1.8356e-06,
         2.7272e-08,  2.2817e-06, -3.4306e-07,  1.1953e-06, -2.1077e-06,
        -1.0423e-06, -3.0671e-06,  7.4870e-08,  1.9100e-06, -7.7375e-07,
        -1.7526e-06,  2.3798e-06, -8.3691e-07,  9.2942e-07, -3.9595e-07,
        -1.4615e-06, -6.7054e-07, -3.0606e-06, -3.7950e-07, -1.7911e-07,
        -8.4428e-07, -9.6035e-07,  2.2080e-06,  1.0396e-06, -1.9880e-06,
        -2.2621e-06, -1.7519e-06, -1.4854e-06, -3.6518e-07,  1.0481e-06,
         1.0381e-06,  7.7140e-07, -3.1790e-06,  8.7980e-07, -5.2291e-07,
        -7.3316e-07, -1.5946e-06,  5.1192e-07,  4.5229e-06,  4.5994e-07,
         4.7450e-07, -9.8524e-09, -3.6137e-07,  2.7921e-06,  6.4484e-07,
         5.1465e-07,  3.6316e-07,  1.6339e-06, -2.9434e-08, -6.9794e-07,
        -9.1858e-07, -1.9667e-07, -1.4428e-07, -3.3186e-07, -1.4351e-06,
        -1.6349e-06, -1.4385e-07, -4.0848e-08, -2.4279e-06,  1.1355e-06,
         2.1148e-07,  1.5516e-06, -5.5594e-08, -1.9013e-06, -2.0918e-06,
         7.3845e-07,  1.5262e-08,  3.8164e-06, -6.5286e-07,  9.3213e-07,
        -2.0724e-06, -6.6022e-07,  2.6236e-06, -1.0174e-06,  5.7449e-07,
         2.9495e-07, -2.1840e-01, -2.2685e-01,  2.2446e-01,  2.1826e-01,
        -1.9901e-01, -2.2550e-01,  2.2656e-01,  2.2729e-01, -2.1871e-01,
        -2.2503e-01, -2.2774e-01,  2.2768e-01,  2.1550e-01, -2.2053e-01,
        -2.2555e-01,  2.2492e-01, -2.2186e-01, -2.1868e-01, -2.2263e-01,
        -2.1833e-01, -2.1887e-01,  2.1892e-01,  2.2535e-01, -2.2364e-01,
        -2.1960e-01, -2.2291e-01, -2.2707e-01, -2.2462e-01,  2.2769e-01,
         2.2375e-01,  2.2777e-01,  2.2572e-01,  2.2039e-01, -2.2559e-01,
         1.7404e-01, -2.2657e-01, -2.0230e-01,  2.1880e-01, -2.2652e-01,
         2.1680e-01, -2.2591e-01,  2.2676e-01, -2.1636e-01, -2.1065e-01,
        -1.7953e-01,  2.2167e-01, -2.2771e-01, -1.3300e-01, -2.1985e-01,
         2.2119e-01, -1.9088e-01, -2.2673e-01, -2.1599e-01,  1.8699e-01,
        -2.2627e-01, -2.2648e-01, -2.2298e-01,  2.2044e-01, -2.2562e-01,
         2.2640e-01,  2.2327e-01, -2.2371e-01,  2.2258e-01, -2.0194e-01,
        -2.1767e-01,  2.1823e-01,  2.2029e-01,  2.2554e-01, -1.6606e-01,
        -2.2647e-01, -2.2027e-01,  2.2768e-01,  2.2747e-01, -1.8360e-01,
         2.1992e-01, -2.1667e-01,  2.2602e-01, -2.2220e-01,  1.9789e-01,
         2.2277e-01,  2.2123e-01,  2.1842e-01,  2.2472e-01, -2.2507e-01,
        -2.0942e-01, -2.2537e-01,  2.2310e-01,  2.1514e-01, -2.1232e-01,
         2.2402e-01, -2.0786e-01,  2.2600e-01,  2.2234e-01,  2.2618e-01,
        -2.2483e-01, -2.4974e-02, -2.2022e-01,  2.2421e-01, -2.2186e-01,
        -2.2789e-01,  2.2482e-01, -2.2219e-01, -2.2709e-01,  2.2634e-01,
        -1.5605e-01,  2.2044e-01, -2.2258e-01,  2.2449e-01,  2.2693e-01,
        -2.2540e-01, -2.1688e-01,  2.2634e-01,  2.1146e-01,  2.2714e-01,
         2.2134e-01,  2.2048e-01, -2.2097e-01,  2.2137e-01, -2.2679e-01,
        -2.2408e-01,  2.1595e-01, -2.2641e-01,  1.7147e-01, -2.2557e-01,
        -2.0888e-01,  2.2775e-01,  2.2415e-01, -2.2465e-01])
##########################################################
smi_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0195, -0.0317, -0.0510,  ..., -0.0840,  0.0122, -0.0714],
        [-0.0169, -0.0862, -0.0542,  ..., -0.0039,  0.0410,  0.0698],
        [-0.0497, -0.0115,  0.0451,  ..., -0.0327, -0.0224,  0.0855],
        ...,
        [-0.0498,  0.0312,  0.0274,  ...,  0.0140,  0.0436, -0.0074],
        [ 0.0508,  0.0038,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0864, -0.0189,  ..., -0.0154,  0.0077,  0.0106]])
tensor([[-0.2467,  0.1958,  0.1790,  ..., -0.3062, -0.2135, -0.3081],
        [-0.2177,  0.1215,  0.1564,  ..., -0.0040,  0.2252, -0.1599],
        [ 0.1667,  0.2147,  0.1881,  ..., -0.2677, -0.2444,  0.3232],
        ...,
        [ 0.0171,  0.2435,  0.2469,  ..., -0.2110, -0.1677, -0.1620],
        [ 0.2545,  0.2425,  0.2111,  ..., -0.2689, -0.2309,  0.2288],
        [-0.2259, -0.3078, -0.2377,  ...,  0.2105,  0.2046,  0.2360]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2277,  0.1392, -0.2196,  0.1958, -0.2289, -0.2220, -0.1906, -0.1821,
        -0.1782, -0.2075, -0.2284,  0.2273, -0.2201, -0.1919,  0.1532, -0.2119,
         0.2003,  0.2290,  0.2282, -0.1984, -0.2259, -0.1845, -0.1928,  0.2243,
        -0.2118,  0.2170, -0.2271, -0.2182, -0.1941, -0.1839, -0.2282,  0.2279,
         0.2106, -0.2168, -0.1287, -0.2097, -0.1880, -0.2109, -0.0370,  0.1526,
        -0.1438,  0.2156, -0.2091, -0.1796, -0.2189, -0.1969, -0.2141,  0.2274,
        -0.2063,  0.2261, -0.2205, -0.1809,  0.0726,  0.1355, -0.2087, -0.2055,
        -0.2082, -0.2018,  0.2260,  0.1776, -0.2245, -0.2263,  0.2275,  0.1637,
         0.1985, -0.2165, -0.2228, -0.2275, -0.2243, -0.1260, -0.1826, -0.2294,
        -0.2002,  0.1891,  0.1502,  0.2293,  0.2281,  0.2202, -0.2269, -0.2218,
         0.1948, -0.2208, -0.1835,  0.2243,  0.1122, -0.2097, -0.2276, -0.2218,
         0.2160, -0.2137,  0.2030,  0.2167, -0.1915,  0.2006, -0.1929,  0.2286,
        -0.1957, -0.2234,  0.2166,  0.1864,  0.2010, -0.2057,  0.2296, -0.2108,
        -0.1994, -0.2191, -0.1367, -0.0609,  0.2279, -0.1975, -0.2148, -0.2028,
         0.1796,  0.1839, -0.1596, -0.2153, -0.2269, -0.2230,  0.2245, -0.2224,
         0.1285,  0.2128,  0.2143, -0.1688, -0.1573, -0.1869, -0.1697,  0.2237])
##########################################################
smi_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[-0.0895,  0.0425,  0.1178,  ...,  0.0771,  0.1754,  0.0051],
        [ 0.0194,  0.0102, -0.0413,  ..., -0.0141, -0.0119, -0.0830],
        [ 0.0130, -0.0617, -0.0745,  ..., -0.1027,  0.0608,  0.0702],
        ...,
        [ 0.0956,  0.1144, -0.1169,  ..., -0.0748, -0.0279, -0.0351],
        [ 0.0063, -0.0895, -0.0486,  ..., -0.0164, -0.1033, -0.0524],
        [-0.0688, -0.0352, -0.0775,  ...,  0.0486, -0.0159, -0.0310]])
tensor([[ 0.1378,  0.2626,  0.3453,  ...,  0.3019,  0.2891, -0.2128],
        [ 0.2527,  0.2489,  0.1891,  ...,  0.1848, -0.1993, -0.3171],
        [-0.1709,  0.1724, -0.3001,  ..., -0.3413,  0.2639, -0.1601],
        ...,
        [ 0.3204, -0.1087,  0.1123,  ..., -0.2980, -0.2488,  0.1906],
        [-0.2252,  0.1311, -0.2789,  ..., -0.2307,  0.1262, -0.2774],
        [-0.2964,  0.1964, -0.3045,  ...,  0.2723,  0.1647, -0.2613]])
##########################################################
smi_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([ 0.0390, -0.0360,  0.0304,  0.0522,  0.0824, -0.0713,  0.0320, -0.0662,
         0.0418,  0.0410, -0.0810,  0.0478,  0.0367,  0.0600,  0.0502,  0.0205,
        -0.0817,  0.0190,  0.0307, -0.0279, -0.0589,  0.0853, -0.0780,  0.0147,
        -0.0857, -0.0591,  0.0313,  0.0502, -0.0049, -0.0560, -0.0108,  0.0365,
        -0.0032, -0.0299,  0.0512, -0.0053, -0.0227,  0.0858, -0.0145, -0.0820,
        -0.0140, -0.0369,  0.0268, -0.0360, -0.0799, -0.0019,  0.0174, -0.0067,
         0.0582, -0.0320,  0.0775,  0.0108,  0.0556, -0.0371, -0.0313, -0.0403,
         0.0199, -0.0528, -0.0291,  0.0233,  0.0368, -0.0160,  0.0090,  0.0428])
tensor([-0.1825,  0.1899,  0.2597, -0.1777, -0.1477,  0.1521,  0.2469, -0.2962,
        -0.1879,  0.2722, -0.2907,  0.2789,  0.0658,  0.2929,  0.2634,  0.2489,
        -0.3121, -0.2100, -0.1989, -0.2573, -0.2888,  0.3156,  0.1442,  0.2448,
        -0.3444, -0.2849,  0.2612, -0.1766, -0.2347, -0.2859, -0.2405,  0.2668,
         0.2269,  0.1992,  0.2785, -0.2344, -0.2537, -0.1444, -0.2443, -0.2928,
         0.2161, -0.3946,  0.2568,  0.1928, -0.3093, -0.2316,  0.2474, -0.2369,
        -0.1718,  0.1967,  0.3060, -0.2060,  0.2860,  0.1933,  0.1980,  0.1895,
         0.2462, -0.2826,  0.1995,  0.2530, -0.1950, -0.2460,  0.2392,  0.2723])
##########################################################
smi_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[ 0.0487,  0.0701,  0.0459,  ...,  0.1485,  0.0158, -0.0075],
        [ 0.0523,  0.0167,  0.0358,  ..., -0.0296,  0.0481, -0.0357],
        [-0.0974,  0.0113, -0.0708,  ..., -0.0109,  0.0739,  0.1172],
        ...,
        [-0.0331, -0.0877, -0.0229,  ...,  0.0221, -0.0387,  0.1296],
        [ 0.0667, -0.0432, -0.0640,  ..., -0.1499,  0.0471,  0.0312],
        [-0.0268, -0.0062,  0.0099,  ..., -0.0021, -0.0246, -0.0033]])
tensor([[-0.1794, -0.1614, -0.1771,  ..., -0.0806, -0.2130, -0.2324],
        [-0.1742,  0.2232, -0.1909,  ...,  0.1952,  0.2802, -0.2537],
        [ 0.1238,  0.1044,  0.1475,  ...,  0.2011,  0.2923,  0.3248],
        ...,
        [ 0.1912,  0.1207,  0.2083,  ...,  0.2443,  0.1950,  0.3569],
        [ 0.2936,  0.1207,  0.1614,  ...,  0.0688,  0.2691,  0.2529],
        [ 0.2025,  0.2189,  0.2392,  ...,  0.2268,  0.2048,  0.2259]])
##########################################################
smi_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([-0.0847, -0.0490, -0.0445, -0.1036,  0.1047,  0.0644, -0.0245, -0.0003,
         0.0468, -0.1232,  0.0717, -0.1169,  0.0174,  0.0834,  0.0273,  0.0251,
        -0.1055, -0.0227, -0.0934, -0.1000, -0.1053, -0.0765,  0.0598, -0.0744,
         0.0463, -0.1234,  0.0209,  0.0470,  0.1235, -0.0195,  0.0541, -0.0480,
         0.1148, -0.0727,  0.1159,  0.0683,  0.0448,  0.0013,  0.0749, -0.0401,
        -0.0255,  0.0300, -0.0717,  0.0446,  0.1231, -0.0057,  0.0908, -0.0754,
         0.0632, -0.0747,  0.0050,  0.0100, -0.0558, -0.1103, -0.0367, -0.1223,
         0.0116,  0.0084,  0.1070,  0.0195,  0.0647, -0.1003,  0.1218, -0.0149,
        -0.0808, -0.0539,  0.0720, -0.0909,  0.0187, -0.0974,  0.0365,  0.0534,
         0.1002,  0.0488, -0.0039,  0.0430, -0.0285,  0.0922, -0.0023, -0.1090,
        -0.0465, -0.1081, -0.1037,  0.0554,  0.1193, -0.0494, -0.0893, -0.0008,
         0.0709, -0.0112,  0.0506, -0.0140, -0.0871, -0.0452, -0.0507,  0.0925,
         0.0545,  0.0031,  0.0901, -0.0819, -0.1022,  0.1177,  0.0682,  0.0710,
         0.0319, -0.0796,  0.0767, -0.1053, -0.0900, -0.0381,  0.0686, -0.0737,
        -0.0403,  0.0102, -0.1008, -0.0361, -0.0079,  0.1185,  0.0208, -0.0328,
         0.0247, -0.0611, -0.1211,  0.0626, -0.0295,  0.0828,  0.0049, -0.0736])
tensor([-0.3143,  0.1813,  0.1836,  0.1256, -0.1251,  0.2941,  0.1851, -0.2316,
         0.2817,  0.1037,  0.3023,  0.1130, -0.2123, -0.1462,  0.2593,  0.2580,
         0.1244, -0.2526,  0.1363,  0.1300,  0.1314, -0.3083,  0.2907,  0.1529,
        -0.2192,  0.1085, -0.2089,  0.2693, -0.1018,  0.2098,  0.2832,  0.1818,
         0.3388, -0.3048, -0.1138,  0.3044,  0.2773,  0.2285,  0.3048,  0.1939,
         0.2047,  0.2603,  0.1592, -0.1848,  0.3529,  0.2232, -0.1387, -0.3055,
         0.2890, -0.3043,  0.2369,  0.2363,  0.1767, -0.3377,  0.1940,  0.1710,
         0.2410, -0.2211, -0.1228,  0.2559,  0.2946, -0.3291, -0.1079,  0.2193,
         0.1464,  0.1748,  0.3007, -0.3214,  0.2461,  0.1338, -0.1818, -0.1764,
         0.3283,  0.2777, -0.2223,  0.2731, -0.2589,  0.3250,  0.2276,  0.1256,
         0.1972,  0.1212,  0.1247, -0.1745,  0.3452,  0.1794,  0.1404,  0.2300,
         0.3019,  0.2184, -0.1792,  0.2118,  0.1456,  0.1845, -0.2818, -0.1372,
         0.2871,  0.2298,  0.3204,  0.1589,  0.1268,  0.3475, -0.1634,  0.2987,
        -0.1979,  0.1497,  0.3030,  0.1243,  0.1399, -0.2644, -0.1609,  0.1666,
         0.1863,  0.2392, -0.3352,  0.1925, -0.2377,  0.3429,  0.2606,  0.1972,
         0.2546,  0.1671,  0.1096,  0.2889,  0.1994,  0.3134,  0.2339,  0.1563])
##########################################################
smi_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([ 0.0931, -0.0223,  0.1337,  0.0439,  0.1089,  0.0537, -0.0445,  0.0071,
         0.0085, -0.0100, -0.0991,  0.1098,  0.0861,  0.0187,  0.0264,  0.0591,
         0.0442, -0.1583,  0.1600, -0.0323, -0.1474, -0.0235,  0.0388,  0.0759,
        -0.0737,  0.0703,  0.1036, -0.0217,  0.0201,  0.0004, -0.0891,  0.0873,
         0.0578, -0.1912, -0.0459,  0.0239, -0.0045, -0.0894,  0.0341, -0.0652,
        -0.0095,  0.0712, -0.0486, -0.0282,  0.0549, -0.0014,  0.0285, -0.1477,
         0.0665, -0.0964, -0.0734, -0.0065, -0.0068,  0.0472, -0.0420, -0.0155,
         0.1058,  0.0129, -0.1255,  0.0242, -0.0873,  0.1207, -0.0996,  0.0317,
         0.0311, -0.0650, -0.0776,  0.0681, -0.1110, -0.0737, -0.0301,  0.1787,
        -0.0520, -0.1453, -0.0710,  0.0789, -0.1433, -0.0547, -0.0700,  0.0919,
         0.0448, -0.2299,  0.0469, -0.1489,  0.0156, -0.0176, -0.1678, -0.1463,
         0.0934, -0.0465, -0.0241, -0.1157,  0.0414,  0.0382, -0.0824, -0.0798,
         0.0086, -0.1015,  0.0905,  0.0572,  0.0983,  0.0404, -0.1792, -0.0465,
        -0.0473, -0.0560, -0.0406,  0.1451,  0.0944,  0.1542,  0.0511, -0.0316,
         0.0639,  0.0247, -0.0271, -0.0663,  0.0597, -0.0974,  0.1039, -0.0519,
        -0.0456,  0.0400,  0.0756,  0.0119,  0.0157, -0.0482,  0.0123,  0.0535])
tensor([ 0.3221,  0.2065,  0.3602, -0.1888, -0.1213, -0.1766, -0.2724, -0.2248,
         0.2591,  0.2221, -0.3292, -0.1191,  0.3135, -0.2062, -0.2003,  0.3033,
        -0.1799,  0.0715, -0.0686,  0.1859,  0.0814, -0.2551, -0.1923, -0.1772,
         0.1491,  0.3001, -0.1258,  0.2112,  0.2491, -0.2312,  0.1398,  0.3168,
         0.2863, -0.4953, -0.2814, -0.0645,  0.2324, -0.0268, -0.1964, -0.2949,
        -0.2395, -0.1665,  0.1813, -0.2575,  0.2010, -0.2330, -0.2008,  0.0821,
        -0.1495, -0.3270,  0.1567, -0.2258,  0.2087, -0.1823, -0.2766, -0.3094,
         0.3274, -0.2173, -0.3550,  0.2479,  0.1408,  0.3507, -0.3295, -0.1980,
         0.2391,  0.1817, -0.3076, -0.1605, -0.4683, -0.2963,  0.2130, -0.0512,
        -0.2549, -0.3570, -0.3004,  0.3102, -0.3737,  0.1697,  0.1598, -0.1384,
        -0.1918, -0.4581, -0.1826,  0.0843,  0.2436,  0.2074,  0.0631,  0.0858,
        -0.1365, -0.2740,  0.2057, -0.3414,  0.2688,  0.2683,  0.1459,  0.1488,
         0.2267,  0.0998,  0.3111, -0.1718, -0.1272, -0.1934, -0.4100, -0.2725,
         0.1825,  0.1711,  0.1647,  0.3740,  0.3241,  0.3807,  0.2707,  0.1956,
        -0.1657, -0.2456,  0.2106, -0.2944, -0.1692,  0.1425, -0.2156, -0.2802,
         0.1771, -0.1895,  0.3278,  0.2412, -0.2151,  0.1824, -0.2173, -0.1762])
##########################################################
smi_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2296, -0.2285, -0.2304,  0.2276, -0.2296, -0.2288,  0.2308,  0.2108,
         0.2382,  0.2286,  0.2310,  0.2299, -0.2280, -0.2335,  0.2311, -0.2218,
         0.2298, -0.2298,  0.2301,  0.2336,  0.2305, -0.2304, -0.1922,  0.2303,
         0.2197,  0.2294, -0.2297,  0.2288, -0.2302,  0.2298,  0.2288,  0.2302,
         0.2282,  0.2193,  0.0926, -0.2220,  0.2347,  0.2167,  0.2332, -0.2310,
         0.2328,  0.2306,  0.2282, -0.2276, -0.2313,  0.2290, -0.2278, -0.2300,
        -0.2412, -0.2301,  0.2300, -0.2288, -0.2255,  0.2354,  0.2319,  0.2319,
        -0.2259, -0.2335, -0.2295,  0.2306,  0.2306, -0.2287, -0.2298,  0.2294,
         0.2271,  0.2289,  0.2279, -0.2305,  0.2269, -0.2347, -0.2022, -0.2298,
         0.2229, -0.2120, -0.2168,  0.2301, -0.2312, -0.2295,  0.2299, -0.2288,
         0.2306,  0.2250,  0.2307, -0.2294,  0.2296,  0.2292,  0.2293,  0.2334,
         0.2302,  0.2315, -0.2298, -0.2285, -0.2359,  0.2295,  0.2418, -0.2297,
        -0.2136,  0.2315,  0.2292,  0.2288,  0.2276, -0.2249, -0.2312,  0.2290,
        -0.2309,  0.2286, -0.2410,  0.2227,  0.2303,  0.3174, -0.2330,  0.2309,
         0.2263,  0.2288, -0.2404,  0.2320, -0.2302,  0.2262,  0.2294,  0.2303,
         0.2428,  0.2296,  0.2301,  0.2232,  0.2299,  0.2428,  0.2323,  0.2295])
##########################################################
smi_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([-0.1604,  0.1094,  0.0098,  0.0096,  0.1173,  0.1139, -0.0488, -0.0688,
        -0.0353,  0.0134,  0.0943,  0.1054, -0.1100, -0.0946, -0.0003, -0.0273,
         0.0883,  0.1353,  0.0698, -0.1324, -0.1157,  0.1073, -0.0538, -0.0046,
         0.0351, -0.0033,  0.1450,  0.0295, -0.0579, -0.0059,  0.1985, -0.1806,
         0.0144, -0.0731,  0.0739,  0.0120,  0.0281,  0.0086,  0.1381,  0.2383,
        -0.1313, -0.0338,  0.0744, -0.0827, -0.0569,  0.0521, -0.1147, -0.0733,
         0.0415,  0.0806,  0.0170,  0.1551, -0.0036, -0.0753,  0.0461, -0.0710,
        -0.0535,  0.1703,  0.0962,  0.0318, -0.0862, -0.2200,  0.1415,  0.0029,
         0.0170, -0.0455, -0.0971, -0.1652,  0.0452, -0.0233, -0.0600,  0.1141,
        -0.0374, -0.0617,  0.0680,  0.2458, -0.0847,  0.0536,  0.1853, -0.0043,
         0.0135, -0.0125,  0.0411,  0.0774,  0.0468,  0.0068,  0.0788, -0.0422,
        -0.0602,  0.0331, -0.1742, -0.0102, -0.0294,  0.0422,  0.1117, -0.1581,
         0.0348, -0.0635,  0.0138, -0.0911, -0.0442, -0.0588,  0.1776,  0.0376,
        -0.1371,  0.0382,  0.0059,  0.0545, -0.1105,  0.1523, -0.0436, -0.0028,
        -0.0781,  0.0290,  0.1234,  0.0098,  0.1548, -0.0289, -0.0526, -0.0854,
        -0.0772,  0.0223, -0.0626,  0.0684, -0.0298,  0.0200,  0.0292, -0.1307])
tensor([-0.3889, -0.2534,  0.2237, -0.2185, -0.1146, -0.1136, -0.0563,  0.2009,
         0.2922, -0.2090,  0.3270, -0.1260,  0.1225,  0.1152,  0.2555, -0.2700,
        -0.1411, -0.0900, -0.1585,  0.0956, -0.3138,  0.3541,  0.2488,  0.1225,
        -0.2493, -0.2344, -0.0939, -0.0713,  0.1564, -0.2054,  0.4163,  0.0486,
         0.0512, -0.3145, -0.1577, -0.2561,  0.2771,  0.1232, -0.0949,  0.4605,
         0.2359, -0.2651, -0.1538,  0.1197,  0.1665, -0.0642,  0.1330,  0.1629,
         0.2578,  0.3088, -0.2253, -0.0731, -0.2369, -0.2978,  0.3206, -0.3151,
         0.1450, -0.0687, -0.1674, -0.2153, -0.3160, -0.4457, -0.0935,  0.2598,
        -0.1885,  0.1693, -0.3231, -0.4103,  0.2633, -0.2532,  0.0461, -0.1169,
        -0.2576, -0.2969,  0.2235,  0.4784, -0.3169, -0.1758, -0.0442, -0.2487,
         0.2432,  0.2172, -0.1826, -0.1546,  0.2638, -0.1892, -0.1495,  0.1893,
        -0.2982, -0.0096,  0.0550, -0.2369, -0.2611, -0.1842,  0.4194,  0.0740,
        -0.1869,  0.1638,  0.2435, -0.2844,  0.1545,  0.1613,  0.4118,  0.2580,
         0.1022, -0.1853,  0.2297, -0.1725,  0.1121,  0.3688,  0.1856, -0.3463,
        -0.2644, -0.1331,  0.3781,  0.2275, -0.1142, -0.2384,  0.2701,  0.3393,
         0.1019, -0.1472,  0.2911,  0.2827,  0.0873,  0.2515,  0.2343,  0.1011])
##########################################################
smi_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.2291,  0.3019, -0.3210,  0.2324, -0.2282, -0.2735,  0.2488,  0.2155,
         0.3155,  0.2416,  0.2330,  0.2275,  0.2294,  0.2378,  0.2477, -0.2433,
         0.2303, -0.2315,  0.2323, -0.2327, -0.2649, -0.2362, -0.2144, -0.2866,
        -0.2128,  0.2282, -0.2288, -0.3346,  0.2438, -0.2280,  0.2257, -0.2299,
        -0.0664,  0.2354, -0.2199, -0.3293,  0.2384,  0.2193,  0.2234,  0.2428,
         0.0193, -0.2309, -0.2543,  0.2330,  0.2236,  0.2494,  0.2140,  0.2260,
         0.2126, -0.2290, -0.2401, -0.2890,  0.2232,  0.2240,  0.2324,  0.1905,
        -0.2384, -0.2262, -0.2249, -0.2588, -0.2300,  0.2233, -0.2255,  0.2376,
         0.2590, -0.2411, -0.2251,  0.2329,  0.2223,  0.2301,  0.2106, -0.2294,
        -0.2234, -0.2218, -0.2136,  0.2315,  0.2317, -0.2351,  0.2299,  0.2119,
        -0.2085, -0.2313,  0.2504, -0.2288,  0.2138,  0.2396,  0.2338,  0.3084,
        -0.2333,  0.2347,  0.2307,  0.2496,  0.2009,  0.2326, -0.2342,  0.2282,
        -0.2381,  0.2220,  0.2303,  0.2210, -0.2604,  0.2093, -0.2359,  0.2228,
         0.2291,  0.2367,  0.2216,  0.2347, -0.2319, -0.2145,  0.2299, -0.3602,
         0.2693,  0.2459, -0.2426, -0.2740, -0.2283, -0.2094,  0.2722, -0.2279,
        -0.2319, -0.0960, -0.2177,  0.2127, -0.2550,  0.2317,  0.2260, -0.2276])
##########################################################
smi_encoder.encoder.layers.1.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0249,  0.0551,  0.0463,  ..., -0.0583, -0.0169,  0.0461],
        [ 0.0577,  0.0332,  0.0659,  ...,  0.0300,  0.0617,  0.0403],
        [ 0.0606,  0.0165,  0.0082,  ..., -0.0022,  0.0222, -0.0750],
        ...,
        [ 0.0148, -0.0323,  0.0266,  ...,  0.0392, -0.0101,  0.0195],
        [-0.0675,  0.0723,  0.0342,  ...,  0.0343, -0.0175, -0.0634],
        [ 0.0670, -0.0612,  0.0230,  ..., -0.0704, -0.0105, -0.0647]])
tensor([[ 0.0517,  0.0457,  0.0413,  ..., -0.0429, -0.0014,  0.0706],
        [ 0.0545,  0.0251,  0.0672,  ...,  0.0245,  0.0549,  0.0550],
        [ 0.0736,  0.0221,  0.0063,  ...,  0.0062,  0.0325, -0.0804],
        ...,
        [ 0.3413, -0.2002,  0.0226,  ...,  0.3874,  0.3085,  0.1935],
        [ 0.2269, -0.1245,  0.0675,  ...,  0.3537,  0.3206,  0.1375],
        [-0.0409,  0.2099, -0.2924,  ..., -0.1243,  0.1156, -0.3332]])
##########################################################
smi_encoder.encoder.layers.1.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 1.6589e-01,  5.0394e-02,  2.7844e-02,  6.2118e-02, -3.8148e-02,
        -1.6813e-02, -1.1518e-01,  1.4111e-01, -1.3841e-01,  4.7423e-02,
        -5.6654e-02, -2.5839e-02, -8.3202e-03, -1.2044e-01,  5.2846e-02,
        -1.6055e-01,  7.5288e-02, -7.4088e-02, -8.8712e-02,  7.5760e-02,
         1.1563e-01,  2.4174e-02, -9.7247e-02, -1.3298e-01,  1.2160e-01,
        -1.0031e-01,  1.1477e-01,  1.3122e-01, -7.1412e-02,  5.1583e-02,
        -4.0077e-02, -5.9920e-02, -2.0662e-01, -1.4259e-01,  7.9032e-02,
        -1.3207e-01,  1.7637e-01,  1.0213e-01, -1.7562e-01, -1.0908e-01,
        -4.5520e-02,  1.4677e-01, -1.9117e-01, -1.2333e-01,  1.4314e-01,
         1.1594e-01,  1.7264e-01, -1.8379e-01,  1.4157e-01,  6.4791e-02,
         1.4135e-01,  1.5538e-01,  5.3655e-02,  4.7508e-02, -7.7120e-02,
        -5.5878e-02,  4.5486e-03, -1.3383e-01, -9.3506e-02,  9.3620e-02,
         8.6525e-02, -1.2082e-01,  4.1632e-02,  1.2255e-01,  8.3018e-02,
         3.7671e-02, -7.9326e-02,  5.7172e-03, -2.1672e-02,  2.4197e-02,
         2.7503e-02,  2.0202e-02, -9.9618e-03, -1.5248e-03, -2.8077e-02,
         1.1678e-01, -5.5129e-02, -1.5038e-02,  7.7689e-02,  1.5101e-02,
        -4.2022e-02, -9.9583e-02,  1.5149e-01,  6.2864e-02, -6.1957e-02,
        -1.0631e-01, -1.3629e-01,  8.5403e-02, -1.0573e-01, -9.8556e-02,
        -1.2876e-01,  9.4020e-02, -1.5875e-01,  1.1315e-01, -9.4463e-02,
        -1.0685e-01,  2.2270e-03, -1.2721e-01,  6.0870e-02, -8.6419e-02,
         1.2612e-02,  7.0753e-02,  1.5015e-01, -5.6885e-02,  9.4746e-02,
        -5.0420e-02, -1.0384e-01, -7.6433e-02,  1.8763e-02, -1.1210e-01,
         6.7513e-02, -7.9105e-02, -1.4730e-01,  7.0688e-02,  7.9100e-02,
        -1.2688e-01,  2.4772e-02, -1.3587e-01, -1.8927e-02,  1.5175e-01,
         3.6179e-02,  1.4375e-01, -1.3840e-01,  1.3671e-01, -1.2187e-01,
         1.1810e-01,  4.1365e-02, -7.4035e-02,  1.3198e-08,  3.2733e-08,
         4.3608e-09,  2.3868e-08, -9.2754e-09, -7.3386e-09,  1.0984e-08,
         2.1701e-08, -2.2630e-08, -9.8700e-09,  1.6346e-08,  2.2068e-09,
        -1.9406e-08, -3.7262e-08,  1.7672e-08, -4.8259e-08, -1.0892e-08,
        -5.8569e-09, -1.6137e-08,  3.4809e-09, -1.4102e-08, -1.4483e-08,
         1.0777e-08,  1.3350e-08, -1.2122e-08,  1.3955e-08, -7.7736e-09,
        -1.6414e-08,  9.9809e-09,  1.2029e-08, -1.1962e-09, -6.0204e-09,
        -1.3110e-07, -5.1177e-08,  8.2383e-08, -8.4702e-08,  3.4806e-08,
        -2.6873e-08, -6.5923e-08, -4.9500e-08,  2.4067e-08,  8.5920e-08,
        -7.3624e-08,  3.2990e-08, -3.5539e-08,  1.5860e-08,  1.3925e-07,
        -8.6087e-08, -1.7336e-09, -3.5357e-13,  2.6810e-09,  1.9921e-09,
        -5.6186e-10, -1.4750e-08, -5.2873e-09, -1.3047e-08,  7.4953e-09,
         1.0209e-08,  1.4160e-08,  8.0286e-09, -1.1867e-11,  8.5160e-10,
         8.0823e-09, -5.6295e-09,  4.0944e-08,  4.7562e-09,  8.3689e-09,
        -4.0970e-09,  3.2154e-08, -1.3692e-08,  2.7223e-08, -6.3219e-09,
         8.6886e-09,  2.8791e-08,  3.5761e-08, -2.9391e-09,  5.3157e-09,
        -1.4239e-08,  9.1647e-11, -1.3639e-08,  7.4928e-09, -3.1976e-08,
         2.0126e-08, -1.8050e-08,  1.9085e-08, -4.8830e-08, -2.5621e-08,
         1.6373e-08, -7.4405e-08, -6.3579e-08,  1.6551e-09,  3.3900e-08,
        -6.4541e-08,  9.5682e-09, -1.1537e-08, -2.4205e-08,  1.6014e-09,
        -3.9978e-09, -9.6530e-10, -1.6242e-09,  2.9527e-09,  5.1712e-09,
        -4.4037e-10, -1.2392e-08, -2.5989e-09, -7.8650e-10, -9.7327e-09,
         1.3341e-10,  7.5303e-09, -3.1911e-09,  1.0042e-08, -9.7648e-09,
        -9.6310e-09,  1.2671e-08,  1.7122e-09, -5.3276e-09, -4.9190e-09,
        -1.5519e-08,  9.9209e-09,  1.0964e-08,  2.4549e-08,  1.2451e-08,
        -8.9149e-09,  1.1307e-08, -1.6767e-08,  1.9096e-08,  4.2221e-09,
        -2.2622e-08, -2.3913e-01, -2.3716e-01,  2.3898e-01, -2.3920e-01,
         2.3882e-01, -2.4671e-01, -2.1153e-01,  2.1872e-01, -1.9884e-01,
         3.4973e-01,  2.3894e-01,  2.2452e-01,  2.4181e-01, -2.4242e-01,
         2.4393e-01,  2.2387e-01, -2.8730e-01, -2.2378e-01,  2.1210e-01,
        -2.1395e-01, -2.3734e-01, -2.1402e-01,  1.9264e-01, -2.4709e-01,
         1.7820e-01, -2.1558e-01, -1.9987e-01, -2.3513e-01,  2.2466e-01,
         2.1628e-01,  2.9605e-01,  2.1763e-01,  2.4971e-01,  2.1729e-01,
         2.7659e-01,  2.0796e-01, -2.4210e-01, -2.3664e-01, -2.3237e-01,
         2.4351e-01,  2.7296e-01, -2.0504e-01,  2.6095e-01, -2.3351e-01,
         2.3880e-01,  2.6318e-01, -2.0646e-01,  2.7653e-01, -2.4929e-01,
         1.6139e-02, -2.3917e-01,  2.3837e-01, -2.1440e-01, -1.9401e-01,
        -2.4023e-01, -2.2653e-01, -2.8323e-01,  2.2091e-01, -2.4885e-01,
         2.4152e-01, -2.4723e-01, -2.1124e-01,  2.0493e-01,  2.4415e-01,
         1.7490e-01, -2.3975e-01,  2.1872e-01, -2.5654e-01, -2.1778e-01,
         2.5614e-01, -2.4267e-01, -1.7847e-01,  1.9747e-01, -1.3268e-01,
        -6.6485e-02,  2.2199e-01,  2.2333e-01, -2.2084e-01, -2.2211e-01,
         2.0154e-01, -2.1969e-01, -2.1069e-01,  1.2855e-01, -2.1622e-01,
        -1.7320e-01, -2.3627e-01, -2.1323e-01, -2.1572e-01, -1.6582e-01,
         1.9822e-01, -2.4539e-01, -2.0000e-01, -2.1861e-01,  2.7708e-01,
        -2.1421e-01, -2.1976e-01,  2.3885e-01, -2.5393e-01,  2.4483e-01,
        -2.0016e-01,  2.3603e-01, -2.2166e-01, -2.0695e-01,  2.4703e-01,
        -1.9987e-01,  2.2469e-01,  2.2379e-01, -2.1397e-01,  2.8443e-01,
         2.3864e-01, -2.0458e-01, -2.2282e-01,  2.1545e-01,  1.9712e-01,
        -3.4080e-01,  2.4155e-01,  2.5363e-01,  2.1259e-01, -2.3910e-01,
         2.6451e-01,  2.4084e-01, -2.2482e-01,  2.1841e-01, -2.3490e-01,
         2.1822e-01,  2.5681e-01,  2.4439e-01, -2.0555e-01])
##########################################################
smi_encoder.encoder.layers.1.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0195, -0.0317, -0.0510,  ..., -0.0840,  0.0122, -0.0714],
        [-0.0169, -0.0862, -0.0542,  ..., -0.0039,  0.0410,  0.0698],
        [-0.0497, -0.0115,  0.0451,  ..., -0.0327, -0.0224,  0.0855],
        ...,
        [-0.0498,  0.0312,  0.0274,  ...,  0.0140,  0.0436, -0.0074],
        [ 0.0508,  0.0038,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0864, -0.0189,  ..., -0.0154,  0.0077,  0.0106]])
tensor([[-0.2620, -0.2911,  0.1971,  ...,  0.1574,  0.2906,  0.1476],
        [-0.3034, -0.4240,  0.2525,  ...,  0.2782,  0.4020,  0.2462],
        [ 0.1969,  0.2574, -0.2110,  ..., -0.2777, -0.3184, -0.1210],
        ...,
        [-0.3318, -0.3001,  0.3287,  ...,  0.2917,  0.3990,  0.1697],
        [-0.2068, -0.2876,  0.2895,  ...,  0.2643,  0.3467,  0.1563],
        [ 0.2219,  0.1536, -0.2550,  ..., -0.2493, -0.2398, -0.2160]])
##########################################################
smi_encoder.encoder.layers.1.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.2312,  0.2363, -0.2320,  0.2359, -0.2296,  0.2207,  0.2313,  0.2489,
         0.2451,  0.2321,  0.2310,  0.2297,  0.2308,  0.2371,  0.2345, -0.2340,
         0.2298, -0.2299,  0.2296, -0.2328, -0.2392, -0.2334,  0.2436, -0.2372,
        -0.2290,  0.2307, -0.2298, -0.2388,  0.2359,  0.1847,  0.2280, -0.2299,
         0.2428,  0.2339,  0.2652, -0.2414,  0.3067, -0.2172, -0.2265, -0.2195,
         0.2328, -0.2253, -0.2397,  0.2346, -0.2326,  0.2378,  0.1733,  0.2298,
         0.2268, -0.2332, -0.2386, -0.2976,  0.2438,  0.2308,  0.1151,  0.2278,
        -0.2304, -0.2120, -0.2312,  0.2281, -0.2300,  0.2060, -0.2298,  0.2238,
         0.2170, -0.2311, -0.2268,  0.2320,  0.2275,  0.2336,  0.2275, -0.2301,
        -0.2271, -0.2298, -0.2212,  0.2292,  0.2311, -0.2342,  0.2284,  0.2305,
         0.2457, -0.2267,  0.2319, -0.2305,  0.2319,  0.2270,  0.2303,  0.2315,
        -0.2318, -0.2358,  0.2304,  0.2292,  0.2544,  0.2308, -0.2360,  0.2299,
        -0.2408,  0.2294,  0.2352, -0.2363, -0.2251, -0.2505, -0.2353,  0.2351,
         0.2278,  0.2309, -0.1363,  0.2299, -0.2298, -0.2171,  0.2293,  0.1689,
         0.2614,  0.2427, -0.2348,  0.2290, -0.2306,  0.2443, -0.2190, -0.2292,
        -0.2322, -0.2331,  0.2294, -0.2377, -0.2402,  0.2360,  0.2329, -0.2303])
##########################################################
smi_encoder.encoder.layers.1.linear1.weight shape: torch.Size([64, 128])
tensor([[-0.0895,  0.0425,  0.1178,  ...,  0.0771,  0.1754,  0.0051],
        [ 0.0194,  0.0102, -0.0413,  ..., -0.0141, -0.0119, -0.0830],
        [ 0.0130, -0.0617, -0.0745,  ..., -0.1027,  0.0608,  0.0702],
        ...,
        [ 0.0956,  0.1144, -0.1169,  ..., -0.0748, -0.0279, -0.0351],
        [ 0.0063, -0.0895, -0.0486,  ..., -0.0164, -0.1033, -0.0524],
        [-0.0688, -0.0352, -0.0775,  ...,  0.0486, -0.0159, -0.0310]])
tensor([[-0.3164, -0.1865,  0.1135,  ...,  0.3060,  0.0411, -0.2249],
        [ 0.3418,  0.2045, -0.4369,  ...,  0.5350,  0.0748,  0.2435],
        [ 0.0823,  0.2762,  0.0424,  ..., -0.1706, -0.0856,  0.3276],
        ...,
        [ 0.5238, -0.3229, -0.3263,  ..., -0.8508,  0.5257, -0.1976],
        [-0.1176, -0.2584, -0.1553,  ...,  0.1735, -0.1564, -0.2743],
        [ 0.2231, -0.0265,  0.1053,  ..., -0.1270,  0.5378,  0.1393]])
##########################################################
smi_encoder.encoder.layers.1.linear1.bias shape: torch.Size([64])
tensor([ 0.0390, -0.0360,  0.0304,  0.0522,  0.0824, -0.0713,  0.0320, -0.0662,
         0.0418,  0.0410, -0.0810,  0.0478,  0.0367,  0.0600,  0.0502,  0.0205,
        -0.0817,  0.0190,  0.0307, -0.0279, -0.0589,  0.0853, -0.0780,  0.0147,
        -0.0857, -0.0591,  0.0313,  0.0502, -0.0049, -0.0560, -0.0108,  0.0365,
        -0.0032, -0.0299,  0.0512, -0.0053, -0.0227,  0.0858, -0.0145, -0.0820,
        -0.0140, -0.0369,  0.0268, -0.0360, -0.0799, -0.0019,  0.0174, -0.0067,
         0.0582, -0.0320,  0.0775,  0.0108,  0.0556, -0.0371, -0.0313, -0.0403,
         0.0199, -0.0528, -0.0291,  0.0233,  0.0368, -0.0160,  0.0090,  0.0428])
tensor([-0.1901,  0.2388,  0.2253,  0.3276,  0.3218,  0.1516,  0.2049, -0.2944,
         0.2655,  0.2808,  0.1376, -0.1776,  0.2756, -0.1698,  0.2609,  0.2474,
         0.0880,  0.2420, -0.1992,  0.1314,  0.0381,  0.3016,  0.1657, -0.1444,
        -0.3123, -0.2943, -0.1984, -0.1793, -0.2347, -0.2860, -0.2382, -0.1940,
        -0.2328, -0.2591,  0.2886,  0.3732, -0.2524, -0.1311, -0.2465, -0.3118,
        -0.2438, -0.2664,  0.0437,  0.1867, -0.3064, -0.2316,  0.2252,  0.4164,
         0.2454,  0.2158,  0.3889, -0.2369,  0.2870, -0.2682, -0.2611, -0.2699,
         0.2378, -0.2796, -0.2560, -0.1856,  0.2927,  0.3214, -0.2200,  0.2852])
##########################################################
smi_encoder.encoder.layers.1.linear2.weight shape: torch.Size([128, 64])
tensor([[ 0.0487,  0.0701,  0.0459,  ...,  0.1485,  0.0158, -0.0075],
        [ 0.0523,  0.0167,  0.0358,  ..., -0.0296,  0.0481, -0.0357],
        [-0.0974,  0.0113, -0.0708,  ..., -0.0109,  0.0739,  0.1172],
        ...,
        [-0.0331, -0.0877, -0.0229,  ...,  0.0221, -0.0387,  0.1296],
        [ 0.0667, -0.0432, -0.0640,  ..., -0.1499,  0.0471,  0.0312],
        [-0.0268, -0.0062,  0.0099,  ..., -0.0021, -0.0246, -0.0033]])
tensor([[ 0.2779,  0.2780,  0.2779,  ..., -0.1027,  0.2455,  0.1642],
        [-0.1759,  0.0495, -0.1733,  ...,  0.0831, -0.1816, -0.1972],
        [-0.3101, -0.1896, -0.3383,  ..., -0.0953,  0.1971, -0.3426],
        ...,
        [-0.2601, -0.5538, -0.2525,  ..., -0.1085, -0.2673, -0.0575],
        [ 0.2932, -0.0023,  0.1022,  ..., -0.2638,  0.2760,  0.0985],
        [-0.2558, -0.4444, -0.2037,  ..., -0.3229, -0.2543, -0.2051]])
##########################################################
smi_encoder.encoder.layers.1.linear2.bias shape: torch.Size([128])
tensor([-0.0847, -0.0490, -0.0445, -0.1036,  0.1047,  0.0644, -0.0245, -0.0003,
         0.0468, -0.1232,  0.0717, -0.1169,  0.0174,  0.0834,  0.0273,  0.0251,
        -0.1055, -0.0227, -0.0934, -0.1000, -0.1053, -0.0765,  0.0598, -0.0744,
         0.0463, -0.1234,  0.0209,  0.0470,  0.1235, -0.0195,  0.0541, -0.0480,
         0.1148, -0.0727,  0.1159,  0.0683,  0.0448,  0.0013,  0.0749, -0.0401,
        -0.0255,  0.0300, -0.0717,  0.0446,  0.1231, -0.0057,  0.0908, -0.0754,
         0.0632, -0.0747,  0.0050,  0.0100, -0.0558, -0.1103, -0.0367, -0.1223,
         0.0116,  0.0084,  0.1070,  0.0195,  0.0647, -0.1003,  0.1218, -0.0149,
        -0.0808, -0.0539,  0.0720, -0.0909,  0.0187, -0.0974,  0.0365,  0.0534,
         0.1002,  0.0488, -0.0039,  0.0430, -0.0285,  0.0922, -0.0023, -0.1090,
        -0.0465, -0.1081, -0.1037,  0.0554,  0.1193, -0.0494, -0.0893, -0.0008,
         0.0709, -0.0112,  0.0506, -0.0140, -0.0871, -0.0452, -0.0507,  0.0925,
         0.0545,  0.0031,  0.0901, -0.0819, -0.1022,  0.1177,  0.0682,  0.0710,
         0.0319, -0.0796,  0.0767, -0.1053, -0.0900, -0.0381,  0.0686, -0.0737,
        -0.0403,  0.0102, -0.1008, -0.0361, -0.0079,  0.1185,  0.0208, -0.0328,
         0.0247, -0.0611, -0.1211,  0.0626, -0.0295,  0.0828,  0.0049, -0.0736])
tensor([ 0.1456, -0.2730, -0.2901, -0.2744, -0.1271,  0.2757, -0.2409,  0.2116,
         0.2720, -0.3549, -0.1611,  0.1175,  0.2527,  0.3036,  0.2487, -0.2047,
         0.1270,  0.2100,  0.1398, -0.3038, -0.2343,  0.1557,  0.2748,  0.2801,
         0.2527,  0.0844, -0.2146, -0.1831,  0.3463, -0.1037, -0.1634, -0.2709,
        -0.1108, -0.2957, -0.1245, -0.1602,  0.0758, -0.2098, -0.1632,  0.1819,
         0.2277, -0.2067,  0.1624,  0.2434, -0.1092, -0.2342, -0.1483, -0.3120,
         0.2878,  0.1637,  0.1219,  0.2155, -0.1148,  0.1211,  0.1754, -0.3499,
        -0.3547, -0.2286,  0.3456, -0.2097,  0.2093, -0.4200,  0.3549,  0.4085,
        -0.1590,  0.1752,  0.2984,  0.1419, -0.2132, -0.3226, -0.1938, -0.1791,
         0.3235,  0.2713,  0.2173,  0.2699, -0.2560,  0.0377, -0.2450,  0.0963,
         0.3837,  0.1139,  0.1252,  0.2901,  0.3373,  0.1716, -0.3256, -0.2394,
        -0.1611,  0.2207, -0.1833, -0.2438, -0.3088,  0.1847,  0.1869, -0.1400,
        -0.1790, -0.2320, -0.1128, -0.3088, -0.3204, -0.1197,  0.3042, -0.1598,
        -0.2122, -0.2925,  0.2980,  0.0842, -0.3123, -0.2495,  0.2928,  0.2848,
        -0.1880,  0.2463,  0.1321,  0.3371, -0.2346, -0.2618, -0.1969,  0.1989,
         0.2522, -0.2833,  0.1139, -0.1687, -0.2570, -0.1485,  0.2265, -0.3014])
##########################################################
smi_encoder.encoder.layers.1.norm1.weight shape: torch.Size([128])
tensor([ 0.0931, -0.0223,  0.1337,  0.0439,  0.1089,  0.0537, -0.0445,  0.0071,
         0.0085, -0.0100, -0.0991,  0.1098,  0.0861,  0.0187,  0.0264,  0.0591,
         0.0442, -0.1583,  0.1600, -0.0323, -0.1474, -0.0235,  0.0388,  0.0759,
        -0.0737,  0.0703,  0.1036, -0.0217,  0.0201,  0.0004, -0.0891,  0.0873,
         0.0578, -0.1912, -0.0459,  0.0239, -0.0045, -0.0894,  0.0341, -0.0652,
        -0.0095,  0.0712, -0.0486, -0.0282,  0.0549, -0.0014,  0.0285, -0.1477,
         0.0665, -0.0964, -0.0734, -0.0065, -0.0068,  0.0472, -0.0420, -0.0155,
         0.1058,  0.0129, -0.1255,  0.0242, -0.0873,  0.1207, -0.0996,  0.0317,
         0.0311, -0.0650, -0.0776,  0.0681, -0.1110, -0.0737, -0.0301,  0.1787,
        -0.0520, -0.1453, -0.0710,  0.0789, -0.1433, -0.0547, -0.0700,  0.0919,
         0.0448, -0.2299,  0.0469, -0.1489,  0.0156, -0.0176, -0.1678, -0.1463,
         0.0934, -0.0465, -0.0241, -0.1157,  0.0414,  0.0382, -0.0824, -0.0798,
         0.0086, -0.1015,  0.0905,  0.0572,  0.0983,  0.0404, -0.1792, -0.0465,
        -0.0473, -0.0560, -0.0406,  0.1451,  0.0944,  0.1542,  0.0511, -0.0316,
         0.0639,  0.0247, -0.0271, -0.0663,  0.0597, -0.0974,  0.1039, -0.0519,
        -0.0456,  0.0400,  0.0756,  0.0119,  0.0157, -0.0482,  0.0123,  0.0535])
tensor([ 0.3274,  0.2211,  0.0628,  0.0468, -0.1135,  0.3459,  0.0394, -0.2176,
        -0.2546,  0.2025, -0.3384, -0.1202, -0.1822, -0.2023, -0.4545,  0.2810,
        -0.1822,  0.0472, -0.0693, -0.1794, -0.3569, -0.2621,  0.0261,  0.0513,
        -0.2767, -0.1813, -0.1106,  0.1478, -0.2055, -0.3468, -0.3171, -0.1511,
         0.3817, -0.5768, -0.2890, -0.1750, -0.2333, -0.4080, -0.1772, -0.2930,
        -0.2044, -0.0240, -0.2301, -0.0194,  0.2715, -0.0276,  0.2769,  0.0683,
         0.3142, -0.3442, -0.2997,  0.1943, -0.0509,  0.2755, -0.2192, -0.2673,
        -0.0367, -0.1951,  0.0955, -0.1139, -0.3139,  0.3420,  0.1269, -0.2141,
         0.5545, -0.2345, -0.3089,  0.3067, -0.3328, -0.2964,  0.0382, -0.0231,
        -0.2753, -0.1207, -0.1561,  0.3076, -0.4253,  0.2235,  0.1597, -0.0641,
        -0.1100, -0.1333, -0.1143,  0.0923, -0.1461, -0.2454,  0.0615, -0.1603,
         0.3342, -0.2595,  0.2035, -0.4359,  0.3031, -0.1825, -0.3210,  0.1485,
         0.2390,  0.2202,  0.3985, -0.1461, -0.1688,  0.2540, -0.4155, -0.2202,
         0.1732,  0.1459, -0.1662, -0.0281, -0.1566,  0.4234,  0.3167,  0.1874,
        -0.0137, -0.1149, -0.2592,  0.1695, -0.1659, -0.1482,  0.3418,  0.1859,
        -0.3397,  0.2531,  0.2910, -0.2124,  0.2284, -0.2130,  0.2492, -0.1799])
##########################################################
smi_encoder.encoder.layers.1.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.2350, -0.2177, -0.2544,  0.2253, -0.2334,  0.2042, -0.2329,  0.2127,
         0.2218, -0.2470, -0.2325,  0.2291,  0.2152,  0.2205,  0.1640, -0.2260,
         0.2330,  0.2376,  0.2317,  0.1800,  0.2612,  0.2349,  0.2120, -0.1583,
         0.2220,  0.2237, -0.2350,  0.2322,  0.2219, -0.0040, -0.2272, -0.2261,
         0.2681, -0.2597, -0.2565, -0.2195, -0.2951,  0.1716, -0.2407,  0.2161,
        -0.2299, -0.2752,  0.2339,  0.2222, -0.2234, -0.2369, -0.2981, -0.2373,
         0.2264,  0.2386,  0.2436,  0.1966, -0.2303,  0.2321,  0.2229, -0.2243,
        -0.2454, -0.2432,  0.2531,  0.3347,  0.2298,  0.1778,  0.2334,  0.2766,
         0.3035,  0.2315,  0.2236,  0.2353, -0.2227, -0.2326, -0.2377, -0.2375,
         0.2281,  0.2117,  0.2175,  0.2289, -0.2416,  0.2027, -0.2338,  0.2199,
         0.2361,  0.2282,  0.2255,  0.2381,  0.2267,  0.3261, -0.2307, -0.2195,
        -0.2343,  0.2367, -0.2317, -0.2377, -0.2110,  0.2300,  0.2437, -0.2305,
        -0.2326, -0.2021,  0.2443, -0.1938, -0.1845, -0.2209,  0.2485, -0.2347,
        -0.2459, -0.2377,  0.0502,  0.2259, -0.2210, -0.1868,  0.2286,  0.3364,
         0.2460,  0.2552,  0.2355, -0.2258, -0.2249,  0.3493, -0.1667,  0.2353,
         0.2381, -0.2315,  0.2101, -0.2288, -0.2352, -0.2335,  0.2358, -0.2280])
##########################################################
smi_encoder.encoder.layers.1.norm2.weight shape: torch.Size([128])
tensor([-0.1604,  0.1094,  0.0098,  0.0096,  0.1173,  0.1139, -0.0488, -0.0688,
        -0.0353,  0.0134,  0.0943,  0.1054, -0.1100, -0.0946, -0.0003, -0.0273,
         0.0883,  0.1353,  0.0698, -0.1324, -0.1157,  0.1073, -0.0538, -0.0046,
         0.0351, -0.0033,  0.1450,  0.0295, -0.0579, -0.0059,  0.1985, -0.1806,
         0.0144, -0.0731,  0.0739,  0.0120,  0.0281,  0.0086,  0.1381,  0.2383,
        -0.1313, -0.0338,  0.0744, -0.0827, -0.0569,  0.0521, -0.1147, -0.0733,
         0.0415,  0.0806,  0.0170,  0.1551, -0.0036, -0.0753,  0.0461, -0.0710,
        -0.0535,  0.1703,  0.0962,  0.0318, -0.0862, -0.2200,  0.1415,  0.0029,
         0.0170, -0.0455, -0.0971, -0.1652,  0.0452, -0.0233, -0.0600,  0.1141,
        -0.0374, -0.0617,  0.0680,  0.2458, -0.0847,  0.0536,  0.1853, -0.0043,
         0.0135, -0.0125,  0.0411,  0.0774,  0.0468,  0.0068,  0.0788, -0.0422,
        -0.0602,  0.0331, -0.1742, -0.0102, -0.0294,  0.0422,  0.1117, -0.1581,
         0.0348, -0.0635,  0.0138, -0.0911, -0.0442, -0.0588,  0.1776,  0.0376,
        -0.1371,  0.0382,  0.0059,  0.0545, -0.1105,  0.1523, -0.0436, -0.0028,
        -0.0781,  0.0290,  0.1234,  0.0098,  0.1548, -0.0289, -0.0526, -0.0854,
        -0.0772,  0.0223, -0.0626,  0.0684, -0.0298,  0.0200,  0.0292, -0.1307])
tensor([-0.2045,  0.0124,  0.1836,  0.2275, -0.0894,  0.1014,  0.0737, -0.0390,
        -0.1561,  0.1881, -0.0585, -0.1174, -0.4275, -0.0850, -0.1491,  0.1557,
        -0.1499, -0.1349, -0.1670, -0.2817, -0.3400, -0.1001, -0.0917, -0.1962,
         0.0457,  0.1457, -0.0348, -0.1219, -0.2472, -0.2447,  0.2411, -0.1179,
        -0.1751, -0.2296, -0.2120, -0.1169, -0.0434, -0.1514,  0.0051,  0.4089,
        -0.1986,  0.0829,  0.1272, -0.0423,  0.0575, -0.0290, -0.0455,  0.1599,
         0.2218,  0.0734, -0.1588,  0.0045, -0.2110,  0.0831,  0.0028, -0.2808,
        -0.4991,  0.1077,  0.0676, -0.1405, -0.0560, -0.4307,  0.4631,  1.1122,
         0.1154,  0.0337, -0.3010, -0.0710, -0.0635, -0.2353,  0.0400, -0.0932,
        -0.2083, -0.1160,  0.0307,  0.4425, -0.2145,  0.0578,  0.0769,  0.1602,
         1.4553,  0.1786, -0.1696,  0.3072,  0.1802, -0.0951, -0.0864, -0.2483,
        -0.0797, -0.0258,  0.0091, -0.1805, -0.2056, -0.1427,  0.4036,  0.0809,
        -0.0022, -0.0524, -0.2088, -0.1005, -0.1565,  0.0892,  0.4043, -0.1509,
        -0.0568, -0.0288,  0.1730, -0.1753, -0.1686,  0.3748, -0.2043, -0.1304,
        -0.0029, -0.0476, -0.0629,  0.3716,  0.2409, -0.5342, -0.1294, -0.0721,
        -0.0626,  0.2102, -0.2772, -0.1016, -0.1269, -0.1919,  0.0621, -0.3409])
##########################################################
smi_encoder.encoder.layers.1.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2116, -0.1784, -0.2579, -0.1837, -0.2542,  0.1193,  0.1274, -0.0758,
        -0.2068, -0.1934, -0.2407,  0.2819, -0.2358, -0.1521, -0.2100,  0.2449,
         0.2592,  0.2451,  0.2558,  0.0553, -0.0236,  0.2524, -0.1139,  0.1489,
         0.0973, -0.2954, -0.2774, -0.2728, -0.1941,  0.1620, -0.1422,  0.1608,
        -0.2651,  0.1644, -0.3568, -0.2816, -0.1322, -0.2665, -0.2984,  0.1506,
        -0.3951,  0.2726,  0.2828, -0.0803,  0.2751, -0.1947,  0.3211,  0.2240,
         0.1957,  0.2279, -0.1719, -0.0012,  0.1958, -0.2556,  0.0508,  0.2051,
         0.4030, -0.2914,  0.3360, -0.2893,  0.0515,  0.1750,  0.2516,  0.1684,
        -0.0912, -0.2661, -0.2063, -0.2484, -0.2505,  0.2112,  0.2085, -0.2466,
        -0.1583, -0.1745,  0.1558,  0.1985,  0.2046, -0.3910, -0.3134, -0.2804,
        -0.0172, -0.2727,  0.2562,  0.2774,  0.1218,  0.3638, -0.2782,  0.3042,
         0.2484,  0.2653,  0.2646,  0.2022,  0.1832,  0.2505,  0.2940,  0.2521,
        -0.2480,  0.3147, -0.2761,  0.1122,  0.1625,  0.3166,  0.2399, -0.2616,
         0.3428, -0.1139,  0.2044,  0.4130,  0.1700, -0.0973, -0.1942, -0.0959,
        -0.0076,  0.2609,  0.2578,  0.0095, -0.1960,  0.1189,  0.1667, -0.2346,
        -0.2069, -0.1994, -0.3387, -0.2522,  0.2047, -0.2523,  0.1872,  0.2004])
##########################################################
prot_encoder.embedding.weight shape: torch.Size([29, 128])
tensor([[ 2.4886e-01,  1.9467e-01,  2.3676e-01,  ..., -1.7926e-01,
         -8.3672e-01,  6.2781e-01],
        [ 3.8768e-01, -8.0246e-01, -1.1083e-01,  ..., -6.9111e-02,
         -1.7946e-02,  8.1375e-01],
        [-3.6332e-02, -6.9242e-01, -1.1287e+00,  ..., -7.9413e-01,
         -4.9074e-01, -8.7455e-01],
        ...,
        [ 7.5512e-01, -5.5864e-01, -5.0096e-01,  ...,  2.4155e-01,
          5.0867e-01, -1.3138e+00],
        [-3.2454e-02, -7.2644e-01,  7.3096e-01,  ..., -9.9326e-01,
          4.8812e-01,  1.4374e-03],
        [-1.9197e+00,  1.5667e-01,  3.5023e-01,  ...,  7.4790e-01,
         -3.3693e-01, -4.8888e-01]])
tensor([[ 2.4886e-01,  1.9467e-01,  2.3676e-01,  ..., -1.7926e-01,
         -8.3672e-01,  6.2781e-01],
        [ 6.0851e-01, -1.0109e+00, -3.2178e-01,  ...,  1.6852e-01,
         -2.4290e-01,  1.0368e+00],
        [-3.6332e-02, -6.9242e-01, -1.1287e+00,  ..., -7.9413e-01,
         -4.9074e-01, -8.7455e-01],
        ...,
        [ 7.5512e-01, -5.5864e-01, -5.0096e-01,  ...,  2.4155e-01,
          5.0867e-01, -1.3138e+00],
        [-3.2454e-02, -7.2644e-01,  7.3096e-01,  ..., -9.9326e-01,
          4.8812e-01,  1.4374e-03],
        [-1.9197e+00,  1.5667e-01,  3.5023e-01,  ...,  7.4790e-01,
         -3.3693e-01, -4.8888e-01]])
##########################################################
prot_encoder.dense.weight shape: torch.Size([300, 2500])
tensor([[-0.0037,  0.0270,  0.0112,  ...,  0.0026, -0.0091,  0.0142],
        [ 0.0146, -0.0088,  0.0107,  ...,  0.0010, -0.0487, -0.0201],
        [-0.0355, -0.0042,  0.0091,  ..., -0.0074,  0.0256,  0.0019],
        ...,
        [ 0.0091,  0.0098,  0.0081,  ...,  0.0077, -0.0320, -0.0211],
        [-0.0137,  0.0166, -0.0059,  ..., -0.0083,  0.0411,  0.0027],
        [-0.0080, -0.0160,  0.0077,  ..., -0.0022,  0.0121,  0.0224]])
tensor([[ 0.2236, -0.1990, -0.1985,  ..., -0.2259, -0.2376, -0.2142],
        [-0.2131, -0.2155, -0.2130,  ...,  0.2282,  0.1785,  0.2071],
        [ 0.1919, -0.2197, -0.2170,  ..., -0.2302, -0.1972, -0.2209],
        ...,
        [-0.2113, -0.0794, -0.1709,  ..., -0.1924, -0.2320, -0.2212],
        [-0.2333,  0.2229,  0.1994,  ..., -0.2248, -0.1754, -0.2138],
        [-0.2211,  0.0864, -0.1554,  ..., -0.0213, -0.0070,  0.0033]])
##########################################################
prot_encoder.dense.bias shape: torch.Size([300])
tensor([-0.0078,  0.0094, -0.0063, -0.0140,  0.0074,  0.0195, -0.0125,  0.0059,
         0.0096, -0.0005, -0.0186,  0.0013, -0.0123,  0.0081, -0.0027, -0.0117,
        -0.0083,  0.0044,  0.0033, -0.0121,  0.0047,  0.0170,  0.0196,  0.0009,
         0.0023, -0.0177, -0.0168,  0.0094, -0.0172,  0.0051, -0.0088,  0.0029,
         0.0172,  0.0185,  0.0027, -0.0102,  0.0097, -0.0132, -0.0148, -0.0030,
        -0.0174,  0.0108, -0.0040,  0.0165, -0.0176, -0.0044,  0.0107, -0.0140,
         0.0087, -0.0003, -0.0091,  0.0036,  0.0112, -0.0167,  0.0190,  0.0162,
        -0.0141,  0.0004,  0.0045,  0.0113, -0.0163, -0.0021, -0.0133, -0.0196,
         0.0016, -0.0107, -0.0144, -0.0139,  0.0147,  0.0026, -0.0056,  0.0153,
        -0.0144,  0.0161,  0.0169, -0.0040,  0.0194, -0.0103, -0.0020, -0.0047,
         0.0035,  0.0160, -0.0132,  0.0038,  0.0160,  0.0170, -0.0016, -0.0085,
        -0.0102, -0.0090,  0.0012,  0.0163, -0.0095, -0.0087, -0.0005, -0.0134,
         0.0032,  0.0065, -0.0032,  0.0200,  0.0068,  0.0068, -0.0199,  0.0191,
         0.0131, -0.0103, -0.0075,  0.0094, -0.0198,  0.0125, -0.0149, -0.0109,
        -0.0118, -0.0199, -0.0129, -0.0078,  0.0031,  0.0063,  0.0183, -0.0197,
        -0.0022, -0.0105, -0.0067,  0.0004, -0.0052, -0.0043, -0.0143, -0.0137,
        -0.0121,  0.0019,  0.0193,  0.0067, -0.0141,  0.0137, -0.0161, -0.0068,
         0.0089,  0.0186,  0.0196, -0.0116, -0.0072, -0.0124,  0.0144,  0.0112,
         0.0134, -0.0162,  0.0187, -0.0024, -0.0150,  0.0094, -0.0188,  0.0039,
        -0.0002,  0.0028, -0.0120,  0.0164, -0.0079, -0.0087, -0.0197, -0.0182,
         0.0069, -0.0078,  0.0057, -0.0155, -0.0104, -0.0114, -0.0001, -0.0087,
         0.0087, -0.0048, -0.0050, -0.0036, -0.0048,  0.0138, -0.0128,  0.0111,
        -0.0160,  0.0177, -0.0136, -0.0129, -0.0142,  0.0101, -0.0178,  0.0115,
         0.0190,  0.0069,  0.0034, -0.0080,  0.0184,  0.0152, -0.0040,  0.0194,
         0.0012, -0.0030, -0.0005, -0.0155,  0.0028,  0.0063,  0.0047,  0.0046,
        -0.0150,  0.0034,  0.0050, -0.0025, -0.0089, -0.0160, -0.0081, -0.0002,
         0.0014, -0.0046, -0.0176,  0.0086, -0.0040,  0.0095, -0.0148,  0.0121,
         0.0048,  0.0006,  0.0050, -0.0023,  0.0062, -0.0028,  0.0040,  0.0128,
        -0.0065,  0.0193,  0.0016,  0.0025,  0.0140,  0.0172, -0.0089,  0.0150,
        -0.0156,  0.0008,  0.0124,  0.0110,  0.0161, -0.0191, -0.0133, -0.0008,
         0.0073,  0.0079, -0.0071,  0.0161, -0.0130, -0.0044, -0.0036,  0.0022,
        -0.0023, -0.0199, -0.0099, -0.0166, -0.0118,  0.0176, -0.0132, -0.0168,
         0.0152, -0.0183, -0.0154,  0.0155,  0.0097, -0.0147, -0.0133,  0.0113,
         0.0097,  0.0137, -0.0002, -0.0160,  0.0082,  0.0055,  0.0137, -0.0051,
        -0.0073,  0.0121, -0.0074,  0.0075, -0.0044, -0.0181,  0.0007, -0.0171,
         0.0046,  0.0112, -0.0181, -0.0197, -0.0067, -0.0131,  0.0120,  0.0101,
         0.0012,  0.0008, -0.0099, -0.0051, -0.0015, -0.0189, -0.0015,  0.0177,
         0.0098,  0.0008,  0.0181,  0.0087])
tensor([-0.2319,  0.2335,  0.2184,  0.2130,  0.2304,  0.2444,  0.2109,  0.2301,
         0.2512,  0.2265,  0.2061,  0.2193,  0.2045,  0.2296,  0.2244,  0.2098,
        -0.2375, -0.2164,  0.2284,  0.2109, -0.2064,  0.2290, -0.2080, -0.2246,
        -0.2263,  0.2059, -0.2446,  0.2301, -0.2450, -0.2201,  0.2078,  0.2236,
        -0.2085,  0.2565, -0.1432,  0.2017,  0.2345,  0.1942,  0.1945,  0.2168,
         0.1758,  0.2241,  0.2208, -0.2103,  0.2022, -0.2255,  0.2299, -0.2410,
         0.2330,  0.2236, -0.2369, -0.2229, -0.2130,  0.2044,  0.2399, -0.2086,
        -0.2418,  0.2251, -0.2186,  0.2296,  0.1881,  0.2143,  0.2091,  0.2067,
        -0.2193,  0.1492,  0.2101,  0.2118,  0.2388,  0.2193, -0.2302, -0.2132,
        -0.2272,  0.2351, -0.2114,  0.2125,  0.1991,  0.1769, -0.1975, -0.2274,
        -0.1963,  0.2301,  0.2039,  0.2097, -0.2102,  0.2403,  0.2210,  0.2160,
        -0.2372,  0.1726,  0.2271, -0.2011,  0.2147, -0.2096, -0.1833, -0.2126,
         0.2282, -0.2197,  0.2222,  0.2004,  0.2214,  0.2309, -0.2451, -0.2076,
         0.2427, -0.2318,  0.2122, -0.2110,  0.2044,  0.2297,  0.1592,  0.2001,
         0.2081,  0.1992,  0.1977,  0.1958, -0.2009,  0.1957,  0.2431,  0.1967,
        -0.2181, -0.2347, -0.2035, -0.1932,  0.2185, -0.2298,  0.1729, -0.2376,
        -0.2257,  0.2282, -0.2013,  0.1955,  0.2019,  0.1912, -0.2376,  0.2045,
        -0.2029,  0.0741,  0.1973, -0.2187,  0.2170,  0.1812,  0.2252,  0.4121,
         0.2196, -0.2318, -0.1684,  0.1951,  0.1458, -0.2103, -0.2526,  0.1905,
         0.2485,  0.2254, -0.2308, -0.2057,  0.2105, -0.1440, -0.2446, -0.0568,
         0.2285, -0.2301,  0.2206,  0.1585, -0.1606,  0.1455, -0.2186,  0.1554,
         0.2265, -0.2130,  0.1586,  0.2099,  0.2056,  0.1686,  0.2043,  0.1061,
         0.2057,  0.2408, -0.1405,  0.2036,  0.1963,  0.2290,  0.1398,  0.2236,
         0.2258,  0.2306,  0.1537,  0.2113,  0.0726, -0.2092,  0.2157, -0.1745,
        -0.2018,  0.0994, -0.1729,  0.2152, -0.2208, -0.1525,  0.1701, -0.2168,
         0.1802, -0.0048,  0.2310, -0.1815,  0.1919, -0.2182,  0.1791,  0.2233,
         0.2056,  0.2071,  0.1931,  0.1715,  0.2649, -0.1780,  0.2055, -0.2016,
         0.2231,  0.2027,  0.2301, -0.1644, -0.2171,  0.2093,  0.1932,  0.2373,
         0.1228,  0.1838, -0.1701,  0.1530,  0.2263,  0.2185, -0.1839,  0.2259,
        -0.2308,  0.1835,  0.2091,  0.1896, -0.1021, -0.2361, -0.2279,  0.1779,
        -0.2176,  0.2124, -0.2181,  0.2255, -0.2086,  0.2436,  0.1979, -0.2004,
         0.1856,  0.1731,  0.2035, -0.2337,  0.1221,  0.2348,  0.1827,  0.2045,
         0.1555,  0.1456,  0.2088, -0.1639,  0.2238,  0.1557,  0.2084,  0.1815,
         0.1371,  0.2146, -0.0991,  0.1737,  0.1818,  0.2035,  0.2217, -0.2306,
        -0.0681, -0.2035,  0.1800,  0.1626, -0.1992,  0.1468,  0.2079,  0.1811,
         0.1336, -0.0767,  0.1942,  0.1344,  0.1267,  0.1675,  0.1776,  0.1881,
         0.2097,  0.1826,  0.1945,  0.1732,  0.0601,  0.0579, -0.1353,  0.1867,
         0.1660,  0.1817,  0.2346, -0.0352])
##########################################################
prot_encoder.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[ 0.0503, -0.0715,  0.0261,  ..., -0.0332, -0.0942, -0.0156],
        [ 0.0263,  0.0133, -0.0377,  ..., -0.0665, -0.0282,  0.0554],
        [ 0.0484, -0.0458,  0.0446,  ...,  0.0246,  0.0615, -0.0126],
        ...,
        [-0.1742, -0.0315,  0.0576,  ...,  0.0088, -0.0130, -0.1515],
        [ 0.0713, -0.0506, -0.0112,  ..., -0.1150,  0.0077, -0.1120],
        [ 0.0098, -0.0417,  0.1165,  ...,  0.1320,  0.0088,  0.1617]])
tensor([[ 0.2861,  0.1606,  0.2550,  ...,  0.1966,  0.1364,  0.2140],
        [-0.2010, -0.2145, -0.2642,  ..., -0.2787, -0.2538, -0.1692],
        [ 0.2760,  0.1953,  0.2812,  ...,  0.2539,  0.2925,  0.2191],
        ...,
        [ 0.0241,  0.2106,  0.2961,  ...,  0.2065,  0.2150,  0.0711],
        [-0.1577, -0.2801, -0.2400,  ..., -0.3437, -0.2211, -0.3381],
        [-0.2173, -0.2706, -0.1105,  ..., -0.0941, -0.2173, -0.0657]])
##########################################################
prot_encoder.ffn.dense1.bias shape: torch.Size([64])
tensor([ 0.0297, -0.0547, -0.0600,  0.0521,  0.0715, -0.0048, -0.0319,  0.0107,
        -0.0165,  0.0362,  0.0324, -0.0323, -0.0178, -0.0340,  0.0117,  0.0323,
         0.0229, -0.0794,  0.0714,  0.0722,  0.0588, -0.0495, -0.0550,  0.0873,
         0.0316, -0.0507, -0.0502,  0.0142,  0.0365, -0.0353,  0.0208,  0.0866,
         0.0366,  0.0116,  0.0822,  0.0141, -0.0440,  0.0156, -0.0507, -0.0500,
         0.0653,  0.0340, -0.0737, -0.0443, -0.0444,  0.0032,  0.0811, -0.0764,
        -0.0070, -0.0238,  0.0005, -0.0264,  0.0288, -0.0374,  0.0324,  0.0759,
        -0.0589, -0.0091,  0.0213, -0.0699,  0.0037,  0.0478,  0.0315,  0.0161])
tensor([ 0.2594, -0.2838,  0.1697, -0.1775, -0.1573,  0.2250, -0.2616,  0.2407,
         0.2136,  0.2661,  0.2621, -0.2618, -0.2475,  0.1957, -0.2179,  0.2623,
         0.2528, -0.3090, -0.1581, -0.1576, -0.1707, -0.2787,  0.1744, -0.1422,
         0.2608, -0.2799, -0.2787, -0.2154,  0.2661, -0.2606,  0.2499, -0.1427,
         0.2662,  0.2382, -0.1454,  0.2435,  0.1854, -0.2085,  0.1808, -0.2769,
         0.2952,  0.2640, -0.3031,  0.1800,  0.1852,  0.2328, -0.1481, -0.2869,
         0.2229,  0.2047, -0.2292, -0.2561,  0.2845,  0.1854,  0.2614, -0.1537,
        -0.2885, -0.2377, -0.2081,  0.0762, -0.2257,  0.2766, -0.1982, -0.2134])
##########################################################
prot_encoder.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[ 0.0523, -0.0017,  0.1822,  ...,  0.0078, -0.0809,  0.0037],
        [ 0.1536,  0.0376,  0.0536,  ..., -0.0579, -0.0979,  0.0493],
        [ 0.2531, -0.0082,  0.0605,  ..., -0.1020,  0.1484,  0.0509],
        ...,
        [-0.0069, -0.0873,  0.0598,  ..., -0.0587, -0.0400,  0.0350],
        [ 0.0056, -0.1181, -0.0976,  ...,  0.0867, -0.1583, -0.0225],
        [-0.0235,  0.0529, -0.0406,  ...,  0.0532, -0.0308, -0.0094]])
tensor([[ 0.0955,  0.2259,  0.2480,  ...,  0.0521,  0.1482,  0.2332],
        [-0.0904,  0.2582, -0.1845,  ..., -0.3181,  0.1278,  0.2776],
        [ 0.2178,  0.2172,  0.0478,  ..., -0.1186,  0.3766,  0.2801],
        ...,
        [-0.2142, -0.3151, -0.1483,  ..., -0.2657, -0.2691, -0.1946],
        [-0.9038, -0.2915, -1.0010,  ..., -0.8262, -0.3689, -0.2468],
        [ 0.3013,  0.2800,  0.3007,  ...,  0.3849,  0.1984,  0.2202]])
##########################################################
prot_encoder.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.1085,  0.0881,  0.0972, -0.1037,  0.0206, -0.0317,  0.1064,  0.0867,
        -0.0329,  0.0112,  0.1055, -0.0727, -0.0676,  0.0085,  0.0947, -0.0934,
         0.0792,  0.0911, -0.0653, -0.0117, -0.0045, -0.0669,  0.0188,  0.0378,
        -0.0807, -0.0966, -0.0464,  0.1238,  0.0840,  0.0648, -0.0143,  0.1207,
         0.0097,  0.0954,  0.1107, -0.0344,  0.0608,  0.0045, -0.0935, -0.0367,
        -0.0883,  0.0650,  0.0185,  0.0673,  0.0060, -0.0021,  0.0208,  0.0594,
         0.0337,  0.0192,  0.1068,  0.0002,  0.0044, -0.1193,  0.0257,  0.0713,
        -0.0135,  0.0358,  0.1199,  0.1230,  0.1066,  0.1234, -0.1138,  0.1096,
        -0.0125,  0.0621,  0.0413, -0.0858, -0.0326, -0.0455,  0.0032, -0.0210,
        -0.0274, -0.0494,  0.0205,  0.0986, -0.0654,  0.0584, -0.0786,  0.0140,
         0.0012,  0.0935,  0.0796, -0.0746, -0.1014, -0.0944, -0.1169,  0.0218,
         0.0927, -0.0562,  0.0057,  0.0659, -0.0863, -0.0790,  0.1092, -0.0801,
         0.0002,  0.0457, -0.1164, -0.1204,  0.0604, -0.1208,  0.0626, -0.1037,
        -0.0146, -0.0459, -0.0171, -0.1031, -0.0405,  0.0072, -0.0030, -0.0812,
        -0.1111, -0.0840,  0.0370,  0.0025, -0.0636,  0.0479,  0.0571, -0.0786,
         0.1110, -0.0077, -0.1045,  0.1029,  0.0823,  0.0206,  0.0941,  0.0071])
tensor([ 0.3382,  0.3177,  0.3270, -0.3335, -0.2092,  0.1979, -0.1231, -0.1429,
         0.1969, -0.2186,  0.3319, -0.3025,  0.1602, -0.2210, -0.1351, -0.3229,
         0.3089,  0.3208,  0.1643,  0.2180,  0.2242, -0.2960, -0.2108, -0.1919,
        -0.3101, -0.3264,  0.1834, -0.1059, -0.1453, -0.1648,  0.2149, -0.1034,
         0.2392, -0.1339,  0.3405,  0.1939,  0.2899, -0.2250,  0.1347,  0.1931,
        -0.3177,  0.2947,  0.2483,  0.2970,  0.2010,  0.2271, -0.2091,  0.2892,
        -0.1959, -0.2108,  0.3345, -0.2289, -0.2250,  0.1068, -0.2040,  0.3007,
         0.2161,  0.2656, -0.1100,  0.3529,  0.3361, -0.1063,  0.1152,  0.3383,
         0.2119, -0.1671, -0.1876,  0.1401, -0.2611, -0.2749,  0.2324, -0.2495,
        -0.2568,  0.1080,  0.2473,  0.3276,  0.1643,  0.2882, -0.3082, -0.2157,
        -0.2285, -0.1363,  0.3093,  0.1551,  0.1284, -0.3228, -0.3468, -0.2069,
        -0.1370,  0.1735, -0.2242, -0.1636,  0.1433,  0.1507,  0.3391,  0.1461,
         0.2291,  0.2707, -0.3462, -0.3502,  0.2901, -0.3496,  0.2924, -0.3329,
         0.2151, -0.2753,  0.2127,  0.1267,  0.1893,  0.2366, -0.2317, -0.3106,
         0.1178, -0.3132, -0.1931,  0.2305, -0.2909, -0.1819, -0.1716, -0.3078,
         0.3404,  0.2205,  0.1250,  0.3262,  0.3120, -0.2091, -0.1354,  0.2369])
##########################################################
prot_encoder.addnorm.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([ 0.7788,  0.6525,  0.5729,  1.4000,  1.6507,  1.9490, -0.1552,  0.5629,
         0.8965,  1.0574,  1.8852,  0.5624,  1.2952,  1.3243,  1.5619,  0.5946,
         2.0152,  0.6196,  1.7561,  0.7910,  0.4726,  0.6020,  0.5621,  1.5003,
         0.0796,  1.0368,  1.1673,  0.5937,  0.0588,  1.5755,  1.1665,  1.9238,
         0.5503,  1.3923,  0.6619,  1.9076,  0.7300,  2.2578,  1.7042,  0.8328,
         0.5171,  0.6926,  1.7389,  0.7432,  1.9847,  0.5895,  1.1363,  0.8135,
         0.5259,  2.1667,  0.1574,  0.5613,  0.4902,  1.8358,  1.4645,  1.4180,
         1.8796,  0.7473,  1.4422,  1.7163,  0.5808,  0.5846,  1.4385,  0.5746,
         0.9782,  1.4285,  2.1708,  1.6300,  2.0397,  0.0421,  1.4480,  0.1508,
         0.6312,  1.7771,  0.9220,  1.7022,  0.6720,  0.8503,  0.5690,  0.2634,
         0.6904,  1.5738,  0.8220,  1.1055,  1.2528,  1.5813,  0.8776,  0.4590,
         0.8144,  1.3054,  1.8333,  0.5453,  1.4502,  1.4302,  1.7432,  1.7454,
         1.2961,  0.8205,  1.2556,  0.2596,  0.7394,  0.4887,  0.5945,  0.3809,
         0.9269,  1.2484,  0.7246,  1.5247,  1.2066,  0.5628,  1.6911,  1.5077,
         1.5330,  0.6448,  1.6382,  0.4562,  0.4117,  1.9137,  0.5331,  0.5564,
         0.7089,  2.0129,  1.4462,  0.4738,  0.7437,  0.2751,  1.9994,  1.2723])
##########################################################
prot_encoder.addnorm.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0750, -0.2272, -0.0227, -0.2847, -0.5479,  0.6276,  0.3132,  0.1566,
         0.1618, -0.2918,  0.9197, -0.1412,  0.9070, -0.6889, -0.8066,  0.3523,
         0.4726, -0.0030,  0.3125, -0.0846, -0.3694,  0.4737,  0.2303, -0.7373,
         0.2569, -0.1202,  0.3258, -0.0209,  0.4257, -0.5719,  0.2984, -0.6312,
        -0.2444, -0.7913, -0.0634,  0.8313, -0.2462, -0.5995,  0.9333,  0.2532,
         0.3586, -0.0191,  0.6196, -0.0880, -0.6676, -0.2528, -0.2118,  0.0593,
         0.0698, -0.6561, -0.4129,  0.4188,  0.3813,  0.8874, -0.4451,  0.6437,
         0.8504,  0.0181, -0.6673,  0.6077, -0.1106,  0.0020,  0.7807, -0.3776,
         0.8894, -0.7484, -0.8587,  0.9357, -0.8976,  0.4026,  0.7311,  0.4920,
         0.3713,  0.9409, -0.4271,  0.7248, -0.0309, -0.0447,  0.2658, -0.1812,
         0.0159, -0.4517,  0.1609,  0.2075,  0.5516, -1.0436, -0.1548,  0.4916,
        -0.8772,  0.6042, -0.8592,  0.3009,  0.7375,  0.5456,  0.5710,  0.9348,
         0.7406, -0.4550, -0.4948, -0.1545, -0.1897,  0.5265, -0.0184,  0.4542,
         0.0236, -0.7211,  0.1655,  0.7652,  0.3917, -0.3184, -0.9887, -0.3283,
         0.8021,  0.1144, -0.7953, -0.4035,  0.5614, -0.3922,  0.4664,  0.3423,
        -0.3312,  0.8343,  0.5588, -0.4636, -0.0256, -0.1939, -1.1531,  0.3749])
##########################################################
prot_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0360,  0.0327, -0.0003,  ...,  0.0040,  0.0485,  0.0618],
        [-0.0258,  0.0015, -0.0451,  ..., -0.0367, -0.0107, -0.0531],
        [-0.0580,  0.0605, -0.0402,  ..., -0.0754,  0.0719, -0.0084],
        ...,
        [ 0.0019,  0.0116, -0.0675,  ...,  0.0393,  0.0178,  0.0429],
        [ 0.0168,  0.0616, -0.0355,  ...,  0.0508, -0.0290, -0.0186],
        [-0.0198,  0.0367,  0.0169,  ...,  0.0361, -0.0127,  0.0481]])
tensor([[-0.4087, -0.3045, -0.3497,  ...,  0.0266,  0.1734,  0.0736],
        [-0.4370, -0.3727, -0.4412,  ...,  0.1164,  0.1126, -0.0793],
        [-0.4399, -0.2054, -0.3945,  ...,  0.2699,  0.2103, -0.3324],
        ...,
        [-0.2535, -0.2360, -0.3746,  ...,  0.5831, -0.1387,  0.2305],
        [-0.0196, -0.0286,  0.2449,  ..., -0.0885, -0.7073,  0.4185],
        [-0.2574, -0.2007, -0.2420,  ...,  0.2344, -0.2845,  0.2678]])
##########################################################
prot_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-2.6863e-01, -2.8024e-01, -3.2210e-01, -2.4102e-01, -2.3244e-01,
         1.2994e-01,  2.4683e-01,  2.2036e-01,  2.2164e-01, -1.6926e-01,
        -1.8995e-01, -2.4478e-01,  2.4460e-01, -2.3908e-01,  2.4738e-01,
         4.3974e-02,  2.1564e-01,  1.1432e-01,  2.0034e-01,  2.1725e-01,
        -2.2497e-01,  2.2461e-01, -2.1310e-01, -2.2886e-01, -2.2137e-01,
        -2.1699e-01,  2.2485e-01, -2.2166e-01, -1.1189e-01, -2.2067e-01,
        -2.1719e-01,  1.4655e-01, -2.2263e-01, -2.2780e-01, -2.2832e-01,
        -2.2578e-01, -2.0699e-01, -2.2517e-01, -2.2701e-01, -2.0372e-01,
         5.5783e-02,  2.2697e-01,  2.2433e-01, -2.1884e-01,  2.1787e-01,
         2.1731e-01,  2.2563e-01, -2.2732e-01,  2.2286e-01,  2.2598e-01,
         2.2784e-01, -2.2747e-01, -2.2731e-01,  2.2691e-01,  2.2225e-01,
        -2.2781e-01, -2.2114e-01,  2.1794e-01,  2.2413e-01,  2.2776e-01,
         2.1946e-01, -2.1471e-01,  1.9808e-01, -2.0100e-01,  2.1871e-01,
        -8.3389e-02,  3.6106e-02, -2.2379e-01, -2.1995e-01,  2.2096e-01,
         2.2720e-01,  2.9461e-02,  2.2719e-01, -1.8182e-01,  1.9709e-01,
         2.1203e-01, -4.0198e-02, -2.2692e-01, -2.2872e-01, -2.1354e-01,
         2.2722e-01,  2.0820e-01,  2.1503e-01,  2.1419e-01, -2.0008e-01,
        -2.0971e-01, -2.2469e-01, -2.2761e-01, -2.2445e-01,  2.2491e-01,
        -2.2542e-01, -2.2652e-01, -2.2461e-01, -2.1712e-01,  2.1236e-01,
         2.2607e-01, -2.1410e-01,  1.7697e-01,  1.7820e-01, -2.3491e-01,
        -2.2222e-01, -2.7238e-01, -2.0785e-01,  1.4499e-01,  3.1651e-01,
        -1.5894e-01, -1.9427e-01,  2.0051e-01, -2.3960e-01,  1.4652e-01,
        -1.8149e-01, -1.9755e-01,  2.0896e-01, -2.1917e-01, -2.2726e-01,
         1.9260e-01, -2.2505e-01,  2.0044e-01,  2.1624e-01,  1.8355e-01,
         2.2673e-01, -2.2398e-01,  2.1177e-01, -2.1551e-01, -2.1880e-01,
        -2.1221e-01, -2.1103e-01,  2.1522e-01, -2.7786e-06, -3.6620e-06,
         1.7848e-05, -7.9491e-06, -2.2484e-05,  3.5673e-05,  7.4815e-06,
        -1.0527e-05,  1.1035e-05, -3.8763e-06, -4.8506e-05, -2.9108e-06,
         1.4715e-05, -2.4242e-05,  3.7456e-06, -2.3232e-05, -1.7842e-06,
        -2.3038e-07, -2.8525e-06, -3.2439e-06,  4.3847e-06, -6.1968e-06,
         3.7501e-06,  5.1634e-06,  4.3616e-06,  1.7591e-06, -5.2986e-06,
         3.7659e-06,  6.4541e-07,  4.7844e-06,  1.5045e-06, -2.4297e-06,
         4.8724e-06,  3.5423e-06,  4.6813e-06,  1.9313e-06,  4.1698e-06,
         4.4379e-06,  5.6385e-06,  8.3735e-08,  1.2165e-06, -4.1379e-06,
        -4.5290e-06,  6.2235e-06, -4.5074e-06, -3.9947e-06, -6.2701e-06,
         5.6261e-06, -5.5845e-06, -2.4692e-06, -3.8163e-06,  5.1905e-06,
         6.0377e-06, -3.8090e-06, -3.4857e-06,  5.8989e-06,  3.8619e-06,
        -4.8082e-06, -4.0776e-06, -3.0146e-06, -3.2179e-06,  4.1373e-06,
        -4.4773e-06,  1.5464e-06, -5.4224e-06, -5.0732e-07, -1.8270e-06,
         3.8344e-06,  3.1335e-06, -3.8864e-06, -3.7062e-06, -1.8484e-06,
        -1.8976e-06,  4.5565e-06, -6.6143e-07, -2.5580e-06,  1.6943e-06,
         4.5835e-06,  3.5875e-06,  4.4835e-06, -1.0644e-05, -2.3482e-06,
         2.0142e-06, -4.5415e-06,  3.3976e-06,  1.2207e-07,  9.7791e-06,
         2.5645e-07,  8.7578e-06, -5.2295e-06,  4.9429e-06, -2.4030e-07,
         2.7651e-06,  7.3768e-06, -8.3211e-06, -1.1573e-05, -4.4530e-05,
         6.0760e-05,  5.1585e-05, -2.6979e-05, -3.8763e-05, -1.4635e-05,
        -5.4862e-05,  4.1654e-05, -2.8033e-06, -4.5502e-05, -4.4990e-05,
         4.6999e-05, -2.4595e-05,  5.7017e-05, -4.6248e-05, -4.7034e-05,
        -8.9746e-06,  1.1984e-05,  1.1264e-05, -5.2232e-06,  1.4162e-05,
        -9.1835e-06, -8.3735e-06, -4.0361e-06, -1.1132e-05,  1.0057e-05,
        -9.8022e-06,  6.0833e-06,  1.2190e-05,  1.0531e-05,  1.1950e-05,
        -8.5102e-06,  1.2442e-01,  1.0622e-01, -2.0493e-01, -1.8677e-01,
        -2.0694e-01,  1.9358e-01, -2.2178e-01,  2.1520e-01, -2.0134e-01,
        -1.8041e-01,  2.3298e-01,  1.5488e-01,  1.9609e-01, -2.3092e-01,
         2.2355e-01,  2.1716e-01, -2.0176e-01,  2.3333e-01, -1.8703e-01,
        -2.1779e-01, -1.9509e-01,  2.2118e-01,  2.1916e-01, -2.0137e-01,
        -2.0176e-01,  2.1276e-01,  2.2675e-01, -1.9065e-01,  2.1952e-01,
         2.0916e-01,  2.2671e-01,  2.2069e-01, -2.0734e-01,  2.0695e-01,
        -3.4255e-02, -1.6274e-01,  1.8061e-01, -2.1665e-01,  6.4700e-01,
        -2.2236e-01,  2.0192e-01,  2.1841e-01, -2.1791e-01,  2.3334e-01,
         2.2000e-01, -2.3075e-01,  2.2937e-01,  2.1455e-01,  2.4703e-01,
        -2.1914e-01,  1.4272e-01, -2.2282e-01,  1.6143e-02,  2.2879e-01,
         2.3221e-01, -2.3398e-01,  2.2044e-01, -1.9616e-01, -2.2776e-01,
         2.2371e-01, -2.0983e-01,  1.9990e-01,  1.7566e-01,  1.1533e-01,
        -1.9723e-01, -2.0850e-01, -2.3101e-01, -1.6698e-01, -2.1724e-01,
        -2.1908e-01, -2.0819e-01, -2.0859e-01, -2.2972e-01, -2.1734e-01,
         2.0937e-01, -2.3050e-01,  2.2342e-01,  1.7765e-01,  7.6171e-02,
         2.3365e-01, -1.9370e-01,  1.7806e-01, -1.6613e-01,  2.1610e-01,
        -2.0422e-01, -9.3106e-02,  2.1025e-01, -1.7957e-01,  2.1009e-01,
        -1.9323e-01,  2.0709e-01,  2.2095e-01, -1.9588e-01,  2.3171e-01,
         2.0445e-01,  2.2207e-01,  2.0881e-01,  2.2482e-01, -7.2013e-02,
        -2.3104e-01,  2.0983e-01,  2.3156e-01,  1.0546e-01,  2.2989e-01,
        -2.4102e-01,  1.9602e-01, -1.1742e-01, -2.2195e-01, -2.2638e-01,
         2.2115e-01, -2.2664e-01,  1.6299e-01,  2.1106e-01, -2.3027e-01,
         1.8344e-01, -1.9439e-01,  2.1661e-01, -1.8801e-01, -1.7756e-01,
        -2.2235e-01, -2.2583e-01, -2.2673e-01, -2.1515e-01,  1.3943e-01,
        -2.1431e-01, -2.3445e-01, -1.8692e-01, -2.2992e-01])
##########################################################
prot_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0777,  0.0435, -0.0862,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0485, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0306,  0.0483],
        [-0.0517, -0.0149,  0.0659,  ...,  0.0579, -0.0457,  0.0403]])
tensor([[ 0.2678, -0.1537, -0.0018,  ..., -0.2571,  0.2370, -0.2836],
        [-0.5721, -0.5061,  0.7805,  ..., -0.0109,  0.5345,  0.3084],
        [-0.1049, -0.0525, -0.0446,  ..., -0.2160,  0.1154, -0.1431],
        ...,
        [-0.1048,  0.2064, -0.1725,  ...,  0.2488, -0.2944,  0.2872],
        [ 0.9470, -1.0033,  0.4817,  ..., -0.4783,  0.7453, -0.5265],
        [ 0.0908, -0.2241,  0.2521,  ..., -0.1675,  0.1685, -0.1811]])
##########################################################
prot_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.2297,  0.2239,  0.2281, -0.2298, -0.2291, -0.2641, -0.2309, -0.2377,
         0.2297, -0.2299,  0.2257, -0.2309,  0.2244,  0.2296, -0.2277, -0.2247,
         0.2394,  0.2283,  0.2467,  0.2353,  0.2266,  0.2328,  0.3095,  0.2367,
        -0.2294, -0.2295,  0.2297, -0.2175, -0.2430, -0.2316,  0.2269,  0.2359,
         0.2263, -0.2296,  0.2298,  0.2435, -0.2301,  0.2216,  0.2232,  0.2298,
         0.2280,  0.2347,  0.2292,  0.2282, -0.2291, -0.2283, -0.2300,  0.2295,
        -0.2292, -0.2302,  0.2266,  0.2176,  0.2323,  0.2272, -0.2296,  0.2290,
        -0.2418,  0.2281,  0.2563,  0.2002,  0.3741, -0.2288,  0.2287,  0.2302,
        -0.2281,  0.2287,  0.2243, -0.2379, -0.2310,  0.2081, -0.2296,  0.2391,
         0.3046, -0.1950,  0.2220,  0.2349,  0.0847,  0.2259,  0.2261, -0.2285,
        -0.2312, -0.2301,  0.2294,  0.2290,  0.2258, -0.2299, -0.2300,  0.2428,
         0.2275, -0.2356, -0.2262, -0.2277, -0.2259,  0.2285,  0.2321, -0.2303,
         0.2272,  0.2482, -0.2284, -0.2296,  0.2311,  0.2350,  0.2285,  0.2294,
         0.2308, -0.2264, -0.1918,  0.2239,  0.2302,  0.2161,  0.2308, -0.2270,
         0.2351, -0.2215,  0.1764,  0.1753, -0.2365,  0.2249,  0.2404, -0.2344,
         0.2090,  0.2232,  0.2281,  0.2171, -0.2228, -0.2294,  0.2421,  0.2295])
##########################################################
prot_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[ 0.0824,  0.0825, -0.0318,  ..., -0.0883, -0.0329, -0.0422],
        [-0.0047, -0.0468, -0.1117,  ..., -0.0019,  0.0441, -0.0453],
        [ 0.0131, -0.0403, -0.0018,  ..., -0.0119,  0.1607, -0.0902],
        ...,
        [ 0.0721,  0.0074,  0.1011,  ...,  0.0998, -0.0638, -0.0154],
        [ 0.0396,  0.0467, -0.0178,  ..., -0.0647, -0.0854, -0.0202],
        [ 0.0008,  0.0630, -0.0281,  ...,  0.1022, -0.0480,  0.0668]])
tensor([[ 0.3340,  0.1884,  0.2220,  ..., -0.3262,  0.2914,  0.2384],
        [ 0.3193, -0.0201,  0.0736,  ...,  0.3812, -0.4888, -0.2566],
        [ 0.3246, -0.0748,  0.1198,  ..., -0.4078,  0.3287,  0.1725],
        ...,
        [ 0.1895,  0.1745, -0.2864,  ...,  0.6008, -0.8163,  0.4885],
        [ 0.2823,  0.1195,  0.0370,  ...,  0.3630, -0.5499,  0.6982],
        [-0.4976,  1.0845, -0.1470,  ..., -0.1275, -0.1262, -0.3711]])
##########################################################
prot_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([-0.0250,  0.0180, -0.0861,  0.0376, -0.0467,  0.0681,  0.0507, -0.0192,
         0.0337, -0.0159,  0.0222,  0.0514, -0.0768,  0.0162,  0.0261,  0.0345,
         0.0281,  0.0324,  0.0413,  0.0028, -0.0356,  0.0813, -0.0696,  0.0608,
        -0.0431, -0.0643, -0.0072,  0.0071,  0.0649,  0.0702, -0.0061,  0.0290,
        -0.0727, -0.0272, -0.0382,  0.0734, -0.0835, -0.0438, -0.0425,  0.0427,
        -0.0032,  0.0075, -0.0350,  0.0270, -0.0527, -0.0279,  0.0828, -0.0536,
         0.0573,  0.0599,  0.0368, -0.0062, -0.0522, -0.0149,  0.0005,  0.0297,
         0.0508, -0.0860, -0.0782,  0.0585,  0.0812,  0.0567, -0.0077,  0.0127])
tensor([-0.2586, -0.2041,  0.1330,  0.2621, -0.3049,  0.2682, -0.1933, -0.1556,
        -0.1359,  0.1936, -0.1948, -0.1366,  0.0698,  0.2418,  0.2444,  0.2629,
        -0.2042, -0.2013, -0.1779, -0.2348,  0.5984,  0.2869,  1.3433, -0.5560,
         0.1651,  0.1275, -0.2250, -0.0756,  0.2923,  0.2973, -0.2265, -0.1935,
        -0.0389,  0.1759, -0.2772,  0.3884, -0.3171, -0.2803,  0.1694,  0.2249,
        -0.2533, -0.2250, -0.2505, -0.1940, -0.5172,  0.1703,  0.2504,  0.1151,
         0.5054, -0.1453,  0.3342,  0.2175,  0.1416,  0.3186,  0.2195, -0.1614,
        -0.1891, -0.1525, -0.4777,  0.2819, -0.1373,  0.2469, -0.1212, -0.2068])
##########################################################
prot_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.0995, -0.0299,  0.0387,  ..., -0.0413,  0.0845, -0.0300],
        [-0.0538, -0.0272, -0.0492,  ...,  0.0903, -0.0592, -0.0130],
        [ 0.0745,  0.1085, -0.0388,  ..., -0.0178,  0.0272,  0.0621],
        ...,
        [-0.1472, -0.0397,  0.0126,  ...,  0.0078,  0.0414, -0.0910],
        [ 0.0598,  0.0548,  0.0209,  ...,  0.0355, -0.1051, -0.1374],
        [-0.0340,  0.0573, -0.0574,  ...,  0.0051,  0.1215, -0.0763]])
tensor([[-0.3213, -0.2527, -0.1086,  ..., -0.1491,  0.3185, -0.2147],
        [-0.2429, -0.0725, -0.0454,  ..., -0.1217,  0.1487,  0.0321],
        [-0.1819, -0.1829, -0.5278,  ..., -1.0817, -1.9154,  0.9334],
        ...,
        [-0.3733, -0.6106, -0.3441,  ...,  0.2790, -0.7113, -0.6470],
        [-0.1982, -0.5967, -0.5156,  ...,  0.1660, -0.1372, -0.8011],
        [-0.2671, -0.0871, -0.2267,  ..., -0.3394, -0.1098,  0.2201]])
##########################################################
prot_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([-0.1182,  0.0646,  0.0008, -0.0595,  0.0710, -0.0074, -0.0845, -0.1114,
         0.0555,  0.0241, -0.1157,  0.0894, -0.0410, -0.0008,  0.0374,  0.0021,
        -0.0535,  0.0135,  0.0153,  0.0757,  0.0807,  0.0810, -0.0713,  0.0207,
         0.1064, -0.0170,  0.0162,  0.0275, -0.0396, -0.0285, -0.0726, -0.0859,
        -0.0350, -0.1200,  0.0271, -0.0607,  0.1068, -0.0537,  0.0798, -0.0467,
        -0.0325,  0.0945,  0.0455, -0.0038, -0.0678,  0.1204,  0.0363,  0.0999,
        -0.0391, -0.1018, -0.0562,  0.0251,  0.0028,  0.1054,  0.0747,  0.0139,
         0.0395,  0.0414, -0.0185,  0.0687,  0.0981,  0.0435, -0.0411, -0.0493,
         0.1250, -0.0381,  0.0445,  0.1141,  0.0302,  0.0075,  0.0767,  0.1089,
         0.0577, -0.1065,  0.0402, -0.0100, -0.1008,  0.0900, -0.0211,  0.0569,
         0.0043,  0.1239, -0.0032, -0.1046, -0.0472, -0.0728,  0.0371, -0.1220,
        -0.0720, -0.0652, -0.0181, -0.0107, -0.0156, -0.0628,  0.0205, -0.0876,
        -0.0442, -0.0234,  0.0045,  0.0475,  0.1056,  0.0616,  0.0599,  0.0487,
        -0.0669,  0.0971,  0.0804,  0.1205,  0.0237, -0.0217, -0.0002,  0.0236,
         0.1213,  0.0462,  0.0240,  0.0174, -0.1079, -0.0424, -0.0862,  0.1223,
        -0.0236, -0.0300,  0.0469,  0.1132, -0.0838, -0.0935, -0.0828, -0.0944])
tensor([-0.3442, -0.1511, -0.2588, -0.2889, -0.1096, -0.3426,  0.1425,  0.0805,
         0.2843, -0.2058, -0.2882, -0.1401, -0.2678, -0.2349,  0.2837, -0.1776,
         0.1851,  0.4594,  0.1542,  0.3027,  0.3504, -0.1356, -0.0379, -0.3486,
         0.3329, -0.2458,  0.2447, -0.2248, -0.2467,  0.2370, -0.3058, -0.3274,
        -0.2845,  0.1063,  0.2562, -0.2401,  0.3359, -0.2900,  0.3899,  0.1838,
         0.1925, -0.1472,  0.2720, -0.2355, -0.2929, -0.0936,  0.2659, -0.1299,
        -0.2663,  0.1285, -0.1048,  0.2380, -0.2932, -0.1152,  0.3048,  0.2310,
        -0.3212,  0.2647,  0.1624, -0.1466,  0.2531, -0.1855, -0.2547, -0.2889,
         0.4244, -0.7811,  0.2674,  0.3338, -0.2014, -0.2302, -0.1448,  0.3324,
        -0.3276,  0.1100, -0.1619, -0.2154,  0.0110, -0.2128, -0.3357, -0.1700,
        -0.2301, -0.0863,  0.2270,  0.1579, -0.2453,  0.1234,  0.2651, -0.2941,
         0.1876,  0.1747, -0.2524, -0.6533, -0.2620, -0.2932, -0.2063, -0.3109,
         0.1810, -0.2655, -0.2278, -0.1825, -0.0817,  0.1404, -0.1764, -0.3095,
         0.1672, -0.0988, -0.2067,  0.2020,  0.2487, -0.7233, -0.2020, -0.1951,
        -0.0693,  0.2742, -0.0630,  0.1055, -0.4830, -0.3107, -0.3125, -0.1125,
        -0.3238,  0.1003, -1.0262, -0.0942, -0.4219, -0.3786, -0.3020, -0.3213])
##########################################################
prot_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([-0.0924, -0.0175, -0.0650,  0.1297,  0.1115,  0.0677, -0.1348, -0.0759,
         0.1306,  0.1052,  0.0042,  0.1583, -0.2938, -0.0309, -0.0337, -0.0185,
         0.1644,  0.1398,  0.0366, -0.1069, -0.0575,  0.0857,  0.0157,  0.0101,
        -0.0643,  0.0722,  0.0666,  0.0307, -0.1042, -0.0634, -0.1260, -0.0998,
        -0.1094, -0.0824,  0.1378, -0.1279, -0.1061,  0.0201,  0.0033,  0.2012,
         0.0651,  0.1798,  0.1236, -0.0686,  0.0883,  0.1102, -0.2611, -0.1244,
         0.1451, -0.0750, -0.0786,  0.1893, -0.0299, -0.0256, -0.1079,  0.1197,
         0.0891,  0.1654, -0.0030, -0.0060, -0.0097,  0.0704, -0.0285, -0.0377,
         0.1143, -0.0514,  0.0403, -0.0316,  0.0576,  0.0844,  0.0666, -0.0464,
         0.0092,  0.0528,  0.0099, -0.0934, -0.0248,  0.0300, -0.0105,  0.1380,
         0.1109,  0.2327,  0.0715,  0.0571, -0.1219, -0.1904, -0.0992, -0.0091,
         0.1325, -0.1587, -0.1131, -0.0851,  0.0343, -0.1200, -0.0195,  0.0450,
        -0.1093, -0.0035,  0.1699,  0.1117, -0.0303,  0.0125,  0.0155,  0.0791,
         0.0964, -0.0687,  0.0516,  0.0387,  0.0719,  0.0528,  0.1554,  0.0931,
        -0.0091, -0.0286,  0.0299,  0.0145,  0.0301,  0.0100, -0.0223,  0.0348,
        -0.0098, -0.0125, -0.0275, -0.0259, -0.0788, -0.2235, -0.0171, -0.1600])
tensor([-3.2471e-01,  1.1418e+00, -4.2308e-03, -3.9075e-02, -9.5561e-01,
        -8.5272e-01, -1.5749e+00, -9.6538e-01,  3.3097e-01, -2.0693e-01,
         1.2937e+00,  1.1748e+00, -2.3479e-01,  1.1678e+00,  2.6184e-01,
        -2.0926e-01,  1.4111e+00, -4.5446e-01, -1.0147e+00, -8.9863e-01,
         6.9802e-01,  7.7808e-01,  7.8215e-02,  8.0602e-01, -2.3832e-01,
         3.1121e-01, -1.6581e-01, -3.2843e-01,  1.1496e+00,  1.1283e+00,
        -3.9323e-01,  8.8588e-01,  2.7000e-01,  2.2747e-01,  4.1119e-01,
        -8.5648e-01,  1.3400e-01,  2.4044e-01, -2.5060e-01, -6.2084e-03,
         1.0296e-01,  1.0022e+00, -1.2740e-01,  3.0951e-02, -3.8295e-01,
         6.0289e-02, -5.3097e-01, -2.1758e-01, -2.1737e-01,  3.6880e-01,
        -1.7160e-01, -9.5485e-01, -7.9333e-01,  6.2854e-02,  4.1375e-01,
        -1.9565e-01, -5.6858e-03, -1.3776e-02,  1.2921e-01,  2.2787e-01,
        -1.5820e+00, -7.8791e-01,  2.0151e-01, -1.3117e-01, -2.2231e-01,
        -8.0834e-01,  3.4040e-01, -7.8130e-01,  8.1153e-01, -1.3120e-01,
         5.2154e-01,  7.6707e-01, -7.9822e-01, -2.0219e-02, -1.9709e-01,
        -9.8695e-01,  3.5404e-02,  8.7513e-02,  1.3085e-02,  3.8986e-01,
         5.2159e-01,  7.5754e-01,  2.9853e-01, -4.3581e-01, -4.3922e-01,
        -6.3513e-01, -5.2787e-01,  8.3507e-01, -1.6810e-01, -1.2966e+00,
        -2.9268e-02,  1.6107e+00,  2.5283e-02, -2.8019e-01,  3.9865e-01,
         3.7004e-01,  5.4864e-03,  6.1251e-01,  1.1754e-01,  6.7193e-04,
        -6.2898e-01, -4.4365e-01, -3.4866e-01, -9.4454e-01,  4.5163e-01,
         1.6177e-01, -2.4831e-01, -3.7938e-02, -3.3639e-01,  8.6285e-01,
         3.4220e-01,  4.1717e-01, -5.9938e-01,  2.3868e-01,  6.0658e-01,
        -5.0614e-01,  6.6093e-01, -7.7165e-01,  7.6589e-01,  6.4245e-01,
         1.3006e-01,  4.9427e-02,  9.9481e-01, -3.3447e-01, -4.4803e-01,
         2.0077e-01,  1.2029e+00, -3.3535e-01])
##########################################################
prot_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2116,  0.4727, -0.1603, -0.2337, -0.0546,  0.2382,  0.6044,  0.4399,
         0.2282, -0.2065,  0.2529, -0.2773, -0.3711, -0.1316,  0.1621,  0.1722,
         0.7634, -0.3702, -0.2836, -0.5762,  0.0269,  0.9876,  0.5304,  0.3206,
         0.2181, -0.2352,  0.2378, -0.0293, -0.2413,  0.2039, -0.5463,  0.9217,
         0.2052,  0.2714,  0.2377, -0.7635,  0.3218, -0.5250,  0.2210,  0.2426,
         0.1020,  0.5298,  0.2854, -0.1321,  0.0887, -0.1821,  0.2389, -0.1348,
        -0.1507,  0.1572, -0.3451,  1.0033, -0.8647, -0.3177,  0.2125,  0.1570,
         0.2324,  0.0651,  0.7079,  0.2510, -0.0886, -0.1022, -0.0523, -0.1677,
         0.2323, -0.0958,  0.2147,  0.3675, -0.3248,  0.2270, -0.2647,  0.1464,
        -0.1768,  0.2522, -0.4141, -0.6659, -0.3945,  0.1268, -0.4311, -0.3178,
        -0.2649, -0.3034,  0.1830,  0.0312, -0.6745,  0.4102,  0.2434, -0.1456,
        -0.2303,  0.3083,  0.1266, -0.5352, -0.0626, -0.2840,  0.0764, -0.2670,
        -0.5710,  0.1458, -0.2792, -0.2395, -0.3766, -0.0166, -0.2957,  0.0380,
         0.3041,  0.3251,  0.3309,  0.2707,  0.1533, -0.5541,  0.2795, -0.4076,
        -1.2459,  0.0967, -0.4836, -0.0891, -0.3874, -0.4305,  0.2311, -0.3044,
         0.1390, -0.1269, -0.1712,  1.2079,  0.4820,  0.2376,  0.1308, -0.3320])
##########################################################
prot_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([ 0.0969,  0.0382, -0.0654, -0.1394, -0.0111, -0.0032,  0.0367,  0.0591,
        -0.1161,  0.1357, -0.0291, -0.0963, -0.0225, -0.1079, -0.1995,  0.0665,
         0.0918,  0.0295,  0.0498, -0.0841,  0.0363,  0.0772,  0.0007, -0.0644,
         0.1456, -0.1337, -0.1912, -0.0370, -0.0298, -0.0222,  0.0085,  0.0099,
         0.0110,  0.0422, -0.0901,  0.0329,  0.1185, -0.0328, -0.0129,  0.1934,
        -0.0426,  0.0003,  0.1180,  0.0443, -0.0703,  0.0565, -0.0804,  0.0408,
        -0.0355,  0.1444, -0.0494, -0.0284,  0.1045, -0.0525,  0.0910,  0.1038,
         0.0117,  0.0290, -0.1474,  0.0214, -0.0204,  0.0863, -0.1221,  0.0930,
         0.0584, -0.0278,  0.1026, -0.0802, -0.0943, -0.0943,  0.0542, -0.1756,
         0.0383, -0.0529,  0.0110, -0.2052, -0.0643, -0.0389,  0.0118, -0.0339,
         0.0715,  0.0111, -0.1168, -0.0270,  0.0163, -0.0209,  0.1791,  0.1239,
         0.0636,  0.0637, -0.0041, -0.0269, -0.0387, -0.0503,  0.1114,  0.1089,
         0.0924,  0.1775,  0.0303, -0.1471,  0.0042, -0.1774,  0.0998,  0.0650,
         0.1076, -0.0377,  0.0130, -0.1247, -0.1285, -0.0196, -0.0105, -0.0260,
        -0.0014,  0.1761, -0.0207,  0.0557,  0.0034,  0.0167,  0.0362,  0.2525,
        -0.0205, -0.0420, -0.0977,  0.0211, -0.0425,  0.0059, -0.1016,  0.0943])
tensor([ 0.3690,  0.7923, -1.5826, -0.7852, -0.6772,  0.7675, -0.1250, -0.0183,
        -0.2827,  0.1922,  0.7158,  0.1116, -0.3641, -1.9849, -0.9279,  0.4230,
        -0.2127, -0.2952, -0.2228, -0.3779, -0.4983, -0.1809, -0.1701,  1.1550,
         0.5127, -0.5226, -0.0483,  1.0353, -0.2826,  1.0443,  0.1032,  0.0046,
         0.3852, -0.0963, -0.3251, -0.2566,  1.3884, -0.0684,  0.8253, -0.0123,
         0.3539,  0.3663,  0.1010,  0.0428, -0.9418, -0.0290, -0.3388, -0.7903,
        -0.6248, -0.0192,  0.1778, -0.2393,  1.3528,  0.2345,  0.7299,  1.1794,
         0.9483,  0.0354, -0.0864, -0.1284, -0.1165, -0.0864, -0.4190,  0.7119,
         0.0040,  0.4875, -0.2161, -0.4951,  0.4315, -1.0323, -0.0344, -0.5746,
         0.1525,  0.3002, -0.0959, -0.0939, -0.1747,  0.1160, -0.0622,  0.1446,
        -0.0760, -0.4182, -0.0434,  0.4823,  0.0401,  0.1536,  0.3792, -0.1898,
        -0.2024,  0.0045, -0.0521,  1.3400, -0.2948,  0.3654,  0.0844,  0.3020,
         0.0544, -0.1396, -0.3834,  0.0208, -0.2025, -0.0357,  1.4529,  0.0238,
         0.5242,  0.6304, -2.2429, -0.0780,  0.1791,  1.7965,  0.0493,  0.3332,
        -0.0949, -0.3214,  0.5806,  0.9061, -0.1909, -0.0265,  0.4627,  1.3381,
        -0.8291,  0.2389, -1.4677, -0.3786,  1.0867,  0.3348,  0.1496,  0.4551])
##########################################################
prot_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2070, -0.4062,  0.3801,  0.2196,  0.4077, -0.5327,  0.2742,  0.4795,
        -0.2293, -0.2633, -0.0146,  0.2682,  0.3714,  0.4072, -0.3439, -0.4634,
         0.5200,  0.5612,  0.2031, -0.2196,  0.3033, -0.4856,  0.5648, -0.5595,
         0.2045,  0.2192, -0.2405,  0.5489,  0.4798, -0.1951, -0.1188, -0.3162,
        -0.2887,  0.2977, -0.2145, -0.2407,  0.1392, -0.4985, -0.3360,  0.2566,
        -0.3000, -0.1808,  0.2590, -0.2869,  0.2156, -0.4310, -0.2333, -0.2235,
         0.2516,  0.2937, -0.0018, -0.3321, -0.4763,  0.4482,  0.2269,  0.4981,
        -0.5794,  0.2228, -0.5130, -0.3341, -0.2201, -0.3261,  0.1225, -0.2729,
         0.0506, -0.4625,  0.2182, -0.1767,  0.3962,  0.1016, -0.3490,  0.0782,
        -0.5635, -0.3556, -0.2889, -0.0952, -0.4667, -0.0301, -0.6035,  0.2831,
        -0.1595, -0.3226, -0.2704, -0.3155, -0.3958, -0.3957,  0.2160,  0.1262,
         0.0757,  0.1499,  0.5214, -0.5009,  0.3709,  0.2489, -0.3319, -0.1927,
         0.3946, -0.5484, -0.2789,  0.2647,  0.6973, -0.0493, -0.4982, -0.2389,
         0.3312,  0.1124, -0.3207, -0.0512, -0.3445, -0.4897,  0.3682,  0.2838,
        -0.6333,  0.2597, -0.5056,  0.2561,  0.5329,  0.4697, -0.1713, -0.3622,
         0.4863, -0.5290,  0.1684, -0.4020, -0.4386, -0.3080, -0.2587, -0.2284])
##########################################################
prot_encoder.encoder.layers.1.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0360,  0.0327, -0.0003,  ...,  0.0040,  0.0485,  0.0618],
        [-0.0258,  0.0015, -0.0451,  ..., -0.0367, -0.0107, -0.0531],
        [-0.0580,  0.0605, -0.0402,  ..., -0.0754,  0.0719, -0.0084],
        ...,
        [ 0.0019,  0.0116, -0.0675,  ...,  0.0393,  0.0178,  0.0429],
        [ 0.0168,  0.0616, -0.0355,  ...,  0.0508, -0.0290, -0.0186],
        [-0.0198,  0.0367,  0.0169,  ...,  0.0361, -0.0127,  0.0481]])
tensor([[ 0.9761,  0.9608, -1.0681,  ...,  0.9006,  0.8790,  0.7616],
        [ 0.7032,  0.7097, -1.3125,  ...,  0.7649,  0.3142,  0.5124],
        [ 0.1475,  0.1674, -0.2691,  ..., -0.0944,  0.2862,  0.0516],
        ...,
        [-0.0143,  0.7594, -0.7720,  ...,  0.4376,  0.1602,  0.2391],
        [ 0.1242, -0.4693,  0.4301,  ..., -0.1972, -0.1827, -0.1093],
        [-0.2506,  0.0506, -0.2298,  ..., -0.1982,  0.1358, -0.1545]])
##########################################################
prot_encoder.encoder.layers.1.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.2171e+00, -9.1420e-01,  2.8472e-01,  6.4699e-01,  3.9052e-01,
        -8.4635e-01, -4.3122e-01, -1.7123e-01,  7.2259e-01,  1.5807e-01,
        -1.2555e+00,  5.0363e-01, -1.0065e+00, -6.4465e-02, -8.7111e-02,
        -1.2253e+00, -5.0262e-01,  3.9931e-01, -1.4672e-01, -3.6781e-01,
         3.5115e-02,  1.5276e-01, -1.1403e-01, -7.1408e-01,  2.4834e-01,
        -3.6814e-01,  6.5034e-01,  5.2053e-01, -5.8163e-01, -6.7569e-01,
         1.8668e-01, -7.0236e-01,  6.5715e-01,  5.8765e-01,  7.1108e-01,
         7.6263e-01, -5.5282e-01,  6.5154e-01,  8.9643e-01,  8.9587e-01,
        -8.1748e-01, -1.4636e-01, -5.5142e-01,  9.6614e-01, -2.9939e-01,
         5.1090e-01,  6.1995e-01,  5.1621e-01,  1.6749e-02,  9.1556e-02,
         4.5358e-01,  5.3941e-01,  2.3417e-01, -2.7587e-01, -4.4467e-02,
        -3.0192e-01, -1.8288e-01, -9.5369e-01, -3.5100e-01,  3.4148e-01,
         7.7577e-01, -1.2461e-02, -6.5730e-01,  1.0745e+00, -5.5973e-01,
         2.4233e-01, -2.8729e-01,  1.7817e+00, -3.2295e-01,  2.8140e-01,
         1.6168e-01,  1.1622e+00, -9.8957e-01,  9.5673e-02,  7.2296e-01,
         3.2231e-01, -9.9118e-01,  1.1908e-01,  2.6131e-02, -5.0860e-01,
         1.1298e+00,  1.8515e-01,  8.3798e-01,  8.7631e-01, -6.7432e-01,
        -5.3040e-01,  5.5060e-01, -2.1932e-01, -9.0523e-01,  4.2690e-01,
        -2.5547e-01,  5.5143e-01,  3.4520e-01,  7.1676e-02, -8.6600e-01,
         8.2293e-01,  9.6167e-01, -4.3475e-01, -2.0389e-01, -7.6960e-01,
        -6.9315e-01,  1.0513e-01,  6.3724e-01,  7.7647e-01, -1.3205e+00,
        -5.2551e-01,  4.1042e-01,  6.5865e-01,  2.4976e-01,  1.1458e+00,
        -1.5992e-01, -7.0990e-01,  9.3695e-01, -6.0178e-01,  8.5486e-02,
         3.2855e-01,  6.9648e-01,  6.6065e-01, -7.2641e-01,  3.5269e-01,
        -8.3314e-01, -3.4115e-01,  6.4430e-01, -4.5643e-01, -3.4317e-01,
        -5.0367e-01,  3.7108e-01, -3.4446e-01,  6.3130e-06, -1.4567e-05,
         1.0015e-04,  6.9501e-06,  7.9423e-05,  1.6985e-06, -2.7908e-05,
         3.1893e-05,  1.8655e-05, -4.3225e-05, -2.4007e-05,  4.9043e-06,
        -7.3045e-06,  5.5005e-05, -4.6690e-05, -5.0220e-06,  7.2241e-06,
         4.0600e-05, -5.9122e-05, -3.3118e-05, -5.0910e-05,  3.9852e-05,
        -1.3085e-05, -7.6312e-05,  1.7998e-05, -4.9713e-05,  7.2983e-05,
         5.8661e-05, -5.2930e-05, -6.9781e-05,  3.6860e-05, -4.0249e-05,
         4.0582e-05,  4.0553e-05,  2.2010e-05,  9.7430e-06, -3.0904e-05,
         3.3315e-05,  9.5199e-06,  4.1476e-05, -4.6049e-05,  1.8956e-05,
        -3.1309e-05,  3.7554e-05,  8.6673e-06,  2.6302e-05,  2.8012e-05,
        -9.4941e-07,  3.0220e-05,  1.9970e-05, -1.4302e-05, -2.2299e-05,
        -1.2893e-05, -8.2666e-06, -2.5867e-05, -1.8256e-05,  2.3431e-06,
         4.8231e-06,  2.9920e-05, -9.7659e-06, -2.2377e-06, -1.6262e-05,
         3.4554e-06, -1.4001e-06,  2.5378e-05, -5.2273e-05,  1.6295e-05,
        -1.5664e-04,  8.1714e-05, -9.5879e-06, -5.4468e-05, -1.2197e-04,
         5.0837e-05,  5.4313e-06, -7.4810e-05, -1.4849e-05,  1.0006e-04,
         9.0181e-06,  3.0749e-05,  2.5112e-05,  2.1910e-05,  2.6501e-05,
         3.0345e-05,  3.7743e-05, -1.1149e-05, -2.2202e-05,  3.1338e-05,
        -1.9649e-05, -3.6450e-05,  1.8556e-05, -1.3761e-05,  3.8984e-06,
         3.5422e-06, -1.6835e-06, -3.3047e-05, -2.8164e-06,  1.8583e-05,
         2.1113e-06, -2.4960e-05, -1.8026e-05, -2.6249e-05,  2.3384e-06,
         1.9772e-05,  2.6375e-05, -3.0840e-06, -1.6638e-05,  1.2009e-05,
        -1.1527e-05, -9.1010e-06,  2.2320e-05, -9.1782e-06, -2.5158e-05,
        -9.2746e-05,  9.3033e-05, -5.1497e-05, -9.3961e-05, -5.9028e-05,
        -3.2311e-05,  8.2313e-05, -6.0076e-05,  4.2500e-05,  3.8720e-05,
        -7.7267e-05,  9.8645e-05,  5.1353e-05,  3.7743e-05, -3.8795e-07,
         7.5014e-05, -2.1205e-01,  1.9864e-01,  2.4722e-01,  1.8700e-01,
        -2.1611e-01,  2.4170e-01, -2.4316e-01,  3.3155e-01, -2.3426e-01,
        -2.1352e-01, -2.1884e-01,  1.3883e-01, -2.5867e-02, -2.0357e-01,
         1.9636e-01, -1.3611e-01, -2.4419e-01,  2.1060e-01,  2.4034e-01,
         1.9800e-01, -2.3972e-01,  1.1885e-02,  7.4458e-02,  1.4689e-01,
         1.6784e-01,  2.7193e-01, -2.3892e-01,  2.4426e-01, -2.4140e-01,
        -1.7074e-01, -3.2634e-01, -3.6916e-01, -1.9894e-01, -2.1417e-01,
        -2.0645e-01,  2.3941e-01,  2.5626e-01,  2.4167e-01, -2.3514e-01,
        -1.4556e-01, -2.7631e-01, -1.8220e-01, -2.4287e-01,  1.7419e-01,
         2.8759e-01, -2.3990e-01, -1.8269e-01,  1.7590e-01,  1.9207e-01,
         2.4963e-01, -1.8080e-01, -1.4667e-01,  1.8274e-01,  6.0362e-02,
         2.5327e-01,  2.3495e-01, -1.9951e-01, -3.0373e-01, -1.9993e-01,
        -3.0997e-02,  1.9591e-01,  2.7515e-01, -2.4212e-01,  1.9177e-01,
        -2.0568e-01, -3.0923e-01, -2.4792e-01, -2.5308e-01, -3.2430e-01,
         2.5521e-01, -3.3218e-01,  2.5150e-01,  2.4005e-01, -3.1161e-01,
         1.4154e-01, -2.4891e-01, -2.4116e-01,  1.9619e-01, -2.0212e-01,
        -1.9990e-01, -2.4055e-01,  2.5639e-01,  1.0916e-01, -4.8235e-02,
        -2.7210e-01, -2.7045e-01,  2.4120e-01,  2.5913e-01,  3.1710e-01,
         1.6918e-01,  1.3963e-01, -2.1465e-01,  1.2751e-01, -2.3743e-01,
         2.2168e-01, -2.0189e-01, -2.4178e-01,  1.9641e-01, -9.6789e-05,
         2.1141e-01, -1.3843e-01, -1.7468e-01,  2.4089e-01,  2.4922e-01,
        -2.2385e-01, -2.6923e-01,  2.0487e-01,  2.6161e-01,  3.9893e-01,
        -2.1166e-01,  2.5628e-01, -2.4736e-01, -2.0199e-01,  1.3937e-01,
         1.7055e-01,  2.5363e-01, -2.7465e-01,  4.7890e-01, -4.1248e-02,
        -2.1196e-01, -1.8671e-01, -2.1166e-01,  1.7756e-01, -1.8165e-01,
        -4.1190e-01,  1.4953e-01, -1.8733e-01,  2.3045e-01])
##########################################################
prot_encoder.encoder.layers.1.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0777,  0.0435, -0.0862,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0485, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0306,  0.0483],
        [-0.0517, -0.0149,  0.0659,  ...,  0.0579, -0.0457,  0.0403]])
tensor([[ 0.0308, -0.0046,  0.2570,  ..., -0.2998,  0.1325,  0.2812],
        [ 0.2352, -0.3992,  0.2034,  ..., -0.5606,  0.0661,  0.1237],
        [-0.5521,  0.5686, -0.2354,  ...,  0.6120, -0.7196,  0.0195],
        ...,
        [ 0.1114, -0.0879,  0.3119,  ..., -0.0662, -0.1124,  0.2596],
        [ 0.3046, -0.3887, -0.3289,  ...,  0.3464, -0.0758, -0.1077],
        [ 0.2070, -0.4182,  0.3110,  ..., -0.2425,  0.1141, -0.2995]])
##########################################################
prot_encoder.encoder.layers.1.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2290, -0.2261,  0.2296,  0.2278,  0.2294, -0.2227,  0.2292,  0.2216,
        -0.2306, -0.2298, -0.2328,  0.2297,  0.2254,  0.2288, -0.2314, -0.2334,
         0.1442,  0.2125, -0.2306, -0.2307,  0.3471, -0.2303, -0.2132, -0.2170,
         0.2275,  0.2296, -0.2301,  0.2324,  0.2283, -0.2195, -0.2303, -0.2294,
        -0.2333,  0.2294, -0.2260, -0.2293,  0.2339, -0.2402, -0.2184,  0.2300,
        -0.2298, -0.2262,  0.2244, -0.2247,  0.2298, -0.2320, -0.2313, -0.2256,
         0.2258,  0.2296, -0.2271, -0.2300, -0.2313, -0.2275,  0.2306,  0.2302,
         0.2258,  0.2243, -0.2305, -0.2080, -0.2239, -0.2282,  0.2334, -0.2303,
         0.2299,  0.1446,  0.2243, -0.2234,  0.2304,  0.2343, -0.2280, -0.2420,
        -0.2342, -0.2274, -0.1857,  0.1872, -0.2173, -0.2169, -0.2297,  0.2293,
        -0.2300, -0.2193, -0.2293, -0.2165,  0.2189, -0.2323,  0.2269,  0.2221,
         0.2300,  0.2251, -0.2250, -0.2292, -0.1931,  0.2268, -0.2352, -0.2232,
        -0.2321, -0.2198, -0.2294,  0.2296, -0.2235, -0.2350, -0.3798,  0.2048,
         0.2277, -0.2265,  0.2509, -0.2441, -0.2320,  0.2268,  0.2331,  0.2298,
        -0.2367,  0.2312, -0.2397,  0.2390, -0.1645, -0.2376, -0.2256, -0.2276,
        -0.2028, -0.2374, -0.2195, -0.2291,  0.2307, -0.2267,  0.1894, -0.2289])
##########################################################
prot_encoder.encoder.layers.1.linear1.weight shape: torch.Size([64, 128])
tensor([[ 0.0824,  0.0825, -0.0318,  ..., -0.0883, -0.0329, -0.0422],
        [-0.0047, -0.0468, -0.1117,  ..., -0.0019,  0.0441, -0.0453],
        [ 0.0131, -0.0403, -0.0018,  ..., -0.0119,  0.1607, -0.0902],
        ...,
        [ 0.0721,  0.0074,  0.1011,  ...,  0.0998, -0.0638, -0.0154],
        [ 0.0396,  0.0467, -0.0178,  ..., -0.0647, -0.0854, -0.0202],
        [ 0.0008,  0.0630, -0.0281,  ...,  0.1022, -0.0480,  0.0668]])
tensor([[-0.5557, -0.1026, -0.1175,  ..., -0.6583, -0.0293,  0.1280],
        [ 0.1643,  0.0378,  0.3202,  ...,  0.0936,  0.0785,  0.2185],
        [-0.0490, -0.3639,  0.3406,  ..., -0.1094,  0.2866, -0.2167],
        ...,
        [ 0.2456, -0.0918,  0.0700,  ...,  0.2669, -0.3730,  0.3052],
        [ 0.0314, -0.3331,  0.2999,  ...,  0.0290,  0.1248, -0.3339],
        [-0.0488, -0.2346,  0.4662,  ..., -0.0160, -0.0099,  0.0240]])
##########################################################
prot_encoder.encoder.layers.1.linear1.bias shape: torch.Size([64])
tensor([-0.0250,  0.0180, -0.0861,  0.0376, -0.0467,  0.0681,  0.0507, -0.0192,
         0.0337, -0.0159,  0.0222,  0.0514, -0.0768,  0.0162,  0.0261,  0.0345,
         0.0281,  0.0324,  0.0413,  0.0028, -0.0356,  0.0813, -0.0696,  0.0608,
        -0.0431, -0.0643, -0.0072,  0.0071,  0.0649,  0.0702, -0.0061,  0.0290,
        -0.0727, -0.0272, -0.0382,  0.0734, -0.0835, -0.0438, -0.0425,  0.0427,
        -0.0032,  0.0075, -0.0350,  0.0270, -0.0527, -0.0279,  0.0828, -0.0536,
         0.0573,  0.0599,  0.0368, -0.0062, -0.0522, -0.0149,  0.0005,  0.0297,
         0.0508, -0.0860, -0.0782,  0.0585,  0.0812,  0.0567, -0.0077,  0.0127])
tensor([-0.3788,  0.2156, -0.0291,  0.1559, -0.3631,  0.2467,  0.2813,  0.2378,
         0.3370,  0.0293,  0.2084,  0.1893,  0.1628, -0.1069, -0.3079, -0.3304,
        -0.2843,  0.1745,  0.3271,  0.2035, -0.2809,  0.3286, -0.0087,  0.2177,
        -0.0388, -0.4007,  0.1779,  0.2783, -0.1651,  0.4768,  0.3322,  0.3880,
         0.2952, -0.2828, -0.1259, -0.1368, -0.3318, -0.1483, -0.0112, -0.0563,
         0.2005,  0.2064,  0.1633,  0.2076,  0.0165, -0.3900,  0.1911,  0.1204,
         0.2104,  0.1397, -0.0849, -0.0481,  0.1652,  0.2660, -0.0623, -0.1090,
         0.0538, -0.1674,  0.0626,  0.2631,  0.1508,  0.2089, -0.3224, -0.1142])
##########################################################
prot_encoder.encoder.layers.1.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.0995, -0.0299,  0.0387,  ..., -0.0413,  0.0845, -0.0300],
        [-0.0538, -0.0272, -0.0492,  ...,  0.0903, -0.0592, -0.0130],
        [ 0.0745,  0.1085, -0.0388,  ..., -0.0178,  0.0272,  0.0621],
        ...,
        [-0.1472, -0.0397,  0.0126,  ...,  0.0078,  0.0414, -0.0910],
        [ 0.0598,  0.0548,  0.0209,  ...,  0.0355, -0.1051, -0.1374],
        [-0.0340,  0.0573, -0.0574,  ...,  0.0051,  0.1215, -0.0763]])
tensor([[ 0.0617,  0.0129,  0.4070,  ...,  0.1869,  0.1507,  0.2265],
        [ 0.1966, -0.2956, -0.1739,  ...,  0.1714,  0.5680, -0.0925],
        [-0.0336, -0.3825, -0.3819,  ..., -0.3003,  0.2210, -0.2148],
        ...,
        [ 0.2188,  0.2679,  0.3549,  ..., -0.2262,  1.0703,  0.2506],
        [-0.2774,  0.3000,  0.1376,  ...,  0.0918, -0.1575, -0.2066],
        [ 0.0768,  0.0714,  0.2473,  ..., -0.0029,  0.2134,  0.2562]])
##########################################################
prot_encoder.encoder.layers.1.linear2.bias shape: torch.Size([128])
tensor([-0.1182,  0.0646,  0.0008, -0.0595,  0.0710, -0.0074, -0.0845, -0.1114,
         0.0555,  0.0241, -0.1157,  0.0894, -0.0410, -0.0008,  0.0374,  0.0021,
        -0.0535,  0.0135,  0.0153,  0.0757,  0.0807,  0.0810, -0.0713,  0.0207,
         0.1064, -0.0170,  0.0162,  0.0275, -0.0396, -0.0285, -0.0726, -0.0859,
        -0.0350, -0.1200,  0.0271, -0.0607,  0.1068, -0.0537,  0.0798, -0.0467,
        -0.0325,  0.0945,  0.0455, -0.0038, -0.0678,  0.1204,  0.0363,  0.0999,
        -0.0391, -0.1018, -0.0562,  0.0251,  0.0028,  0.1054,  0.0747,  0.0139,
         0.0395,  0.0414, -0.0185,  0.0687,  0.0981,  0.0435, -0.0411, -0.0493,
         0.1250, -0.0381,  0.0445,  0.1141,  0.0302,  0.0075,  0.0767,  0.1089,
         0.0577, -0.1065,  0.0402, -0.0100, -0.1008,  0.0900, -0.0211,  0.0569,
         0.0043,  0.1239, -0.0032, -0.1046, -0.0472, -0.0728,  0.0371, -0.1220,
        -0.0720, -0.0652, -0.0181, -0.0107, -0.0156, -0.0628,  0.0205, -0.0876,
        -0.0442, -0.0234,  0.0045,  0.0475,  0.1056,  0.0616,  0.0599,  0.0487,
        -0.0669,  0.0971,  0.0804,  0.1205,  0.0237, -0.0217, -0.0002,  0.0236,
         0.1213,  0.0462,  0.0240,  0.0174, -0.1079, -0.0424, -0.0862,  0.1223,
        -0.0236, -0.0300,  0.0469,  0.1132, -0.0838, -0.0935, -0.0828, -0.0944])
tensor([ 0.1143,  0.2195, -0.2392,  0.1601,  0.5436,  0.4209, -0.2721,  0.2189,
        -0.1452, -0.1982,  0.0885,  0.3113,  0.1520, -0.2413,  0.2218,  0.1598,
         0.5537,  0.0758, -0.2533,  0.4777, -0.1678, -0.3267,  0.0052, -0.2075,
        -0.1431,  0.2033, -0.2310,  0.2073, -0.3089,  0.1626,  0.4251,  0.0785,
         0.3755, -0.3090, -0.1143,  0.1397, -0.1915, -0.2535, -0.1878,  0.2120,
        -0.1688,  0.4441,  0.1668,  0.1953,  0.1723,  0.1365,  0.2200,  0.2370,
         0.1682, -0.3588, -0.2205, -0.1581,  0.1835,  0.2006, -0.1556,  0.1587,
         0.2623,  0.1803,  0.2294,  0.1835,  0.1975, -0.3888, -0.2339,  0.1795,
        -0.0246, -0.2479,  0.2310,  0.1702,  0.2965, -0.6501, -0.1671, -0.3756,
        -0.0138, -0.2021,  0.4215, -0.0679,  0.1107, -0.1189,  0.2421,  0.2252,
        -0.2442,  0.4216, -0.2545, -0.3248, -0.3379,  0.3389, -0.1563, -0.3050,
         0.2541, -0.1142,  0.1509,  0.2369, -0.0752, -0.2171,  0.1858, -0.2747,
        -0.2093,  0.2347, -0.2098,  0.2831,  0.8294, -0.1941,  0.1359, -0.0067,
         0.1853,  0.3353,  0.4866, -0.0526, -0.0304,  0.2468,  0.2078,  0.2279,
         0.6469, -0.2407,  0.1926,  0.2172,  0.4016,  0.1587,  0.1603, -0.2082,
        -0.1076,  0.2112,  0.1584,  0.1254, -0.2629,  0.2037, -0.2631,  0.1186])
##########################################################
prot_encoder.encoder.layers.1.norm1.weight shape: torch.Size([128])
tensor([-0.0924, -0.0175, -0.0650,  0.1297,  0.1115,  0.0677, -0.1348, -0.0759,
         0.1306,  0.1052,  0.0042,  0.1583, -0.2938, -0.0309, -0.0337, -0.0185,
         0.1644,  0.1398,  0.0366, -0.1069, -0.0575,  0.0857,  0.0157,  0.0101,
        -0.0643,  0.0722,  0.0666,  0.0307, -0.1042, -0.0634, -0.1260, -0.0998,
        -0.1094, -0.0824,  0.1378, -0.1279, -0.1061,  0.0201,  0.0033,  0.2012,
         0.0651,  0.1798,  0.1236, -0.0686,  0.0883,  0.1102, -0.2611, -0.1244,
         0.1451, -0.0750, -0.0786,  0.1893, -0.0299, -0.0256, -0.1079,  0.1197,
         0.0891,  0.1654, -0.0030, -0.0060, -0.0097,  0.0704, -0.0285, -0.0377,
         0.1143, -0.0514,  0.0403, -0.0316,  0.0576,  0.0844,  0.0666, -0.0464,
         0.0092,  0.0528,  0.0099, -0.0934, -0.0248,  0.0300, -0.0105,  0.1380,
         0.1109,  0.2327,  0.0715,  0.0571, -0.1219, -0.1904, -0.0992, -0.0091,
         0.1325, -0.1587, -0.1131, -0.0851,  0.0343, -0.1200, -0.0195,  0.0450,
        -0.1093, -0.0035,  0.1699,  0.1117, -0.0303,  0.0125,  0.0155,  0.0791,
         0.0964, -0.0687,  0.0516,  0.0387,  0.0719,  0.0528,  0.1554,  0.0931,
        -0.0091, -0.0286,  0.0299,  0.0145,  0.0301,  0.0100, -0.0223,  0.0348,
        -0.0098, -0.0125, -0.0275, -0.0259, -0.0788, -0.2235, -0.0171, -0.1600])
tensor([-4.0536e-01, -4.8409e-01,  5.1640e-01,  5.6706e-01,  2.7061e-01,
        -3.7907e-01,  6.6260e-01,  4.5883e-02,  2.6655e-01, -3.0438e-05,
        -1.8028e-01,  3.6392e-02, -7.2715e-02, -3.1253e-01,  1.0251e-01,
         2.5339e-01,  7.4699e-01,  2.4993e-01, -1.2394e-01, -5.5759e-01,
        -5.4836e-01,  5.6886e-03,  1.7907e-01,  4.1201e-01, -2.6820e-01,
         3.1556e-01,  2.7394e-01, -5.6707e-02,  4.7742e-01,  2.3587e-01,
        -1.6424e-01, -2.3022e-01,  8.6414e-02,  3.7015e-02,  7.5159e-01,
         1.5080e+00, -1.6640e-02, -3.7427e-01,  1.0226e-01, -4.9229e-02,
         1.3609e-01, -3.9543e-01,  4.8309e-01,  3.9919e-01,  6.8347e-02,
         1.4440e-01, -5.5639e-01,  1.1269e+00,  4.4568e-01,  1.4049e-01,
         5.5583e-01,  7.8513e-01, -1.6691e-01, -5.1638e-02, -3.0522e-02,
         4.7543e-01,  4.6797e-01,  9.6772e-01,  2.3187e-01,  3.8718e-01,
        -4.3879e-01,  1.1559e-02,  8.0191e-02,  1.3643e-01,  1.1634e-01,
        -5.5410e-01,  2.0405e-01, -3.2442e-02,  2.0477e-01,  2.7408e-01,
         1.7552e+00, -2.0726e-02,  2.3926e-01,  1.7306e-01, -5.2180e-01,
        -4.1116e-01,  4.5880e-01, -3.8101e-01, -1.9997e-01, -2.6081e-01,
        -9.5333e-02, -1.0676e+00, -4.0939e-01, -3.0098e-01, -2.2676e-01,
        -3.0732e-01, -4.4573e-01, -2.0336e-01, -3.9408e-02, -4.1601e-01,
         1.8210e-03,  2.4316e-01, -3.2752e-01, -1.7618e-01,  1.3711e-01,
         4.6805e-01, -3.4774e-01,  2.0622e-01, -7.7799e-01, -1.8906e-01,
        -4.8568e-01,  1.7863e-01,  4.9027e-01,  4.6496e-01,  1.3711e-01,
         3.5791e-01,  1.5798e+00, -4.7221e-02, -9.7361e-02, -4.0748e-01,
         1.1842e+00, -4.5899e-02, -2.7559e-01, -7.2699e-02,  1.2580e-01,
        -7.8504e-01,  9.9100e-01, -1.9346e-01, -1.0672e-01, -1.2263e-01,
        -1.0733e-01, -7.4887e-02, -4.5307e-01,  1.5064e-01, -2.3839e-01,
        -1.2240e-01, -4.1215e-01, -4.9200e-01])
##########################################################
prot_encoder.encoder.layers.1.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0302, -0.0027, -0.3702,  0.0762,  0.2159,  0.5447, -0.3282, -0.0026,
        -0.0104, -0.1801,  0.1605,  0.1940, -0.0759, -0.2759,  0.1854, -0.1459,
         0.9672, -0.1582, -0.4404, -0.0906, -0.0308, -0.3558,  0.0451,  0.3502,
        -0.0897,  0.1572, -0.2263,  0.3573, -0.4605,  0.1964,  0.2162,  0.2483,
         0.4732, -0.2635,  0.1903,  1.0648, -0.0426,  0.0224,  0.0805,  0.3236,
        -0.3147, -0.3721, -0.0536, -0.7517, -0.0862, -0.5221, -0.0864,  0.4768,
        -0.1000, -0.3055,  0.4076,  0.2292,  0.3265, -0.1350, -0.0826,  0.2620,
         0.0031,  0.0456,  0.3939,  0.2914, -0.1603, -0.4639, -0.0329,  0.2842,
        -0.0898,  0.1947,  0.0831, -0.0290,  0.2987,  0.1770,  0.4326, -0.4769,
         0.1103, -0.3224,  0.2978,  0.3141,  0.6001,  0.0595,  0.1613,  0.2326,
        -0.6492, -0.2092, -0.2989, -0.1112, -0.5223,  1.3145, -0.0859, -0.1035,
         0.2947,  0.1764,  0.0352,  0.2125,  0.3677,  0.0761,  0.2126,  0.0289,
         0.0096,  0.2701, -0.3343,  0.2410,  0.3424, -0.2205, -0.4515, -0.4215,
         0.2512,  0.1179, -0.2930, -0.0306,  0.0168,  0.4577, -0.1029,  0.2439,
         0.2864, -0.2613, -0.3094,  0.2482,  0.5632,  0.1009,  0.1235, -0.3388,
        -0.0185,  0.4079, -0.2043,  0.4804,  0.1681, -0.0420,  0.1436, -0.1239])
##########################################################
prot_encoder.encoder.layers.1.norm2.weight shape: torch.Size([128])
tensor([ 0.0969,  0.0382, -0.0654, -0.1394, -0.0111, -0.0032,  0.0367,  0.0591,
        -0.1161,  0.1357, -0.0291, -0.0963, -0.0225, -0.1079, -0.1995,  0.0665,
         0.0918,  0.0295,  0.0498, -0.0841,  0.0363,  0.0772,  0.0007, -0.0644,
         0.1456, -0.1337, -0.1912, -0.0370, -0.0298, -0.0222,  0.0085,  0.0099,
         0.0110,  0.0422, -0.0901,  0.0329,  0.1185, -0.0328, -0.0129,  0.1934,
        -0.0426,  0.0003,  0.1180,  0.0443, -0.0703,  0.0565, -0.0804,  0.0408,
        -0.0355,  0.1444, -0.0494, -0.0284,  0.1045, -0.0525,  0.0910,  0.1038,
         0.0117,  0.0290, -0.1474,  0.0214, -0.0204,  0.0863, -0.1221,  0.0930,
         0.0584, -0.0278,  0.1026, -0.0802, -0.0943, -0.0943,  0.0542, -0.1756,
         0.0383, -0.0529,  0.0110, -0.2052, -0.0643, -0.0389,  0.0118, -0.0339,
         0.0715,  0.0111, -0.1168, -0.0270,  0.0163, -0.0209,  0.1791,  0.1239,
         0.0636,  0.0637, -0.0041, -0.0269, -0.0387, -0.0503,  0.1114,  0.1089,
         0.0924,  0.1775,  0.0303, -0.1471,  0.0042, -0.1774,  0.0998,  0.0650,
         0.1076, -0.0377,  0.0130, -0.1247, -0.1285, -0.0196, -0.0105, -0.0260,
        -0.0014,  0.1761, -0.0207,  0.0557,  0.0034,  0.0167,  0.0362,  0.2525,
        -0.0205, -0.0420, -0.0977,  0.0211, -0.0425,  0.0059, -0.1016,  0.0943])
tensor([-5.4391e-03, -7.9842e-02, -3.9098e-01,  1.4890e-01,  3.3485e-01,
        -3.3451e-01, -1.5918e-01,  5.7365e-01,  4.5535e-02, -8.6394e-02,
         1.7480e-01, -1.4447e-01, -4.0130e-01, -3.7112e-01, -1.6542e-02,
         2.8293e-02,  5.2119e-01,  3.1977e-02,  3.9014e-01,  4.6260e-01,
         2.1612e-01,  5.0193e-01,  6.0701e-02,  1.7862e-01, -3.1159e-01,
         1.1178e-01, -2.0550e-01,  9.6026e-03, -1.9993e-01,  1.7789e-01,
         4.9615e-01,  6.4218e-02,  2.8758e-01, -1.2142e-01,  4.7429e-02,
        -4.6360e-02, -3.2212e-01,  1.1914e-01,  2.5951e-02, -8.8544e-02,
         1.1928e-01, -3.0621e-01,  3.8466e-02, -7.4100e-02, -1.0410e-01,
         1.5411e-01,  1.6392e-01, -2.5028e-01, -3.2185e-02,  2.0282e-01,
         1.3381e-02,  6.7026e-01,  2.6654e-01, -8.5139e-03,  7.7176e-02,
         2.0143e-01, -1.9909e-01,  4.4645e-02, -4.2128e-01, -1.6974e-01,
         1.0185e+00,  1.3359e-01,  9.4671e-02,  9.0671e-03,  3.5328e-02,
         1.1219e-01, -2.8371e-02, -9.3489e-02,  4.8693e-01, -3.1660e-01,
         3.6163e-01, -2.7581e-01,  2.3373e-01,  2.1345e-01, -2.2383e-01,
        -7.0551e-02, -1.9702e-01,  2.4892e-01,  1.3456e-01,  1.2088e-02,
         3.3409e-01, -2.1407e-01, -3.3425e-01,  1.7595e-01, -1.2686e+00,
        -2.0324e-01,  1.8329e-02,  5.0333e-01, -8.2078e-02,  1.2155e-01,
        -3.7553e-01, -8.5959e-02, -2.6047e-01,  1.3578e-01,  1.3766e-02,
         5.7676e-02, -1.5908e-01, -1.4325e-01, -1.7918e-01,  1.6459e-01,
        -8.0807e-01, -4.2213e-01,  2.3886e-01,  4.2689e-02,  2.4994e-01,
        -7.3378e-02, -3.0103e-01, -3.7080e-01,  1.2866e-01,  6.4386e-01,
        -4.7127e-02, -1.2890e-02,  2.2149e-01,  3.2974e-02, -6.5384e-02,
        -2.7565e-01,  5.1028e-01,  4.8804e-01, -8.9337e-04,  5.1772e-01,
         2.8484e-02,  4.4553e-02, -3.7521e-02, -2.9542e-02,  1.2439e-01,
         1.6988e+00,  3.7116e-02,  5.6871e-02])
##########################################################
prot_encoder.encoder.layers.1.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0763, -0.2586,  0.4724,  0.1028, -0.2072, -0.4222,  0.2032,  0.2732,
        -0.2368,  0.1399, -0.5250, -0.2183, -0.3775,  0.3871,  0.2428,  0.0135,
         0.4883, -0.2669, -0.4654,  0.2889, -0.4729, -0.5200,  0.4280, -0.2228,
         0.0609,  0.1237,  0.4466,  0.2426,  0.4861,  0.2069,  0.2710,  0.4814,
         0.2417,  0.2609, -0.2602,  0.4963,  0.2212, -0.2435,  0.4835,  0.2489,
        -0.2519, -0.3995, -0.2546, -0.2226, -0.0611, -0.2718,  0.2277, -0.2080,
         0.2304, -0.4845, -0.2610, -0.1946,  0.2475,  0.2623,  0.0006,  0.2853,
        -0.1349, -0.2474, -0.4987, -0.2632,  0.2799, -0.4940, -0.2588,  0.0055,
        -0.4959, -0.2232, -0.2403,  0.2737, -0.1539,  0.4278, -0.5135,  0.4904,
        -0.4925, -0.2583, -0.4707, -0.2614, -0.2670,  0.4986,  0.2674,  0.2578,
        -0.5069, -0.4697,  0.4748, -0.2249,  0.2639, -0.4634,  0.2336,  0.2701,
         0.4504,  0.2742, -0.4749, -0.4695, -0.2581, -0.2644, -0.2559,  0.2468,
         0.2473, -0.2585,  0.1774, -0.0299, -0.4429,  0.4897, -0.2805, -0.2747,
         0.5109, -0.0580, -0.4466,  0.4779, -0.2523, -0.4603, -0.3680,  0.0398,
         0.4890, -0.4762, -0.2733, -0.2043,  0.2561,  0.4621,  0.5070, -0.5066,
        -0.2359, -0.4910,  0.2794, -0.4916, -0.2289,  0.2509, -0.2498,  0.0147])
##########################################################
decoder.embedding.weight shape: torch.Size([287, 128])
tensor([[ 1.0376, -0.9642,  0.6833,  ..., -0.8728,  1.0359, -2.2508],
        [ 0.9336, -1.4255,  0.0298,  ...,  0.9638,  0.6910, -0.7072],
        [ 0.9326,  0.6384,  0.1058,  ..., -1.1317,  1.4238,  1.4502],
        ...,
        [ 0.5189,  2.1471,  1.5455,  ...,  1.0523,  1.7914,  1.0658],
        [ 0.4014, -0.3289,  1.2577,  ..., -1.3232, -0.2986,  0.0595],
        [ 0.7866,  0.8080,  1.1792,  ..., -1.7921, -1.2654, -1.8182]])
tensor([[ 1.0376, -0.9642,  0.6833,  ..., -0.8728,  1.0359, -2.2508],
        [ 0.9336, -1.4255,  0.0298,  ...,  0.9638,  0.6910, -0.7072],
        [ 1.1625,  0.8682, -0.1239,  ..., -0.9003,  1.1948,  1.6801],
        ...,
        [ 0.5189,  2.1471,  1.5455,  ...,  1.0523,  1.7914,  1.0658],
        [ 0.4014, -0.3289,  1.2577,  ..., -1.3232, -0.2986,  0.0595],
        [ 0.7866,  0.8080,  1.1792,  ..., -1.7921, -1.2654, -1.8182]])
##########################################################
decoder.blks.block0.addnorm1.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.7702, 1.2300, 0.7701, 1.2298, 0.7702, 0.7701, 0.7702, 1.2299, 1.2299,
        0.7702, 0.7700, 0.7702, 0.7701, 0.7701, 1.2297, 1.2297, 1.2301, 1.2299,
        0.7702, 1.2299, 0.7702, 0.7701, 1.2298, 1.2299, 1.2299, 0.7702, 1.2298,
        1.2299, 1.2299, 1.2298, 1.2298, 1.2298, 1.2297, 0.7700, 0.7702, 0.7701,
        1.2298, 0.7703, 1.2299, 1.2298, 0.7702, 0.7698, 1.2298, 0.7702, 1.2315,
        1.2303, 1.2299, 1.2299, 0.7763, 1.2298, 1.2299, 0.7702, 1.2301, 0.7702,
        0.7703, 0.7702, 0.7702, 1.2298, 0.7700, 1.2299, 1.2298, 1.2299, 1.2298,
        0.7701, 0.7702, 0.7702, 0.7701, 1.2298, 0.7702, 0.7702, 1.2298, 0.7702,
        1.2298, 0.7702, 0.7702, 0.7701, 0.7705, 1.2299, 0.7705, 0.7681, 1.2306,
        0.7702, 1.2298, 1.2299, 0.7695, 0.7702, 0.7702, 0.7702, 1.2298, 1.2305,
        1.2299, 0.7714, 1.2299, 0.7702, 1.2299, 0.7702, 0.7700, 1.2298, 0.7702,
        0.7702, 1.2301, 0.7702, 0.7701, 0.7702, 1.2299, 0.7702, 1.2298, 1.2297,
        0.7702, 0.7702, 1.2299, 1.2299, 1.2298, 0.7703, 1.2298, 1.2299, 0.7705,
        1.2302, 0.7702, 1.2299, 0.7701, 1.2298, 1.2299, 0.7702, 1.2293, 0.7703,
        1.2299, 0.7701])
##########################################################
decoder.blks.block0.addnorm1.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2298,  0.2295, -0.2298, -0.2299,  0.2299,  0.2298,  0.2298, -0.2298,
         0.2298,  0.2298,  0.2299,  0.2298, -0.2298, -0.2298,  0.2297,  0.2291,
         0.2299, -0.2299,  0.2298,  0.2300,  0.2299, -0.2298, -0.2298, -0.2299,
        -0.2299,  0.2298, -0.2299,  0.2299, -0.2299,  0.2299, -0.2298,  0.2299,
        -0.2299, -0.2298,  0.2299, -0.2297,  0.2299, -0.2294, -0.2299, -0.2296,
         0.2298, -0.2288, -0.2297,  0.2298, -0.2301, -0.2299,  0.2299, -0.2299,
        -0.2296, -0.2297,  0.2299,  0.2280,  0.2299,  0.2298, -0.2298,  0.2299,
         0.2299,  0.2298, -0.2296,  0.2299,  0.2299, -0.2299,  0.2300,  0.2298,
         0.2299, -0.2299,  0.2298, -0.2298,  0.2299,  0.2298,  0.2297, -0.2298,
        -0.2299,  0.2298, -0.2298,  0.2297,  0.2297,  0.2298,  0.2299, -0.2298,
         0.2299, -0.2299,  0.2299,  0.2305, -0.2297,  0.2299,  0.2298, -0.2299,
        -0.2298, -0.2299, -0.2298, -0.2299, -0.2298,  0.2299,  0.2299, -0.2298,
         0.2298, -0.2299, -0.2298, -0.2298,  0.2298, -0.2298,  0.2298,  0.2298,
         0.2298, -0.2298,  0.2299,  0.2291, -0.2296,  0.2298,  0.2297,  0.2298,
        -0.2300,  0.2299, -0.2300, -0.2299,  0.2299, -0.2298,  0.2298,  0.2299,
         0.2297,  0.2298, -0.2298,  0.2298, -0.2299, -0.2290, -0.2314,  0.2298])
##########################################################
decoder.blks.block0.attention1.W_q.weight shape: torch.Size([128, 128])
tensor([[ 0.0677, -0.2044, -0.1377,  ...,  0.0330, -0.1132,  0.0162],
        [-0.0039, -0.0675, -0.1565,  ...,  0.0798, -0.1126,  0.0640],
        [-0.1133, -0.1937,  0.1692,  ..., -0.0939, -0.0274,  0.0953],
        ...,
        [ 0.0910,  0.0148,  0.0016,  ...,  0.1834,  0.1081, -0.0038],
        [-0.0606,  0.1077,  0.0748,  ...,  0.0280, -0.1565,  0.1097],
        [-0.0256,  0.1008, -0.1530,  ..., -0.1116,  0.1934,  0.0777]])
tensor([[ 0.2975,  0.0253, -0.3677,  ...,  0.2628,  0.1166, -0.2136],
        [-0.2337, -0.2974,  0.0734,  ..., -0.1500, -0.3425, -0.1659],
        [-0.3431,  0.0361, -0.0606,  ...,  0.1359, -0.2573, -0.1349],
        ...,
        [ 0.3207,  0.2453, -0.2275,  ..., -0.0454,  0.3380, -0.2336],
        [-0.2906, -0.1209,  0.3043,  ...,  0.2578,  0.0733, -0.1202],
        [-0.2554,  0.3303, -0.3829,  ..., -0.3410, -0.0365,  0.3076]])
##########################################################
decoder.blks.block0.attention1.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.0834,  0.1093, -0.0214,  ...,  0.0661, -0.0398, -0.0293],
        [-0.0401, -0.0813,  0.0783,  ...,  0.1542, -0.0292, -0.0155],
        [-0.1582, -0.0372,  0.0073,  ..., -0.2275,  0.0476, -0.2090],
        ...,
        [-0.0520, -0.0722, -0.0265,  ..., -0.0514, -0.0030, -0.1212],
        [ 0.0759,  0.0318,  0.0796,  ...,  0.1689, -0.0141,  0.2267],
        [ 0.1368,  0.2237, -0.1102,  ...,  0.0062, -0.1211,  0.1040]])
tensor([[ 0.1462, -0.1205, -0.2513,  ..., -0.1638, -0.2696,  0.2006],
        [-0.2698,  0.1485, -0.1515,  ..., -0.0756, -0.2591,  0.2143],
        [-0.3881,  0.1926,  0.2370,  ...,  0.0023, -0.1822,  0.0208],
        ...,
        [-0.2818,  0.1575,  0.2034,  ...,  0.1783,  0.2268, -0.3510],
        [ 0.3058, -0.1979, -0.1522,  ...,  0.3989, -0.2439, -0.0031],
        [-0.0931,  0.4535, -0.3400,  ..., -0.2237,  0.1087,  0.3339]])
##########################################################
decoder.blks.block0.attention1.W_v.weight shape: torch.Size([128, 128])
tensor([[-2.9027e-02, -8.4625e-02,  2.4007e-02,  ..., -5.8549e-02,
          2.1629e-02, -2.5770e-02],
        [-7.1905e-03, -4.4071e-02, -2.1853e-02,  ...,  5.5251e-02,
         -2.1557e-02,  6.6689e-02],
        [-4.6746e-02, -4.1139e-02,  1.4732e-02,  ...,  5.4052e-02,
         -1.5814e-02,  3.6856e-02],
        ...,
        [ 2.0857e-02,  1.2117e-03, -4.9431e-02,  ..., -2.8150e-02,
         -6.1170e-05,  4.6430e-02],
        [ 1.9585e-02, -6.2763e-02, -1.0152e-01,  ...,  1.0496e-02,
         -1.0284e-01, -4.3711e-03],
        [ 6.6729e-03, -5.4615e-05,  3.6960e-02,  ...,  3.2049e-02,
          2.6757e-02,  1.9118e-03]])
tensor([[-0.2589, -0.3145,  0.2538,  ..., -0.2884, -0.2082,  0.2041],
        [ 0.2226,  0.1858, -0.2517,  ...,  0.2850,  0.2082, -0.1631],
        [-0.2766, -0.2710,  0.2445,  ..., -0.1758, -0.2456,  0.2667],
        ...,
        [ 0.2507, -0.2283,  0.1803,  ..., -0.2580,  0.2298, -0.1834],
        [-0.2102,  0.1671, -0.3313,  ...,  0.2402,  0.1271, -0.2355],
        [ 0.2361,  0.2297,  0.2668,  ...,  0.2619,  0.2566, -0.2279]])
##########################################################
decoder.blks.block0.attention1.W_o.weight shape: torch.Size([128, 128])
tensor([[-0.0326,  0.0393,  0.0002,  ..., -0.0116,  0.0360,  0.0289],
        [ 0.0718, -0.0131,  0.0216,  ...,  0.0310, -0.0292,  0.0232],
        [ 0.0140,  0.0235, -0.0734,  ..., -0.0650,  0.0185, -0.0142],
        ...,
        [-0.0422,  0.0254, -0.0306,  ...,  0.0007, -0.0265,  0.0253],
        [-0.0234, -0.0806, -0.0366,  ...,  0.0116,  0.0366,  0.0685],
        [-0.0344,  0.0064, -0.0603,  ...,  0.0099,  0.0376,  0.0383]])
tensor([[-0.2624, -0.1906,  0.2307,  ..., -0.2415, -0.1938,  0.2586],
        [ 0.2995, -0.2236,  0.2510,  ...,  0.2611, -0.2587,  0.2538],
        [-0.2148,  0.2530,  0.1566,  ..., -0.2948, -0.2114,  0.2154],
        ...,
        [-0.2718, -0.2046, -0.2598,  ...,  0.2304, -0.2566,  0.2549],
        [ 0.2062,  0.1497,  0.1927,  ..., -0.2181, -0.1925, -0.1592],
        [ 0.1954,  0.2363, -0.2902,  ...,  0.2397,  0.2675, -0.1915]])
##########################################################
decoder.blks.block0.attention2_smi.W_q.weight shape: torch.Size([128, 128])
tensor([[ 2.2664e-02, -1.3773e-01, -1.7126e-01,  ...,  4.4578e-02,
          1.3921e-01, -7.1186e-02],
        [ 6.4334e-02,  6.0232e-03, -1.0822e-01,  ...,  1.6945e-01,
          1.0937e-01,  5.6995e-02],
        [ 2.0450e-02,  5.4564e-02,  3.1692e-02,  ..., -1.0102e-04,
         -1.2778e-01, -8.0195e-02],
        ...,
        [ 8.0514e-02,  5.3552e-02,  1.5878e-01,  ...,  1.3497e-01,
          1.3870e-01,  3.9570e-02],
        [-5.1985e-02, -1.5759e-02,  3.5138e-02,  ...,  1.4844e-01,
          6.8955e-02, -3.6689e-02],
        [-8.9408e-02,  8.9596e-02,  2.1252e-01,  ...,  1.1280e-02,
          2.9036e-02,  2.6241e-02]])
tensor([[ 0.2293, -0.3479,  0.0440,  ..., -0.1334,  0.3178, -0.1059],
        [ 0.2263, -0.1784,  0.0920,  ...,  0.0118,  0.2547,  0.2090],
        [-0.1946,  0.2703, -0.1894,  ...,  0.2003, -0.3314, -0.2523],
        ...,
        [-0.1161, -0.0973, -0.0045,  ...,  0.2711,  0.0203, -0.0130],
        [ 0.1146,  0.1032, -0.1554,  ..., -0.0214, -0.1104, -0.0370],
        [ 0.0948, -0.0310,  0.3554,  ..., -0.0844,  0.0879,  0.0797]])
##########################################################
decoder.blks.block0.attention2_smi.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.0771,  0.0930,  0.2046,  ...,  0.1394,  0.0595, -0.0596],
        [ 0.0895, -0.0162,  0.0075,  ..., -0.0945,  0.0530, -0.0416],
        [ 0.1101, -0.0635, -0.0583,  ...,  0.0075,  0.0672,  0.0332],
        ...,
        [-0.0970,  0.0315,  0.0148,  ..., -0.0495,  0.0574,  0.0822],
        [ 0.1476,  0.0534, -0.0657,  ...,  0.0514,  0.0565, -0.1205],
        [ 0.0052, -0.0056,  0.1265,  ..., -0.0604, -0.2772, -0.0630]])
tensor([[-2.5775e-01,  2.0274e-01,  1.1358e-01,  ...,  1.2244e-01,
          2.0624e-01,  7.9908e-03],
        [ 2.5349e-01, -4.8019e-02,  1.9804e-01,  ..., -1.2648e-02,
         -1.3831e-01, -1.4296e-01],
        [ 2.3781e-01, -1.2584e-01, -8.6495e-03,  ..., -6.3010e-03,
          1.8291e-04, -5.8303e-02],
        ...,
        [ 3.7244e-02,  9.5448e-02,  9.5658e-04,  ..., -4.5712e-02,
         -1.6493e-02,  9.1835e-02],
        [-7.5897e-02,  1.3080e-01, -2.7675e-01,  ..., -4.3600e-02,
          1.4254e-01,  2.2949e-02],
        [-1.7061e-01,  2.3071e-02,  2.9980e-01,  ..., -3.6619e-04,
         -4.6359e-01,  2.1122e-02]])
##########################################################
decoder.blks.block0.attention2_smi.W_v.weight shape: torch.Size([128, 128])
tensor([[ 0.0338, -0.0093,  0.0002,  ..., -0.0564,  0.0956, -0.0938],
        [ 0.0930, -0.0299,  0.0360,  ...,  0.0346, -0.0410,  0.0426],
        [ 0.0018,  0.0327,  0.0084,  ...,  0.0086,  0.0103,  0.0168],
        ...,
        [-0.0547, -0.0447,  0.0971,  ...,  0.0123,  0.0032, -0.0513],
        [ 0.0402,  0.0287, -0.0333,  ...,  0.0832,  0.0399,  0.0017],
        [ 0.0400,  0.0036, -0.0120,  ..., -0.0101, -0.0592,  0.0401]])
tensor([[-0.1964, -0.2384, -0.2310,  ..., -0.2837, -0.1355, -0.3229],
        [-0.1300, -0.2515, -0.1781,  ..., -0.1825, -0.2348, -0.1809],
        [ 0.2327,  0.2615,  0.2419,  ...,  0.2348,  0.2432,  0.2456],
        ...,
        [-0.2853, -0.2736, -0.1353,  ..., -0.2145, -0.2297, -0.2802],
        [ 0.2711,  0.2570,  0.2008,  ...,  0.3070,  0.2730,  0.2300],
        [-0.1903, -0.2257, -0.2437,  ..., -0.2381, -0.2907, -0.1892]])
##########################################################
decoder.blks.block0.attention2_smi.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0167,  0.0299, -0.0140,  ..., -0.0072, -0.0074,  0.0031],
        [-0.0773,  0.0781,  0.0417,  ...,  0.0033, -0.0051,  0.0086],
        [-0.0077, -0.0585,  0.0525,  ...,  0.0736,  0.0331,  0.0062],
        ...,
        [ 0.0305,  0.0212, -0.0381,  ..., -0.0707, -0.0456,  0.0194],
        [-0.0318, -0.0334,  0.0356,  ..., -0.0183,  0.0024, -0.0152],
        [ 0.0205, -0.0589, -0.0022,  ..., -0.0222,  0.0266,  0.0022]])
tensor([[-0.3000, -0.3063,  0.2396,  ..., -0.3142,  0.2579, -0.2423],
        [ 0.2835,  0.1966, -0.3074,  ...,  0.3713, -0.3660,  0.3542],
        [-0.3132, -0.3840,  0.3027,  ..., -0.2224,  0.2942, -0.2368],
        ...,
        [-0.3136, -0.1029,  0.3145,  ..., -0.4151,  0.0840, -0.3426],
        [ 0.0890,  0.3246,  0.0116,  ...,  0.0820, -0.3493,  0.0201],
        [ 0.2777,  0.2106, -0.2387,  ...,  0.2327, -0.2133,  0.2363]])
##########################################################
decoder.blks.block0.addnorm2_smi.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.7702, 1.2303, 0.7701, 1.2335, 0.7698, 0.7712, 0.7699, 1.2299, 1.2304,
        0.7704, 0.7680, 0.7702, 0.7698, 0.7702, 1.2308, 1.2285, 1.2300, 1.2300,
        0.7703, 1.2279, 0.7702, 0.7702, 1.2302, 1.2299, 1.2296, 0.7701, 1.2298,
        1.2297, 1.2300, 1.2297, 1.2299, 1.2298, 1.2296, 0.7719, 0.7707, 0.7699,
        1.2298, 0.7766, 1.2300, 1.2302, 0.7701, 0.7544, 1.2300, 0.7701, 1.2263,
        1.2264, 1.2298, 1.2298, 0.6464, 1.2300, 1.2299, 0.7698, 1.2307, 0.7702,
        0.7714, 0.7701, 0.7704, 1.2298, 0.7711, 1.2299, 1.2299, 1.2306, 1.2292,
        0.7700, 0.7702, 0.7701, 0.7701, 1.2298, 0.7701, 0.7702, 1.2302, 0.7703,
        1.2289, 0.7715, 0.7702, 0.7700, 0.7717, 1.2298, 0.7748, 0.7703, 1.1720,
        0.7701, 1.2318, 1.2299, 0.7321, 0.7702, 0.7702, 0.7701, 1.2295, 1.2298,
        1.2319, 0.6512, 1.2303, 0.7699, 1.2298, 0.7698, 0.7695, 1.2298, 0.7697,
        0.7706, 1.2301, 0.7702, 0.7700, 0.7698, 1.2302, 0.7704, 1.2299, 1.2343,
        0.7698, 0.7702, 1.2301, 1.2299, 1.2301, 0.7668, 1.2298, 1.2302, 0.7634,
        1.2344, 0.7701, 1.2297, 0.7702, 1.2299, 1.2300, 0.7702, 1.2191, 0.7704,
        1.2280, 0.7701])
##########################################################
decoder.blks.block0.addnorm2_smi.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2297,  0.2284, -0.2297, -0.2301,  0.2301,  0.2297,  0.2296, -0.2298,
         0.2298,  0.2298,  0.2300,  0.2298, -0.2298, -0.2298,  0.2294,  0.2266,
         0.2301, -0.2299,  0.2298,  0.2306,  0.2299, -0.2298, -0.2296, -0.2299,
        -0.2300,  0.2298, -0.2299,  0.2299, -0.2299,  0.2299, -0.2298,  0.2299,
        -0.2301, -0.2296,  0.2302, -0.2290,  0.2302, -0.2277, -0.2299, -0.2290,
         0.2297, -0.2248, -0.2294,  0.2298, -0.2310, -0.2302,  0.2299, -0.2299,
        -0.2286, -0.2291,  0.2299,  0.2205,  0.2300,  0.2298, -0.2297,  0.2300,
         0.2303,  0.2296, -0.2285,  0.2302,  0.2299, -0.2299,  0.2304,  0.2298,
         0.2299, -0.2299,  0.2298, -0.2298,  0.2302,  0.2298,  0.2293, -0.2298,
        -0.2303,  0.2298, -0.2298,  0.2292,  0.2289,  0.2298,  0.2300, -0.2297,
         0.2302, -0.2299,  0.2300,  0.2323, -0.2292,  0.2299,  0.2298, -0.2299,
        -0.2295, -0.2301, -0.2297, -0.2300, -0.2297,  0.2299,  0.2301, -0.2297,
         0.2294, -0.2299, -0.2296, -0.2296,  0.2297, -0.2298,  0.2297,  0.2296,
         0.2297, -0.2298,  0.2299,  0.2268, -0.2286,  0.2298,  0.2294,  0.2298,
        -0.2307,  0.2302, -0.2303, -0.2300,  0.2300, -0.2297,  0.2298,  0.2300,
         0.2289,  0.2299, -0.2299,  0.2298, -0.2302, -0.2259, -0.2364,  0.2298])
##########################################################
decoder.blks.block0.attention2_prot.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0297,  0.0006,  0.0093,  ...,  0.0286, -0.1515,  0.0510],
        [-0.0041, -0.0991, -0.1273,  ..., -0.0158, -0.0291, -0.0346],
        [-0.0030, -0.0473,  0.0341,  ..., -0.1156,  0.0050,  0.1633],
        ...,
        [-0.0071, -0.1291,  0.1353,  ..., -0.0832, -0.0450,  0.0963],
        [-0.0904, -0.0626, -0.0348,  ..., -0.0095, -0.1200, -0.0244],
        [ 0.0812, -0.0082,  0.0338,  ..., -0.0236,  0.0245, -0.0665]])
tensor([[ 0.1271, -0.1571,  0.1696,  ..., -0.0258, -0.1378, -0.0285],
        [-0.1776,  0.0587, -0.2480,  ...,  0.0279, -0.2298, -0.1142],
        [-0.2164,  0.1612, -0.1724,  ...,  0.0395, -0.2094,  0.1762],
        ...,
        [-0.1629,  0.0633, -0.0905,  ..., -0.2405,  0.3198,  0.3533],
        [-0.2693,  0.0498, -0.2510,  ...,  0.1740, -0.0661,  0.2166],
        [-0.1169,  0.1832, -0.1851,  ...,  0.1326,  0.2883,  0.1505]])
##########################################################
decoder.blks.block0.attention2_prot.W_k.weight shape: torch.Size([128, 128])
tensor([[ 0.1398, -0.0317,  0.0485,  ...,  0.0499,  0.0542, -0.0933],
        [ 0.0238,  0.1630,  0.0691,  ...,  0.0048, -0.1106, -0.0510],
        [ 0.0576,  0.0255,  0.0923,  ...,  0.1131,  0.1923, -0.0040],
        ...,
        [ 0.1577, -0.1708,  0.0311,  ...,  0.0064, -0.1063, -0.0727],
        [ 0.0137, -0.0103,  0.0686,  ...,  0.0011,  0.0290, -0.0627],
        [ 0.0716,  0.0533, -0.0102,  ...,  0.0108,  0.0917,  0.2363]])
tensor([[ 0.3412,  0.0519, -0.1288,  ...,  0.2536,  0.2750, -0.2628],
        [ 0.1513,  0.1273,  0.0397,  ...,  0.0912, -0.2153, -0.1404],
        [ 0.2595,  0.0645, -0.0817,  ...,  0.2633,  0.4022, -0.1957],
        ...,
        [ 0.0506, -0.2759, -0.0817,  ...,  0.2410, -0.2515, -0.0833],
        [ 0.1444,  0.0149, -0.0959,  ..., -0.2229,  0.2038, -0.2117],
        [ 0.0123, -0.0167,  0.0826,  ...,  0.2295,  0.0145,  0.4879]])
##########################################################
decoder.blks.block0.attention2_prot.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0139,  0.0078,  0.0030,  ...,  0.0341, -0.0692, -0.0431],
        [-0.0449, -0.0181, -0.0088,  ..., -0.0290,  0.0460, -0.0130],
        [-0.0214, -0.0848, -0.0593,  ..., -0.0243, -0.0787,  0.0068],
        ...,
        [-0.0202, -0.0584, -0.0217,  ...,  0.0204,  0.0716,  0.0240],
        [-0.0265,  0.0630, -0.0240,  ...,  0.0211,  0.0201,  0.0115],
        [-0.0112,  0.0062, -0.0399,  ...,  0.0400, -0.0333,  0.0353]])
tensor([[-0.2154, -0.2095, -0.2238,  ..., -0.0967, -0.2586, -0.0800],
        [-0.2731, -0.2443, -0.2379,  ..., -0.2525, -0.1811, -0.2239],
        [-0.2665, -0.3072, -0.2875,  ..., -0.3101, -0.3345, -0.3324],
        ...,
        [ 0.2071,  0.1695,  0.2077,  ...,  0.2404,  0.2973,  0.2259],
        [ 0.1927,  0.2883,  0.2049,  ...,  0.2101,  0.2325,  0.1348],
        [-0.2377, -0.2189, -0.2687,  ..., -0.1770, -0.2576, -0.1575]])
##########################################################
decoder.blks.block0.attention2_prot.W_o.weight shape: torch.Size([128, 128])
tensor([[-0.0072,  0.0684, -0.0049,  ..., -0.0571, -0.0343,  0.0569],
        [-0.0247, -0.0283, -0.0250,  ..., -0.0173,  0.0148, -0.0045],
        [-0.0086, -0.0427,  0.0288,  ..., -0.0839, -0.0283,  0.0632],
        ...,
        [ 0.0117,  0.0397,  0.0524,  ..., -0.0122, -0.0032, -0.0034],
        [-0.0756,  0.0515, -0.0163,  ..., -0.0363, -0.0453,  0.0294],
        [ 0.0171,  0.0412,  0.0086,  ...,  0.0258, -0.0472, -0.0442]])
tensor([[ 0.0957, -0.0613, -0.2957,  ..., -0.2151, -0.1980,  0.0280],
        [ 0.0877,  0.0992,  0.3406,  ..., -0.1012, -0.0701,  0.1149],
        [ 0.1163, -0.1737, -0.2517,  ..., -0.2558, -0.2048,  0.0576],
        ...,
        [-0.1099, -0.1298, -0.3018,  ...,  0.1128,  0.1094, -0.3493],
        [ 0.2640,  0.3924,  0.1104,  ..., -0.3863, -0.3908,  0.3761],
        [-0.1764,  0.1616,  0.2569,  ...,  0.2360,  0.1647, -0.1673]])
##########################################################
decoder.blks.block0.addnorm2_prot.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.7691, 1.2317, 0.7685, 1.2532, 0.7699, 0.7719, 0.7659, 1.2298, 1.2296,
        0.7691, 0.7818, 0.7701, 0.7675, 0.7696, 1.2231, 1.2264, 1.2332, 1.2311,
        0.7687, 1.2341, 0.7705, 0.7698, 1.2286, 1.2304, 1.2326, 0.7698, 1.2302,
        1.2300, 1.2306, 1.2307, 1.2299, 1.2300, 1.2374, 0.7694, 0.7724, 0.7696,
        1.2302, 0.7733, 1.2316, 1.2302, 0.7698, 0.7490, 1.2251, 0.7698, 1.2662,
        1.2253, 1.2301, 1.2309, 0.8711, 1.2303, 1.2301, 0.7704, 1.2354, 0.7696,
        0.7643, 0.7700, 0.7726, 1.2280, 0.7702, 1.2306, 1.2301, 1.2332, 1.2327,
        0.7687, 0.7700, 0.7702, 0.7700, 1.2297, 0.7697, 0.7688, 1.2276, 0.7700,
        1.2292, 0.7502, 0.7701, 0.7699, 0.7659, 1.2296, 0.8231, 0.7622, 1.2871,
        0.7708, 1.2426, 1.2294, 0.6275, 0.7703, 0.7702, 0.7704, 1.2310, 1.2249,
        1.2217, 1.0508, 1.2293, 0.7706, 1.2309, 0.7667, 0.7691, 1.2300, 0.7716,
        0.7664, 1.2285, 0.7701, 0.7651, 0.7697, 1.2288, 0.7688, 1.2301, 1.2107,
        0.7685, 0.7702, 1.2208, 1.2298, 1.2300, 0.7728, 1.2310, 1.2361, 0.7735,
        1.2283, 0.7702, 1.2304, 0.7695, 1.2298, 1.2323, 0.7695, 1.2202, 0.7551,
        1.2282, 0.7688])
##########################################################
decoder.blks.block0.addnorm2_prot.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2290,  0.2235, -0.2291, -0.2308,  0.2313,  0.2289,  0.2287, -0.2296,
         0.2297,  0.2296,  0.2307,  0.2298, -0.2298, -0.2295,  0.2279,  0.2164,
         0.2311, -0.2301,  0.2298,  0.2332,  0.2300, -0.2297, -0.2286, -0.2301,
        -0.2306,  0.2296, -0.2303,  0.2301, -0.2303,  0.2302, -0.2297,  0.2303,
        -0.2310, -0.2285,  0.2318, -0.2252,  0.2314, -0.2174, -0.2302, -0.2260,
         0.2291, -0.1962, -0.2278,  0.2295, -0.2348, -0.2313,  0.2302, -0.2301,
        -0.2243, -0.2265,  0.2301,  0.1961,  0.2307,  0.2298, -0.2293,  0.2308,
         0.2323,  0.2289, -0.2222,  0.2311,  0.2299, -0.2301,  0.2324,  0.2296,
         0.2302, -0.2299,  0.2297, -0.2296,  0.2319,  0.2295,  0.2276, -0.2296,
        -0.2317,  0.2296, -0.2298,  0.2266,  0.2249,  0.2296,  0.2306, -0.2292,
         0.2315, -0.2301,  0.2304,  0.2324, -0.2262,  0.2300,  0.2297, -0.2300,
        -0.2285, -0.2311, -0.2292, -0.2305, -0.2291,  0.2300,  0.2310, -0.2289,
         0.2275, -0.2299, -0.2283, -0.2286,  0.2290, -0.2298,  0.2292,  0.2284,
         0.2291, -0.2298,  0.2299,  0.2179, -0.2227,  0.2299,  0.2280,  0.2297,
        -0.2345,  0.2316, -0.2319, -0.2305,  0.2307, -0.2294,  0.2294,  0.2307,
         0.2252,  0.2299, -0.2299,  0.2295, -0.2314, -0.2049, -0.2636,  0.2296])
##########################################################
decoder.blks.block0.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[ 0.0176, -0.0188, -0.0191,  ...,  0.0453, -0.0555, -0.1275],
        [ 0.0490,  0.0282,  0.0366,  ...,  0.0416,  0.0630, -0.1125],
        [ 0.0213, -0.0290, -0.0886,  ...,  0.0178,  0.0454,  0.0297],
        ...,
        [-0.0114,  0.0688,  0.0153,  ...,  0.0220, -0.0250, -0.0263],
        [ 0.0029,  0.0275, -0.0363,  ..., -0.0363,  0.0442,  0.0787],
        [-0.0246, -0.0112, -0.0571,  ...,  0.0145, -0.0320, -0.0093]])
tensor([[ 0.2470,  0.2110, -0.2491,  ..., -0.1845,  0.1743,  0.1023],
        [ 0.2786, -0.2020,  0.2636,  ...,  0.2673, -0.1666,  0.1239],
        [ 0.2847,  0.2015, -0.3152,  ..., -0.1972,  0.2747, -0.2056],
        ...,
        [-0.2197,  0.3460, -0.1438,  ...,  0.3202, -0.2633,  0.1850],
        [-0.2212, -0.1681, -0.2534,  ...,  0.2034, -0.1892, -0.2771],
        [ 0.2054,  0.2190,  0.1729,  ..., -0.2050,  0.1978, -0.2395]])
##########################################################
decoder.blks.block0.ffn.dense1.bias shape: torch.Size([64])
tensor([ 0.0732,  0.0187, -0.0239, -0.0533, -0.0874,  0.0082, -0.0709, -0.0863,
        -0.0376, -0.0488, -0.0515,  0.0614,  0.0568, -0.0693, -0.0216,  0.0580,
        -0.0630,  0.0239,  0.0817,  0.0388,  0.0688,  0.0209, -0.0867, -0.0260,
         0.0014, -0.0301, -0.0249,  0.0462,  0.0474,  0.0595, -0.0798, -0.0309,
        -0.0717, -0.0606,  0.0585,  0.0601,  0.0484,  0.0199, -0.0104,  0.0049,
         0.0352, -0.0649, -0.0853,  0.0405, -0.0506,  0.0148,  0.0357,  0.0535,
        -0.0669,  0.0712,  0.0311,  0.0102, -0.0340, -0.0859, -0.0459, -0.0389,
        -0.0594, -0.0815, -0.0239, -0.0418, -0.0120, -0.0239, -0.0155,  0.0629])
tensor([-0.1567, -0.2106, -0.2544,  0.1782, -0.3166, -0.2214, -0.3007,  0.0753,
        -0.2377, -0.2756, -0.2809,  0.2983,  0.2870, -0.2993,  0.2083, -0.1719,
         0.1629, -0.1992,  0.3084,  0.2686, -0.1598, -0.2083, -0.3162,  0.2044,
        -0.2284,  0.1973,  0.1355, -0.1768, -0.1815,  0.2900,  0.1494,  0.1878,
         0.1313,  0.1635,  0.2694,  0.2919,  0.2784, -0.2100, -0.2409,  0.2347,
        -0.1933,  0.1649,  0.1446, -0.1964, -0.2804, -0.2151, -0.1941,  0.2789,
        -0.2968,  0.3021,  0.2718,  0.2432, -0.2635,  0.1435, -0.0360,  0.1908,
        -0.3012,  0.1476,  0.2059, -0.2716, -0.2379,  0.1910,  0.2109, -0.1671])
##########################################################
decoder.blks.block0.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[-0.0306,  0.0082, -0.0395,  ...,  0.0327,  0.1201,  0.0335],
        [-0.0239,  0.0148,  0.0181,  ..., -0.0758,  0.0203, -0.0134],
        [-0.0054,  0.0349, -0.0300,  ...,  0.0192, -0.0169,  0.0511],
        ...,
        [-0.0105, -0.0066,  0.0307,  ...,  0.0157,  0.0291,  0.0162],
        [ 0.0180,  0.0190, -0.0062,  ..., -0.0497,  0.0127, -0.0613],
        [-0.0105,  0.0167,  0.0414,  ...,  0.0268, -0.0564,  0.0127]])
tensor([[-0.2604, -0.2213, -0.2684,  ..., -0.1836, -0.1052, -0.1961],
        [-0.2539,  0.2373,  0.2412,  ...,  0.0576,  0.2003,  0.2160],
        [-0.2353, -0.1945, -0.2557,  ..., -0.1980, -0.2415, -0.1786],
        ...,
        [-0.2402, -0.2308, -0.1924,  ...,  0.3254,  0.3488,  0.2467],
        [ 0.2474,  0.2474,  0.2186,  ..., -0.0723,  0.2258, -0.2923],
        [ 0.2193,  0.2465,  0.2699,  ...,  0.2464,  0.1710,  0.2425]])
##########################################################
decoder.blks.block0.ffn.dense2.bias shape: torch.Size([128])
tensor([-0.0013,  0.1103,  0.0022,  0.0144, -0.0677,  0.0225,  0.0320,  0.0773,
         0.0849,  0.1167,  0.0204,  0.0839,  0.1023, -0.0665, -0.0323, -0.1061,
         0.0432,  0.1040, -0.1048,  0.1186,  0.0596,  0.0383,  0.0243,  0.0085,
         0.0715, -0.0726, -0.0611, -0.0713,  0.0845,  0.0814,  0.1121, -0.0522,
         0.0737,  0.1120,  0.1040, -0.0674,  0.0278,  0.0936, -0.0669,  0.1191,
         0.1212,  0.0794, -0.0839, -0.1082,  0.0093,  0.0422, -0.0616, -0.0991,
         0.1156,  0.0746, -0.0767, -0.0416,  0.0089, -0.0049, -0.0269, -0.0911,
        -0.0598,  0.1090,  0.0618,  0.0360,  0.0851,  0.0960,  0.0178, -0.0593,
        -0.1162,  0.0036, -0.0406, -0.0010,  0.0980,  0.0068,  0.0057, -0.0559,
        -0.0802,  0.0343,  0.0872, -0.0950, -0.0338,  0.0219, -0.0115, -0.0279,
        -0.0273, -0.0977,  0.0821, -0.0343,  0.0828,  0.1050,  0.0441, -0.1001,
        -0.0235,  0.0241, -0.1016, -0.0962,  0.0023, -0.0909, -0.0125,  0.0530,
        -0.0310, -0.0045, -0.1212, -0.0795,  0.0622, -0.0622, -0.0926, -0.0682,
        -0.0786,  0.0152, -0.0610,  0.0051,  0.0117, -0.1146, -0.0556, -0.0384,
        -0.0502, -0.0213,  0.0892,  0.0488, -0.0360,  0.0238,  0.0451, -0.0516,
        -0.0813,  0.0910, -0.1111, -0.1139, -0.0418, -0.1086,  0.0010, -0.0046])
tensor([-0.2306,  0.3264, -0.2271, -0.2162,  0.1621,  0.2517,  0.2612, -0.1540,
         0.3141,  0.3470,  0.2514,  0.3135, -0.1275, -0.2957,  0.1970,  0.1068,
         0.2745, -0.1262,  0.1249,  0.3522,  0.2892, -0.1913, -0.2044, -0.2221,
        -0.1589,  0.1571, -0.2915,  0.1592, -0.1459,  0.3118, -0.1183,  0.1698,
        -0.1574, -0.1168,  0.3352, -0.2944,  0.2592, -0.1301, -0.2971, -0.1070,
         0.3506, -0.1299, -0.3115,  0.1206, -0.2255, -0.1875,  0.1695, -0.3293,
        -0.1055, -0.1534,  0.1544, -0.4103,  0.2397,  0.2248, -0.2558,  0.1377,
         0.1726,  0.3376, -0.1553,  0.2675,  0.3156, -0.1340,  0.2500,  0.1703,
         0.1134, -0.2258,  0.1889, -0.2313,  0.3214,  0.2363,  0.2340, -0.2854,
        -0.3124,  0.2630, -0.1419,  0.1319,  0.1925,  0.2520,  0.2189, -0.2574,
         0.2043, -0.3274,  0.3122,  0.2346, -0.1420,  0.3348,  0.2738, -0.3297,
        -0.2527, -0.2067, -0.3305, -0.3267, -0.2266,  0.1388,  0.2199, -0.1765,
         0.1963, -0.2347, -0.3493, -0.3088,  0.2912, -0.2915,  0.1365,  0.1596,
         0.1505, -0.2140,  0.1693, -0.2367, -0.1967,  0.1152,  0.1726,  0.1914,
         0.1786,  0.2081, -0.1442, -0.1816,  0.1936, -0.2053,  0.2747,  0.1794,
         0.1449,  0.3213, -0.3411,  0.1150, -0.2708,  0.1300,  0.2063,  0.2249])
##########################################################
decoder.blks.block0.addnorm3.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.7674, 1.2290, 0.7639, 1.2761, 0.7702, 0.7568, 0.7574, 1.2360, 1.2085,
        1.0323, 1.3288, 0.7691, 0.7667, 0.7665, 1.2277, 1.2210, 1.2403, 1.2347,
        0.7689, 1.2491, 0.7675, 0.7674, 1.2246, 1.2368, 1.2344, 0.7696, 1.2338,
        1.2339, 1.2334, 1.2349, 1.2318, 1.2226, 1.2468, 0.7582, 0.7805, 0.7670,
        1.2306, 0.7671, 1.2339, 1.2293, 0.7678, 0.7437, 1.2128, 0.7641, 1.2743,
        1.2284, 1.2356, 1.2332, 1.0672, 1.2259, 1.2417, 0.7702, 1.2491, 0.7689,
        0.7126, 0.7698, 0.7729, 1.2269, 0.7628, 1.2322, 1.2353, 1.2412, 1.2404,
        0.7656, 0.7699, 0.7657, 0.7678, 1.2338, 0.7711, 0.7662, 1.2251, 0.7647,
        1.2317, 0.6342, 0.7682, 0.7694, 0.7625, 1.2305, 0.8181, 0.6562, 1.0220,
        0.7686, 1.2378, 1.2271, 0.6945, 0.7687, 0.7700, 0.7684, 1.2292, 1.2467,
        1.1450, 1.0383, 1.2267, 0.7689, 1.2368, 0.7654, 0.7639, 1.2339, 0.7535,
        0.7468, 1.2242, 0.7596, 0.7620, 0.7669, 1.2261, 0.7446, 1.2535, 1.2105,
        0.7679, 0.7696, 1.1941, 1.2292, 1.2296, 0.7570, 1.2334, 1.2468, 0.7666,
        1.1597, 0.7701, 1.2343, 0.7678, 1.2322, 1.2361, 0.7672, 1.2198, 0.7568,
        1.2293, 0.7634])
##########################################################
decoder.blks.block0.addnorm3.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2283,  0.1982, -0.2277, -0.2320,  0.2293,  0.2279,  0.2276, -0.2342,
         0.2285,  0.2311,  0.2331,  0.2293, -0.2296, -0.2277,  0.2288,  0.1906,
         0.2335, -0.2309,  0.2296,  0.2396,  0.2293, -0.2288, -0.2269, -0.2318,
        -0.2315,  0.2295, -0.2313,  0.2314, -0.2315,  0.2314, -0.2317,  0.2186,
        -0.2335, -0.2265,  0.2344, -0.2205,  0.2337, -0.2112, -0.2309, -0.2192,
         0.2286, -0.0898, -0.2243,  0.2266, -0.2424, -0.2291,  0.2332, -0.2309,
        -0.2070, -0.2249,  0.2329,  0.1899,  0.2327,  0.2296, -0.2267,  0.2261,
         0.2373,  0.2273, -0.1987,  0.2342,  0.2314, -0.2304,  0.2362,  0.2289,
         0.2291, -0.2282,  0.2287, -0.2311,  0.2075,  0.2288,  0.2254, -0.2284,
        -0.2354,  0.2262, -0.2276,  0.2198,  0.2187,  0.2305,  0.2316, -0.2290,
         0.2354, -0.2294,  0.2305,  0.3301, -0.2145,  0.2295,  0.2295, -0.2292,
        -0.2283, -0.2326, -0.2276, -0.2319, -0.2277,  0.2299,  0.2359, -0.2288,
         0.2236, -0.2307, -0.2240, -0.2280,  0.2276, -0.2282,  0.2275,  0.2237,
         0.2280, -0.2276,  0.2311, -0.2626, -0.2052,  0.2296,  0.2251,  0.2295,
         0.2272,  0.2287, -0.2366, -0.2314,  0.2292, -0.2282,  0.2294,  0.2329,
         0.2155,  0.2310, -0.2302,  0.2272, -0.2282,  0.2803,  0.1815,  0.2287])
##########################################################
decoder.blks.block1.addnorm1.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.7675, 1.2300, 0.7696, 0.7965, 0.7703, 0.7653, 0.7648, 1.2363, 1.1740,
        1.3029, 1.2545, 0.7712, 0.7606, 0.7686, 1.2233, 1.2017, 1.2420, 1.2387,
        0.7704, 1.2455, 0.7671, 0.7688, 1.2250, 1.2395, 1.2360, 0.7697, 1.2360,
        1.2341, 1.2365, 1.2369, 1.2333, 1.2240, 1.2426, 0.7636, 0.7732, 0.7692,
        1.2297, 0.7649, 1.2334, 1.2269, 0.7703, 0.7455, 1.2115, 0.7682, 1.2538,
        1.2372, 1.2314, 1.2332, 1.1784, 1.2287, 1.2443, 0.7703, 1.2572, 0.7677,
        0.7486, 0.7699, 0.7743, 1.2275, 0.7654, 1.2297, 1.2337, 1.2479, 1.2466,
        0.7654, 0.7699, 0.7655, 0.7697, 1.2353, 0.7705, 0.7630, 1.2140, 0.7658,
        1.2309, 1.1197, 0.7693, 0.7705, 0.7686, 1.2299, 0.8710, 1.0373, 1.3366,
        0.7686, 1.2470, 1.2302, 1.1031, 0.7687, 0.7711, 0.7687, 1.2252, 1.2512,
        0.6498, 1.2703, 1.2250, 0.7632, 1.2435, 0.7652, 0.7670, 1.2341, 0.7680,
        0.7432, 1.2237, 0.7489, 0.7663, 0.7566, 1.2282, 0.7618, 1.3055, 1.2303,
        0.7691, 0.7697, 1.1903, 1.2284, 1.2302, 0.7444, 1.2320, 1.2419, 0.7695,
        0.7134, 0.7704, 1.2327, 0.7694, 1.2348, 1.2526, 0.7692, 1.2201, 0.7819,
        1.2246, 0.7666])
##########################################################
decoder.blks.block1.addnorm1.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.2279,  0.1490, -0.2295, -0.2314,  0.2315,  0.2290,  0.2290, -0.2336,
         0.2272,  0.2337,  0.2334,  0.2304, -0.2292, -0.2283,  0.2143,  0.2130,
         0.2333, -0.2312,  0.2299,  0.2929,  0.2290, -0.2286, -0.2268, -0.2324,
        -0.2319,  0.2295, -0.2318,  0.2319, -0.2326,  0.2312, -0.2321,  0.2188,
        -0.2320, -0.2280,  0.2315, -0.2279,  0.2339, -0.2219, -0.2309, -0.1837,
         0.2299, -0.2171, -0.2265,  0.2278, -0.2402, -0.2315,  0.2324, -0.2312,
        -0.2241, -0.2280,  0.2343,  0.2282,  0.2314,  0.2292, -0.2261,  0.2293,
         0.2554,  0.2225, -0.1931,  0.2295,  0.2312, -0.2305,  0.2357,  0.2289,
         0.2294, -0.2286,  0.2297, -0.2318, -0.2396,  0.2280,  0.2262, -0.2291,
        -0.2327,  0.2276, -0.2290,  0.2174, -0.2786,  0.2301,  0.2329, -0.2284,
         0.2326, -0.2291,  0.2303, -0.2298,  0.2728,  0.2295,  0.2305, -0.2289,
        -0.2275, -0.2325, -0.2279, -0.2327, -0.2275,  0.2280,  0.2497, -0.2284,
         0.2292, -0.2308, -0.2200, -0.2289,  0.2284, -0.2273,  0.2287,  0.2219,
         0.2291, -0.2291,  0.2315, -0.2589, -0.0491,  0.2295,  0.2252,  0.2292,
         0.2303,  0.2276, -0.2330, -0.2310,  0.2293, -0.2281,  0.2308,  0.2321,
         0.2271,  0.2313, -0.2305,  0.2285, -0.2282,  0.2417,  0.2007,  0.2289])
##########################################################
decoder.blks.block1.attention1.W_q.weight shape: torch.Size([128, 128])
tensor([[ 0.1323, -0.0032,  0.1011,  ...,  0.0105,  0.0041,  0.0120],
        [ 0.1462,  0.0151,  0.0484,  ...,  0.0482, -0.0149,  0.0885],
        [ 0.0117, -0.0448, -0.0080,  ...,  0.1081,  0.0069, -0.0520],
        ...,
        [-0.1428, -0.0383, -0.0977,  ..., -0.0400,  0.0763, -0.0518],
        [-0.2784,  0.0500,  0.1308,  ...,  0.0683,  0.0571,  0.0725],
        [ 0.1109,  0.0649,  0.0377,  ..., -0.0539, -0.0500, -0.1063]])
tensor([[ 0.3461,  0.2271, -0.1306,  ..., -0.2185,  0.2342,  0.2444],
        [ 0.3757, -0.2131,  0.2785,  ..., -0.1808,  0.2150, -0.1416],
        [ 0.2452,  0.1782,  0.2526,  ...,  0.0668, -0.2278,  0.1685],
        ...,
        [ 0.1058,  0.1912, -0.3244,  ..., -0.2693, -0.1537,  0.1767],
        [-0.5098, -0.1796,  0.3602,  ...,  0.2978,  0.2869, -0.1566],
        [ 0.3342, -0.1640,  0.2642,  ..., -0.2912,  0.1832, -0.2079]])
##########################################################
decoder.blks.block1.attention1.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.0295,  0.1024,  0.0908,  ...,  0.0269,  0.0652, -0.0914],
        [-0.0727,  0.1054, -0.0771,  ..., -0.0397, -0.0385,  0.0128],
        [-0.1074,  0.0508, -0.1888,  ..., -0.0387,  0.0596, -0.0920],
        ...,
        [-0.0493,  0.0140, -0.0439,  ..., -0.0732, -0.0282,  0.0740],
        [ 0.0561, -0.1816,  0.0199,  ...,  0.0276,  0.0350, -0.0274],
        [-0.0689, -0.0953, -0.0258,  ...,  0.1542, -0.0198, -0.0111]])
tensor([[ 0.2003, -0.1290,  0.3207,  ..., -0.2048,  0.2953, -0.3201],
        [ 0.1572,  0.3319,  0.1526,  ..., -0.2698,  0.1911, -0.2145],
        [ 0.1222, -0.1864,  0.0414,  ..., -0.2765,  0.2901,  0.1501],
        ...,
        [-0.2796,  0.2469,  0.2592,  ..., -0.3027, -0.2586,  0.3025],
        [-0.1758, -0.4098,  0.2687,  ..., -0.2020,  0.2630,  0.1957],
        [ 0.1606,  0.1344,  0.2025,  ...,  0.3839,  0.2136, -0.2405]])
##########################################################
decoder.blks.block1.attention1.W_v.weight shape: torch.Size([128, 128])
tensor([[ 0.0716,  0.0153,  0.0316,  ...,  0.0292,  0.0070, -0.0296],
        [-0.0387, -0.0047, -0.0408,  ...,  0.0178, -0.0194, -0.1146],
        [-0.0200,  0.0739, -0.0066,  ...,  0.0445, -0.0357, -0.0222],
        ...,
        [ 0.0594,  0.0085,  0.0292,  ...,  0.0399, -0.0165,  0.0011],
        [-0.0634,  0.0007,  0.0325,  ..., -0.0170, -0.0139, -0.0343],
        [ 0.0576,  0.0350, -0.0239,  ..., -0.0159, -0.0158,  0.0378]])
tensor([[ 0.3900, -0.2168,  0.2660,  ..., -0.1989,  0.2365, -0.2679],
        [ 0.0886, -0.2323,  0.1766,  ..., -0.2207, -0.2485,  0.1314],
        [ 0.1998,  0.3047, -0.2454,  ...,  0.2686,  0.1947, -0.2326],
        ...,
        [-0.2435, -0.2178,  0.2272,  ...,  0.2622, -0.2455,  0.2931],
        [ 0.1531,  0.2406, -0.2371,  ...,  0.2103, -0.2091,  0.2236],
        [ 0.1661,  0.2983, -0.0610,  ...,  0.2029, -0.2436, -0.0341]])
##########################################################
decoder.blks.block1.attention1.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0247, -0.0139,  0.0278,  ..., -0.0275,  0.0016, -0.0396],
        [-0.0247,  0.0318, -0.0524,  ..., -0.0365, -0.0013, -0.0635],
        [-0.0119, -0.0278,  0.0412,  ...,  0.0301,  0.0195,  0.0760],
        ...,
        [-0.0057, -0.0529, -0.0039,  ..., -0.0521, -0.0501,  0.0225],
        [ 0.0418, -0.0105,  0.0106,  ...,  0.0194, -0.0214,  0.0606],
        [-0.0163, -0.0149, -0.0061,  ..., -0.0055,  0.0240, -0.0180]])
tensor([[ 0.2322,  0.2187,  0.2535,  ..., -0.2594, -0.1995,  0.1972],
        [ 0.2368,  0.2325, -0.2349,  ..., -0.2287, -0.3695, -0.4175],
        [ 0.2153,  0.2027,  0.2701,  ..., -0.2003, -0.2029,  0.3077],
        ...,
        [-0.2823,  0.2094, -0.2514,  ..., -0.2879,  0.3037,  0.3099],
        [ 0.3538, -0.2472, -0.1775,  ...,  0.2543, -0.1053, -0.1916],
        [-0.2374, -0.2459, -0.2340,  ...,  0.2255,  0.2368, -0.2516]])
##########################################################
decoder.blks.block1.attention2_smi.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0184, -0.0082, -0.0871,  ...,  0.0115, -0.1813, -0.1619],
        [ 0.1779,  0.0474,  0.0951,  ..., -0.0103,  0.0526, -0.0762],
        [ 0.0376,  0.0279,  0.0225,  ...,  0.0916,  0.0366, -0.0829],
        ...,
        [ 0.0128,  0.0122,  0.0521,  ...,  0.0149,  0.0074, -0.0649],
        [-0.1096,  0.0595,  0.0353,  ..., -0.0226,  0.1109,  0.0214],
        [-0.1234,  0.1681, -0.0583,  ...,  0.0527,  0.0156,  0.0327]])
tensor([[ 0.2855,  0.0061,  0.2529,  ..., -0.2301, -0.4024, -0.4777],
        [ 0.4846,  0.1574,  0.4099,  ..., -0.3643,  0.0585, -0.2320],
        [ 0.3926, -0.2538,  0.3759,  ..., -0.2053, -0.1218, -0.2556],
        ...,
        [ 0.0969,  0.3500,  0.1201,  ..., -0.2603,  0.0877, -0.1914],
        [-0.2034, -0.4322, -0.2358,  ...,  0.3827,  0.0349,  0.3298],
        [-0.1588,  0.2479, -0.2941,  ...,  0.2064,  0.0663,  0.1782]])
##########################################################
decoder.blks.block1.attention2_smi.W_k.weight shape: torch.Size([128, 128])
tensor([[ 0.0687, -0.0966,  0.1862,  ...,  0.0802,  0.0441,  0.1766],
        [ 0.0908,  0.0503,  0.0518,  ..., -0.0396,  0.0767, -0.0386],
        [-0.0493,  0.0007, -0.0635,  ..., -0.0480, -0.0780,  0.0390],
        ...,
        [-0.0958, -0.0460,  0.0738,  ..., -0.0893, -0.0545, -0.1544],
        [ 0.0111,  0.1047,  0.0471,  ..., -0.0069, -0.0345,  0.0597],
        [ 0.0231,  0.1213, -0.1499,  ...,  0.0771,  0.0405,  0.0952]])
tensor([[ 0.2076, -0.0357,  0.4338,  ...,  0.1543,  0.2781,  0.1089],
        [ 0.4158, -0.0247,  0.3836,  ...,  0.1294,  0.1963,  0.0097],
        [-0.2699, -0.2344, -0.3631,  ...,  0.1905, -0.1156,  0.1374],
        ...,
        [ 0.0735, -0.3972,  0.1832,  ..., -0.2518,  0.2658, -0.0698],
        [-0.1173,  0.3339, -0.0843,  ..., -0.0714, -0.1831, -0.1415],
        [ 0.1072,  0.0138, -0.0798,  ..., -0.0686,  0.3537,  0.1893]])
##########################################################
decoder.blks.block1.attention2_smi.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0384, -0.0373,  0.0397,  ...,  0.0295, -0.0220,  0.0479],
        [ 0.0090,  0.0818, -0.0007,  ...,  0.0484, -0.0342, -0.0320],
        [ 0.0296, -0.0242,  0.0531,  ..., -0.0749, -0.0697, -0.1095],
        ...,
        [-0.0167, -0.0140, -0.0491,  ...,  0.0126,  0.0306, -0.0410],
        [ 0.0354,  0.0484, -0.0181,  ...,  0.0840,  0.0145,  0.0654],
        [-0.0193,  0.0336, -0.0106,  ..., -0.0428,  0.0347,  0.0139]])
tensor([[ 0.1585,  0.1764,  0.1456,  ...,  0.2510,  0.1071,  0.2783],
        [-0.1914, -0.3936, -0.0072,  ..., -0.3440, -0.2034, -0.2552],
        [ 0.2685,  0.2487,  0.3163,  ...,  0.1699,  0.1872,  0.1203],
        ...,
        [-0.2588, -0.2745, -0.3187,  ..., -0.1820, -0.2395, -0.2686],
        [-0.1727, -0.2117, -0.1571,  ..., -0.0933, -0.1502, -0.1631],
        [ 0.2079,  0.2473,  0.2100,  ...,  0.2759,  0.2550,  0.2453]])
##########################################################
decoder.blks.block1.attention2_smi.W_o.weight shape: torch.Size([128, 128])
tensor([[-0.0336, -0.0493, -0.0131,  ..., -0.0129,  0.0207, -0.0078],
        [ 0.0519, -0.0429,  0.0563,  ...,  0.0099, -0.0371,  0.0522],
        [ 0.0002, -0.0080, -0.0495,  ...,  0.0012, -0.0144,  0.0361],
        ...,
        [-0.0194, -0.0150, -0.0846,  ..., -0.0463, -0.0072,  0.0071],
        [ 0.0020, -0.0049, -0.0615,  ..., -0.0250,  0.0449,  0.0068],
        [-0.0032,  0.0273, -0.0066,  ...,  0.0120, -0.0228, -0.0757]])
tensor([[ 0.0878, -0.4118,  0.3543,  ..., -0.3580, -0.3508,  0.1089],
        [-0.0785,  0.2978, -0.2834,  ...,  0.3504,  0.3048, -0.0772],
        [ 0.0543, -0.3642,  0.2888,  ..., -0.3694, -0.3248,  0.0632],
        ...,
        [ 0.3233, -0.1416,  0.0407,  ..., -0.1775, -0.1283,  0.3512],
        [-0.1299,  0.3375, -0.4061,  ...,  0.1063,  0.3890, -0.1264],
        [-0.1103,  0.3998, -0.3789,  ...,  0.3592,  0.3420, -0.1725]])
##########################################################
decoder.blks.block1.addnorm2_smi.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.7134, 1.1138, 0.7656, 1.0759, 0.7984, 0.6727, 0.7152, 1.3347, 0.9490,
        1.3438, 1.3687, 0.7979, 0.6705, 0.7353, 0.9640, 0.9993, 1.3318, 1.3204,
        0.7781, 1.3718, 0.7184, 0.7137, 1.1603, 1.3266, 1.2898, 0.7602, 1.3146,
        1.3226, 1.3032, 1.2951, 1.2810, 1.1407, 1.3425, 0.6727, 0.8183, 0.7348,
        1.2483, 0.6543, 1.2780, 1.2241, 0.7743, 0.6510, 1.0624, 0.7349, 1.3728,
        1.3384, 1.2823, 1.2752, 0.9974, 1.1889, 1.3752, 0.7633, 1.3549, 0.7327,
        0.6383, 0.7699, 0.8832, 1.1919, 0.6488, 1.2292, 1.2897, 1.3710, 1.3671,
        0.6852, 0.7648, 0.7090, 0.7658, 1.3030, 0.8004, 0.6605, 1.0462, 0.7307,
        1.2779, 0.9201, 0.7598, 0.7126, 0.9958, 1.2335, 1.1145, 0.6546, 1.3399,
        0.7407, 1.3410, 1.2440, 0.9915, 0.7471, 0.7833, 0.7309, 1.1642, 1.3655,
        0.6534, 1.3587, 1.1437, 0.6689, 1.3752, 0.6808, 0.7284, 1.2932, 0.6370,
        0.6557, 1.1609, 0.6326, 0.7201, 0.6540, 1.2096, 0.6933, 1.3526, 1.3277,
        0.7528, 0.7516, 0.9259, 1.2108, 1.2476, 0.6778, 1.2749, 1.3322, 0.7395,
        0.6360, 0.7769, 1.2792, 0.7480, 1.2645, 1.3684, 0.7508, 1.0363, 0.9998,
        1.1931, 0.7269])
##########################################################
decoder.blks.block1.addnorm2_smi.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.9100e-01, -1.0153e-01, -2.2408e-01, -2.6415e-01,  2.6340e-01,
         2.1353e-01,  2.1040e-01, -2.9169e-01,  1.8306e-01,  2.9006e-01,
         2.8561e-01,  2.4275e-01, -2.1733e-01, -1.9942e-01,  1.2122e-02,
        -2.4236e-04,  2.8329e-01, -2.5300e-01,  2.3161e-01,  3.6143e-01,
         2.1169e-01, -2.0512e-01, -1.7611e-01, -2.7162e-01, -2.6700e-01,
         2.2271e-01, -2.6304e-01,  2.6424e-01, -2.7526e-01,  2.5135e-01,
        -2.6714e-01,  4.9675e-02, -2.6702e-01, -1.9207e-01,  2.6415e-01,
        -1.9287e-01,  2.9328e-01, -7.2367e-02, -2.4837e-01,  8.7051e-02,
         2.3169e-01, -1.3768e-02, -1.7211e-01,  1.9013e-01, -3.5063e-01,
        -2.6436e-01,  2.7105e-01, -2.5337e-01, -1.3499e-01, -1.9730e-01,
         2.9652e-01,  1.8861e-01,  2.6062e-01,  2.1564e-01, -1.5233e-01,
         2.2155e-01,  3.7103e-01,  1.0170e-01,  8.2022e-02,  2.2285e-01,
         2.5299e-01, -2.4179e-01,  3.1513e-01,  2.1017e-01,  2.2170e-01,
        -2.0620e-01,  2.2635e-01, -2.6484e-01, -3.5307e-01,  1.8889e-01,
         1.6419e-01, -2.2065e-01, -2.7789e-01,  1.8955e-01, -2.1504e-01,
         2.0255e-02, -3.6313e-01,  2.3376e-01,  2.8888e-01, -2.0117e-01,
         2.7509e-01, -2.1678e-01,  2.3820e-01, -2.4865e-01,  3.6672e-01,
         2.2263e-01,  2.4141e-01, -2.1289e-01, -1.8825e-01, -2.7479e-01,
        -1.9192e-01, -2.7621e-01, -1.9124e-01,  1.9120e-01,  3.7144e-01,
        -2.0079e-01,  2.1422e-01, -2.4685e-01, -4.9319e-02, -2.1305e-01,
         2.0519e-01, -1.7808e-01,  2.0711e-01,  7.2952e-02,  2.1768e-01,
        -2.1551e-01,  2.5666e-01, -3.5682e-01,  1.2977e-01,  2.2206e-01,
         1.4929e-01,  2.1912e-01,  2.3956e-01,  1.8349e-01, -2.8129e-01,
        -2.5074e-01,  2.2021e-01, -1.9477e-01,  2.5466e-01,  2.6646e-01,
         1.7216e-01,  2.5441e-01, -2.4167e-01,  2.0169e-01, -2.0630e-01,
         3.6429e-01, -5.9409e-02,  2.1035e-01])
##########################################################
decoder.blks.block1.attention2_prot.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.1194, -0.0153,  0.0416,  ...,  0.0458,  0.0811,  0.0951],
        [ 0.0087, -0.0831, -0.0361,  ..., -0.1241, -0.0134,  0.1635],
        [-0.0364, -0.0751,  0.1355,  ...,  0.0406,  0.0766, -0.1183],
        ...,
        [ 0.1147,  0.1643,  0.0432,  ..., -0.0430, -0.1731,  0.0063],
        [ 0.0075,  0.0779, -0.1349,  ...,  0.0872, -0.0597, -0.0616],
        [ 0.0403, -0.0212, -0.1225,  ...,  0.0398,  0.1247, -0.0276]])
tensor([[-0.1494,  0.0624, -0.1508,  ..., -0.1929,  0.1499, -0.0477],
        [-0.5670,  0.5290, -0.4532,  ..., -0.4189,  0.6303,  0.6952],
        [ 0.2721, -0.2838,  0.1818,  ..., -0.1032,  0.0115, -0.4300],
        ...,
        [-0.2098,  0.4372, -0.2785,  ...,  0.3595, -0.1957,  0.2756],
        [-0.3087,  0.3787, -0.4617,  ...,  0.2922,  0.1688,  0.2945],
        [ 0.2864, -0.2162,  0.1896,  ..., -0.4664,  0.0885, -0.1717]])
##########################################################
decoder.blks.block1.attention2_prot.W_k.weight shape: torch.Size([128, 128])
tensor([[ 0.0011, -0.0262,  0.0230,  ..., -0.0534, -0.0390,  0.1625],
        [ 0.0650,  0.0793, -0.0061,  ..., -0.0790,  0.0086, -0.0677],
        [ 0.0296, -0.0090,  0.0404,  ..., -0.0864, -0.0736,  0.0182],
        ...,
        [-0.1065, -0.0238,  0.1051,  ...,  0.0651, -0.1438,  0.0089],
        [ 0.0428, -0.0527, -0.0971,  ...,  0.1259,  0.0005, -0.0445],
        [-0.0379,  0.0304,  0.1550,  ..., -0.1455,  0.1750,  0.0714]])
tensor([[ 0.3268,  0.0592, -0.1550,  ...,  0.3988,  0.4349,  0.3533],
        [ 0.4045,  0.6136, -0.0459,  ..., -0.0821, -0.1633,  0.0838],
        [ 0.1301, -0.0333,  0.0440,  ...,  0.2023,  0.1901,  0.3382],
        ...,
        [-0.4429, -1.0572, -1.4266,  ..., -0.2785, -0.4977, -0.1709],
        [-0.2905,  0.2900,  0.2307,  ...,  0.0097, -0.0998, -0.3784],
        [-0.3740,  0.5213,  2.0445,  ..., -0.4764, -0.1547, -0.0675]])
##########################################################
decoder.blks.block1.attention2_prot.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0077, -0.0453, -0.0157,  ...,  0.0150,  0.0599, -0.0417],
        [ 0.0368, -0.0187,  0.0887,  ..., -0.0331,  0.0260, -0.0313],
        [-0.0412, -0.0316,  0.0010,  ..., -0.0536,  0.0181,  0.0325],
        ...,
        [-0.0097, -0.0097, -0.0599,  ...,  0.0158, -0.0068,  0.0162],
        [-0.0149, -0.0001,  0.0590,  ...,  0.0209,  0.0267,  0.0450],
        [-0.0007,  0.0393,  0.0424,  ...,  0.0170, -0.0955, -0.0279]])
tensor([[ 0.3355, -0.2685, -0.2147,  ...,  0.3489,  0.3825,  0.0912],
        [-0.3174,  0.0113,  0.0803,  ..., -0.3712, -0.3050, -0.3735],
        [-0.0475,  0.6789,  0.6909,  ..., -0.0383,  0.1782, -0.0886],
        ...,
        [-0.0476,  0.7326,  0.6500,  ..., -0.0689, -0.0318, -0.1086],
        [-0.0727, -0.0212,  0.0087,  ...,  0.1709,  0.1476,  0.1616],
        [-0.3565, -0.7798, -0.7285,  ..., -0.3760, -0.5129, -0.3809]])
##########################################################
decoder.blks.block1.attention2_prot.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0392,  0.0044,  0.0208,  ..., -0.0292,  0.0582,  0.0468],
        [ 0.0719,  0.0264,  0.0316,  ..., -0.0473,  0.0600,  0.0344],
        [ 0.0130,  0.0016, -0.0342,  ...,  0.0074,  0.0227,  0.0221],
        ...,
        [ 0.0624, -0.0292,  0.0557,  ...,  0.0460,  0.0386,  0.0255],
        [ 0.0137,  0.0030, -0.0160,  ..., -0.0329, -0.0264, -0.0165],
        [-0.0128, -0.0370, -0.0731,  ...,  0.0017,  0.0576,  0.0661]])
tensor([[ 0.1766, -0.1311,  0.3704,  ...,  0.3261, -0.0762, -0.3088],
        [-0.2563,  0.3589, -0.2994,  ..., -0.1766,  0.3902,  0.1967],
        [ 0.1675, -0.1536,  0.4145,  ...,  0.4726, -0.1391, -0.4367],
        ...,
        [ 0.3874, -0.3659,  0.1957,  ...,  0.1908, -0.2951, -0.1181],
        [-0.1295,  0.1428, -0.3652,  ..., -0.3834,  0.1122,  0.3347],
        [-0.1390,  0.0919, -0.4266,  ..., -0.3573,  0.1891,  0.4224]])
##########################################################
decoder.blks.block1.addnorm2_prot.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.7068, 1.2718, 1.0496, 0.9648, 0.6928, 0.7230, 0.9449, 1.1548, 1.1655,
        0.8432, 1.3086, 0.6488, 0.9393, 0.7789, 1.0635, 0.9951, 1.3007, 1.3387,
        0.2129, 1.2026, 0.8522, 0.8473, 1.1048, 1.2220, 1.1561, 0.7902, 1.2918,
        1.2477, 1.3280, 1.2545, 1.0358, 1.3432, 1.2662, 0.7162, 0.9141, 1.0683,
        1.2442, 0.9230, 1.2147, 1.1686, 0.4642, 0.6646, 1.1960, 0.8844, 1.2608,
        0.7289, 1.2790, 1.3364, 1.4247, 1.1766, 1.1652, 0.9026, 0.9709, 0.8669,
        0.7469, 0.9047, 0.9128, 1.1535, 0.7844, 1.4432, 1.3105, 1.2039, 1.2177,
        0.9403, 0.7966, 0.8698, 0.9527, 1.2606, 0.8916, 0.7805, 1.2172, 0.8752,
        1.2966, 0.9124, 0.9434, 0.7387, 1.0311, 1.2372, 1.0272, 0.9288, 1.1777,
        0.8658, 0.9876, 0.7128, 1.1265, 0.9316, 0.6950, 0.9997, 1.0339, 0.8275,
        0.8454, 1.1986, 1.0587, 0.8112, 1.3006, 0.8322, 1.0832, 1.2988, 0.8025,
        0.9727, 1.1581, 0.7243, 0.8340, 0.3967, 1.1394, 1.1580, 1.1516, 1.0944,
        0.5199, 1.2300, 0.9927, 1.1354, 0.7385, 0.5793, 1.1993, 1.3100, 1.0288,
        0.6349, 0.5882, 1.1578, 0.8250, 1.2545, 1.2129, 0.9166, 1.0890, 1.0428,
        1.0018, 0.8999])
##########################################################
decoder.blks.block1.addnorm2_prot.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.1317, -0.0864, -0.0099, -0.3114,  0.3288,  0.0387, -0.1339, -0.2762,
        -0.1786,  0.3204,  0.4702,  0.1644,  0.0328,  0.1432, -0.1560, -0.2507,
         0.3635, -0.4265,  0.0973,  0.3724, -0.0477,  0.1086,  0.1788, -0.3591,
        -0.3668,  0.0544, -0.3966,  0.3750, -0.4167,  0.3977, -0.3039, -0.4004,
        -0.3324,  0.0830,  0.3579,  0.3244,  0.4093,  0.2909, -0.3994,  0.2383,
         0.3365,  0.1295,  0.2185, -0.2055, -0.3469, -0.1229,  0.4043, -0.4111,
         0.5416,  0.1036,  0.5134, -0.1456,  0.3902, -0.0069,  0.1686, -0.0249,
         0.3352, -0.2980,  0.2319, -0.1783,  0.4000, -0.3096,  0.3707, -0.0593,
         0.0489,  0.1346,  0.0365, -0.5192, -0.4683, -0.1247, -0.2590,  0.0702,
        -0.4905,  0.0067,  0.1094, -0.1358, -0.3557,  0.3962,  0.3527, -0.0030,
         0.3485,  0.0088,  0.2624, -0.1918,  0.3510, -0.0057,  0.2482,  0.1610,
         0.0723, -0.2630,  0.2284, -0.3777,  0.0646, -0.2035,  0.3924,  0.1224,
        -0.1613, -0.3797,  0.2187,  0.1402, -0.1034,  0.0984, -0.1004,  0.0465,
         0.0615,  0.1643,  0.4143, -0.1233,  0.2106, -0.1009, -0.1667,  0.0775,
         0.1988,  0.0434, -0.4313, -0.3671, -0.0787, -0.0167,  0.2291,  0.1915,
        -0.1511,  0.3263, -0.3824, -0.2336,  0.1147,  0.4123, -0.2255, -0.0228])
##########################################################
decoder.blks.block1.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[-0.0454,  0.0444, -0.0004,  ..., -0.0215,  0.0030, -0.0144],
        [ 0.0022, -0.0210, -0.0213,  ...,  0.0777, -0.0361, -0.0171],
        [-0.0016, -0.0788,  0.0271,  ..., -0.0466,  0.0179, -0.0004],
        ...,
        [ 0.0468, -0.0276, -0.0319,  ..., -0.0494, -0.0179, -0.0598],
        [-0.0755,  0.0434,  0.0462,  ...,  0.0343, -0.0089, -0.0133],
        [-0.0697,  0.0801, -0.0184,  ..., -0.0470, -0.0232, -0.0437]])
tensor([[ 0.6725, -0.3741,  0.8845,  ...,  0.2499, -0.9746, -0.9449],
        [ 0.2243,  0.2229, -0.2580,  ..., -0.1347, -0.2643,  0.2130],
        [ 0.8384, -0.5016,  1.0092,  ...,  0.4573, -0.5565, -0.8222],
        ...,
        [-0.0769, -0.3718, -0.1574,  ...,  0.0694,  0.3385,  0.0678],
        [ 0.1447,  0.2753, -0.1857,  ...,  0.2549,  0.2199, -0.1579],
        [ 0.0361,  0.3434, -0.0045,  ..., -0.3083, -0.0883, -0.0553]])
##########################################################
decoder.blks.block1.ffn.dense1.bias shape: torch.Size([64])
tensor([-0.0047, -0.0481,  0.0002,  0.0840, -0.0847, -0.0080,  0.0489, -0.0125,
        -0.0149,  0.0761,  0.0521,  0.0209,  0.0461,  0.0320,  0.0066, -0.0248,
        -0.0838,  0.0074,  0.0552,  0.0535, -0.0799,  0.0343,  0.0454,  0.0781,
         0.0775, -0.0210,  0.0804, -0.0024,  0.0367, -0.0061, -0.0295, -0.0229,
        -0.0831, -0.0753, -0.0086,  0.0719,  0.0513,  0.0317, -0.0049,  0.0593,
        -0.0406, -0.0651,  0.0807, -0.0043,  0.0431, -0.0317,  0.0033,  0.0624,
         0.0147,  0.0417, -0.0316, -0.0386, -0.0348,  0.0718, -0.0759,  0.0806,
        -0.0847, -0.0354,  0.0124,  0.0809, -0.0496,  0.0097,  0.0307,  0.0636])
tensor([ 0.7211, -0.2750,  0.7138,  0.8349,  0.7201, -0.1081,  0.1314,  0.0786,
        -0.1611,  0.1180, -0.1281,  0.7327, -0.4156,  0.2778,  0.1718,  0.1267,
        -0.4348, -0.1032, -0.1645,  0.1590, -0.4103, -0.4296,  0.1535,  0.1669,
        -0.1955, -0.4702,  0.2813, -0.2798, -0.4724, -0.2381, -0.2514,  0.2128,
        -0.1881,  0.6479,  0.0331,  0.7764, -0.0102,  0.0037, -0.0260, -0.2675,
        -0.2358,  0.6393,  0.1173, -0.1347,  0.3030, -0.2070,  0.6772, -0.0837,
        -0.0127,  0.1737,  0.0712,  0.0600,  0.0831,  0.4513, -0.0766,  0.8551,
        -0.4264, -0.5522,  0.0141,  0.3663, -0.0463,  0.1198, -0.2050, -0.0392])
##########################################################
decoder.blks.block1.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[-0.0467,  0.0522, -0.0292,  ..., -0.0327,  0.0241, -0.0328],
        [ 0.0438,  0.0241, -0.0618,  ..., -0.0159,  0.0123, -0.0382],
        [-0.0197,  0.0203,  0.0400,  ..., -0.0242,  0.0234, -0.0181],
        ...,
        [ 0.0353,  0.0454, -0.0331,  ...,  0.0167,  0.0527, -0.0554],
        [ 0.0960, -0.0790,  0.0013,  ..., -0.0324, -0.0530,  0.0013],
        [ 0.1139,  0.0223,  0.0211,  ...,  0.0185, -0.0340,  0.0160]])
tensor([[-0.1483, -0.1775, -0.1157,  ..., -0.1493, -0.2063, -0.0663],
        [ 0.1874,  0.2516,  0.1032,  ..., -0.3593, -0.2183, -0.0509],
        [-0.4431, -0.2089, -0.3665,  ...,  0.0607, -0.2055,  0.0052],
        ...,
        [-0.1172,  0.2803, -0.1288,  ...,  0.1458,  0.2826,  0.0850],
        [ 0.1537,  0.1459,  0.0950,  ..., -0.3738, -0.2835, -0.2976],
        [ 0.2937,  0.2515,  0.1829,  ..., -0.0319,  0.1967, -0.1041]])
##########################################################
decoder.blks.block1.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.0756, -0.0972,  0.0050, -0.0303,  0.0113,  0.0523,  0.0343, -0.0081,
        -0.0895,  0.0369, -0.0643, -0.0500, -0.0266,  0.0967,  0.0528, -0.0432,
         0.0978, -0.0760, -0.0822, -0.0646,  0.0505,  0.0080,  0.0088,  0.0483,
         0.1132,  0.0351,  0.1215, -0.1002,  0.0139,  0.0019, -0.0796,  0.0081,
        -0.0103,  0.0803, -0.0082, -0.0341,  0.0308, -0.1086, -0.0055, -0.0617,
        -0.0305,  0.1141,  0.0758,  0.0169,  0.1118,  0.0145,  0.0463,  0.1059,
         0.0049,  0.0315, -0.0003, -0.0897,  0.0613, -0.0957, -0.0276, -0.0933,
        -0.0825, -0.0446,  0.0851, -0.1181, -0.0551,  0.0629, -0.0851, -0.0254,
        -0.1146, -0.1201, -0.1056,  0.0989, -0.0552,  0.0543, -0.0647, -0.0152,
        -0.0756,  0.0210,  0.0564, -0.0200, -0.0165,  0.0579,  0.0653, -0.0869,
         0.1234, -0.1091, -0.0092, -0.1194,  0.0538, -0.0928,  0.0381, -0.0333,
         0.1074,  0.0306, -0.0380, -0.0925, -0.0646, -0.1174,  0.0698, -0.0383,
         0.1082, -0.0365,  0.0904, -0.0365,  0.0234,  0.0293, -0.0791,  0.0713,
         0.0237, -0.0680,  0.1242, -0.0883, -0.0883, -0.0922, -0.0857, -0.1180,
         0.0125, -0.0695,  0.1073,  0.0608, -0.0413,  0.0561, -0.0011,  0.1023,
         0.0469, -0.0808, -0.0923, -0.0151, -0.0274,  0.0957,  0.0559,  0.0392])
tensor([-1.1854e-01, -2.2443e-01, -1.1914e-01, -3.6147e-01, -5.3525e-03,
         1.4660e-01,  1.7087e-01, -3.6001e-01, -9.8441e-02,  2.9577e-01,
         3.1672e-01,  1.3268e-01, -8.8324e-02,  8.8439e-02,  4.1377e-01,
        -1.2218e-01,  4.8269e-01, -4.5161e-01, -3.1168e-02,  2.9117e-01,
         9.5329e-02, -1.0848e-03, -2.0485e-02, -3.2816e-01, -1.8951e-01,
         1.3385e-01, -2.2248e-01,  2.8512e-01, -3.6701e-01,  3.8096e-01,
        -4.6168e-01, -1.1227e-01, -3.7877e-01, -3.1049e-03,  2.9021e-01,
        -1.8379e-02,  4.1058e-01, -1.8010e-01, -3.8885e-01,  3.2745e-02,
         3.3106e-01,  2.3909e-01,  1.1503e-01, -3.8069e-02, -2.6507e-01,
         1.7269e-01,  4.2607e-01, -2.6903e-01,  1.2376e-01, -3.3848e-01,
         3.7153e-01, -1.5238e-01,  4.1851e-01,  6.2939e-03,  4.3098e-02,
        -2.6242e-01,  2.0995e-02, -1.3891e-01,  1.1556e-01,  2.6504e-01,
         3.2568e-01, -2.1886e-01,  2.7909e-01,  3.9446e-02, -9.0043e-02,
        -1.3419e-01, -5.2518e-02, -2.6772e-01, -3.9574e-01,  3.6644e-01,
        -1.5073e-01,  5.5688e-05, -4.4354e-01,  1.5272e-02,  7.1673e-02,
        -9.0261e-02, -3.3701e-01,  4.3033e-01,  4.3677e-01, -3.9628e-01,
         5.0483e-01, -1.3888e-01,  1.2591e-01,  3.3864e-02,  2.8768e-01,
         3.0591e-02,  2.6075e-01, -1.2975e-02,  1.1142e-01, -1.5622e-01,
        -6.4120e-02, -4.7221e-01, -2.3914e-01, -2.6725e-02,  4.5263e-01,
        -1.3267e-01,  1.3120e-01, -4.1701e-01,  1.2277e-01, -5.1185e-02,
         8.1159e-02,  7.4251e-02, -1.0425e-01,  1.9127e-02,  2.9567e-01,
        -6.8872e-02,  5.4756e-01, -4.2254e-01, -8.8085e-02, -4.7674e-02,
        -1.2436e-01,  1.4387e-01,  3.4824e-01, -9.7320e-02, -2.1665e-01,
        -3.0365e-01, -1.2450e-01, -7.3272e-02,  3.2577e-01,  4.6236e-01,
         2.2558e-02,  2.9264e-01, -4.3835e-01, -3.6028e-02,  6.6891e-02,
         4.5877e-01, -7.9836e-02,  1.7182e-01])
##########################################################
decoder.blks.block1.addnorm3.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([ 7.7444e-03, -4.1084e-02,  1.4080e-02,  1.0477e-03, -2.9260e-02,
         2.8497e-02,  9.8549e-03,  1.7366e-01,  6.1042e-02,  1.0609e-02,
         8.3161e-02,  3.6401e-02, -2.9549e-02,  1.4480e-01, -7.5099e-03,
         1.1814e-02,  3.4066e-02,  2.2343e-02,  1.0669e-02,  7.3576e-02,
         7.8166e-02,  1.7012e-02,  4.8187e-02,  2.8852e-02,  2.7848e-02,
         1.2841e-03,  7.6913e-02,  1.0279e-01,  4.0875e-03,  1.9776e-02,
         4.0032e-02,  2.0958e-02, -3.5103e-02,  5.6146e-02, -6.7276e-02,
         4.9600e-02, -3.0515e-02,  2.4759e-02,  1.1926e-01,  1.5033e-01,
        -1.8493e-02, -4.7231e-02,  3.3899e-02, -6.5289e-02, -5.8208e-03,
         3.7436e-02,  4.6539e-02,  5.3955e-02,  6.6564e-02,  7.5506e-02,
         7.1098e-02, -1.0356e-02,  2.7107e-02, -9.3342e-03, -2.1094e-02,
        -2.1523e-02, -8.5961e-02,  2.5330e-02,  3.1071e-02, -3.8030e-02,
         4.5004e-03, -2.9497e-02,  4.7081e-02, -2.4214e-02, -1.6384e-02,
         2.6388e-03,  2.3372e-02, -1.4014e-01, -1.4215e-02, -1.2396e-02,
         5.2167e-02, -1.0897e-02,  2.3679e-02, -2.1439e-02,  2.6375e-02,
        -2.3866e-02,  1.0459e-02,  1.2895e-01,  3.8332e-02, -4.8541e-05,
         8.7905e-02,  1.4490e-03,  5.7531e-02,  1.3628e-02,  4.4679e-03,
        -8.6268e-02, -1.2589e-02,  8.7663e-02,  1.5267e-02, -1.3503e-03,
         1.0545e-01,  3.8610e-03, -3.8589e-02, -8.3115e-02,  7.8276e-02,
        -2.1882e-02,  8.3649e-03,  1.2005e-01,  5.6749e-03,  6.5822e-03,
        -1.4260e-02,  1.9048e-02,  5.6815e-03,  1.2319e-02, -1.2908e-02,
         1.2515e-01,  1.6730e-02,  7.0693e-02, -5.2239e-02,  1.5046e-02,
        -1.4599e-02, -5.6930e-02,  3.9660e-02, -3.9472e-04, -4.1480e-03,
         4.6142e-02,  9.5112e-03, -2.4422e-02,  2.8655e-02, -2.0166e-02,
         3.9390e-03, -1.2391e-01, -7.3883e-02,  7.7422e-03,  4.3177e-02,
         9.3762e-03,  5.1719e-02,  1.1641e-02])
##########################################################
decoder.blks.block1.addnorm3.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-5.3508e-03, -1.6840e-03,  9.1453e-04, -1.9491e-03,  1.2139e-03,
        -2.0505e-02,  2.5257e-03, -4.6658e-03, -1.4178e-03,  8.5255e-03,
         1.2943e-02, -1.2880e-03,  9.2323e-04,  6.1906e-02,  1.8597e-03,
         5.8680e-04,  6.1344e-03, -1.4549e-01, -1.7632e-02,  7.7059e-03,
        -2.2072e-02, -5.3638e-03,  3.2546e-03, -3.3670e-03, -2.0778e-03,
        -1.7157e-02, -1.8992e-02,  1.6359e-02, -7.2111e-02,  5.2466e-03,
        -7.8676e-03, -2.9370e-03, -1.0092e-01,  6.4228e-02, -1.4084e-03,
         9.4542e-03,  1.2641e-05,  2.1337e-02, -9.8834e-02, -8.4151e-04,
         9.4978e-03, -5.1818e-03, -5.1724e-04,  8.8214e-02, -6.5313e-03,
        -4.5331e-02,  1.9535e-01, -1.5218e-01,  1.9488e-03, -2.4718e-02,
         1.2891e-02,  1.1261e-03,  9.5763e-03, -1.7197e-02, -7.1816e-04,
        -5.8525e-02, -2.3395e-02, -3.4821e-03,  4.9827e-02,  2.8111e-03,
         2.7575e-02, -5.5479e-03,  5.2401e-03, -4.0014e-03,  1.9331e-02,
         5.2304e-02, -6.5632e-03, -8.4301e-04, -5.3115e-03,  2.3504e-02,
        -6.8954e-03, -9.8670e-03, -6.4710e-03,  2.2502e-02,  2.7199e-02,
         4.5595e-02, -1.4611e-02,  2.9298e-03,  1.3462e-01,  9.3429e-04,
         4.5471e-02,  2.3614e-03, -6.2374e-04,  2.5412e-03, -5.1854e-04,
         7.0025e-03, -1.3830e-03,  3.2276e-02, -9.2257e-03, -1.7446e-03,
         1.8783e-02,  1.9595e-03, -5.4210e-03, -2.8914e-02,  6.5926e-03,
        -6.1363e-02, -3.0860e-02, -2.4210e-02,  2.4119e-02,  2.7735e-02,
         1.4974e-02,  2.9104e-03, -6.4922e-05, -5.3322e-02, -5.6533e-04,
         4.6991e-02,  1.1663e-02, -4.5712e-04, -6.9560e-02, -3.3518e-02,
         1.4217e-03,  1.9691e-03,  3.9681e-03, -5.5862e-04, -9.8219e-04,
        -2.4131e-01, -1.3010e-03,  4.8343e-02,  1.4049e-02, -1.0095e-03,
        -1.3113e-03,  9.8255e-03, -2.3753e-02,  1.8623e-02,  2.6338e-03,
         8.1588e-01, -2.6035e-03,  5.2811e-04])
##########################################################
decoder.dense.weight shape: torch.Size([287, 128])
tensor([[-0.0288,  0.0202,  0.0008,  ..., -0.0947,  0.0137, -0.0003],
        [ 0.0539,  0.0724,  0.0201,  ..., -0.0241, -0.0068,  0.0021],
        [-0.0284, -0.0237,  0.0064,  ..., -0.0003, -0.0382, -0.0209],
        ...,
        [-0.0269, -0.0165, -0.0143,  ..., -0.0130,  0.0051, -0.0041],
        [-0.0282,  0.0345,  0.0356,  ..., -0.0627,  0.0009,  0.0158],
        [-0.0375, -0.0109, -0.0404,  ..., -0.0011,  0.0026, -0.0191]])
tensor([[ 0.3415,  0.1839,  0.1564,  ..., -5.2700,  0.1865,  0.0793],
        [ 0.4180,  0.0428,  0.1468,  ..., -4.5969,  0.0947,  0.0879],
        [ 0.3347,  0.0555,  0.2174,  ..., -4.9001,  0.0718,  0.0398],
        ...,
        [ 0.3519,  0.1981,  0.1343,  ..., -5.6275,  0.1605, -0.1785],
        [ 0.3564,  0.1817,  0.0783,  ..., -5.3788,  0.1439, -0.0852],
        [ 0.3488,  0.0268,  0.1937,  ..., -4.4297, -0.0561,  0.1287]])
##########################################################
decoder.dense.bias shape: torch.Size([287])
tensor([ 0.0118,  0.0485,  0.0694,  0.0537, -0.0180,  0.0734,  0.0331, -0.0882,
        -0.0332,  0.0196, -0.0331, -0.0407, -0.0211,  0.0158, -0.0673,  0.0877,
         0.0098,  0.0716, -0.0012, -0.0392,  0.0457, -0.0103,  0.0446,  0.0659,
         0.0608, -0.0708,  0.0803,  0.0530, -0.0561, -0.0223,  0.0648, -0.0295,
        -0.0041, -0.0074, -0.0526,  0.0252,  0.0252, -0.0472, -0.0322, -0.0364,
        -0.0025, -0.0767,  0.0556,  0.0285, -0.0745, -0.0729, -0.0764, -0.0402,
        -0.0786,  0.0090, -0.0862,  0.0699, -0.0879, -0.0478,  0.0676,  0.0785,
         0.0713, -0.0241, -0.0141,  0.0374,  0.0591,  0.0135,  0.0402,  0.0843,
        -0.0312,  0.0215, -0.0643,  0.0555, -0.0307,  0.0519, -0.0585, -0.0734,
        -0.0294,  0.0077, -0.0138,  0.0820,  0.0059, -0.0823,  0.0709, -0.0514,
        -0.0369,  0.0730, -0.0270, -0.0092,  0.0081, -0.0454,  0.0148,  0.0755,
        -0.0703,  0.0160,  0.0357, -0.0499, -0.0257,  0.0480,  0.0726, -0.0359,
         0.0667, -0.0123,  0.0476, -0.0231,  0.0133,  0.0411,  0.0711,  0.0542,
        -0.0325, -0.0275,  0.0526, -0.0692,  0.0572, -0.0077, -0.0594,  0.0708,
        -0.0738, -0.0481, -0.0561, -0.0036,  0.0298, -0.0094,  0.0179, -0.0448,
         0.0515,  0.0430, -0.0354, -0.0688, -0.0287, -0.0709,  0.0178,  0.0086,
         0.0123,  0.0494, -0.0217,  0.0610, -0.0714,  0.0087, -0.0585,  0.0118,
        -0.0582, -0.0270, -0.0573,  0.0118, -0.0392,  0.0621, -0.0832,  0.0144,
        -0.0415, -0.0691,  0.0110, -0.0342, -0.0199,  0.0197,  0.0567, -0.0469,
         0.0501, -0.0467, -0.0246,  0.0080,  0.0520,  0.0550,  0.0190, -0.0179,
         0.0869,  0.0110, -0.0122,  0.0544, -0.0340,  0.0701, -0.0127, -0.0303,
         0.0615,  0.0747,  0.0623,  0.0347, -0.0118, -0.0070,  0.0781, -0.0556,
        -0.0660, -0.0853,  0.0441,  0.0600,  0.0475,  0.0260,  0.0715,  0.0215,
         0.0016, -0.0733,  0.0142, -0.0514, -0.0098,  0.0519,  0.0825, -0.0477,
        -0.0852,  0.0486,  0.0429, -0.0291,  0.0714, -0.0580,  0.0826, -0.0302,
        -0.0383, -0.0338,  0.0764, -0.0343, -0.0387, -0.0185,  0.0570, -0.0387,
         0.0544, -0.0817, -0.0365,  0.0104,  0.0239,  0.0064, -0.0763,  0.0293,
        -0.0749, -0.0820, -0.0378,  0.0301,  0.0751, -0.0611, -0.0095,  0.0708,
         0.0832, -0.0849,  0.0705,  0.0495, -0.0129, -0.0647,  0.0698, -0.0818,
         0.0273,  0.0012,  0.0171, -0.0420, -0.0108, -0.0817,  0.0488,  0.0398,
         0.0573,  0.0236,  0.0067, -0.0448, -0.0456, -0.0607, -0.0710,  0.0532,
         0.0746,  0.0292, -0.0450, -0.0195,  0.0260, -0.0004,  0.0659, -0.0457,
         0.0356, -0.0536, -0.0637,  0.0592,  0.0063, -0.0400,  0.0306,  0.0859,
         0.0883, -0.0721, -0.0809, -0.0517,  0.0864,  0.0461, -0.0107,  0.0618,
        -0.0314,  0.0431, -0.0142, -0.0494, -0.0756, -0.0031, -0.0246, -0.0318,
         0.0672,  0.0288, -0.0169, -0.0566,  0.0237,  0.0544, -0.0641])
tensor([-2.8145, -2.9112, -3.1018, -0.4994,  1.2729,  1.3332,  1.3107,  1.2195,
         0.4208,  0.6550,  0.1913,  0.3018,  0.0271,  0.2611,  0.0992, -0.2762,
         0.0097,  0.0315, -0.5483, -0.6059, -0.7432, -0.2082, -0.8698, -0.8926,
        -1.9452, -1.1273, -1.4674, -0.9328, -1.6705, -1.5000, -1.6339, -2.0635,
        -1.7832, -2.1321, -1.3166, -1.4200, -0.8558, -1.1928, -2.3892, -1.3682,
        -1.1475, -1.9753, -1.9057, -2.7740, -1.7336, -3.6608, -3.2220, -1.6802,
        -2.9345, -3.1086, -3.4434, -2.9352, -2.7789, -2.2522, -3.0182, -2.1418,
        -1.3954, -3.4198, -3.5380, -1.4303, -2.5551, -1.4211, -3.3565, -3.3526,
        -3.0885, -2.1580, -3.0949, -2.6658, -2.7702, -3.0703, -2.7938, -3.2625,
        -2.2468, -3.1628, -3.3927, -3.2742, -2.4795, -3.3201, -3.3498, -3.2075,
        -2.7600, -2.7377, -2.7066, -2.9944, -3.4915, -3.4441, -3.4739, -3.2087,
        -2.8835, -3.4979, -2.9413, -3.3966, -3.2890, -3.2576, -2.3024, -3.5060,
        -3.1870, -2.9291, -2.8762, -2.9917, -3.4315, -3.5048, -2.9598, -3.1693,
        -2.9854, -3.2050, -2.8378, -2.8392, -3.0858, -3.5601, -3.3448, -3.2190,
        -3.3727, -3.0612, -2.9480, -3.1415, -3.0958, -3.4867, -3.0954, -2.7528,
        -3.0818, -3.2395, -3.0345, -3.2994, -3.2527, -2.8035, -3.4191, -3.4658,
        -2.6567, -2.9770, -3.2562, -3.0459, -3.0935, -2.8700, -3.3105, -2.8287,
        -3.4114, -3.4768, -3.0279, -3.2605, -3.0366, -3.2206, -3.1425, -3.1307,
        -2.7283, -3.1989, -2.6734, -3.0901, -3.0404, -2.8410, -3.4817, -3.3227,
        -3.1066, -3.4252, -3.3034, -3.1228, -2.8743, -3.4264, -2.3416, -3.0835,
        -3.3026, -3.1001, -3.1145, -3.3848, -2.8192, -2.9888, -3.5926, -2.6253,
        -2.4109, -3.6172, -3.0063, -2.9866, -3.5069, -2.9008, -3.1040, -3.4670,
        -3.4865, -3.1801, -3.1396, -2.8620, -3.0201, -3.0733, -3.1761, -3.4132,
        -3.2145, -3.3130, -2.9707, -2.8384, -3.5771, -3.1295, -2.7970, -3.1318,
        -3.6802, -2.9258, -2.6152, -2.8632, -3.0189, -3.4487, -2.9675, -3.1442,
        -3.5258, -3.3871, -3.2772, -3.0542, -2.5666, -3.4936, -2.5412, -3.6697,
        -3.2841, -3.4256, -2.5486, -2.8951, -3.0043, -2.7933, -3.3390, -3.0048,
        -3.2964, -3.2866, -3.0816, -3.2059, -3.1857, -3.4428, -2.9173, -2.6295,
        -3.2033, -2.9071, -3.1000, -3.3447, -3.2892, -2.8159, -2.9457, -3.1090,
        -2.6739, -2.9266, -3.4612, -3.2333, -2.8676, -3.2632, -3.1049, -3.1913,
        -3.4912, -3.2593, -3.3820, -3.2337, -3.3979, -3.3848, -2.6896, -3.3258,
        -3.1857, -3.0018, -3.2065, -2.7187, -3.4235, -2.5662, -3.2887, -3.2723,
        -3.3134, -3.3032, -3.5391, -3.1341, -3.1651, -3.3373, -3.0461, -2.6697,
        -3.2019, -3.4510, -2.7831, -3.4044, -2.8849, -2.6016, -3.3350, -3.4190,
        -3.2125, -3.4872, -3.0139, -2.7939, -3.4070, -3.2798, -3.1903, -3.5021,
        -3.3335, -3.0196, -3.0371, -2.8925, -2.8266, -2.8071, -3.3766])
##########################################################
linear1.weight shape: torch.Size([128, 128])
tensor([[-0.0006, -0.0088,  0.0505,  ...,  0.0728, -0.0152, -0.0725],
        [ 0.0617, -0.0253,  0.0072,  ..., -0.0023,  0.0478,  0.0314],
        [ 0.0407,  0.0289, -0.0871,  ..., -0.0407,  0.0361, -0.0498],
        ...,
        [ 0.0094, -0.0055,  0.0860,  ...,  0.0194,  0.0794, -0.0090],
        [-0.0014, -0.0185,  0.0449,  ..., -0.0152, -0.0052, -0.0600],
        [-0.0841,  0.0081,  0.0658,  ...,  0.0227,  0.0274, -0.0147]])
tensor([[-0.1472, -0.3139, -0.1052,  ..., -0.2525, -0.1463, -0.3994],
        [ 0.1796,  0.3005,  0.3317,  ...,  0.1034,  0.1112,  0.1246],
        [ 0.4398, -0.4262,  0.4918,  ..., -0.1670, -0.2409,  0.2438],
        ...,
        [ 0.0112,  0.3560, -0.1950,  ..., -0.1901,  0.4240, -0.1887],
        [ 0.0037,  0.3208, -0.1847,  ..., -0.2076,  0.3227, -0.0100],
        [-0.4240, -0.1281, -0.2729,  ..., -0.2730, -0.1026, -0.1474]])
##########################################################
linear1.bias shape: torch.Size([128])
tensor([ 0.0065, -0.0862, -0.0421,  0.0299, -0.0126, -0.0396,  0.0001,  0.0882,
         0.0209, -0.0090, -0.0673,  0.0723, -0.0126, -0.0278, -0.0412, -0.0510,
        -0.0076, -0.0764,  0.0241, -0.0322,  0.0872,  0.0553,  0.0450, -0.0833,
        -0.0500, -0.0238, -0.0020, -0.0373,  0.0672,  0.0436, -0.0780, -0.0424,
         0.0058,  0.0788,  0.0063,  0.0387,  0.0010, -0.0417, -0.0566, -0.0635,
         0.0123,  0.0182, -0.0605,  0.0026,  0.0119,  0.0680,  0.0631, -0.0279,
        -0.0524, -0.0412, -0.0384,  0.0377,  0.0540,  0.0586, -0.0140,  0.0286,
         0.0697,  0.0010,  0.0186, -0.0601,  0.0518,  0.0586, -0.0729, -0.0735,
         0.0701, -0.0479,  0.0658, -0.0170,  0.0686, -0.0585, -0.0054,  0.0432,
        -0.0610,  0.0821, -0.0250,  0.0009, -0.0366,  0.0838, -0.0703, -0.0293,
         0.0109,  0.0414, -0.0822, -0.0882,  0.0794,  0.0544,  0.0787,  0.0530,
        -0.0291, -0.0688,  0.0427,  0.0150, -0.0212,  0.0694, -0.0040,  0.0175,
        -0.0115, -0.0472,  0.0385,  0.0246,  0.0283,  0.0734,  0.0708, -0.0174,
        -0.0654, -0.0824, -0.0554,  0.0500,  0.0331,  0.0735,  0.0077, -0.0551,
        -0.0767, -0.0615, -0.0437, -0.0515, -0.0321,  0.0031,  0.0204,  0.0066,
        -0.0139,  0.0161, -0.0595,  0.0683, -0.0215, -0.0289,  0.0772, -0.0190])
tensor([-1.2697e-01,  2.3368e-02,  4.8799e-03, -1.9878e-01, -1.1741e-01,
        -1.9234e-01,  1.6714e-01, -1.7817e-01, -1.7622e-01,  1.2207e-01,
        -1.7672e-01,  2.1982e-01,  6.2920e-04, -1.2425e-01, -1.6720e-01,
        -2.8821e-01, -1.6266e-01, -1.9746e-01,  2.3746e-01,  9.7561e-02,
        -1.5613e-01, -1.5852e-01,  9.7637e-02, -1.2139e-01,  9.0468e-02,
         3.6888e-02, -5.2406e-02,  4.2716e-02, -1.7610e-01, -1.3696e-01,
        -1.9631e-01, -6.2952e-02,  2.1567e-01, -1.5388e-01,  3.0844e-02,
         1.1363e-01,  1.8081e-01,  1.5275e-01, -2.3389e-01, -3.6551e-02,
        -2.1020e-01,  5.8185e-02, -1.9125e-01, -1.1880e-01,  1.2964e-01,
         2.8970e-01, -1.7963e-01,  5.2778e-02,  1.5891e-02, -8.2530e-02,
        -1.6016e-01,  2.0210e-01,  2.4078e-01, -1.6830e-01, -1.1130e-01,
        -2.0475e-01, -9.7907e-02, -2.0699e-01, -1.9708e-01,  5.7068e-02,
         2.3856e-01, -2.0634e-02, -2.9496e-01, -9.0379e-02,  1.2961e-02,
        -1.6649e-01,  1.5395e-01,  1.7976e-01,  2.6786e-01,  1.4452e-03,
         1.5481e-01,  2.6558e-01,  6.9838e-02, -1.4456e-01, -1.6117e-02,
         9.3879e-04, -1.5094e-01,  2.3866e-01, -2.0151e-01, -9.6229e-02,
        -8.1970e-02, -1.6010e-01, -2.1087e-01, -3.6367e-01,  2.5811e-01,
         8.9025e-02, -1.2287e-01, -1.1548e-01, -6.1731e-02, -1.6165e-01,
         1.1198e-02,  1.0305e-01,  1.1650e-01, -1.6176e-01, -2.1235e-01,
         5.3173e-02, -3.6989e-02, -3.9207e-05,  7.6724e-02, -1.7917e-01,
        -5.0280e-02,  1.2595e-01, -1.3390e-01,  2.3060e-01, -1.7038e-01,
        -9.9517e-02, -1.7794e-01, -1.6921e-01,  1.3410e-01,  3.1536e-02,
        -1.7368e-01, -1.2702e-01, -1.7986e-01, -2.5091e-02,  1.2096e-02,
        -1.6054e-01, -1.7214e-01, -1.0113e-01, -9.6353e-02,  1.6736e-01,
        -1.8724e-01,  1.8323e-01, -8.4956e-02,  2.5093e-01,  1.4519e-02,
         1.7118e-01,  1.9412e-01, -1.3546e-01])
##########################################################
linear2.weight shape: torch.Size([128, 128])
tensor([[-0.0014, -0.0307, -0.0766,  ...,  0.0813,  0.0169,  0.0486],
        [-0.0862,  0.0883,  0.0367,  ..., -0.0489,  0.0281, -0.0783],
        [-0.0261,  0.0058, -0.0302,  ...,  0.0161,  0.0500,  0.0209],
        ...,
        [-0.0517,  0.0645, -0.0497,  ..., -0.0668, -0.0053, -0.0715],
        [-0.0013,  0.0479,  0.0046,  ..., -0.0389,  0.0291,  0.0349],
        [-0.0279, -0.0462,  0.0451,  ...,  0.0055,  0.0134, -0.0836]])
tensor([[-0.1959, -0.1106,  0.1778,  ...,  0.3219,  0.0619,  0.2253],
        [-0.0078,  0.1769, -0.0452,  ...,  0.0063,  0.0145, -0.2986],
        [ 0.2350, -0.2211,  0.1889,  ...,  0.2463,  0.2647,  0.2484],
        ...,
        [-0.0270,  0.2848,  0.1390,  ..., -0.2571, -0.2022, -0.2869],
        [ 0.1147,  0.1433,  0.3422,  ...,  0.2520, -0.0560,  0.0208],
        [ 0.2286, -0.1366,  0.0764,  ..., -0.1549, -0.2257, -0.3762]])
##########################################################
linear2.bias shape: torch.Size([128])
tensor([-0.0345, -0.0188, -0.0233,  0.0347,  0.0517, -0.0320, -0.0812, -0.0760,
        -0.0390, -0.0532,  0.0542, -0.0756,  0.0684,  0.0801,  0.0517, -0.0594,
        -0.0809,  0.0377,  0.0878,  0.0229, -0.0140, -0.0727, -0.0801, -0.0051,
         0.0816,  0.0347,  0.0336, -0.0610,  0.0702,  0.0085,  0.0612,  0.0206,
         0.0056,  0.0779, -0.0310,  0.0083,  0.0610,  0.0456,  0.0544, -0.0611,
        -0.0837,  0.0394, -0.0846, -0.0485,  0.0537, -0.0197,  0.0803,  0.0239,
         0.0574,  0.0608, -0.0436, -0.0463,  0.0571, -0.0206, -0.0635, -0.0749,
         0.0014, -0.0172,  0.0047, -0.0855,  0.0621, -0.0399,  0.0066, -0.0590,
         0.0075,  0.0256,  0.0054, -0.0882, -0.0852,  0.0250,  0.0760, -0.0561,
        -0.0425,  0.0415,  0.0335, -0.0517,  0.0840,  0.0006,  0.0339, -0.0868,
        -0.0545, -0.0579,  0.0810, -0.0439, -0.0385,  0.0134, -0.0634,  0.0373,
         0.0056,  0.0038, -0.0707,  0.0660,  0.0495,  0.0877, -0.0216, -0.0797,
        -0.0092, -0.0543, -0.0515,  0.0675,  0.0527,  0.0149,  0.0484, -0.0020,
         0.0065,  0.0790, -0.0053, -0.0426,  0.0652,  0.0040,  0.0814,  0.0336,
        -0.0820,  0.0544, -0.0001,  0.0244, -0.0882, -0.0569,  0.0309,  0.0582,
        -0.0531, -0.0004, -0.0170,  0.0222, -0.0217, -0.0860, -0.0768, -0.0016])
tensor([ 0.1909, -0.2389,  0.2062,  0.2637,  0.2805,  0.0290,  0.2687, -0.3392,
         0.1876, -0.2641, -0.1752, -0.3064,  0.3000,  0.3094, -0.1751,  0.1338,
         0.1266, -0.1928,  0.3155,  0.2461,  0.2115,  0.1546,  0.1290, -0.2319,
         0.3119,  0.2674,  0.2616, -0.2089,  0.2324,  0.1124, -0.1641,  0.2480,
        -0.2244,  0.2987, -0.2579,  0.2435, -0.1664,  0.2821, -0.1746,  0.1464,
        -0.1306, -0.1900, -0.3163,  0.3421,  0.2771,  0.2089, -0.1493,  0.2513,
         0.2878,  0.2863, -0.2730, -0.2733, -0.1634, -0.2485,  0.1639, -0.3058,
         0.2493, -0.2439,  0.2329, -0.3254,  0.1944, -0.2662, -0.2213, -0.1584,
         0.1110,  0.2428,  0.2286,  0.1381, -0.0137, -0.2004,  0.3019,  0.1392,
         0.1767, -0.1883, -0.1947,  0.2070,  0.2915,  0.2243, -0.1927, -0.3217,
        -0.3145,  0.1489,  0.3111, -0.2732,  0.1906,  0.2375, -0.2984,  0.2552,
         0.2184,  0.2401, -0.3005,  0.2918, -0.1758,  0.2020,  0.1954, -0.3172,
         0.2151,  0.1752, -0.2931, -0.1606, -0.1767,  0.2414,  0.2757,  0.2081,
        -0.2222, -0.1476, -0.2357, -0.2634, -0.1952, -0.2270, -0.1444,  0.2611,
         0.1409, -0.1740,  0.1770, -0.2052, -0.3158,  0.1731,  0.2619,  0.2858,
         0.1720,  0.2286, -0.2587,  0.2507, -0.2481, -0.3152,  0.1253, -0.2438])
##########################################################
{'smi_encoder.embedding.weight': tensor(0.0253), 'decoder.blks.block1.addnorm3.ln.bias': tensor(0.0286), 'decoder.embedding.weight': tensor(0.0300), 'smi_encoder.encoder.layers.1.self_attn.in_proj_weight': tensor(0.0778), 'smi_encoder.encoder.layers.1.self_attn.in_proj_bias': tensor(0.1047), 'decoder.blks.block0.attention2_smi.W_k.weight': tensor(0.1251), 'linear1.bias': tensor(0.1302), 'prot_encoder.embedding.weight': tensor(0.1317), 'prot_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(0.1373), 'decoder.blks.block0.attention2_prot.W_k.weight': tensor(0.1408), 'smi_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(0.1431), 'decoder.blks.block0.attention2_smi.W_q.weight': tensor(0.1494), 'decoder.blks.block0.attention2_prot.W_q.weight': tensor(0.1593), 'smi_encoder.encoder.layers.1.norm2.weight': tensor(0.1638), 'prot_encoder.encoder.layers.1.linear1.bias': tensor(0.1924), 'decoder.blks.block1.ffn.dense2.bias': tensor(0.1934), 'decoder.blks.block1.addnorm2_prot.ln.weight': tensor(0.1937), 'smi_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(0.1989), 'prot_encoder.dense.bias': tensor(0.2004), 'decoder.blks.block1.attention2_smi.W_k.weight': tensor(0.2006), 'decoder.blks.block1.attention2_smi.W_q.weight': tensor(0.2031), 'prot_encoder.dense.weight': tensor(0.2038), 'smi_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(0.2052), 'smi_encoder.encoder.layers.0.linear2.weight': tensor(0.2068), 'smi_encoder.encoder.layers.0.linear1.weight': tensor(0.2075), 'smi_encoder.encoder.layers.1.norm1.weight': tensor(0.2094), 'prot_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(0.2116), 'smi_encoder.encoder.layers.1.self_attn.out_proj.weight': tensor(0.2123), 'smi_encoder.encoder.layers.1.norm2.bias': tensor(0.2147), 'smi_encoder.encoder.layers.1.linear1.weight': tensor(0.2178), 'linear2.weight': tensor(0.2179), 'linear2.bias': tensor(0.2196), 'decoder.blks.block1.addnorm2_smi.ln.bias': tensor(0.2201), 'decoder.blks.block0.attention2_prot.W_o.weight': tensor(0.2210), 'decoder.blks.block1.attention2_smi.W_v.weight': tensor(0.2212), 'decoder.blks.block1.attention2_smi.W_o.weight': tensor(0.2220), 'decoder.blks.block0.ffn.dense1.bias': tensor(0.2226), 'decoder.blks.block0.attention2_prot.W_v.weight': tensor(0.2229), 'smi_encoder.encoder.layers.1.linear2.weight': tensor(0.2233), 'decoder.blks.block0.attention2_smi.W_v.weight': tensor(0.2236), 'decoder.blks.block0.attention2_smi.W_o.weight': tensor(0.2241), 'smi_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(0.2243), 'smi_encoder.encoder.layers.0.norm2.weight': tensor(0.2255), 'smi_encoder.encoder.layers.1.linear2.bias': tensor(0.2264), 'decoder.blks.block1.attention1.W_v.weight': tensor(0.2270), 'prot_encoder.encoder.layers.1.self_attn.out_proj.bias': tensor(0.2271), 'smi_encoder.encoder.layers.0.linear1.bias': tensor(0.2273), 'decoder.blks.block0.addnorm3.ln.bias': tensor(0.2275), 'prot_encoder.encoder.layers.1.norm2.weight': tensor(0.2275), 'decoder.blks.block1.attention1.W_o.weight': tensor(0.2278), 'prot_encoder.ffn.dense1.bias': tensor(0.2279), 'decoder.blks.block1.addnorm2_prot.ln.bias': tensor(0.2281), 'decoder.blks.block1.addnorm1.ln.bias': tensor(0.2282), 'prot_encoder.ffn.dense2.bias': tensor(0.2283), 'smi_encoder.encoder.layers.1.linear1.bias': tensor(0.2284), 'decoder.blks.block1.attention1.W_q.weight': tensor(0.2285), 'smi_encoder.encoder.layers.0.norm1.bias': tensor(0.2286), 'prot_encoder.ffn.dense1.weight': tensor(0.2288), 'decoder.blks.block0.addnorm2_prot.ln.bias': tensor(0.2288), 'smi_encoder.encoder.layers.0.norm1.weight': tensor(0.2289), 'decoder.blks.block0.ffn.dense1.weight': tensor(0.2290), 'decoder.blks.block0.ffn.dense2.weight': tensor(0.2291), 'decoder.blks.block1.attention1.W_k.weight': tensor(0.2292), 'smi_encoder.encoder.layers.1.norm1.bias': tensor(0.2295), 'prot_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(0.2296), 'decoder.blks.block0.addnorm2_smi.ln.bias': tensor(0.2297), 'decoder.blks.block0.attention1.W_q.weight': tensor(0.2297), 'decoder.blks.block0.attention1.W_o.weight': tensor(0.2297), 'decoder.blks.block0.attention1.W_v.weight': tensor(0.2297), 'decoder.blks.block0.attention1.W_k.weight': tensor(0.2297), 'decoder.blks.block0.addnorm3.ln.weight': tensor(0.2298), 'decoder.blks.block0.addnorm2_prot.ln.weight': tensor(0.2298), 'decoder.blks.block0.addnorm1.ln.bias': tensor(0.2298), 'decoder.blks.block0.addnorm1.ln.weight': tensor(0.2298), 'prot_encoder.encoder.layers.1.linear2.bias': tensor(0.2300), 'decoder.blks.block0.ffn.dense2.bias': tensor(0.2302), 'smi_encoder.encoder.layers.1.self_attn.out_proj.bias': tensor(0.2305), 'smi_encoder.encoder.layers.0.linear2.bias': tensor(0.2305), 'decoder.blks.block1.addnorm1.ln.weight': tensor(0.2316), 'decoder.blks.block0.addnorm2_smi.ln.weight': tensor(0.2317), 'smi_encoder.encoder.layers.0.norm2.bias': tensor(0.2335), 'decoder.blks.block1.attention2_prot.W_o.weight': tensor(0.2421), 'prot_encoder.encoder.layers.0.linear2.bias': tensor(0.2458), 'prot_encoder.encoder.layers.1.norm1.bias': tensor(0.2503), 'prot_encoder.encoder.layers.1.self_attn.in_proj_bias': tensor(0.2504), 'prot_encoder.encoder.layers.0.linear1.bias': tensor(0.2514), 'decoder.blks.block1.addnorm2_smi.ln.weight': tensor(0.2559), 'prot_encoder.encoder.layers.1.self_attn.out_proj.weight': tensor(0.2583), 'decoder.blks.block1.attention2_prot.W_q.weight': tensor(0.2588), 'decoder.blks.block1.ffn.dense2.weight': tensor(0.2608), 'decoder.blks.block1.ffn.dense1.bias': tensor(0.2710), 'linear1.weight': tensor(0.2729), 'decoder.blks.block1.ffn.dense1.weight': tensor(0.2837), 'decoder.blks.block1.attention2_prot.W_v.weight': tensor(0.2845), 'prot_encoder.ffn.dense2.weight': tensor(0.2909), 'prot_encoder.encoder.layers.1.linear1.weight': tensor(0.3027), 'prot_encoder.encoder.layers.1.linear2.weight': tensor(0.3027), 'decoder.blks.block1.attention2_prot.W_k.weight': tensor(0.3035), 'prot_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(0.3059), 'prot_encoder.encoder.layers.0.norm1.bias': tensor(0.3090), 'prot_encoder.encoder.layers.1.norm2.bias': tensor(0.3090), 'prot_encoder.encoder.layers.0.norm2.bias': tensor(0.3197), 'prot_encoder.encoder.layers.1.norm1.weight': tensor(0.3298), 'decoder.dense.weight': tensor(0.3722), 'prot_encoder.encoder.layers.1.self_attn.in_proj_weight': tensor(0.3981), 'prot_encoder.encoder.layers.0.linear1.weight': tensor(0.3986), 'prot_encoder.encoder.layers.0.linear2.weight': tensor(0.4167), 'prot_encoder.encoder.layers.0.norm2.weight': tensor(0.4328), 'prot_encoder.addnorm.ln.bias': tensor(0.4487), 'prot_encoder.encoder.layers.0.norm1.weight': tensor(0.4853), 'prot_encoder.addnorm.ln.weight': tensor(0.5025), 'decoder.blks.block1.addnorm3.ln.weight': tensor(0.9841), 'decoder.dense.bias': tensor(2.7925)}