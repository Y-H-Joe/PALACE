smi_encoder.embedding.weight shape: torch.Size([287, 128])
tensor([[ 1.0131, -0.2699, -1.8087,  ..., -0.3295, -0.7485, -1.9519],
        [ 0.0252,  0.2658,  0.8077,  ..., -0.9470, -1.1543, -0.1074],
        [ 0.2496, -1.1481, -0.6821,  ..., -0.5859,  0.6502, -0.0364],
        ...,
        [ 0.4938,  0.4496,  0.6148,  ...,  1.5956,  0.0266, -0.2141],
        [ 0.7097,  0.5078,  0.7414,  ..., -0.3503,  1.2614, -0.1880],
        [ 1.8792,  0.3156,  1.0133,  ..., -1.0239,  0.4238, -0.2535]])
tensor([[ 1.0131, -0.2699, -1.8087,  ..., -0.3295, -0.7485, -1.9519],
        [-0.0643,  0.5450,  0.7229,  ..., -1.1814, -1.4681, -0.1637],
        [ 0.2496, -1.1481, -0.6821,  ..., -0.5859,  0.6502, -0.0364],
        ...,
        [ 0.4938,  0.4496,  0.6148,  ...,  1.5956,  0.0266, -0.2141],
        [ 0.7097,  0.5078,  0.7414,  ..., -0.3503,  1.2614, -0.1880],
        [ 1.8792,  0.3156,  1.0133,  ..., -1.0239,  0.4238, -0.2535]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0243,  0.0538,  0.0451,  ..., -0.0568, -0.0165,  0.0449],
        [ 0.0563,  0.0324,  0.0643,  ...,  0.0293,  0.0601,  0.0393],
        [ 0.0591,  0.0161,  0.0080,  ..., -0.0021,  0.0217, -0.0732],
        ...,
        [ 0.0144, -0.0315,  0.0259,  ...,  0.0383, -0.0098,  0.0190],
        [-0.0658,  0.0705,  0.0333,  ...,  0.0334, -0.0171, -0.0618],
        [ 0.0654, -0.0596,  0.0224,  ..., -0.0686, -0.0103, -0.0630]])
tensor([[-0.0749,  0.2846, -0.1414,  ..., -0.1611,  0.2010,  0.1755],
        [-0.1770,  0.0600,  0.1940,  ..., -0.1748, -0.0765,  0.1659],
        [-0.1840,  0.2735,  0.0451,  ...,  0.2360, -0.0580, -0.1136],
        ...,
        [ 0.2480,  0.1744,  0.2061,  ...,  0.2412, -0.2237, -0.2022],
        [-0.0338,  0.1078,  0.0071,  ...,  0.0909,  0.0410, -0.0089],
        [ 0.0018, -0.2383, -0.0928,  ...,  0.1281,  0.2112,  0.0772]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.9635e-02,  1.3534e-01, -1.5644e-01,  9.4426e-02, -5.7816e-02,
         3.3304e-03,  9.4388e-02,  5.8240e-02,  7.0972e-02, -1.0747e-01,
        -1.7541e-01,  9.8102e-02,  1.3033e-01,  9.4859e-02, -4.3223e-02,
        -1.2473e-02, -1.4984e-01,  9.0715e-02, -1.2866e-01, -1.7727e-02,
         1.1796e-01, -7.3224e-02,  4.8548e-02, -9.9120e-02,  3.9906e-03,
        -6.9065e-02, -7.8466e-02,  1.9218e-02, -9.9506e-02, -8.0881e-02,
        -5.5958e-02, -1.4386e-01,  7.6724e-02, -2.4870e-01,  3.8099e-02,
         9.2708e-02, -1.2709e-01, -2.4973e-01, -1.8071e-01,  1.1136e-01,
        -2.1887e-03, -2.2805e-01,  1.4671e-01,  2.6913e-01, -1.3638e-02,
         2.3852e-01, -1.0504e-01, -2.3528e-02, -1.9050e-01, -1.7239e-01,
        -4.5208e-02, -1.2079e-01,  1.1743e-01, -1.6482e-02, -1.0481e-01,
        -7.1218e-02,  1.0258e-01, -6.0216e-02, -1.0519e-01,  3.1800e-02,
         1.5306e-01, -2.1015e-04, -1.6482e-01,  4.5680e-02, -1.3797e-01,
         1.6171e-01,  1.1699e-01,  2.8482e-02, -2.3050e-02, -9.1190e-02,
        -8.7528e-02,  2.3368e-02,  1.4987e-01, -1.0726e-01,  3.1667e-02,
         6.0639e-02,  6.6106e-02,  5.6532e-03, -7.5694e-02, -9.2005e-02,
        -1.2252e-01,  7.6600e-02,  1.4466e-02,  1.2658e-01, -1.6678e-01,
         1.7622e-01,  1.1716e-01, -2.0907e-01, -1.6808e-01, -5.4215e-02,
         4.5691e-02,  1.8201e-01,  7.4738e-02,  1.9745e-01,  1.5815e-01,
        -9.9693e-02, -7.3456e-02,  1.3070e-01, -5.8209e-02,  1.0108e-01,
         1.0714e-01,  1.4984e-01, -3.2191e-02,  1.0050e-01,  1.1172e-01,
         7.8098e-02,  1.0620e-01,  5.1941e-02, -5.7963e-02,  8.8010e-02,
        -7.3465e-02,  7.5106e-02, -1.5549e-01, -7.0370e-02, -8.1618e-02,
        -2.1253e-01, -4.7537e-02, -1.0992e-01, -1.1811e-01,  2.3421e-01,
        -1.6876e-01,  4.1058e-02,  1.4912e-01, -2.1872e-01, -6.4520e-02,
         1.2820e-01,  9.0130e-02, -9.5078e-02,  1.6047e-07,  2.1893e-07,
        -9.2052e-08,  3.0714e-07, -1.2770e-08,  1.6155e-07,  7.1938e-08,
         1.4856e-08,  1.4565e-07, -1.7181e-08,  1.1488e-07,  3.1835e-07,
         1.3783e-07,  2.1625e-07,  8.3250e-10, -4.1986e-08, -4.5601e-08,
         3.9915e-08,  2.3571e-08, -1.0413e-07, -9.2265e-08, -5.2292e-08,
         6.9334e-08, -1.2013e-07,  8.6872e-08,  9.3258e-08, -1.3844e-07,
        -3.9679e-08, -1.6962e-07, -1.1851e-07, -4.5327e-08, -6.2694e-08,
         1.4575e-07, -4.7123e-08,  2.8145e-07,  5.5816e-07, -1.5085e-07,
         3.7556e-08,  3.2141e-07,  2.4597e-08, -4.7101e-07, -2.6615e-07,
         1.7371e-07, -2.9165e-07,  2.4030e-07, -2.8534e-07, -3.1267e-08,
        -2.3000e-07,  5.2478e-08, -2.0818e-07,  1.5944e-07,  9.1229e-08,
        -1.3931e-07,  1.4671e-08, -2.6256e-08,  6.3933e-09, -4.6126e-08,
         1.3929e-07, -8.2885e-09, -1.5094e-07,  1.4770e-07,  2.6018e-08,
         3.0513e-08, -1.5308e-07,  5.8093e-08, -9.0792e-08, -1.9630e-07,
         8.3423e-08,  2.6750e-08,  4.6907e-08, -4.2385e-08, -8.0832e-08,
        -1.4339e-07,  2.3746e-08,  1.7870e-07, -5.1800e-08,  4.5776e-08,
        -1.2749e-08, -6.0732e-08,  1.8840e-07,  4.7162e-07,  2.8287e-07,
         9.5049e-08,  1.7505e-07, -1.5125e-07, -2.3027e-07,  8.0516e-08,
         2.7027e-07,  1.7881e-09,  2.0582e-07,  2.5493e-07,  1.8987e-08,
        -2.2870e-07, -2.5350e-07, -1.8177e-07, -8.8634e-08, -2.3291e-08,
        -5.5124e-08, -6.2958e-08, -8.4809e-09, -1.2976e-07,  9.8688e-08,
        -3.8115e-08, -1.7377e-08,  2.0956e-07, -1.1331e-07,  1.3119e-07,
         1.8058e-07,  1.1808e-08,  3.6319e-07, -9.9094e-08,  4.3166e-08,
         2.5721e-08,  7.6146e-08,  6.9733e-08,  5.2369e-08, -2.1829e-07,
         3.5119e-08, -4.5714e-10, -8.1046e-08,  1.9245e-07,  1.6107e-07,
         8.5014e-08,  1.6051e-07, -4.0430e-08, -1.3380e-07, -6.4636e-08,
         4.6682e-08, -5.1233e-02, -5.1024e-03,  5.0258e-03,  7.8424e-02,
         5.3781e-02,  7.1971e-02,  5.0568e-02,  4.7056e-02,  4.3434e-02,
        -5.8406e-02, -1.1436e-01, -6.2016e-02, -1.0981e-01,  5.2287e-02,
        -8.3877e-02, -9.0447e-02,  9.2236e-02, -9.8065e-02, -5.5547e-02,
         7.3045e-02, -1.3767e-01,  1.1590e-01, -2.8192e-02,  1.3668e-01,
        -1.1747e-03, -5.0257e-02, -6.8178e-02,  5.2996e-02, -2.3478e-02,
        -1.0715e-01,  6.3390e-02,  1.0543e-01, -5.1008e-02, -6.9810e-03,
         7.2752e-03, -7.6598e-02, -8.3822e-02,  1.2410e-01, -1.6065e-01,
        -4.0630e-02,  1.1952e-01,  1.2825e-01, -7.5669e-02, -9.3632e-02,
        -1.2644e-01,  1.5894e-01, -1.1833e-01, -1.1694e-01,  1.0337e-01,
        -5.3711e-02, -6.6077e-02,  9.3911e-02,  1.1880e-01,  9.9434e-02,
        -1.5613e-01, -3.8277e-02,  5.8100e-02,  1.2142e-01, -1.4874e-02,
         9.5499e-02,  4.0318e-02, -4.6389e-02, -1.0577e-01, -9.0687e-02,
         9.3965e-02,  6.4810e-02, -1.2224e-01, -1.1556e-01, -1.2053e-01,
         1.0375e-01, -6.6241e-02, -4.8631e-02,  6.9826e-02,  1.0456e-01,
         1.1142e-01, -3.6163e-03, -9.5124e-03,  5.7201e-02, -5.1803e-02,
         1.0759e-01,  5.8102e-02, -1.3315e-01,  9.5185e-02, -1.3651e-01,
        -8.4255e-02, -8.3637e-03,  6.2707e-02, -4.9051e-02,  1.4827e-01,
         1.3960e-02,  6.9980e-02, -6.9802e-02,  1.3837e-01,  1.2845e-01,
        -1.1486e-01, -1.1087e-01, -3.2565e-02,  1.6999e-01,  8.9146e-02,
        -6.9062e-02, -4.9070e-02, -8.7193e-02, -1.3891e-01, -1.0511e-01,
         7.2795e-02, -3.2542e-02,  8.8975e-03,  6.5155e-02, -1.1176e-01,
         1.2760e-02,  8.5385e-02, -3.4239e-02, -1.2649e-01, -2.9783e-02,
        -1.5013e-01, -1.4638e-01, -8.0899e-02,  4.3321e-02, -1.1657e-01,
         1.3212e-01,  5.6999e-02, -8.3460e-02,  3.3652e-02, -1.1445e-01,
        -5.0833e-02, -9.2323e-02, -4.8801e-02, -9.2489e-02])
##########################################################
smi_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0195, -0.0317, -0.0510,  ..., -0.0840,  0.0122, -0.0714],
        [-0.0169, -0.0862, -0.0542,  ..., -0.0039,  0.0410,  0.0698],
        [-0.0497, -0.0115,  0.0451,  ..., -0.0327, -0.0224,  0.0855],
        ...,
        [-0.0498,  0.0312,  0.0274,  ...,  0.0140,  0.0436, -0.0074],
        [ 0.0508,  0.0038,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0864, -0.0189,  ..., -0.0154,  0.0077,  0.0106]])
tensor([[-0.1098, -0.2076,  0.0178,  ..., -0.3041, -0.2001, -0.2966],
        [ 0.0698,  0.0397, -0.1414,  ..., -0.2099, -0.0297,  0.0568],
        [-0.0433,  0.1888,  0.1005,  ...,  0.1282,  0.0399,  0.0255],
        ...,
        [ 0.0993,  0.1541, -0.1552,  ..., -0.1939,  0.0581, -0.0420],
        [ 0.0744,  0.1363, -0.0297,  ..., -0.0955, -0.0217, -0.1442],
        [-0.1162, -0.1810,  0.0834,  ..., -0.1423,  0.0100,  0.1515]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.0529, -0.0251,  0.0738,  0.0006,  0.0291, -0.0812,  0.0114,  0.0146,
         0.0080,  0.0080,  0.0372,  0.1068,  0.0269, -0.0257,  0.0303, -0.0410,
        -0.0396, -0.1689,  0.1689,  0.0492,  0.1699, -0.0204, -0.0072,  0.0606,
         0.0238, -0.0263, -0.0012, -0.0445,  0.0164, -0.0110, -0.1608,  0.0505,
         0.0637, -0.1827, -0.0769, -0.0159, -0.0072,  0.0204, -0.0495,  0.0965,
        -0.0057,  0.1115,  0.0275, -0.0025, -0.0550, -0.0060, -0.0044, -0.1020,
         0.0302,  0.0676, -0.0068, -0.0337, -0.0033,  0.0321, -0.0124, -0.0645,
        -0.1404, -0.0239,  0.1357, -0.0211, -0.0707,  0.1676,  0.1781, -0.0045,
        -0.0308, -0.0626,  0.0518, -0.0591,  0.0727, -0.0661,  0.0333,  0.1089,
        -0.0352,  0.1333, -0.0509,  0.1967, -0.1614,  0.0491,  0.1088,  0.0834,
         0.0277,  0.0348, -0.0267, -0.1816,  0.0036, -0.0265, -0.2243, -0.0977,
         0.0318,  0.0150,  0.0763,  0.0730,  0.0005,  0.0200, -0.0674,  0.0243,
        -0.0008, -0.0170,  0.0660, -0.0656,  0.0608,  0.0064,  0.1863, -0.0005,
        -0.0772, -0.0512, -0.0351, -0.0820,  0.1301, -0.0917,  0.0146, -0.0407,
        -0.0861, -0.0038, -0.0234,  0.0208, -0.1713, -0.1025,  0.0217,  0.0251,
         0.0006,  0.0032, -0.0166,  0.0068, -0.0150, -0.0196, -0.0032, -0.0746])
##########################################################
smi_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[-0.0872,  0.0414,  0.1149,  ...,  0.0752,  0.1710,  0.0049],
        [ 0.0190,  0.0100, -0.0402,  ..., -0.0137, -0.0116, -0.0810],
        [ 0.0126, -0.0601, -0.0726,  ..., -0.1002,  0.0593,  0.0684],
        ...,
        [ 0.0932,  0.1116, -0.1140,  ..., -0.0729, -0.0272, -0.0342],
        [ 0.0062, -0.0873, -0.0474,  ..., -0.0160, -0.1007, -0.0511],
        [-0.0671, -0.0344, -0.0755,  ...,  0.0474, -0.0155, -0.0302]])
tensor([[-0.3561,  0.1325,  0.0582,  ...,  0.3124, -0.0302, -0.0816],
        [ 0.1513, -0.0402,  0.1010,  ..., -0.1004, -0.0241, -0.0248],
        [-0.1647,  0.1568,  0.1422,  ...,  0.1840, -0.1983, -0.1157],
        ...,
        [ 0.2403, -0.0084, -0.2126,  ..., -0.0795,  0.1563,  0.1119],
        [ 0.1201, -0.1859, -0.1550,  ...,  0.0174, -0.1242,  0.0320],
        [-0.1719,  0.1255,  0.1603,  ...,  0.3299, -0.2715, -0.1973]])
##########################################################
smi_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([ 0.0390, -0.0360,  0.0304,  0.0522,  0.0824, -0.0713,  0.0320, -0.0662,
         0.0418,  0.0410, -0.0810,  0.0478,  0.0367,  0.0600,  0.0502,  0.0205,
        -0.0817,  0.0190,  0.0307, -0.0279, -0.0589,  0.0853, -0.0780,  0.0147,
        -0.0857, -0.0591,  0.0313,  0.0502, -0.0049, -0.0560, -0.0108,  0.0365,
        -0.0032, -0.0299,  0.0512, -0.0053, -0.0227,  0.0858, -0.0145, -0.0820,
        -0.0140, -0.0369,  0.0268, -0.0360, -0.0799, -0.0019,  0.0174, -0.0067,
         0.0582, -0.0320,  0.0775,  0.0108,  0.0556, -0.0371, -0.0313, -0.0403,
         0.0199, -0.0528, -0.0291,  0.0233,  0.0368, -0.0160,  0.0090,  0.0428])
tensor([ 0.1290, -0.2561,  0.3134,  0.1714,  0.2718,  0.2905,  0.2420, -0.3745,
        -0.1896,  0.3745, -0.2808, -0.2591, -0.2166, -0.1567,  0.2440,  0.3717,
        -0.2912,  0.3152,  0.3004,  0.0622, -0.1745,  0.2187,  0.2743, -0.0013,
         0.2180, -0.2052,  0.3569,  0.0216, -0.1388, -0.2755, -0.2282,  0.2071,
         0.0622, -0.0484,  0.3850, -0.2103, -0.2504,  0.1029, -0.3183, -0.2736,
        -0.2360, -0.2667,  0.3690, -0.1485, -0.2819, -0.2331, -0.1798, -0.3492,
         0.3947,  0.1281, -0.1665, -0.2385,  0.0281,  0.2736,  0.2722, -0.0947,
         0.2714,  0.0955, -0.2543,  0.1329, -0.1877, -0.1537, -0.2143,  0.4065])
##########################################################
smi_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[ 0.0475,  0.0683,  0.0447,  ...,  0.1447,  0.0154, -0.0073],
        [ 0.0510,  0.0163,  0.0349,  ..., -0.0289,  0.0469, -0.0348],
        [-0.0950,  0.0110, -0.0690,  ..., -0.0107,  0.0720,  0.1142],
        ...,
        [-0.0323, -0.0855, -0.0223,  ...,  0.0215, -0.0378,  0.1264],
        [ 0.0650, -0.0422, -0.0624,  ..., -0.1462,  0.0460,  0.0304],
        [-0.0261, -0.0060,  0.0096,  ..., -0.0020, -0.0240, -0.0032]])
tensor([[-0.1669,  0.0299, -0.2407,  ...,  0.1180, -0.1636, -0.2479],
        [ 0.2876,  0.0276,  0.2496,  ..., -0.0429,  0.0784,  0.2042],
        [-0.0856,  0.0120, -0.0851,  ..., -0.1267,  0.0293,  0.1428],
        ...,
        [-0.0811, -0.0790, -0.0734,  ..., -0.0119, -0.0754,  0.1678],
        [ 0.0054, -0.0372, -0.1457,  ..., -0.2194,  0.0458, -0.0559],
        [ 0.1289, -0.0615,  0.1067,  ..., -0.0944, -0.1498,  0.2282]])
##########################################################
smi_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([-0.0847, -0.0490, -0.0445, -0.1036,  0.1047,  0.0644, -0.0245, -0.0003,
         0.0468, -0.1232,  0.0717, -0.1169,  0.0174,  0.0834,  0.0273,  0.0251,
        -0.1055, -0.0227, -0.0934, -0.1000, -0.1053, -0.0765,  0.0598, -0.0744,
         0.0463, -0.1234,  0.0209,  0.0470,  0.1235, -0.0195,  0.0541, -0.0480,
         0.1148, -0.0727,  0.1159,  0.0683,  0.0448,  0.0013,  0.0749, -0.0401,
        -0.0255,  0.0300, -0.0717,  0.0446,  0.1231, -0.0057,  0.0908, -0.0754,
         0.0632, -0.0747,  0.0050,  0.0100, -0.0558, -0.1103, -0.0367, -0.1223,
         0.0116,  0.0084,  0.1070,  0.0195,  0.0647, -0.1003,  0.1218, -0.0149,
        -0.0808, -0.0539,  0.0720, -0.0909,  0.0187, -0.0974,  0.0365,  0.0534,
         0.1002,  0.0488, -0.0039,  0.0430, -0.0285,  0.0922, -0.0023, -0.1090,
        -0.0465, -0.1081, -0.1037,  0.0554,  0.1193, -0.0494, -0.0893, -0.0008,
         0.0709, -0.0112,  0.0506, -0.0140, -0.0871, -0.0452, -0.0507,  0.0925,
         0.0545,  0.0031,  0.0901, -0.0819, -0.1022,  0.1177,  0.0682,  0.0710,
         0.0319, -0.0796,  0.0767, -0.1053, -0.0900, -0.0381,  0.0686, -0.0737,
        -0.0403,  0.0102, -0.1008, -0.0361, -0.0079,  0.1185,  0.0208, -0.0328,
         0.0247, -0.0611, -0.1211,  0.0626, -0.0295,  0.0828,  0.0049, -0.0736])
tensor([-0.3144,  0.1640,  0.0446,  0.1565,  0.1710, -0.1742, -0.3865,  0.2328,
        -0.2310,  0.2252, -0.1768,  0.1028,  0.2241, -0.1739,  0.1541,  0.1140,
        -0.3341,  0.1914,  0.1218, -0.3578, -0.2937,  0.0782,  0.2421,  0.1150,
        -0.0843,  0.1140,  0.0697,  0.1673, -0.1341,  0.3156,  0.2880,  0.2832,
         0.3336,  0.2128,  0.1839,  0.4032,  0.2739, -0.1264, -0.1691, -0.1590,
        -0.0705,  0.3757, -0.0429,  0.2245, -0.1842,  0.1733,  0.1795,  0.1478,
         0.1586, -0.1554, -0.3305,  0.3740, -0.0356, -0.0596, -0.2105,  0.1914,
        -0.3446, -0.2294, -0.2505, -0.0224,  0.2134,  0.1280, -0.1080,  0.2925,
         0.0288,  0.1435, -0.1697,  0.1291, -0.1471, -0.4192, -0.2678, -0.1952,
         0.1161, -0.2414, -0.1003,  0.3968,  0.1392, -0.1654, -0.1768, -0.1190,
         0.2868,  0.0166,  0.2067,  0.2950,  0.1117, -0.0803,  0.0361,  0.2101,
         0.1159,  0.3023, -0.1838,  0.1043, -0.0324, -0.4067,  0.1329,  0.2293,
         0.1920,  0.0314,  0.1923, -0.3552,  0.2367,  0.1863, -0.1724,  0.1156,
         0.1873, -0.4225,  0.3124, -0.4421,  0.2713, -0.2468,  0.0172,  0.1656,
        -0.2724, -0.0024, -0.4208, -0.0936, -0.2528,  0.1944, -0.1471, -0.2259,
        -0.2078, -0.0876, -0.1324, -0.0328,  0.2745,  0.1864,  0.1062, -0.2487])
##########################################################
smi_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([ 0.0908, -0.0218,  0.1303,  0.0428,  0.1062,  0.0524, -0.0434,  0.0069,
         0.0083, -0.0098, -0.0966,  0.1070,  0.0839,  0.0182,  0.0257,  0.0577,
         0.0431, -0.1544,  0.1560, -0.0315, -0.1438, -0.0229,  0.0378,  0.0740,
        -0.0718,  0.0686,  0.1010, -0.0211,  0.0196,  0.0004, -0.0869,  0.0851,
         0.0563, -0.1865, -0.0448,  0.0233, -0.0044, -0.0871,  0.0333, -0.0636,
        -0.0093,  0.0694, -0.0474, -0.0275,  0.0536, -0.0013,  0.0278, -0.1440,
         0.0648, -0.0940, -0.0716, -0.0064, -0.0066,  0.0460, -0.0410, -0.0151,
         0.1032,  0.0126, -0.1224,  0.0236, -0.0851,  0.1177, -0.0971,  0.0309,
         0.0303, -0.0634, -0.0756,  0.0664, -0.1082, -0.0719, -0.0294,  0.1742,
        -0.0507, -0.1417, -0.0692,  0.0769, -0.1397, -0.0533, -0.0683,  0.0896,
         0.0437, -0.2242,  0.0458, -0.1452,  0.0152, -0.0172, -0.1636, -0.1426,
         0.0911, -0.0453, -0.0235, -0.1128,  0.0404,  0.0372, -0.0803, -0.0778,
         0.0084, -0.0989,  0.0883,  0.0558,  0.0959,  0.0394, -0.1747, -0.0454,
        -0.0461, -0.0546, -0.0396,  0.1415,  0.0921,  0.1503,  0.0498, -0.0308,
         0.0623,  0.0241, -0.0265, -0.0646,  0.0582, -0.0950,  0.1013, -0.0506,
        -0.0445,  0.0390,  0.0737,  0.0116,  0.0153, -0.0470,  0.0120,  0.0521])
tensor([ 0.3219, -0.2074,  0.2715,  0.0796,  0.3193, -0.1674,  0.1550,  0.3364,
         0.0618,  0.3370, -0.3376, -0.1240, -0.1738, -0.2278, -0.1254,  0.2168,
        -0.2740,  0.1049,  0.4020, -0.3476, -0.1618,  0.2874, -0.2873, -0.1711,
        -0.3960, -0.0260,  0.3697, -0.3814, -0.2635,  0.1649, -0.4417,  0.2823,
         0.2798, -0.4686,  0.2767, -0.2297,  0.2756, -0.3880,  0.3620,  0.2786,
         0.1910,  0.2583, -0.3484, -0.1367,  0.1861, -0.2371,  0.1037, -0.2177,
         0.2497, -0.2399, -0.3248, -0.1297, -0.2015,  0.0762,  0.1934, -0.3832,
         0.4446, -0.2130, -0.3978,  0.3157,  0.2446, -0.1122,  0.1422,  0.2610,
        -0.0561, -0.1197, -0.1056, -0.1628, -0.4823,  0.1045, -0.3364, -0.0764,
         0.0410, -0.3707, -0.1457,  0.4402, -0.3824, -0.3827, -0.2418, -0.0126,
        -0.1497, -0.3100,  0.0692, -0.3750,  0.1383, -0.2459, -0.4411,  0.1032,
         0.0426,  0.0224, -0.0392,  0.1511, -0.2982, -0.0946,  0.1458, -0.2371,
        -0.2777, -0.2937, -0.2132,  0.2933,  0.2231,  0.1928,  0.0518,  0.1656,
        -0.0614, -0.1589, -0.2480,  0.4416,  0.3618, -0.1143, -0.2829, -0.3309,
        -0.0790,  0.0562,  0.0170, -0.0729,  0.3011,  0.2263,  0.4524, -0.3160,
        -0.2802,  0.0321, -0.0304, -0.2617,  0.2573, -0.2990, -0.2280,  0.3715])
##########################################################
smi_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.1386,  0.1944,  0.2153,  0.3448, -0.0127, -0.2173, -0.3584,  0.3431,
        -0.0955,  0.3459, -0.2413,  0.2034,  0.0105, -0.1738,  0.3636, -0.2762,
        -0.0406,  0.1554,  0.2705, -0.3343, -0.1584,  0.3447, -0.3272,  0.3041,
        -0.0872,  0.0253, -0.0503,  0.3637,  0.0873, -0.2040,  0.2575,  0.3579,
         0.2867,  0.2903,  0.1894, -0.2817,  0.3211, -0.1192, -0.3517, -0.0399,
         0.1839,  0.3356, -0.3510, -0.0867, -0.2607,  0.1420,  0.1362,  0.1942,
         0.2471, -0.0997, -0.0488,  0.3339,  0.2041,  0.3631, -0.3350,  0.3489,
        -0.3642, -0.2570, -0.3677, -0.1321,  0.0110,  0.2291, -0.2103,  0.0299,
         0.1291,  0.0226, -0.3604, -0.2149, -0.3541,  0.0878, -0.3173,  0.0448,
         0.0961, -0.3445,  0.3529,  0.3650,  0.2339, -0.3627, -0.1476,  0.1570,
         0.3081,  0.0546,  0.0954,  0.2378, -0.0936,  0.2970,  0.3660,  0.0349,
         0.1191,  0.0095, -0.2424, -0.2100, -0.0811,  0.3290,  0.2150,  0.0190,
        -0.3482, -0.0626,  0.1554, -0.2223,  0.3491,  0.2641, -0.2630, -0.2161,
         0.3636,  0.2642,  0.2701, -0.3047,  0.3620, -0.0475, -0.1195,  0.2834,
        -0.2449, -0.0785,  0.1236, -0.2029, -0.2510,  0.1106, -0.0180, -0.3105,
        -0.0572, -0.1360,  0.1225, -0.1327, -0.2276,  0.0453, -0.1158, -0.3122])
##########################################################
smi_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([-0.1564,  0.1066,  0.0095,  0.0093,  0.1143,  0.1111, -0.0475, -0.0671,
        -0.0344,  0.0131,  0.0919,  0.1027, -0.1073, -0.0923, -0.0003, -0.0266,
         0.0861,  0.1320,  0.0681, -0.1291, -0.1128,  0.1046, -0.0525, -0.0044,
         0.0342, -0.0032,  0.1413,  0.0288, -0.0564, -0.0057,  0.1935, -0.1761,
         0.0140, -0.0713,  0.0721,  0.0117,  0.0274,  0.0084,  0.1347,  0.2323,
        -0.1280, -0.0329,  0.0725, -0.0807, -0.0554,  0.0508, -0.1118, -0.0715,
         0.0405,  0.0786,  0.0166,  0.1512, -0.0035, -0.0735,  0.0450, -0.0692,
        -0.0522,  0.1661,  0.0937,  0.0310, -0.0841, -0.2145,  0.1380,  0.0028,
         0.0165, -0.0444, -0.0947, -0.1611,  0.0441, -0.0228, -0.0585,  0.1112,
        -0.0365, -0.0601,  0.0663,  0.2396, -0.0826,  0.0522,  0.1807, -0.0041,
         0.0132, -0.0122,  0.0401,  0.0755,  0.0456,  0.0067,  0.0768, -0.0412,
        -0.0587,  0.0322, -0.1698, -0.0100, -0.0287,  0.0411,  0.1089, -0.1542,
         0.0339, -0.0619,  0.0135, -0.0888, -0.0431, -0.0574,  0.1731,  0.0367,
        -0.1337,  0.0373,  0.0058,  0.0531, -0.1077,  0.1485, -0.0425, -0.0028,
        -0.0762,  0.0283,  0.1204,  0.0095,  0.1509, -0.0281, -0.0513, -0.0833,
        -0.0753,  0.0217, -0.0610,  0.0667, -0.0290,  0.0195,  0.0285, -0.1274])
tensor([-0.3975,  0.2554,  0.2087, -0.2330,  0.0639, -0.0399, -0.4482, -0.3271,
         0.1108,  0.4512,  0.0402, -0.1650,  0.0141, -0.2537,  0.0977, -0.0128,
         0.1018, -0.2090,  0.1002, -0.4656, -0.0853, -0.3015,  0.1258, -0.3274,
        -0.0353,  0.3222,  0.4058,  0.0540, -0.0053,  0.3093,  0.4999, -0.5049,
         0.2889, -0.4350, -0.0096, -0.4954,  0.3522,  0.1439,  0.2289,  0.1223,
        -0.0179, -0.3678, -0.2454,  0.0326,  0.2142,  0.1830, -0.0474,  0.2706,
        -0.1191,  0.0026,  0.3218,  0.4685,  0.0960,  0.0252,  0.3778, -0.5445,
        -0.4165, -0.0627,  0.4595, -0.1007, -0.0093,  0.0164, -0.1228,  0.4579,
         0.2099, -0.1122, -0.1498,  0.1102,  0.4439, -0.2823, -0.3738, -0.1149,
         0.0527, -0.3934, -0.0816,  0.5931, -0.2275, -0.1834,  0.0960, -0.0454,
         0.4620, -0.0067, -0.2270,  0.3362, -0.0570, -0.0632,  0.3488,  0.1695,
        -0.2209, -0.0733, -0.0634, -0.2125, -0.0108,  0.4125,  0.1114, -0.5016,
         0.0536, -0.0554,  0.0218, -0.2411,  0.2877, -0.0048, -0.0244, -0.0138,
        -0.0837,  0.3781, -0.3948,  0.3884, -0.5125, -0.1906,  0.0824, -0.3328,
        -0.2913,  0.2068,  0.3930,  0.0466,  0.4978, -0.0056, -0.4984,  0.2160,
        -0.3454,  0.1445,  0.0478, -0.0665, -0.0912, -0.1154, -0.1048, -0.0213])
##########################################################
smi_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.2273,  0.4109,  0.1558, -0.0295, -0.1177, -0.2935,  0.4249, -0.2757,
         0.1271,  0.1270, -0.3058,  0.1317, -0.1163,  0.4155,  0.2403, -0.0020,
        -0.0450, -0.0391,  0.3689,  0.3086,  0.0030,  0.0490, -0.1088,  0.0135,
        -0.0284,  0.3192, -0.1007, -0.3691,  0.3414,  0.3553,  0.2798, -0.3447,
         0.2885, -0.3633, -0.1074, -0.3955,  0.3212,  0.1064, -0.3740,  0.1243,
        -0.1265, -0.3405, -0.0371,  0.0157, -0.0123,  0.4607,  0.1490, -0.0259,
        -0.3716,  0.0957, -0.2965,  0.3319,  0.3708, -0.1317, -0.3509, -0.1435,
         0.3633, -0.1696, -0.3485, -0.1265,  0.0432, -0.2284, -0.1535,  0.3847,
        -0.0728, -0.3722,  0.4388,  0.2802, -0.3506,  0.2969,  0.3288,  0.0120,
         0.1357,  0.3368,  0.0514,  0.3548, -0.0364, -0.1867,  0.0442, -0.3911,
         0.1364, -0.1049, -0.0894,  0.2773, -0.1211, -0.3682,  0.3423, -0.2613,
        -0.3151,  0.0794,  0.3005, -0.2237, -0.3303, -0.3736,  0.4599,  0.4615,
         0.0344,  0.0903,  0.0763,  0.1093,  0.1030,  0.1314, -0.4018, -0.1231,
         0.1381, -0.3485, -0.4295, -0.3343, -0.3745,  0.0332,  0.1304, -0.0090,
         0.2273,  0.0510, -0.3103, -0.3621, -0.3148,  0.0462,  0.3619, -0.1423,
         0.3289,  0.3764, -0.0989, -0.1513, -0.0827, -0.4935, -0.0191, -0.0323])
##########################################################
smi_encoder.encoder.layers.1.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0243,  0.0538,  0.0451,  ..., -0.0568, -0.0165,  0.0449],
        [ 0.0563,  0.0324,  0.0643,  ...,  0.0293,  0.0601,  0.0393],
        [ 0.0591,  0.0161,  0.0080,  ..., -0.0021,  0.0217, -0.0732],
        ...,
        [ 0.0144, -0.0315,  0.0259,  ...,  0.0383, -0.0098,  0.0190],
        [-0.0658,  0.0705,  0.0333,  ...,  0.0334, -0.0171, -0.0618],
        [ 0.0654, -0.0596,  0.0224,  ..., -0.0686, -0.0103, -0.0630]])
tensor([[-0.0121,  0.0552,  0.0500,  ..., -0.0583, -0.0114,  0.0556],
        [ 0.0344,  0.0278,  0.0558,  ...,  0.0337,  0.0519,  0.0228],
        [ 0.0658,  0.0172,  0.0104,  ..., -0.0033,  0.0242, -0.0679],
        ...,
        [ 0.1759,  0.3031,  0.2376,  ..., -0.2610,  0.2128,  0.1656],
        [-0.0057,  0.4101,  0.2109,  ..., -0.3072,  0.1683, -0.0073],
        [ 0.3339, -0.1316,  0.2010,  ..., -0.0482,  0.1471,  0.2361]])
##########################################################
smi_encoder.encoder.layers.1.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 2.6600e-02, -4.1211e-02,  1.4254e-02,  1.6277e-02,  1.9894e-02,
         2.9528e-02, -1.5353e-02,  2.5879e-02, -4.6230e-02, -3.4650e-03,
         2.8108e-02,  1.2776e-02, -4.9461e-03,  8.1675e-03,  1.2565e-02,
        -5.7584e-03, -1.2436e-02, -1.6969e-02, -3.0866e-02,  1.6200e-02,
        -9.3782e-03,  1.2698e-02, -2.0726e-02,  2.6742e-03, -2.1339e-02,
        -2.8005e-02,  1.3882e-02,  5.6292e-03,  9.0946e-03, -5.0900e-03,
        -3.1213e-02,  1.1997e-02, -3.2063e-03, -7.9159e-03,  9.2119e-03,
         8.1925e-03,  3.6980e-03, -9.6801e-03, -7.9444e-03, -1.3846e-03,
         1.2809e-02,  3.9076e-03,  6.6067e-03,  5.7931e-03,  5.9765e-03,
         9.9751e-03,  5.2120e-04,  2.0388e-02, -1.2424e-02, -1.4747e-02,
        -1.9130e-02, -3.2445e-02, -5.1257e-03,  1.7170e-02, -8.2772e-03,
         4.5451e-02, -5.9299e-03,  5.2172e-02,  5.2376e-03, -8.4306e-03,
         1.6324e-02,  4.1477e-02,  2.6409e-02, -1.2739e-02,  3.2033e-03,
        -6.6482e-03, -4.0171e-03,  7.6567e-03, -2.1211e-02,  2.3617e-02,
         2.7591e-03,  7.8795e-03, -2.2763e-02, -1.3313e-02, -1.5262e-02,
        -1.0716e-02, -1.3735e-02, -1.5671e-02,  3.3214e-02, -6.0780e-03,
        -1.4863e-02, -1.3173e-02, -3.3441e-02,  3.9671e-02,  1.3639e-02,
        -1.8534e-02,  1.5478e-02, -3.4425e-04, -7.3702e-03, -4.8126e-03,
         6.0992e-03,  7.7304e-03,  7.5596e-03, -2.7238e-04,  1.4296e-02,
         3.7260e-02, -1.9453e-02,  4.0237e-02, -3.3231e-03,  2.6713e-02,
        -6.0730e-03,  1.4041e-02,  2.3614e-02,  7.7681e-03,  3.3726e-02,
         7.4410e-03,  2.3134e-02, -1.8530e-02, -1.2321e-02,  2.3787e-02,
        -1.2377e-02, -4.5673e-03,  4.6033e-03,  2.9817e-02, -3.9586e-03,
         1.1192e-02, -2.1548e-03,  1.2261e-02, -2.3952e-02,  1.5997e-02,
        -1.6866e-02,  1.6511e-02, -1.5099e-02,  9.0211e-03, -2.2019e-02,
        -1.2645e-02,  7.8625e-04, -1.2903e-02, -1.1108e-08,  4.5725e-09,
         1.2857e-09,  1.8341e-10, -1.3375e-08,  6.1360e-10, -1.4968e-08,
         1.2695e-09,  9.4519e-09, -1.3928e-09, -7.6743e-09, -9.1504e-09,
        -1.2513e-09, -8.5697e-10, -4.3937e-09,  1.2565e-08,  1.7126e-08,
        -2.0224e-09, -1.9128e-08,  1.6368e-09,  1.6406e-08,  9.0963e-09,
         1.8514e-08,  1.1644e-08,  1.8554e-08, -7.2123e-09, -4.1671e-09,
        -3.6527e-09,  9.5236e-09,  3.5991e-09, -1.2375e-08, -6.2916e-09,
         5.5271e-09, -2.6317e-09,  1.7912e-09, -6.6669e-09,  1.5651e-09,
         5.8657e-10, -1.7990e-09,  2.9903e-09,  1.3912e-08, -2.6658e-09,
        -2.1734e-09, -1.0736e-08, -6.3282e-09, -5.8653e-10,  4.9412e-09,
        -3.2142e-09, -4.4840e-09,  5.6147e-09, -2.3936e-08,  1.7772e-08,
        -8.1278e-09, -3.5027e-08,  1.1346e-09, -1.2072e-08, -1.4493e-08,
        -8.7408e-09,  1.2422e-08,  1.9968e-08, -3.6633e-08, -1.5004e-08,
         8.4869e-09,  2.7892e-09,  1.1864e-09,  3.9043e-09, -1.6433e-08,
         5.8473e-09,  4.6762e-09,  4.7608e-10, -1.0407e-08,  1.8688e-09,
         5.0424e-09,  9.6540e-10, -3.1673e-09, -8.7970e-10,  1.8667e-09,
        -9.6888e-09,  4.0625e-09, -6.4859e-09,  3.6567e-09,  9.1338e-09,
        -6.1993e-09, -9.9474e-09, -9.1362e-09,  9.4757e-10, -2.7737e-09,
        -3.4877e-09, -1.0346e-08, -4.6575e-09,  3.3343e-09,  4.3819e-09,
        -4.2287e-09, -3.2692e-10, -9.3506e-10, -2.5486e-09,  1.5738e-09,
         3.7619e-09,  7.5128e-09, -5.3257e-09, -4.1601e-09,  5.5739e-11,
        -8.1077e-09,  5.5895e-09, -7.1838e-09,  1.4826e-09, -1.4992e-08,
        -1.3844e-09, -1.6585e-08, -1.5517e-08,  8.7287e-09, -1.5202e-08,
         1.1105e-09,  6.9918e-09, -9.0147e-09,  2.4721e-10, -4.1878e-09,
        -1.1165e-09, -4.2478e-09, -3.6907e-09,  1.1899e-08,  4.7089e-09,
        -1.7433e-09,  1.1852e-08, -1.7690e-09,  6.4001e-09, -3.1182e-09,
         2.3465e-09, -3.6535e-01, -3.5533e-01,  3.5650e-01,  2.3150e-01,
        -6.8824e-03, -3.0439e-01,  2.1508e-02, -3.4524e-01, -3.5217e-01,
         3.5874e-01,  3.4600e-01, -1.2161e-01,  1.8569e-01, -3.5356e-01,
         4.6786e-02,  2.3415e-01, -3.6313e-01,  3.2717e-02, -3.4465e-01,
         1.2873e-01,  3.1618e-01,  3.6413e-01, -3.4673e-01, -3.5351e-01,
        -6.7963e-03,  3.6541e-01,  8.2424e-03, -1.0265e-01,  8.1442e-02,
        -1.9595e-02,  3.6698e-01,  7.5794e-02,  1.1859e-01, -1.6957e-01,
         3.6448e-01, -2.7100e-01, -3.7112e-01, -3.5595e-01, -3.5223e-01,
         3.4523e-01,  7.3489e-02, -3.7671e-02, -2.5037e-02, -3.8117e-01,
        -5.3699e-02,  3.2962e-01,  3.4119e-01,  4.7520e-02, -3.6236e-01,
         8.4694e-02, -9.7039e-02,  3.7259e-01, -1.2790e-01, -1.0919e-01,
        -3.7064e-01,  5.7968e-04, -3.5079e-01, -3.4298e-01, -1.3465e-01,
         1.2749e-01, -8.2122e-02, -3.8557e-02, -1.3047e-01,  1.4774e-01,
        -1.2088e-01,  1.0762e-02, -1.0342e-01, -1.3185e-01,  1.1302e-01,
         3.2938e-01, -3.5686e-01,  3.7007e-01, -1.0248e-01, -3.6535e-01,
         8.1712e-02, -3.3800e-01,  3.4666e-01,  3.2558e-01, -6.0615e-02,
        -8.1189e-02, -3.5789e-01,  4.6770e-02, -1.0167e-01,  3.5832e-01,
        -3.5357e-01, -3.6928e-01,  3.5510e-01,  3.4854e-02, -1.2310e-01,
         3.9199e-02, -3.6926e-01,  1.3324e-02,  3.5482e-01,  1.2590e-01,
         2.8927e-01,  3.5774e-01,  1.0791e-01, -3.1028e-01, -1.0056e-01,
         7.3204e-02, -2.9075e-01,  3.5872e-01,  3.6623e-01,  5.3300e-02,
        -1.0952e-01, -3.5500e-01,  9.7274e-02,  3.4541e-01,  1.3566e-01,
        -1.3145e-02, -3.4925e-01,  1.2702e-01,  5.7353e-02, -3.5473e-01,
        -1.7493e-02,  2.9125e-01,  3.6758e-01, -3.5414e-01,  9.5424e-02,
        -5.4756e-02,  3.5893e-01,  3.4535e-01, -1.8748e-01,  3.2311e-01,
        -3.2676e-01,  1.0677e-01, -1.2871e-01,  2.9803e-01])
##########################################################
smi_encoder.encoder.layers.1.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0195, -0.0317, -0.0510,  ..., -0.0840,  0.0122, -0.0714],
        [-0.0169, -0.0862, -0.0542,  ..., -0.0039,  0.0410,  0.0698],
        [-0.0497, -0.0115,  0.0451,  ..., -0.0327, -0.0224,  0.0855],
        ...,
        [-0.0498,  0.0312,  0.0274,  ...,  0.0140,  0.0436, -0.0074],
        [ 0.0508,  0.0038,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0864, -0.0189,  ..., -0.0154,  0.0077,  0.0106]])
tensor([[-0.1637, -0.1807,  0.0944,  ..., -0.4168, -0.3021,  0.0856],
        [ 0.1611,  0.0732, -0.2241,  ...,  0.2100,  0.2705, -0.1092],
        [ 0.0949,  0.1517, -0.1004,  ...,  0.2930,  0.2596, -0.0673],
        ...,
        [ 0.2354,  0.2945, -0.2529,  ...,  0.1629,  0.2352, -0.2872],
        [ 0.2147,  0.1921, -0.1491,  ...,  0.3009,  0.2746, -0.2151],
        [-0.3796, -0.4245,  0.3425,  ...,  0.2913,  0.3062,  0.3715]])
##########################################################
smi_encoder.encoder.layers.1.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0875, -0.3121, -0.0737, -0.0528, -0.0938, -0.2446, -0.2465, -0.1451,
         0.3204, -0.0806,  0.0528,  0.1955, -0.3603, -0.0495, -0.2001, -0.0261,
        -0.3974,  0.1665,  0.2106,  0.3912,  0.0170, -0.2316, -0.0805,  0.3406,
        -0.0523, -0.3381, -0.0858, -0.3547,  0.0394,  0.3371,  0.3581, -0.3520,
         0.3763, -0.3525,  0.1277, -0.3808, -0.0571,  0.1025, -0.1230,  0.1143,
        -0.1081, -0.3472, -0.3338,  0.3785,  0.3609, -0.1492, -0.1567, -0.2411,
        -0.0422,  0.0562, -0.3565,  0.3348, -0.1510, -0.3339, -0.3502, -0.1312,
         0.3734, -0.2885, -0.3656, -0.0276, -0.0712, -0.2495, -0.2302,  0.3967,
         0.0645, -0.3578,  0.1779, -0.2235, -0.3282,  0.3431,  0.3491, -0.3478,
         0.1182,  0.3245, -0.3805,  0.3628,  0.0048, -0.3211,  0.0231, -0.1222,
         0.1480, -0.0810, -0.3453,  0.2981,  0.3531, -0.1987,  0.3508, -0.2106,
        -0.3218, -0.0523,  0.1668, -0.2952, -0.3488, -0.3952, -0.2672,  0.0977,
        -0.3062,  0.1111,  0.2422,  0.3912,  0.1263, -0.3122, -0.1052,  0.2281,
         0.0879, -0.3573, -0.3270, -0.3662, -0.3637, -0.1830,  0.3651,  0.1242,
         0.2073,  0.1473, -0.3041, -0.3529, -0.3270, -0.0817,  0.3456,  0.1896,
         0.2841,  0.1043, -0.0632, -0.1155,  0.1279, -0.3399, -0.0936,  0.2323])
##########################################################
smi_encoder.encoder.layers.1.linear1.weight shape: torch.Size([64, 128])
tensor([[-0.0872,  0.0414,  0.1149,  ...,  0.0752,  0.1710,  0.0049],
        [ 0.0190,  0.0100, -0.0402,  ..., -0.0137, -0.0116, -0.0810],
        [ 0.0126, -0.0601, -0.0726,  ..., -0.1002,  0.0593,  0.0684],
        ...,
        [ 0.0932,  0.1116, -0.1140,  ..., -0.0729, -0.0272, -0.0342],
        [ 0.0062, -0.0873, -0.0474,  ..., -0.0160, -0.1007, -0.0511],
        [-0.0671, -0.0344, -0.0755,  ...,  0.0474, -0.0155, -0.0302]])
tensor([[-0.2737, -0.0667,  0.0434,  ...,  0.1957,  0.1646, -0.1633],
        [ 0.3345, -0.1720, -0.2499,  ..., -0.3081, -0.2493, -0.2309],
        [ 0.3371, -0.2700, -0.3287,  ..., -0.3312, -0.1591, -0.0772],
        ...,
        [-0.0564,  0.1132,  0.0864,  ...,  0.2803, -0.0426,  0.4117],
        [-0.1583, -0.2065, -0.1587,  ...,  0.1199, -0.1038, -0.2201],
        [-0.2248, -0.1605, -0.1577,  ...,  0.1860, -0.0405, -0.2140]])
##########################################################
smi_encoder.encoder.layers.1.linear1.bias shape: torch.Size([64])
tensor([ 0.0390, -0.0360,  0.0304,  0.0522,  0.0824, -0.0713,  0.0320, -0.0662,
         0.0418,  0.0410, -0.0810,  0.0478,  0.0367,  0.0600,  0.0502,  0.0205,
        -0.0817,  0.0190,  0.0307, -0.0279, -0.0589,  0.0853, -0.0780,  0.0147,
        -0.0857, -0.0591,  0.0313,  0.0502, -0.0049, -0.0560, -0.0108,  0.0365,
        -0.0032, -0.0299,  0.0512, -0.0053, -0.0227,  0.0858, -0.0145, -0.0820,
        -0.0140, -0.0369,  0.0268, -0.0360, -0.0799, -0.0019,  0.0174, -0.0067,
         0.0582, -0.0320,  0.0775,  0.0108,  0.0556, -0.0371, -0.0313, -0.0403,
         0.0199, -0.0528, -0.0291,  0.0233,  0.0368, -0.0160,  0.0090,  0.0428])
tensor([-0.1874, -0.1661, -0.0978,  0.3950, -0.1461, -0.4275, -0.0952, -0.4072,
        -0.0844,  0.4122,  0.1837,  0.3610,  0.3196, -0.1677, -0.0809,  0.5538,
        -0.2136, -0.1172, -0.1965, -0.1587, -0.1931,  0.4638, -0.2943,  0.6381,
        -0.0737,  0.1036, -0.1027, -0.1756, -0.2275, -0.1880, -0.2370,  0.1419,
        -0.1143, -0.4189,  0.5064, -0.2230, -0.2445, -0.1412, -0.2425, -0.1260,
        -0.2424, -0.2638,  0.1909,  0.3145, -0.3443,  0.2597, -0.1151, -0.2331,
        -0.0894, -0.1656,  0.2027, -0.2146, -0.0526, -0.4186, -0.3764,  0.3606,
        -0.1068,  0.0520, -0.3886, -0.1992, -0.1865,  0.1989, -0.2176, -0.1844])
##########################################################
smi_encoder.encoder.layers.1.linear2.weight shape: torch.Size([128, 64])
tensor([[ 0.0475,  0.0683,  0.0447,  ...,  0.1447,  0.0154, -0.0073],
        [ 0.0510,  0.0163,  0.0349,  ..., -0.0289,  0.0469, -0.0348],
        [-0.0950,  0.0110, -0.0690,  ..., -0.0107,  0.0720,  0.1142],
        ...,
        [-0.0323, -0.0855, -0.0223,  ...,  0.0215, -0.0378,  0.1264],
        [ 0.0650, -0.0422, -0.0624,  ..., -0.1462,  0.0460,  0.0304],
        [-0.0261, -0.0060,  0.0096,  ..., -0.0020, -0.0240, -0.0032]])
tensor([[-0.1667,  0.2817,  0.3801,  ...,  0.3101,  0.0858, -0.2257],
        [ 0.2434, -0.1901, -0.1012,  ..., -0.2593,  0.2154,  0.1516],
        [ 0.0801, -0.1810, -0.2476,  ..., -0.3507,  0.2141,  0.3031],
        ...,
        [ 0.1729, -0.2516, -0.1622,  ..., -0.1774,  0.1632,  0.3392],
        [ 0.2473,  0.2254,  0.2189,  ...,  0.0924,  0.2065,  0.2226],
        [ 0.1733,  0.2955,  0.3418,  ...,  0.0606,  0.1782,  0.2009]])
##########################################################
smi_encoder.encoder.layers.1.linear2.bias shape: torch.Size([128])
tensor([-0.0847, -0.0490, -0.0445, -0.1036,  0.1047,  0.0644, -0.0245, -0.0003,
         0.0468, -0.1232,  0.0717, -0.1169,  0.0174,  0.0834,  0.0273,  0.0251,
        -0.1055, -0.0227, -0.0934, -0.1000, -0.1053, -0.0765,  0.0598, -0.0744,
         0.0463, -0.1234,  0.0209,  0.0470,  0.1235, -0.0195,  0.0541, -0.0480,
         0.1148, -0.0727,  0.1159,  0.0683,  0.0448,  0.0013,  0.0749, -0.0401,
        -0.0255,  0.0300, -0.0717,  0.0446,  0.1231, -0.0057,  0.0908, -0.0754,
         0.0632, -0.0747,  0.0050,  0.0100, -0.0558, -0.1103, -0.0367, -0.1223,
         0.0116,  0.0084,  0.1070,  0.0195,  0.0647, -0.1003,  0.1218, -0.0149,
        -0.0808, -0.0539,  0.0720, -0.0909,  0.0187, -0.0974,  0.0365,  0.0534,
         0.1002,  0.0488, -0.0039,  0.0430, -0.0285,  0.0922, -0.0023, -0.1090,
        -0.0465, -0.1081, -0.1037,  0.0554,  0.1193, -0.0494, -0.0893, -0.0008,
         0.0709, -0.0112,  0.0506, -0.0140, -0.0871, -0.0452, -0.0507,  0.0925,
         0.0545,  0.0031,  0.0901, -0.0819, -0.1022,  0.1177,  0.0682,  0.0710,
         0.0319, -0.0796,  0.0767, -0.1053, -0.0900, -0.0381,  0.0686, -0.0737,
        -0.0403,  0.0102, -0.1008, -0.0361, -0.0079,  0.1185,  0.0208, -0.0328,
         0.0247, -0.0611, -0.1211,  0.0626, -0.0295,  0.0828,  0.0049, -0.0736])
tensor([ 0.0319, -0.1937, -0.1907,  0.0096, -0.0575, -0.3961, -0.4565,  0.3203,
        -0.0220, -0.3843, -0.1054, -0.2016,  0.3882,  0.4036,  0.2393,  0.3828,
        -0.6120, -0.4599, -0.1811, -0.5407,  0.0113,  0.0656, -0.0805, -0.5126,
        -0.0834, -0.0168, -0.0875, -0.0835,  0.4375,  0.3158,  0.0537, -0.1632,
         0.4879, -0.3359,  0.1533,  0.0688,  0.5224, -0.1299,  0.0769, -0.1657,
        -0.4141,  0.3713, -0.0330,  0.3371, -0.0167, -0.0803,  0.0613, -0.2482,
        -0.2027, -0.2806,  0.3103,  0.3548, -0.1129, -0.0568,  0.3401,  0.0073,
         0.3873, -0.4329,  0.4843,  0.4816, -0.1466, -0.4879,  0.4978, -0.1740,
        -0.5401,  0.2387, -0.2123, -0.3051,  0.3632, -0.2477, -0.2983,  0.2587,
         0.5807,  0.3838,  0.3368,  0.4002, -0.1112,  0.3549, -0.0938, -0.2375,
         0.0760,  0.0152, -0.4515, -0.0763,  0.0029, -0.3268, -0.4497,  0.1507,
        -0.0310,  0.3473, -0.3292, -0.4009,  0.0325, -0.5332, -0.3325,  0.1859,
         0.4149, -0.2794,  0.4595, -0.5540,  0.0224,  0.3243, -0.0498,  0.1339,
         0.0467,  0.2353, -0.0576, -0.4557, -0.4490, -0.3035,  0.4352, -0.4642,
         0.2167, -0.1239, -0.2688,  0.0739, -0.4567,  0.4872,  0.3749,  0.0741,
         0.1068,  0.0690, -0.0507, -0.0677, -0.1436, -0.0333,  0.4723,  0.1755])
##########################################################
smi_encoder.encoder.layers.1.norm1.weight shape: torch.Size([128])
tensor([ 0.0908, -0.0218,  0.1303,  0.0428,  0.1062,  0.0524, -0.0434,  0.0069,
         0.0083, -0.0098, -0.0966,  0.1070,  0.0839,  0.0182,  0.0257,  0.0577,
         0.0431, -0.1544,  0.1560, -0.0315, -0.1438, -0.0229,  0.0378,  0.0740,
        -0.0718,  0.0686,  0.1010, -0.0211,  0.0196,  0.0004, -0.0869,  0.0851,
         0.0563, -0.1865, -0.0448,  0.0233, -0.0044, -0.0871,  0.0333, -0.0636,
        -0.0093,  0.0694, -0.0474, -0.0275,  0.0536, -0.0013,  0.0278, -0.1440,
         0.0648, -0.0940, -0.0716, -0.0064, -0.0066,  0.0460, -0.0410, -0.0151,
         0.1032,  0.0126, -0.1224,  0.0236, -0.0851,  0.1177, -0.0971,  0.0309,
         0.0303, -0.0634, -0.0756,  0.0664, -0.1082, -0.0719, -0.0294,  0.1742,
        -0.0507, -0.1417, -0.0692,  0.0769, -0.1397, -0.0533, -0.0683,  0.0896,
         0.0437, -0.2242,  0.0458, -0.1452,  0.0152, -0.0172, -0.1636, -0.1426,
         0.0911, -0.0453, -0.0235, -0.1128,  0.0404,  0.0372, -0.0803, -0.0778,
         0.0084, -0.0989,  0.0883,  0.0558,  0.0959,  0.0394, -0.1747, -0.0454,
        -0.0461, -0.0546, -0.0396,  0.1415,  0.0921,  0.1503,  0.0498, -0.0308,
         0.0623,  0.0241, -0.0265, -0.0646,  0.0582, -0.0950,  0.1013, -0.0506,
        -0.0445,  0.0390,  0.0737,  0.0116,  0.0153, -0.0470,  0.0120,  0.0521])
tensor([ 0.0293, -0.1651, -0.0145,  0.1810, -0.0242, -0.0623,  0.1926,  0.3125,
         0.1716,  0.0047,  0.3918, -0.2441, -0.3333,  0.1039,  0.2909,  0.1964,
         0.5433,  0.2000, -0.2160, -0.4676, -0.0185, -0.1829, -0.1078,  0.3215,
         0.0588,  0.4195, -0.0161,  0.3204,  0.0893,  0.3330, -0.4119,  0.3944,
         0.4415, -0.5571,  0.0372, -0.5921,  0.1380,  0.0567,  0.1426,  0.0591,
        -0.1482, -0.2413,  0.0393,  0.3085, -0.3925,  0.1532,  0.1012,  0.2603,
         0.2093,  0.0287, -0.3756,  0.3105,  0.1177, -0.4131, -0.4103,  0.1181,
         0.4626, -0.1302, -0.4975, -0.0988,  0.0414,  0.1911, -0.0492, -0.5132,
        -0.0918, -0.4293, -0.1854,  0.0378, -0.4352, -0.2267, -0.3374,  0.2614,
         0.1085, -0.4305,  0.4620,  0.4485, -0.0234,  0.2310,  0.0500, -0.2594,
        -0.0882, -0.0872,  0.3770, -0.3891, -0.4620, -0.1013, -0.5367,  0.0930,
         0.2969,  0.0838, -0.0697,  0.4024, -0.2758,  0.5020, -0.2346, -0.0346,
        -0.0250,  0.0306,  0.4063, -0.3883, -0.0432,  0.0593,  0.1934,  0.1434,
         0.0949, -0.3833,  0.2208,  0.4705,  0.4440, -0.1973,  0.4223,  0.0011,
        -0.1849,  0.2590, -0.3178, -0.3288,  0.4942,  0.0369,  0.4517, -0.0013,
        -0.1008, -0.0910, -0.0345, -0.1204,  0.1900,  0.2831,  0.1498, -0.3741])
##########################################################
smi_encoder.encoder.layers.1.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.1327,  0.1845, -0.1196,  0.2406, -0.1356, -0.1101, -0.0997,  0.2887,
        -0.1229, -0.0145,  0.2230, -0.1473,  0.2084,  0.0921,  0.3072,  0.2442,
        -0.4836,  0.1276, -0.1587, -0.4226,  0.1214,  0.1153, -0.1632,  0.3028,
        -0.1530, -0.3732, -0.1408, -0.1321,  0.2952,  0.3404, -0.3305, -0.3193,
         0.3765,  0.3771,  0.0110,  0.2561,  0.3105, -0.1337, -0.1274, -0.1570,
        -0.3698, -0.3207,  0.1717,  0.2150, -0.2028,  0.3316, -0.2858, -0.1439,
        -0.0152,  0.0227,  0.3104,  0.3278,  0.3922,  0.1443,  0.3608,  0.1346,
         0.3565, -0.1406,  0.3635, -0.0149, -0.1122, -0.3120,  0.2943, -0.2587,
        -0.0316,  0.3683, -0.3092, -0.4116,  0.3317, -0.2118, -0.3218, -0.1273,
        -0.1274, -0.2968, -0.2777,  0.3607, -0.1070, -0.0661, -0.0832,  0.0040,
         0.1625,  0.1132, -0.3415, -0.2217, -0.1864,  0.2218, -0.3518,  0.0135,
        -0.3887, -0.0843, -0.3114, -0.2895,  0.1285, -0.4608,  0.2208, -0.0944,
         0.2936, -0.0909,  0.3917, -0.4012,  0.1256,  0.1458, -0.1625,  0.1847,
        -0.0829,  0.3364, -0.1876, -0.3300, -0.3500,  0.0272,  0.3573, -0.1804,
        -0.1994, -0.3160,  0.3441,  0.2954, -0.4629, -0.1025,  0.3522, -0.1018,
        -0.1105,  0.1445, -0.0516, -0.1343, -0.3364, -0.1095,  0.3915, -0.2201])
##########################################################
smi_encoder.encoder.layers.1.norm2.weight shape: torch.Size([128])
tensor([-0.1564,  0.1066,  0.0095,  0.0093,  0.1143,  0.1111, -0.0475, -0.0671,
        -0.0344,  0.0131,  0.0919,  0.1027, -0.1073, -0.0923, -0.0003, -0.0266,
         0.0861,  0.1320,  0.0681, -0.1291, -0.1128,  0.1046, -0.0525, -0.0044,
         0.0342, -0.0032,  0.1413,  0.0288, -0.0564, -0.0057,  0.1935, -0.1761,
         0.0140, -0.0713,  0.0721,  0.0117,  0.0274,  0.0084,  0.1347,  0.2323,
        -0.1280, -0.0329,  0.0725, -0.0807, -0.0554,  0.0508, -0.1118, -0.0715,
         0.0405,  0.0786,  0.0166,  0.1512, -0.0035, -0.0735,  0.0450, -0.0692,
        -0.0522,  0.1661,  0.0937,  0.0310, -0.0841, -0.2145,  0.1380,  0.0028,
         0.0165, -0.0444, -0.0947, -0.1611,  0.0441, -0.0228, -0.0585,  0.1112,
        -0.0365, -0.0601,  0.0663,  0.2396, -0.0826,  0.0522,  0.1807, -0.0041,
         0.0132, -0.0122,  0.0401,  0.0755,  0.0456,  0.0067,  0.0768, -0.0412,
        -0.0587,  0.0322, -0.1698, -0.0100, -0.0287,  0.0411,  0.1089, -0.1542,
         0.0339, -0.0619,  0.0135, -0.0888, -0.0431, -0.0574,  0.1731,  0.0367,
        -0.1337,  0.0373,  0.0058,  0.0531, -0.1077,  0.1485, -0.0425, -0.0028,
        -0.0762,  0.0283,  0.1204,  0.0095,  0.1509, -0.0281, -0.0513, -0.0833,
        -0.0753,  0.0217, -0.0610,  0.0667, -0.0290,  0.0195,  0.0285, -0.1274])
tensor([-0.0193,  0.0760,  0.1440,  0.1519, -0.2356,  0.3910, -0.6477,  0.3933,
         0.2584,  0.1611, -0.2852,  0.2376, -0.2728, -0.4132,  0.6302,  0.5235,
         0.6229,  0.3700,  0.2007, -0.7019,  0.0147,  0.2632, -0.2001, -0.5816,
        -0.1429,  0.1427, -0.2266, -0.1116, -0.2946, -0.3384,  0.1447,  0.0737,
         0.5069, -0.4578,  0.1827, -0.2752, -0.5089,  0.1265,  0.0776, -0.1414,
        -0.6288,  0.4447, -0.1892, -0.2504, -0.2065, -0.2580,  0.2270, -0.2132,
        -0.1476,  0.0903,  0.3257,  0.5375,  0.1298,  0.0267,  0.5682,  0.0665,
        -0.4909,  0.4490, -0.3652, -0.4217, -0.2670, -0.4769,  0.3429,  0.2701,
         0.3669,  0.5507, -0.3047, -0.1983,  0.4485, -0.0411, -0.4138,  0.0836,
         0.5699, -0.2089, -0.2715,  0.4644,  0.1074, -0.3416,  0.0469, -0.0944,
        -0.2549,  0.1218, -0.3326,  0.1207, -0.1063, -0.1569,  0.4738,  0.1323,
        -0.1832,  0.5106, -0.3447, -0.5286,  0.1114,  0.4237, -0.2146,  0.2148,
        -0.3831, -0.1774,  0.5579, -0.6993,  0.1116,  0.2304, -0.1155, -0.0342,
        -0.0353, -0.2736, -0.1510, -0.3166, -0.5216,  0.4656,  0.4283,  0.3819,
         0.1976,  0.0819, -0.2254, -0.2799,  0.6987,  0.4825, -0.4448, -0.0165,
        -0.0536,  0.1718,  0.0532, -0.0627, -0.0619,  0.0415, -0.4115, -0.2523])
##########################################################
smi_encoder.encoder.layers.1.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-6.4905e-02,  1.9467e-01,  1.9368e-01, -8.0414e-02, -3.0963e-01,
        -4.9854e-01,  5.3551e-01,  3.8139e-01, -2.2145e-01, -1.7641e-01,
         4.4099e-03,  3.6041e-01, -4.0847e-01, -3.5008e-01,  5.9221e-01,
         4.9902e-01, -5.3508e-01, -4.6592e-01,  4.3308e-01,  5.5212e-01,
        -7.5716e-02,  3.9188e-01, -1.1131e-01,  5.7958e-01, -3.7921e-02,
        -8.7280e-02, -2.6552e-01, -1.1027e-01, -3.4330e-01, -1.5181e-01,
         2.8392e-02,  2.1815e-01,  4.4827e-01,  3.7474e-01, -4.0721e-01,
        -1.6323e-01, -5.1749e-01,  3.6179e-01, -1.5531e-01,  2.1848e-02,
         4.9001e-01,  4.4930e-01, -1.9382e-01, -1.3610e-01, -1.0828e-01,
        -2.5184e-01,  3.9787e-01, -2.1173e-01, -2.0069e-01, -1.1569e-04,
         3.1945e-01,  3.7527e-01, -1.3284e-01,  2.5023e-01,  4.5113e-01,
        -1.2508e-01, -4.4646e-01, -5.0015e-01, -5.2847e-01, -4.6960e-01,
        -4.8801e-03,  4.5517e-01,  3.9868e-01, -2.1792e-01, -3.5932e-01,
         3.7413e-01,  4.0122e-01,  3.8416e-02,  3.7302e-01,  3.8331e-02,
         3.5426e-01, -1.6777e-01,  5.8376e-01,  1.6742e-01, -3.9590e-01,
         1.8790e-01, -1.8827e-01, -1.1302e-01,  1.1900e-01,  1.3346e-01,
        -8.3922e-02, -1.0217e-01,  3.6914e-01, -5.4933e-02,  1.5575e-02,
         3.9269e-02, -3.9819e-01, -3.7523e-01,  6.3200e-02,  4.3666e-01,
         3.9510e-01,  4.5114e-01, -1.0187e-01, -3.8054e-01,  2.1123e-01,
        -3.9906e-02, -3.8904e-01,  2.2910e-01,  5.1168e-01,  5.8501e-01,
        -5.7569e-02,  2.8371e-01, -1.6649e-01, -4.5937e-01, -2.2904e-01,
        -1.1533e-01,  6.0727e-03,  3.6846e-01,  4.0519e-01, -4.9630e-01,
         4.1667e-01, -4.3193e-01,  6.9586e-02, -4.5220e-01, -8.7234e-02,
        -1.9310e-01, -5.5492e-01,  4.8221e-01, -1.9255e-01,  2.4626e-01,
        -1.9409e-01, -1.0546e-01, -4.7948e-01, -1.0540e-01, -4.4787e-01,
         2.9782e-01, -4.6556e-01, -4.2994e-01])
##########################################################
prot_encoder.embedding.weight shape: torch.Size([29, 128])
tensor([[ 2.4886e-01,  1.9467e-01,  2.3676e-01,  ..., -1.7926e-01,
         -8.3672e-01,  6.2781e-01],
        [ 3.8768e-01, -8.0246e-01, -1.1083e-01,  ..., -6.9111e-02,
         -1.7946e-02,  8.1375e-01],
        [-3.6332e-02, -6.9242e-01, -1.1287e+00,  ..., -7.9413e-01,
         -4.9074e-01, -8.7455e-01],
        ...,
        [ 7.5512e-01, -5.5864e-01, -5.0096e-01,  ...,  2.4155e-01,
          5.0867e-01, -1.3138e+00],
        [-3.2454e-02, -7.2644e-01,  7.3096e-01,  ..., -9.9326e-01,
          4.8812e-01,  1.4374e-03],
        [-1.9197e+00,  1.5667e-01,  3.5023e-01,  ...,  7.4790e-01,
         -3.3693e-01, -4.8888e-01]])
tensor([[ 2.4886e-01,  1.9467e-01,  2.3676e-01,  ..., -1.7926e-01,
         -8.3672e-01,  6.2781e-01],
        [ 5.1008e-01, -7.3678e-01, -3.7350e-01,  ...,  8.4983e-02,
         -1.2232e-01,  5.1865e-01],
        [-3.6332e-02, -6.9242e-01, -1.1287e+00,  ..., -7.9413e-01,
         -4.9074e-01, -8.7455e-01],
        ...,
        [ 7.5512e-01, -5.5864e-01, -5.0096e-01,  ...,  2.4155e-01,
          5.0867e-01, -1.3138e+00],
        [-3.2454e-02, -7.2644e-01,  7.3096e-01,  ..., -9.9326e-01,
          4.8812e-01,  1.4374e-03],
        [-1.9197e+00,  1.5667e-01,  3.5023e-01,  ...,  7.4790e-01,
         -3.3693e-01, -4.8888e-01]])
##########################################################
prot_encoder.dense.weight shape: torch.Size([300, 2500])
tensor([[-0.0036,  0.0263,  0.0109,  ...,  0.0025, -0.0089,  0.0139],
        [ 0.0142, -0.0086,  0.0105,  ...,  0.0009, -0.0474, -0.0196],
        [-0.0346, -0.0041,  0.0089,  ..., -0.0072,  0.0250,  0.0018],
        ...,
        [ 0.0089,  0.0095,  0.0079,  ...,  0.0075, -0.0312, -0.0206],
        [-0.0133,  0.0162, -0.0057,  ..., -0.0081,  0.0401,  0.0026],
        [-0.0078, -0.0156,  0.0075,  ..., -0.0021,  0.0118,  0.0218]])
tensor([[-0.2175,  0.2126,  0.2031,  ..., -0.1103, -0.1217, -0.0990],
        [-0.1882, -0.1874,  0.1253,  ..., -0.1456, -0.1940, -0.1662],
        [ 0.1722, -0.1846, -0.1389,  ...,  0.1737,  0.2059,  0.1827],
        ...,
        [-0.1233, -0.1577,  0.0684,  ...,  0.1355,  0.0969,  0.1074],
        [ 0.1959, -0.1965,  0.0638,  ...,  0.1998,  0.2479,  0.2105],
        [ 0.1793, -0.1087, -0.0517,  ...,  0.1254,  0.1393,  0.1494]])
##########################################################
prot_encoder.dense.bias shape: torch.Size([300])
tensor([-0.0078,  0.0094, -0.0063, -0.0140,  0.0074,  0.0195, -0.0125,  0.0059,
         0.0096, -0.0005, -0.0186,  0.0013, -0.0123,  0.0081, -0.0027, -0.0117,
        -0.0083,  0.0044,  0.0033, -0.0121,  0.0047,  0.0170,  0.0196,  0.0009,
         0.0023, -0.0177, -0.0168,  0.0094, -0.0172,  0.0051, -0.0088,  0.0029,
         0.0172,  0.0185,  0.0027, -0.0102,  0.0097, -0.0132, -0.0148, -0.0030,
        -0.0174,  0.0108, -0.0040,  0.0165, -0.0176, -0.0044,  0.0107, -0.0140,
         0.0087, -0.0003, -0.0091,  0.0036,  0.0112, -0.0167,  0.0190,  0.0162,
        -0.0141,  0.0004,  0.0045,  0.0113, -0.0163, -0.0021, -0.0133, -0.0196,
         0.0016, -0.0107, -0.0144, -0.0139,  0.0147,  0.0026, -0.0056,  0.0153,
        -0.0144,  0.0161,  0.0169, -0.0040,  0.0194, -0.0103, -0.0020, -0.0047,
         0.0035,  0.0160, -0.0132,  0.0038,  0.0160,  0.0170, -0.0016, -0.0085,
        -0.0102, -0.0090,  0.0012,  0.0163, -0.0095, -0.0087, -0.0005, -0.0134,
         0.0032,  0.0065, -0.0032,  0.0200,  0.0068,  0.0068, -0.0199,  0.0191,
         0.0131, -0.0103, -0.0075,  0.0094, -0.0198,  0.0125, -0.0149, -0.0109,
        -0.0118, -0.0199, -0.0129, -0.0078,  0.0031,  0.0063,  0.0183, -0.0197,
        -0.0022, -0.0105, -0.0067,  0.0004, -0.0052, -0.0043, -0.0143, -0.0137,
        -0.0121,  0.0019,  0.0193,  0.0067, -0.0141,  0.0137, -0.0161, -0.0068,
         0.0089,  0.0186,  0.0196, -0.0116, -0.0072, -0.0124,  0.0144,  0.0112,
         0.0134, -0.0162,  0.0187, -0.0024, -0.0150,  0.0094, -0.0188,  0.0039,
        -0.0002,  0.0028, -0.0120,  0.0164, -0.0079, -0.0087, -0.0197, -0.0182,
         0.0069, -0.0078,  0.0057, -0.0155, -0.0104, -0.0114, -0.0001, -0.0087,
         0.0087, -0.0048, -0.0050, -0.0036, -0.0048,  0.0138, -0.0128,  0.0111,
        -0.0160,  0.0177, -0.0136, -0.0129, -0.0142,  0.0101, -0.0178,  0.0115,
         0.0190,  0.0069,  0.0034, -0.0080,  0.0184,  0.0152, -0.0040,  0.0194,
         0.0012, -0.0030, -0.0005, -0.0155,  0.0028,  0.0063,  0.0047,  0.0046,
        -0.0150,  0.0034,  0.0050, -0.0025, -0.0089, -0.0160, -0.0081, -0.0002,
         0.0014, -0.0046, -0.0176,  0.0086, -0.0040,  0.0095, -0.0148,  0.0121,
         0.0048,  0.0006,  0.0050, -0.0023,  0.0062, -0.0028,  0.0040,  0.0128,
        -0.0065,  0.0193,  0.0016,  0.0025,  0.0140,  0.0172, -0.0089,  0.0150,
        -0.0156,  0.0008,  0.0124,  0.0110,  0.0161, -0.0191, -0.0133, -0.0008,
         0.0073,  0.0079, -0.0071,  0.0161, -0.0130, -0.0044, -0.0036,  0.0022,
        -0.0023, -0.0199, -0.0099, -0.0166, -0.0118,  0.0176, -0.0132, -0.0168,
         0.0152, -0.0183, -0.0154,  0.0155,  0.0097, -0.0147, -0.0133,  0.0113,
         0.0097,  0.0137, -0.0002, -0.0160,  0.0082,  0.0055,  0.0137, -0.0051,
        -0.0073,  0.0121, -0.0074,  0.0075, -0.0044, -0.0181,  0.0007, -0.0171,
         0.0046,  0.0112, -0.0181, -0.0197, -0.0067, -0.0131,  0.0120,  0.0101,
         0.0012,  0.0008, -0.0099, -0.0051, -0.0015, -0.0189, -0.0015,  0.0177,
         0.0098,  0.0008,  0.0181,  0.0087])
tensor([ 0.1683, -0.0320, -0.1605, -0.1535, -0.1859, -0.1228, -0.1865, -0.1678,
        -0.1158,  0.1379,  0.1574,  0.1658,  0.1386,  0.0772, -0.0607,  0.1514,
         0.1709, -0.0524,  0.1062, -0.1366, -0.0762, -0.0139,  0.2030, -0.1450,
        -0.1992, -0.1820, -0.2048,  0.2020,  0.1593,  0.2007,  0.0904,  0.1244,
         0.1975, -0.1856,  0.1702,  0.0853, -0.0875,  0.1409,  0.0341, -0.1461,
        -0.1232,  0.1417, -0.1523, -0.1515,  0.1837,  0.1840,  0.0790,  0.0831,
         0.0437, -0.0903, -0.1882, -0.1809, -0.1928,  0.1027,  0.2291, -0.1342,
        -0.1616, -0.1907, -0.0016,  0.1791,  0.0895, -0.1659,  0.1523, -0.1938,
        -0.1130,  0.0215, -0.0749,  0.1809,  0.0674,  0.1350,  0.1646,  0.1569,
        -0.0976,  0.0632,  0.2007, -0.1215, -0.1624, -0.0621,  0.1549, -0.1388,
        -0.0759,  0.1131, -0.0578,  0.1015,  0.0937, -0.1167, -0.1463,  0.0275,
        -0.1393,  0.1198,  0.1430,  0.0949, -0.1807,  0.1697,  0.1910,  0.1218,
         0.1459, -0.1564,  0.1428,  0.0372,  0.0765, -0.1341, -0.1990, -0.0803,
         0.1137,  0.0776, -0.1593,  0.1640, -0.2115, -0.0828,  0.1440, -0.1354,
        -0.1413, -0.0845, -0.1262, -0.0542, -0.1737, -0.1185,  0.2180,  0.1204,
         0.1504, -0.2049, -0.1180, -0.0861, -0.1510,  0.1745,  0.0664,  0.1820,
         0.0677,  0.1957,  0.1614,  0.0455, -0.1839,  0.0701, -0.1156, -0.1539,
         0.1594,  0.1988, -0.1612,  0.1778,  0.0312, -0.2151,  0.1763,  0.0566,
        -0.0125, -0.1267,  0.0092,  0.1553, -0.1560,  0.0972,  0.1196, -0.1189,
         0.1450,  0.1756, -0.2128,  0.1951, -0.1031,  0.1229, -0.1950, -0.1300,
         0.1794,  0.1905,  0.1782,  0.0637,  0.1263,  0.1424, -0.1977,  0.0426,
         0.1037,  0.0638, -0.1413,  0.1422,  0.1063,  0.1502,  0.0542,  0.1995,
        -0.1937,  0.2107, -0.1081, -0.0978,  0.0996, -0.1020, -0.1634, -0.0940,
         0.1139,  0.1464,  0.1428,  0.1450,  0.1799,  0.2057,  0.0860,  0.0136,
         0.1506,  0.1194, -0.1587,  0.1370,  0.1708,  0.1918,  0.1301,  0.1876,
         0.1358,  0.1487, -0.1580,  0.1346, -0.1664, -0.1888,  0.1605,  0.1380,
         0.1292, -0.1915,  0.0936,  0.1891,  0.0972,  0.0807,  0.0673, -0.1685,
        -0.0087, -0.1357,  0.0874, -0.1735,  0.2024, -0.1640,  0.0225, -0.1525,
        -0.2130, -0.0708, -0.1058,  0.1315, -0.0623,  0.2068, -0.1521, -0.0760,
         0.1090,  0.1523, -0.1754,  0.0532,  0.1904, -0.1302, -0.1393, -0.1836,
         0.1603, -0.1777, -0.1923,  0.1792,  0.1840, -0.1277,  0.0660,  0.1791,
         0.0440,  0.1347, -0.0909, -0.1946,  0.0227, -0.0943, -0.1897, -0.1981,
        -0.1823, -0.1058,  0.0170, -0.1062, -0.1036, -0.0722, -0.1838,  0.0453,
         0.1168, -0.1833, -0.1686,  0.1140, -0.0640, -0.1985, -0.1542, -0.1983,
        -0.1554, -0.1244, -0.0762, -0.1418, -0.1899,  0.1405,  0.0734,  0.0324,
        -0.0573,  0.1308, -0.1158, -0.2035,  0.1237,  0.1120, -0.1237,  0.1668,
         0.1675, -0.1135,  0.0952,  0.0999, -0.0968,  0.1463,  0.1485,  0.1241,
         0.1026,  0.1149, -0.1885, -0.1267])
##########################################################
prot_encoder.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[ 0.0490, -0.0697,  0.0255,  ..., -0.0324, -0.0919, -0.0152],
        [ 0.0257,  0.0130, -0.0367,  ..., -0.0648, -0.0275,  0.0540],
        [ 0.0472, -0.0447,  0.0434,  ...,  0.0240,  0.0600, -0.0123],
        ...,
        [-0.1698, -0.0307,  0.0562,  ...,  0.0085, -0.0126, -0.1477],
        [ 0.0695, -0.0493, -0.0109,  ..., -0.1121,  0.0075, -0.1092],
        [ 0.0096, -0.0407,  0.1135,  ...,  0.1287,  0.0086,  0.1576]])
tensor([[ 0.1845,  0.1803,  0.2293,  ...,  0.0934,  0.0272,  0.1521],
        [ 0.1094,  0.3058,  0.1136,  ..., -0.1627, -0.1748, -0.0497],
        [ 0.3128,  0.0469,  0.1936,  ...,  0.0948,  0.2233,  0.2699],
        ...,
        [-0.0619,  0.1676,  0.2109,  ...,  0.1628,  0.1331, -0.3569],
        [-0.0561, -0.1620, -0.1397,  ..., -0.2054, -0.1065, -0.1753],
        [ 0.0772, -0.2298,  0.2072,  ...,  0.0233,  0.1516,  0.3230]])
##########################################################
prot_encoder.ffn.dense1.bias shape: torch.Size([64])
tensor([ 0.0297, -0.0547, -0.0600,  0.0521,  0.0715, -0.0048, -0.0319,  0.0107,
        -0.0165,  0.0362,  0.0324, -0.0323, -0.0178, -0.0340,  0.0117,  0.0323,
         0.0229, -0.0794,  0.0714,  0.0722,  0.0588, -0.0495, -0.0550,  0.0873,
         0.0316, -0.0507, -0.0502,  0.0142,  0.0365, -0.0353,  0.0208,  0.0866,
         0.0366,  0.0116,  0.0822,  0.0141, -0.0440,  0.0156, -0.0507, -0.0500,
         0.0653,  0.0340, -0.0737, -0.0443, -0.0444,  0.0032,  0.0811, -0.0764,
        -0.0070, -0.0238,  0.0005, -0.0264,  0.0288, -0.0374,  0.0324,  0.0759,
        -0.0589, -0.0091,  0.0213, -0.0699,  0.0037,  0.0478,  0.0315,  0.0161])
tensor([ 0.2480,  0.1420,  0.1594, -0.1569, -0.1532, -0.2295, -0.2269,  0.2122,
         0.1945, -0.1746,  0.2407, -0.2197,  0.1964, -0.2276, -0.1975, -0.1908,
        -0.1922, -0.2910,  0.2900, -0.1513, -0.1574,  0.1621, -0.2550, -0.0607,
        -0.1549, -0.2744,  0.1294, -0.1730, -0.1576,  0.0932,  0.2245, -0.1280,
         0.2452,  0.2077, -0.1232,  0.1798,  0.1577, -0.1160,  0.1299, -0.1113,
         0.1872,  0.2563, -0.2818,  0.0147, -0.2491,  0.2233,  0.2825, -0.0499,
         0.1998, -0.1912, -0.2082,  0.1281, -0.1357,  0.1815,  0.1409, -0.1480,
         0.1219, -0.1803,  0.2092, -0.0857, -0.1901,  0.2679, -0.1712,  0.2220])
##########################################################
prot_encoder.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[ 0.0510, -0.0016,  0.1777,  ...,  0.0076, -0.0788,  0.0036],
        [ 0.1498,  0.0367,  0.0522,  ..., -0.0564, -0.0955,  0.0480],
        [ 0.2467, -0.0080,  0.0590,  ..., -0.0994,  0.1447,  0.0496],
        ...,
        [-0.0068, -0.0851,  0.0583,  ..., -0.0572, -0.0390,  0.0341],
        [ 0.0055, -0.1152, -0.0952,  ...,  0.0845, -0.1543, -0.0220],
        [-0.0230,  0.0516, -0.0396,  ...,  0.0519, -0.0300, -0.0091]])
tensor([[ 0.3283,  0.2509,  0.4707,  ...,  0.1656, -0.2033,  0.1117],
        [ 0.2318,  0.1557, -0.0455,  ...,  0.0257, -0.2381, -0.0375],
        [ 0.1511, -0.0280,  0.0072,  ..., -0.1796,  0.2781,  0.1402],
        ...,
        [ 0.0609,  0.0033,  0.1212,  ..., -0.0377, -0.2337, -0.1922],
        [-0.1218, -0.1572, -0.2044,  ..., -0.0423, -0.0481, -0.0545],
        [ 0.2909,  0.3347,  0.2850,  ...,  0.3970,  0.1053,  0.3200]])
##########################################################
prot_encoder.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.1085,  0.0881,  0.0972, -0.1037,  0.0206, -0.0317,  0.1064,  0.0867,
        -0.0329,  0.0112,  0.1055, -0.0727, -0.0676,  0.0085,  0.0947, -0.0934,
         0.0792,  0.0911, -0.0653, -0.0117, -0.0045, -0.0669,  0.0188,  0.0378,
        -0.0807, -0.0966, -0.0464,  0.1238,  0.0840,  0.0648, -0.0143,  0.1207,
         0.0097,  0.0954,  0.1107, -0.0344,  0.0608,  0.0045, -0.0935, -0.0367,
        -0.0883,  0.0650,  0.0185,  0.0673,  0.0060, -0.0021,  0.0208,  0.0594,
         0.0337,  0.0192,  0.1068,  0.0002,  0.0044, -0.1193,  0.0257,  0.0713,
        -0.0135,  0.0358,  0.1199,  0.1230,  0.1066,  0.1234, -0.1138,  0.1096,
        -0.0125,  0.0621,  0.0413, -0.0858, -0.0326, -0.0455,  0.0032, -0.0210,
        -0.0274, -0.0494,  0.0205,  0.0986, -0.0654,  0.0584, -0.0786,  0.0140,
         0.0012,  0.0935,  0.0796, -0.0746, -0.1014, -0.0944, -0.1169,  0.0218,
         0.0927, -0.0562,  0.0057,  0.0659, -0.0863, -0.0790,  0.1092, -0.0801,
         0.0002,  0.0457, -0.1164, -0.1204,  0.0604, -0.1208,  0.0626, -0.1037,
        -0.0146, -0.0459, -0.0171, -0.1031, -0.0405,  0.0072, -0.0030, -0.0812,
        -0.1111, -0.0840,  0.0370,  0.0025, -0.0636,  0.0479,  0.0571, -0.0786,
         0.1110, -0.0077, -0.1045,  0.1029,  0.0823,  0.0206,  0.0941,  0.0071])
tensor([-0.0882, -0.1264,  0.3151,  0.1152, -0.1759,  0.1861, -0.1182,  0.3114,
        -0.2473, -0.2130,  0.3142,  0.1511, -0.2905, -0.2131, -0.0882,  0.1162,
         0.3082, -0.1093,  0.1453, -0.2387, -0.2193,  0.1355, -0.1980, -0.1771,
        -0.2909,  0.1230, -0.2726, -0.0660, -0.0232,  0.1470,  0.2067, -0.0647,
         0.2070, -0.1158, -0.1153,  0.1823,  0.2813,  0.2010, -0.3092,  0.1914,
        -0.2564,  0.2852,  0.2466,  0.2700, -0.1524,  0.2163,  0.2322,  0.2826,
        -0.1138,  0.2440, -0.0794, -0.2236, -0.1980,  0.0912,  0.1563,  0.2990,
        -0.2218,  0.2432,  0.0372,  0.3356,  0.3066,  0.3136, -0.3299,  0.3329,
        -0.2216, -0.0782, -0.1809, -0.2830, -0.2031,  0.1413,  0.2195,  0.2052,
         0.1606,  0.1500, -0.0788, -0.1238,  0.1241,  0.2555, -0.2626,  0.2200,
         0.1920, -0.1176,  0.2696, -0.2806,  0.1073,  0.1239, -0.3455,  0.2358,
        -0.1291,  0.1524,  0.2009, -0.1549,  0.1117,  0.1354, -0.1011,  0.0993,
         0.2260,  0.0421, -0.3225, -0.3378, -0.1513, -0.0111, -0.1238, -0.3253,
         0.1926, -0.2680, -0.2340,  0.1158,  0.0992, -0.2126,  0.2153,  0.1320,
        -0.3173,  0.1292, -0.1841, -0.1863,  0.1333,  0.2642,  0.2549, -0.3058,
        -0.0934,  0.2133,  0.1160,  0.1904, -0.1087, -0.2034,  0.2985,  0.2342])
##########################################################
prot_encoder.addnorm.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.8671, 0.6894, 0.7264, 0.7463, 0.7180, 1.1520, 1.3177, 1.2561, 0.9715,
        1.2316, 1.1253, 0.6618, 0.9120, 1.0447, 0.8358, 0.7524, 1.3444, 0.7527,
        1.1365, 1.3067, 1.3153, 0.7397, 0.7880, 0.8974, 0.8419, 1.1160, 1.2944,
        1.1641, 1.0078, 1.2673, 1.3139, 1.1618, 1.1769, 1.1619, 0.7634, 0.8824,
        0.7680, 0.7014, 1.2876, 0.6920, 1.1259, 0.8611, 1.3635, 0.7220, 0.6876,
        1.3425, 0.6682, 0.8720, 1.0526, 1.3466, 0.7072, 1.3462, 0.6972, 1.1139,
        0.9369, 1.3289, 1.2802, 0.8753, 0.6958, 0.7054, 0.7478, 0.7672, 1.1872,
        1.3266, 0.8442, 1.1157, 0.7070, 1.1718, 1.1173, 0.7213, 1.1468, 0.6514,
        0.7226, 1.0392, 0.7094, 1.0173, 0.6980, 0.6933, 1.1332, 0.8559, 1.1419,
        0.8992, 0.7917, 0.7876, 0.6839, 1.3331, 0.9736, 0.6856, 0.8060, 0.8975,
        1.3289, 0.8474, 1.0678, 1.2742, 1.1480, 0.9239, 1.3408, 0.7201, 1.0629,
        0.9894, 1.0800, 1.0211, 1.1124, 1.0729, 0.6775, 1.0820, 1.1127, 0.7748,
        1.3534, 1.1495, 0.6705, 0.8659, 1.2292, 0.6814, 0.8655, 1.0573, 0.6928,
        1.1678, 1.0765, 0.9375, 0.6735, 1.1470, 0.6729, 1.0919, 0.9328, 0.6650,
        0.7766, 1.0384])
##########################################################
prot_encoder.addnorm.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 1.5714e-01,  2.7971e-04,  4.6953e-02, -2.1498e-02,  1.4842e-01,
         3.3653e-01, -3.5124e-01,  3.4776e-01, -1.1608e-01, -2.0489e-01,
         3.2966e-01, -1.0996e-01,  6.1300e-02, -2.6601e-01,  1.3791e-01,
         1.1314e-01,  3.6124e-01,  1.1818e-01,  3.3126e-01, -3.4160e-01,
        -3.3153e-01, -1.6323e-01, -3.1980e-02, -2.2967e-01, -1.7679e-01,
         3.4709e-01, -3.1291e-01, -3.1419e-01, -1.6315e-01, -3.1110e-01,
         3.3859e-01, -3.2054e-01, -3.0168e-01, -3.3148e-01, -1.8379e-01,
         2.7116e-01, -1.0593e-02, -5.6266e-02, -3.4380e-01,  1.8741e-01,
        -2.7989e-01, -1.0462e-01,  3.6386e-01, -6.1417e-02,  1.4374e-01,
         3.4457e-01,  1.1249e-01, -9.1283e-02,  1.4378e-01,  3.6183e-01,
         1.4738e-01, -3.5588e-01,  5.9131e-02,  3.3216e-01, -1.4968e-01,
         3.0892e-01, -3.3931e-01, -1.3547e-01,  1.7523e-01,  1.2874e-02,
        -7.7830e-02,  6.9340e-02, -3.4399e-01,  3.5692e-01,  1.6242e-01,
        -3.1740e-01, -9.7172e-02, -3.2447e-01,  3.0185e-01,  1.3491e-01,
         3.4107e-01, -2.9037e-02, -1.0889e-01,  2.9942e-01,  1.6137e-01,
        -3.2729e-01, -1.2255e-01, -1.2764e-01, -3.1645e-01, -1.2638e-01,
        -4.2688e-02,  1.1959e-01,  1.4729e-01,  1.1743e-01, -1.2009e-01,
         2.8550e-01, -1.0162e-02, -1.1889e-01, -3.0295e-01,  1.5856e-01,
         3.2359e-01,  8.4712e-02,  2.1061e-01,  3.4780e-01, -3.3064e-01,
        -1.7447e-01,  3.3732e-01,  2.5919e-01,  1.4985e-01, -1.3336e-01,
        -3.3475e-01, -2.2207e-01, -3.0080e-01, -2.8306e-01, -8.8211e-02,
        -3.5000e-01, -2.8199e-01,  1.4553e-01,  3.2232e-01, -3.3922e-01,
        -1.0768e-01, -1.2435e-01, -3.2888e-01, -1.2207e-01, -2.6101e-01,
        -3.0474e-01, -1.2944e-01,  3.4047e-01,  3.0868e-01, -9.5721e-02,
         9.0630e-02,  3.4699e-01,  1.7298e-03, -1.8421e-01, -2.9115e-01,
        -8.4308e-02, -5.5822e-02,  3.5678e-01])
##########################################################
prot_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0351,  0.0319, -0.0003,  ...,  0.0039,  0.0473,  0.0603],
        [-0.0252,  0.0014, -0.0440,  ..., -0.0358, -0.0104, -0.0517],
        [-0.0566,  0.0590, -0.0392,  ..., -0.0735,  0.0701, -0.0082],
        ...,
        [ 0.0019,  0.0113, -0.0659,  ...,  0.0383,  0.0174,  0.0418],
        [ 0.0164,  0.0601, -0.0346,  ...,  0.0495, -0.0283, -0.0181],
        [-0.0193,  0.0358,  0.0165,  ...,  0.0352, -0.0123,  0.0469]])
tensor([[-0.0184,  0.0309,  0.1175,  ..., -0.0232,  0.1464,  0.1058],
        [-0.0061,  0.0854, -0.1127,  ...,  0.0163, -0.0642, -0.1309],
        [-0.0526, -0.0537, -0.0331,  ..., -0.1190,  0.0762,  0.0748],
        ...,
        [ 0.2715,  0.2665, -0.1436,  ...,  0.1773, -0.0522, -0.2080],
        [-0.2016, -0.1887,  0.0537,  ..., -0.0623,  0.0357,  0.2307],
        [-0.0442, -0.0835, -0.1850,  ...,  0.2258, -0.2218,  0.0290]])
##########################################################
prot_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 1.1569e-01, -1.8990e-02, -7.2166e-02, -5.4712e-02, -9.1427e-02,
        -7.6729e-02, -1.0990e-02, -3.1206e-02,  2.3076e-03,  6.3470e-02,
        -1.0650e-01, -4.3266e-02,  5.4099e-02, -2.8567e-02,  1.3941e-01,
        -8.1758e-02,  1.4745e-01, -7.2224e-02,  1.3782e-01, -2.6697e-02,
        -1.0683e-01,  1.8422e-01, -3.5768e-02, -2.2413e-01, -1.3896e-01,
        -1.9252e-01,  2.8703e-02, -3.3480e-02,  1.1447e-01, -7.1937e-03,
        -2.0281e-02, -1.6619e-01,  9.3787e-02, -1.0350e-01,  6.2860e-02,
        -1.0757e-01,  6.3304e-02,  8.1382e-02,  9.7672e-02, -3.5287e-02,
        -1.2317e-01, -7.2018e-02,  1.4829e-01, -1.2166e-01, -9.3510e-02,
        -7.5768e-02, -4.8691e-02, -1.6414e-01,  1.7992e-01,  8.5581e-02,
        -1.9742e-01, -1.0077e-01, -5.0795e-02,  9.5089e-02, -1.4883e-01,
         7.1920e-02,  7.8633e-04, -1.4045e-01, -1.2000e-01,  2.8026e-02,
         1.3023e-01,  1.5287e-01, -1.0534e-01,  2.8243e-02, -1.0393e-01,
         1.0307e-01, -2.6816e-02, -6.3450e-02, -2.6833e-02, -3.1854e-02,
        -6.3831e-02, -4.3110e-02, -9.0791e-02, -4.2723e-02, -1.6369e-02,
        -9.0294e-02,  8.1601e-02, -8.9765e-02,  6.7991e-02, -1.9704e-02,
         7.6649e-02,  9.7173e-02,  4.9858e-02, -1.3221e-01, -9.1827e-02,
        -4.9537e-02, -1.4336e-01, -1.1644e-01, -1.4294e-01,  1.7874e-01,
        -1.4822e-01,  5.0937e-02, -2.8410e-02, -2.4631e-02,  1.2770e-01,
        -7.0534e-02, -4.8892e-02, -1.3687e-01, -1.0628e-01, -1.4521e-01,
        -2.1040e-01, -1.5402e-01, -6.8328e-02,  2.0202e-01,  1.9634e-01,
        -1.7720e-01,  4.8959e-02,  1.0355e-04, -1.3962e-01, -7.2135e-02,
        -3.4141e-02, -2.0431e-02, -5.2159e-02,  1.1207e-01,  7.4928e-02,
         4.2262e-02,  5.0387e-02, -2.1858e-02, -5.1607e-02, -4.4686e-02,
        -1.5857e-01, -8.2253e-03, -1.4907e-02,  8.7076e-02,  1.3618e-01,
        -1.0977e-02, -2.7719e-02, -1.3208e-01,  1.3143e-08,  1.8933e-10,
         2.4080e-09, -1.5255e-09, -3.4308e-09,  3.5300e-09, -1.4319e-08,
        -5.3605e-09, -1.0300e-09,  1.2442e-08,  8.1758e-09, -7.8008e-09,
        -1.0349e-09,  6.0886e-09,  1.8499e-08,  7.9791e-09,  1.1594e-08,
        -7.5661e-09,  1.1681e-08,  1.1761e-09,  6.5158e-09, -5.6566e-09,
         5.5524e-09,  4.5874e-09,  3.9963e-09,  4.9069e-09,  1.4595e-08,
        -8.2517e-10, -8.2681e-09, -1.2768e-08, -1.6862e-09,  4.4413e-09,
        -9.6684e-10, -2.0460e-09,  3.3629e-09,  1.9390e-09, -1.2388e-08,
         1.5827e-08,  1.6153e-09,  9.6398e-09,  3.5696e-09, -1.1558e-08,
        -7.2318e-10, -7.0943e-10,  5.7689e-09, -4.7697e-09,  2.0971e-08,
         1.7469e-08,  6.8149e-09, -7.4320e-09, -9.3941e-10, -7.0076e-09,
        -4.4891e-09, -5.9241e-09,  6.7108e-09,  3.8937e-09,  2.1497e-09,
         3.6565e-09, -2.0723e-09,  8.7187e-10,  4.9802e-10,  4.4989e-09,
        -8.1617e-10, -3.2727e-09, -8.3135e-09,  8.5212e-10,  2.2249e-09,
        -1.1691e-09,  3.2769e-09,  4.3324e-09, -3.5620e-10, -6.5302e-09,
        -7.0085e-09,  2.5212e-09, -4.6496e-09, -2.0645e-09, -1.1977e-09,
        -3.8101e-09,  2.2787e-09, -4.0017e-09,  1.6030e-08,  2.3661e-09,
         2.2683e-10,  5.9630e-09, -1.6327e-08, -3.1328e-09, -1.1365e-08,
        -3.2896e-09, -1.1120e-08, -9.2124e-10,  2.3594e-11,  1.3247e-08,
        -1.5714e-08, -1.3995e-08,  9.1647e-09,  6.2180e-09, -1.9031e-08,
        -7.3593e-09,  6.7208e-09, -2.0376e-09, -1.2334e-08,  5.6271e-09,
        -1.6393e-08, -4.2708e-09,  1.6741e-09, -2.6384e-08,  7.6504e-09,
         8.3898e-10, -3.8279e-09,  6.0125e-09, -3.0429e-09,  9.7445e-09,
         2.1625e-10, -1.0043e-08,  1.5996e-09, -2.9992e-09,  8.3835e-09,
        -7.3513e-09, -1.5034e-08, -3.2606e-09,  1.7861e-10,  1.9911e-09,
        -7.3606e-09,  2.9899e-09, -9.3138e-09,  7.3404e-10,  9.1518e-09,
        -5.7555e-10,  3.3264e-01, -1.6858e-01, -1.2823e-01, -1.3473e-01,
         3.4300e-01, -2.5418e-01, -8.9432e-02, -1.1837e-01, -3.5258e-01,
         8.0209e-02, -3.3099e-01,  3.8101e-02,  2.6862e-02, -3.1240e-01,
         3.3614e-01,  3.4451e-01,  1.1717e-01,  1.7126e-01, -2.8668e-01,
        -3.4459e-01,  3.3498e-01,  2.9734e-01,  3.1009e-01,  2.5067e-01,
         2.8656e-01, -1.3044e-01, -3.4966e-01,  1.3180e-01,  3.3902e-01,
         1.7233e-01,  2.4932e-01, -3.4247e-01,  4.2446e-02,  9.3928e-02,
         3.3738e-01, -8.5408e-02,  1.3592e-01,  3.3970e-01, -3.6400e-02,
        -2.7562e-02, -1.4043e-01,  2.9589e-01, -8.6999e-02, -2.7201e-01,
        -1.3500e-01,  9.4037e-02, -3.5030e-01,  3.1551e-01, -7.3345e-02,
        -7.5182e-02,  3.1547e-01,  1.1009e-01,  3.4784e-01, -2.3882e-01,
         3.3586e-01,  3.3862e-01,  3.1325e-01,  2.5896e-01,  9.2972e-02,
         1.3928e-01,  3.5261e-01, -9.7317e-02,  1.3423e-01,  3.4659e-01,
        -3.4215e-01, -7.6099e-02,  7.4742e-02, -3.4457e-01,  8.8005e-02,
         3.3347e-01,  9.3082e-02, -1.1785e-01,  4.0499e-02, -1.1920e-01,
        -3.3295e-01, -6.8811e-02, -3.3198e-01,  1.0537e-01, -3.3319e-01,
         3.5531e-01, -3.3371e-01, -1.9398e-01,  9.1948e-02, -3.0755e-01,
         2.1118e-01,  3.5180e-01,  9.4128e-02, -3.3674e-01,  1.6117e-01,
        -1.7954e-01, -1.8753e-02, -1.3238e-01, -3.1523e-01, -3.4494e-01,
         3.4761e-01, -1.5143e-01,  8.3948e-02,  2.2155e-01, -3.2458e-01,
         1.2594e-01, -5.8989e-02, -3.3938e-01, -2.5999e-02,  3.4618e-01,
        -1.4984e-01,  3.1785e-01,  2.9990e-02,  4.8599e-02,  6.3098e-02,
         2.7795e-01, -3.4414e-01, -3.5700e-01, -3.0469e-01,  2.7138e-01,
         3.3286e-01, -3.5563e-01, -1.9217e-01,  2.8264e-01, -1.3936e-01,
         1.9748e-01,  1.5013e-01, -3.2050e-01,  2.9287e-02,  3.4128e-01,
        -3.4659e-01,  1.2778e-01, -1.3194e-01, -2.2750e-01])
##########################################################
prot_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0777,  0.0435, -0.0862,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0485, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0306,  0.0483],
        [-0.0517, -0.0149,  0.0659,  ...,  0.0579, -0.0457,  0.0403]])
tensor([[-0.2943, -0.2225,  0.1875,  ..., -0.2927, -0.1288,  0.1384],
        [-0.2223, -0.0936,  0.1247,  ..., -0.1828, -0.3215,  0.2400],
        [ 0.1998,  0.1723, -0.2427,  ...,  0.0797,  0.2688, -0.2762],
        ...,
        [ 0.2006,  0.3108, -0.1671,  ...,  0.3498,  0.0422, -0.0407],
        [ 0.2283,  0.1507, -0.1850,  ...,  0.1769,  0.2332, -0.1226],
        [-0.1808, -0.3292,  0.3312,  ..., -0.2626, -0.1433,  0.0985]])
##########################################################
prot_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.3024,  0.0911, -0.0475,  0.0290,  0.3105,  0.1380, -0.3410,  0.3523,
        -0.0786, -0.0962,  0.2526, -0.0397,  0.0557, -0.2590,  0.1714,  0.1497,
         0.3638,  0.1404, -0.0565, -0.3398,  0.2604, -0.3250,  0.2753, -0.2075,
        -0.3413,  0.3465, -0.1957, -0.1292, -0.0116, -0.1969,  0.3180, -0.1189,
        -0.1231, -0.3406, -0.2853,  0.2225,  0.1043, -0.0801, -0.1161,  0.2345,
        -0.0220, -0.1021,  0.3542, -0.3101, -0.0152,  0.3097,  0.0951, -0.1163,
        -0.1221,  0.3516,  0.0888, -0.3512, -0.1396,  0.1612, -0.1490,  0.2657,
        -0.3396, -0.3245, -0.1921, -0.1635, -0.1185, -0.1219, -0.3153,  0.3315,
         0.3358, -0.1483, -0.0867, -0.0807,  0.3144, -0.2141,  0.3320,  0.2457,
        -0.1223,  0.3064,  0.2171, -0.3196, -0.2882, -0.1368, -0.1326, -0.1210,
         0.3268,  0.1455,  0.3377,  0.1712, -0.3245,  0.3075, -0.0072, -0.1257,
        -0.2488,  0.3298,  0.2922,  0.0703, -0.0503,  0.3399, -0.0418, -0.1287,
         0.1386,  0.1430,  0.3384, -0.3077, -0.2778,  0.2512, -0.1627, -0.3073,
        -0.0872, -0.3433, -0.3245,  0.3153,  0.3292, -0.2372, -0.1013, -0.1571,
        -0.1568, -0.1363, -0.3220, -0.2262, -0.1716,  0.2757, -0.0047, -0.1150,
         0.1601, -0.1175,  0.0154, -0.2622, -0.1078, -0.3530, -0.1461,  0.3393])
##########################################################
prot_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[ 0.0803,  0.0805, -0.0310,  ..., -0.0861, -0.0321, -0.0411],
        [-0.0046, -0.0457, -0.1090,  ..., -0.0019,  0.0430, -0.0441],
        [ 0.0128, -0.0393, -0.0018,  ..., -0.0116,  0.1567, -0.0880],
        ...,
        [ 0.0703,  0.0072,  0.0985,  ...,  0.0973, -0.0623, -0.0150],
        [ 0.0386,  0.0456, -0.0173,  ..., -0.0630, -0.0833, -0.0197],
        [ 0.0008,  0.0614, -0.0274,  ...,  0.0996, -0.0468,  0.0651]])
tensor([[ 0.1944,  0.1128,  0.1124,  ..., -0.1942,  0.0103,  0.1421],
        [-0.1206, -0.1440,  0.1585,  ..., -0.3090, -0.0897,  0.2456],
        [-0.2609, -0.3048,  0.1683,  ..., -0.1471, -0.0981,  0.2080],
        ...,
        [ 0.3678,  0.0275, -0.1789,  ...,  0.2619,  0.0759, -0.2766],
        [-0.2522, -0.1986,  0.1107,  ..., -0.3795, -0.2536,  0.2943],
        [ 0.2280,  0.2379, -0.1892,  ...,  0.2142,  0.1593, -0.2416]])
##########################################################
prot_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([-0.0250,  0.0180, -0.0861,  0.0376, -0.0467,  0.0681,  0.0507, -0.0192,
         0.0337, -0.0159,  0.0222,  0.0514, -0.0768,  0.0162,  0.0261,  0.0345,
         0.0281,  0.0324,  0.0413,  0.0028, -0.0356,  0.0813, -0.0696,  0.0608,
        -0.0431, -0.0643, -0.0072,  0.0071,  0.0649,  0.0702, -0.0061,  0.0290,
        -0.0727, -0.0272, -0.0382,  0.0734, -0.0835, -0.0438, -0.0425,  0.0427,
        -0.0032,  0.0075, -0.0350,  0.0270, -0.0527, -0.0279,  0.0828, -0.0536,
         0.0573,  0.0599,  0.0368, -0.0062, -0.0522, -0.0149,  0.0005,  0.0297,
         0.0508, -0.0860, -0.0782,  0.0585,  0.0812,  0.0567, -0.0077,  0.0127])
tensor([-0.2512, -0.2975, -0.1538, -0.1897,  0.2879,  0.4204,  0.4164,  0.2733,
        -0.0753, -0.0796, -0.2047,  0.1571,  0.1249, -0.2114, -0.2011,  0.0043,
        -0.2674,  0.1772, -0.2485,  0.3617,  0.1900,  0.4341,  0.2924, -0.0559,
         0.0265,  0.1856,  0.0705, -0.2221, -0.0904,  0.4129, -0.2563, -0.0091,
        -0.1668,  0.3087,  0.3121,  0.3591, -0.3107,  0.0812, -0.1063,  0.2935,
        -0.0767, -0.1926, -0.0507, -0.1980,  0.1512, -0.2412, -0.1461,  0.2906,
        -0.1647,  0.0173,  0.2663,  0.3475,  0.1747,  0.2145,  0.3699, -0.0578,
         0.0149, -0.3163, -0.2866, -0.0609, -0.1490,  0.3398,  0.0837,  0.0737])
##########################################################
prot_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.0970, -0.0292,  0.0377,  ..., -0.0403,  0.0823, -0.0293],
        [-0.0524, -0.0265, -0.0480,  ...,  0.0880, -0.0577, -0.0127],
        [ 0.0726,  0.1058, -0.0378,  ..., -0.0174,  0.0265,  0.0606],
        ...,
        [-0.1435, -0.0387,  0.0123,  ...,  0.0076,  0.0404, -0.0887],
        [ 0.0583,  0.0534,  0.0204,  ...,  0.0346, -0.1024, -0.1340],
        [-0.0332,  0.0559, -0.0560,  ...,  0.0050,  0.1184, -0.0744]])
tensor([[-0.2968, -0.3675, -0.1017,  ..., -0.3669, -0.1171, -0.3521],
        [ 0.0771,  0.2534,  0.1412,  ...,  0.4048,  0.1917,  0.2551],
        [ 0.2015, -0.0371, -0.1670,  ..., -0.0647,  0.0920, -0.0063],
        ...,
        [-0.1226,  0.1602,  0.1229,  ...,  0.2108,  0.2443,  0.0973],
        [ 0.1981,  0.2032,  0.0718,  ...,  0.0586, -0.2191, -0.0273],
        [ 0.1431,  0.0086, -0.1540,  ...,  0.0586,  0.2213, -0.1222]])
##########################################################
prot_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([-0.1182,  0.0646,  0.0008, -0.0595,  0.0710, -0.0074, -0.0845, -0.1114,
         0.0555,  0.0241, -0.1157,  0.0894, -0.0410, -0.0008,  0.0374,  0.0021,
        -0.0535,  0.0135,  0.0153,  0.0757,  0.0807,  0.0810, -0.0713,  0.0207,
         0.1064, -0.0170,  0.0162,  0.0275, -0.0396, -0.0285, -0.0726, -0.0859,
        -0.0350, -0.1200,  0.0271, -0.0607,  0.1068, -0.0537,  0.0798, -0.0467,
        -0.0325,  0.0945,  0.0455, -0.0038, -0.0678,  0.1204,  0.0363,  0.0999,
        -0.0391, -0.1018, -0.0562,  0.0251,  0.0028,  0.1054,  0.0747,  0.0139,
         0.0395,  0.0414, -0.0185,  0.0687,  0.0981,  0.0435, -0.0411, -0.0493,
         0.1250, -0.0381,  0.0445,  0.1141,  0.0302,  0.0075,  0.0767,  0.1089,
         0.0577, -0.1065,  0.0402, -0.0100, -0.1008,  0.0900, -0.0211,  0.0569,
         0.0043,  0.1239, -0.0032, -0.1046, -0.0472, -0.0728,  0.0371, -0.1220,
        -0.0720, -0.0652, -0.0181, -0.0107, -0.0156, -0.0628,  0.0205, -0.0876,
        -0.0442, -0.0234,  0.0045,  0.0475,  0.1056,  0.0616,  0.0599,  0.0487,
        -0.0669,  0.0971,  0.0804,  0.1205,  0.0237, -0.0217, -0.0002,  0.0236,
         0.1213,  0.0462,  0.0240,  0.0174, -0.1079, -0.0424, -0.0862,  0.1223,
        -0.0236, -0.0300,  0.0469,  0.1132, -0.0838, -0.0935, -0.0828, -0.0944])
tensor([-4.8741e-01,  4.3172e-01, -1.9063e-01,  1.5693e-01,  4.2000e-01,
         3.2881e-01, -2.2091e-01, -4.6139e-01,  3.9644e-01, -3.3895e-01,
         2.4178e-01, -1.1781e-01,  1.4742e-01,  3.6328e-01, -9.3788e-02,
         5.4910e-03,  3.1500e-01, -1.1670e-01,  6.1178e-02,  4.3975e-01,
         2.0713e-01, -1.1017e-01,  2.7230e-01,  3.6898e-01,  7.8807e-02,
         2.1845e-01, -3.3495e-01,  1.7397e-01,  4.8981e-02,  3.2727e-01,
        -1.3980e-01, -1.5198e-01, -3.4708e-01, -1.7281e-01, -1.9455e-01,
        -2.0792e-02, -1.1555e-01,  2.7062e-01, -5.1378e-02,  1.2611e-01,
        -1.0718e-01, -1.6210e-02,  3.6480e-01, -3.4807e-01,  2.4654e-01,
         3.5837e-01,  4.8960e-02,  3.9690e-01,  1.9723e-01, -3.4715e-01,
         2.9983e-01, -8.7479e-02,  2.0637e-01, -1.9182e-02,  4.4355e-01,
         1.4627e-01, -1.1146e-01, -3.1911e-01,  4.1234e-02,  4.2448e-01,
         4.4800e-01,  2.4034e-01,  1.8428e-01, -3.0584e-01,  4.8667e-01,
         3.1485e-01, -1.7146e-01, -1.2934e-01,  3.9164e-01,  2.1688e-01,
         4.4864e-01, -9.4573e-02,  9.6933e-02, -4.2690e-01,  3.7781e-05,
         3.9782e-02, -4.6555e-01, -2.3752e-01,  3.3003e-01,  1.5667e-01,
         2.4748e-01,  4.2704e-01,  1.7962e-01,  2.3587e-01,  6.2913e-02,
        -4.1835e-01,  1.7378e-01, -3.9631e-01, -3.6423e-01,  1.4853e-01,
         3.2358e-01,  3.2884e-01,  2.5621e-02, -4.0283e-01,  2.4073e-02,
         1.1143e-01, -1.7133e-01, -1.2108e-02,  3.6644e-01, -2.8640e-01,
        -3.1671e-02, -1.0988e-01,  1.1247e-01, -1.8385e-01,  1.2287e-01,
         7.0130e-02,  4.3753e-01,  4.8843e-01,  1.0295e-01, -1.1467e-01,
         1.3871e-01, -3.2407e-01,  2.4580e-01,  1.0408e-01,  3.6854e-01,
        -9.4836e-02, -1.8278e-01,  2.4682e-01, -1.6054e-01, -9.0430e-02,
         3.1537e-01,  8.6603e-02, -1.6251e-01, -1.2341e-02,  2.4473e-01,
         1.9419e-01,  1.1477e-01, -2.7919e-01])
##########################################################
prot_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([-0.0901, -0.0171, -0.0634,  0.1264,  0.1087,  0.0661, -0.1314, -0.0740,
         0.1273,  0.1026,  0.0041,  0.1544, -0.2865, -0.0301, -0.0328, -0.0181,
         0.1603,  0.1363,  0.0357, -0.1042, -0.0560,  0.0835,  0.0153,  0.0099,
        -0.0626,  0.0703,  0.0650,  0.0299, -0.1016, -0.0618, -0.1228, -0.0973,
        -0.1066, -0.0804,  0.1344, -0.1247, -0.1035,  0.0196,  0.0032,  0.1962,
         0.0634,  0.1753,  0.1205, -0.0669,  0.0861,  0.1074, -0.2545, -0.1213,
         0.1415, -0.0731, -0.0766,  0.1846, -0.0291, -0.0250, -0.1052,  0.1167,
         0.0869,  0.1612, -0.0029, -0.0058, -0.0094,  0.0686, -0.0278, -0.0367,
         0.1115, -0.0502,  0.0393, -0.0308,  0.0562,  0.0822,  0.0649, -0.0453,
         0.0090,  0.0515,  0.0096, -0.0911, -0.0242,  0.0293, -0.0103,  0.1345,
         0.1081,  0.2269,  0.0697,  0.0557, -0.1189, -0.1856, -0.0967, -0.0088,
         0.1292, -0.1547, -0.1103, -0.0830,  0.0335, -0.1170, -0.0190,  0.0439,
        -0.1065, -0.0034,  0.1657,  0.1089, -0.0296,  0.0122,  0.0151,  0.0771,
         0.0940, -0.0670,  0.0503,  0.0377,  0.0701,  0.0515,  0.1515,  0.0908,
        -0.0089, -0.0279,  0.0291,  0.0141,  0.0294,  0.0098, -0.0217,  0.0339,
        -0.0096, -0.0122, -0.0268, -0.0253, -0.0769, -0.2179, -0.0166, -0.1560])
tensor([ 0.0136,  0.0597,  0.0613,  0.0127, -0.0345,  0.4172, -0.4724, -0.3951,
         0.2948,  0.0200,  0.3524, -0.2095, -0.3830, -0.3850,  0.0709, -0.3226,
         0.5266,  0.0044,  0.1576, -0.4480, -0.2604,  0.1653, -0.1243, -0.3346,
        -0.1879,  0.4077,  0.2879, -0.3218,  0.2322, -0.4113, -0.4709, -0.4460,
        -0.4655, -0.4206, -0.0050, -0.2446,  0.1198, -0.2259,  0.3513,  0.0897,
        -0.2347,  0.0528,  0.4792, -0.1988, -0.2518,  0.4618,  0.1136, -0.0033,
         0.4982, -0.3406,  0.0631,  0.5424,  0.3271, -0.3786, -0.0965,  0.4659,
         0.4338,  0.0411, -0.2824,  0.1091,  0.1291,  0.1751,  0.3022, -0.4034,
        -0.0182, -0.3973,  0.1660,  0.3359,  0.3903,  0.1941,  0.3992,  0.2869,
        -0.1403,  0.3848,  0.1418,  0.2744,  0.0558, -0.0935,  0.3098,  0.0113,
         0.4723,  0.1426, -0.0298, -0.0243, -0.2326, -0.5503, -0.1057, -0.0987,
        -0.1582, -0.0264, -0.4748,  0.0466,  0.1821, -0.4676, -0.0604, -0.3169,
        -0.4604,  0.3111,  0.0899,  0.2412,  0.3232,  0.3166,  0.3510, -0.2861,
         0.2120, -0.4104,  0.3702,  0.3880,  0.3799,  0.4084,  0.0254, -0.0178,
         0.3378,  0.0526, -0.3421, -0.1552, -0.0611,  0.3661, -0.3599,  0.1892,
        -0.0881, -0.1383, -0.0303,  0.2485, -0.1535, -0.3014, -0.1404, -0.2326])
##########################################################
prot_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.1330,  0.3715, -0.0846, -0.1012,  0.3283,  0.1111,  0.3660, -0.3714,
        -0.0531, -0.1196,  0.0352, -0.0868, -0.0044,  0.3279, -0.1326,  0.0279,
         0.3709,  0.1126,  0.3456,  0.3577, -0.3546,  0.1002,  0.3535,  0.3390,
        -0.0623,  0.3693, -0.1596,  0.3453, -0.3517,  0.3367, -0.3318,  0.0988,
         0.0981,  0.3702, -0.3498, -0.3548, -0.3395, -0.2747, -0.3006,  0.2848,
         0.3055, -0.0817,  0.3303, -0.1219,  0.3658,  0.3366, -0.1059,  0.1000,
        -0.1074, -0.3220, -0.0633, -0.3681, -0.1170, -0.0601,  0.1633,  0.3380,
        -0.3701, -0.3408, -0.0930,  0.1024, -0.0314,  0.1694,  0.0338, -0.3636,
         0.3460,  0.1063, -0.3559, -0.3586,  0.3505, -0.3561,  0.3537, -0.1768,
         0.3080,  0.1372, -0.1269, -0.0691,  0.3686, -0.0808, -0.3338, -0.1121,
         0.3419,  0.1214,  0.3678,  0.1207,  0.3413, -0.3526,  0.0924, -0.3693,
        -0.0155, -0.3552, -0.3285, -0.0097,  0.3552, -0.3612,  0.3587,  0.3450,
        -0.1234,  0.0044,  0.3541, -0.3498, -0.0844, -0.0082, -0.1204, -0.0539,
         0.3410,  0.3694, -0.3676,  0.3615,  0.3542, -0.3192, -0.0712, -0.1295,
         0.0059,  0.0983,  0.0378, -0.2978, -0.3580,  0.1486, -0.0369, -0.1986,
         0.1253, -0.3527, -0.2595,  0.0327,  0.3638,  0.3676, -0.0664, -0.3614])
##########################################################
prot_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([ 0.0945,  0.0372, -0.0638, -0.1360, -0.0108, -0.0031,  0.0358,  0.0576,
        -0.1132,  0.1323, -0.0284, -0.0939, -0.0219, -0.1052, -0.1945,  0.0649,
         0.0895,  0.0288,  0.0486, -0.0820,  0.0354,  0.0753,  0.0007, -0.0627,
         0.1420, -0.1304, -0.1864, -0.0361, -0.0290, -0.0217,  0.0083,  0.0097,
         0.0107,  0.0412, -0.0878,  0.0321,  0.1155, -0.0320, -0.0126,  0.1885,
        -0.0415,  0.0003,  0.1151,  0.0431, -0.0685,  0.0551, -0.0784,  0.0398,
        -0.0346,  0.1408, -0.0482, -0.0277,  0.1019, -0.0512,  0.0887,  0.1012,
         0.0114,  0.0282, -0.1437,  0.0208, -0.0199,  0.0842, -0.1190,  0.0906,
         0.0569, -0.0271,  0.1000, -0.0782, -0.0920, -0.0919,  0.0529, -0.1712,
         0.0373, -0.0516,  0.0107, -0.2001, -0.0627, -0.0380,  0.0115, -0.0331,
         0.0697,  0.0109, -0.1139, -0.0263,  0.0159, -0.0204,  0.1746,  0.1208,
         0.0620,  0.0621, -0.0040, -0.0263, -0.0378, -0.0490,  0.1086,  0.1062,
         0.0901,  0.1731,  0.0295, -0.1435,  0.0041, -0.1730,  0.0973,  0.0634,
         0.1049, -0.0368,  0.0127, -0.1216, -0.1253, -0.0191, -0.0102, -0.0254,
        -0.0014,  0.1717, -0.0202,  0.0543,  0.0033,  0.0162,  0.0353,  0.2462,
        -0.0200, -0.0410, -0.0953,  0.0206, -0.0414,  0.0057, -0.0990,  0.0919])
tensor([ 0.4581,  0.3938,  0.2856,  0.1265,  0.3754,  0.0573, -0.0860,  0.4057,
        -0.4664,  0.4611,  0.3219,  0.0768, -0.2705, -0.4473, -0.0641,  0.2224,
         0.4458,  0.3807, -0.0937, -0.4271,  0.1164, -0.1600,  0.3484, -0.3353,
         0.0273, -0.2221, -0.5339, -0.1399,  0.1099,  0.3188,  0.1589, -0.0648,
         0.3643,  0.1690,  0.2233,  0.1652, -0.1598,  0.0922, -0.0694, -0.1770,
        -0.1706, -0.0806,  0.4701,  0.3912,  0.2968,  0.3262, -0.0228, -0.1590,
         0.2970,  0.4522,  0.3005, -0.1928, -0.1737,  0.0936,  0.3811, -0.0297,
         0.3537, -0.3353,  0.1537,  0.3867, -0.3672, -0.1510, -0.1722,  0.4424,
         0.3845,  0.3240, -0.2528,  0.2670, -0.4430,  0.0971,  0.4155,  0.1973,
        -0.0363, -0.4251, -0.1252,  0.1534, -0.4185,  0.3214, -0.2479, -0.3138,
         0.3827, -0.0347,  0.2362, -0.1163,  0.1385, -0.3718,  0.0925,  0.4503,
        -0.2291, -0.2371, -0.1978,  0.3113, -0.1523, -0.4124, -0.2324, -0.2565,
         0.4527, -0.1581,  0.4146, -0.3860,  0.1196,  0.1698, -0.0537, -0.2966,
        -0.1318, -0.1860,  0.4074, -0.4744, -0.1299, -0.1371,  0.1657, -0.3923,
        -0.1936,  0.3040,  0.3067, -0.3019,  0.3778, -0.3193,  0.1577, -0.1221,
        -0.2754,  0.0866,  0.2530,  0.1504,  0.3195,  0.3429,  0.2512,  0.1213])
##########################################################
prot_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.3527,  0.3659,  0.1672, -0.0871,  0.1244, -0.1059, -0.3162, -0.3558,
        -0.3362, -0.3430,  0.1234,  0.3042, -0.3481, -0.3623,  0.1391,  0.3401,
         0.3540, -0.3058, -0.0509, -0.3464, -0.3454, -0.2032,  0.0989, -0.3361,
        -0.1197, -0.3641,  0.3551, -0.2175, -0.0565,  0.1235, -0.0867, -0.3818,
        -0.3476,  0.3533,  0.0562, -0.3628,  0.1205, -0.1174, -0.1146, -0.0631,
        -0.3495, -0.0795,  0.3598, -0.3555,  0.3438,  0.2784,  0.1394, -0.4108,
         0.0180, -0.3212,  0.1335,  0.1255,  0.3535,  0.1330,  0.3441,  0.1323,
        -0.3492,  0.0752,  0.2978,  0.3527, -0.3268,  0.4396, -0.3634, -0.3502,
         0.3473,  0.1495,  0.0898, -0.1046, -0.3498, -0.2581,  0.3646, -0.0356,
        -0.0130,  0.3673, -0.1036,  0.1163,  0.3575, -0.0616, -0.1298,  0.0410,
         0.3309,  0.1172,  0.1126, -0.1252, -0.3716,  0.3518, -0.0469, -0.3314,
         0.0963, -0.1162,  0.0041,  0.0793, -0.3708,  0.3708,  0.1370, -0.1171,
        -0.1315,  0.1251,  0.3609,  0.3417,  0.1230, -0.0517, -0.0443, -0.1070,
        -0.3978, -0.3565,  0.3665, -0.3587, -0.1152, -0.3506,  0.3606,  0.3584,
        -0.1611, -0.0373,  0.1494, -0.0877, -0.3825, -0.0060,  0.3466, -0.0454,
        -0.1188, -0.0722, -0.1160,  0.1256,  0.1011,  0.0616,  0.1102, -0.3789])
##########################################################
prot_encoder.encoder.layers.1.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0351,  0.0319, -0.0003,  ...,  0.0039,  0.0473,  0.0603],
        [-0.0252,  0.0014, -0.0440,  ..., -0.0358, -0.0104, -0.0517],
        [-0.0566,  0.0590, -0.0392,  ..., -0.0735,  0.0701, -0.0082],
        ...,
        [ 0.0019,  0.0113, -0.0659,  ...,  0.0383,  0.0174,  0.0418],
        [ 0.0164,  0.0601, -0.0346,  ...,  0.0495, -0.0283, -0.0181],
        [-0.0193,  0.0358,  0.0165,  ...,  0.0352, -0.0123,  0.0469]])
tensor([[-0.0304,  0.0272, -0.0013,  ...,  0.0058,  0.0491,  0.0621],
        [-0.0211, -0.0030, -0.0450,  ..., -0.0339, -0.0085, -0.0500],
        [-0.0548,  0.0575, -0.0393,  ..., -0.0737,  0.0702, -0.0075],
        ...,
        [-0.1360,  0.2139,  0.1616,  ..., -0.1835, -0.2788, -0.1298],
        [-0.4035,  0.4361,  0.0921,  ..., -0.0641,  0.0576, -0.3724],
        [-0.1279,  0.2158,  0.2287,  ..., -0.1116, -0.3474, -0.0782]])
##########################################################
prot_encoder.encoder.layers.1.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-2.2695e-02, -2.0113e-02,  7.7256e-04,  6.9024e-03, -9.6896e-03,
         9.1918e-03,  1.7226e-02, -9.7924e-03,  2.6765e-02,  3.0122e-03,
        -3.3384e-02, -2.6432e-03,  1.7579e-02,  2.2226e-02,  1.9839e-02,
        -1.3788e-02,  3.0399e-02, -1.3849e-02, -6.0618e-03, -2.5646e-03,
         5.0081e-02, -4.1367e-02, -2.0396e-02,  4.3467e-03, -3.1487e-02,
        -2.3844e-02,  3.4522e-02, -3.5148e-02, -2.0937e-02, -9.5828e-03,
         8.5839e-03, -6.2576e-02, -1.3309e-02,  2.1199e-03,  2.5111e-03,
         1.2280e-02, -1.4813e-02, -8.3040e-03,  1.2984e-03,  2.2357e-02,
         1.0435e-02, -3.1148e-02,  1.7740e-02,  4.3185e-03,  2.4440e-02,
         9.0647e-03, -3.4317e-03,  4.1680e-03, -4.8287e-03,  3.4637e-02,
         1.6299e-02, -2.4204e-02,  1.0475e-03,  1.6533e-02, -2.9166e-02,
         3.1136e-02,  2.2828e-02, -3.2375e-03,  2.1689e-02, -3.8426e-03,
        -6.7345e-03,  4.1964e-02, -5.0003e-03, -2.7998e-02, -7.6745e-03,
         5.9982e-03,  9.2332e-03, -3.9606e-02, -2.0573e-02,  1.5463e-02,
        -2.3119e-02,  3.7416e-02, -4.8608e-02,  4.6848e-02,  3.0407e-02,
        -3.2914e-02,  1.9539e-03,  1.7260e-02, -6.7201e-03, -7.8102e-04,
         4.0262e-02, -5.9154e-02, -5.9400e-02,  6.1834e-02,  3.2342e-02,
        -3.0272e-03, -2.9947e-02,  1.7983e-02, -4.0138e-02,  4.7779e-02,
        -2.4307e-02,  4.5535e-02, -4.0642e-02, -5.2815e-02,  4.1741e-02,
         1.9463e-03, -3.4811e-02,  6.3726e-03,  4.5122e-02, -4.3353e-02,
        -1.7280e-02,  5.6097e-02, -3.4002e-02, -1.0467e-02, -2.9057e-02,
        -7.7736e-03, -2.4959e-02, -1.5838e-02,  1.9371e-02, -1.9676e-02,
        -3.5055e-02, -3.1797e-02, -4.3088e-03, -9.2137e-03, -2.5330e-03,
         2.8235e-02, -1.4943e-03,  9.2778e-03, -2.3582e-02, -2.6417e-02,
        -1.7212e-02,  1.5333e-02, -1.8706e-03, -3.0534e-02, -1.3204e-02,
         2.5353e-02,  5.5681e-03,  2.4874e-04, -1.4863e-09,  2.1523e-09,
        -2.5149e-09,  2.5145e-09,  4.0022e-09, -1.0884e-08,  2.0119e-09,
        -1.5063e-09, -1.2097e-08,  1.7272e-09, -1.4096e-08,  1.8055e-09,
        -3.1047e-09, -4.1578e-10, -3.4316e-09, -1.9711e-09, -2.0422e-09,
        -2.2270e-09,  4.7441e-09,  2.8299e-09, -2.7951e-09, -3.7477e-10,
        -3.6591e-09, -2.0614e-08,  3.3946e-09, -9.9378e-09,  5.4494e-09,
        -3.1154e-09, -1.5437e-08,  3.9744e-09,  4.4777e-09, -1.0407e-08,
         1.1612e-08,  1.0007e-08, -1.7202e-08, -1.8776e-08,  6.5370e-09,
         4.1371e-09, -2.9672e-10,  1.4811e-08, -1.4672e-08,  5.7251e-10,
        -5.2382e-10,  4.3363e-09, -3.6254e-09, -2.5353e-09, -3.8572e-09,
         6.2436e-09, -2.7404e-09, -5.6811e-09,  2.0506e-09,  6.5474e-09,
        -3.3065e-09, -1.0974e-08, -1.5264e-09,  1.0130e-09,  1.7930e-09,
        -2.7198e-10, -7.8265e-10, -1.4264e-08,  1.7102e-09,  3.1781e-09,
        -1.9166e-09,  7.5298e-09,  8.5352e-11,  1.0992e-09,  3.2622e-09,
        -9.8620e-09, -1.0132e-09, -1.2217e-09, -3.2801e-09,  2.6852e-09,
         7.2601e-09,  6.0643e-09, -2.0075e-08,  2.7845e-09,  4.0548e-09,
        -4.9150e-09,  3.0757e-09, -6.2612e-10,  5.2753e-09, -1.8326e-09,
         4.2979e-09, -1.2307e-08, -1.9491e-08, -2.2237e-08, -1.0558e-08,
         4.6120e-09,  6.3709e-09, -2.0356e-08, -3.6546e-09, -3.9113e-09,
         4.6812e-09, -1.2321e-09, -1.7299e-08,  4.5370e-09, -1.0710e-08,
         2.4327e-08,  1.1072e-08, -5.1310e-09,  5.3771e-09,  3.8383e-09,
         2.0216e-09, -1.9305e-10,  1.4886e-08,  1.0634e-08,  3.2206e-09,
         3.8935e-09, -5.2932e-09, -4.8974e-09, -4.7090e-09, -7.6140e-09,
         4.3895e-08,  4.3434e-10,  3.5667e-08, -1.0279e-08, -5.9692e-09,
         1.7017e-08,  3.3623e-09,  5.0201e-11,  3.2951e-08,  4.1900e-08,
        -5.2588e-09,  5.0499e-09, -1.3435e-08, -4.9242e-10,  8.3271e-09,
         1.2461e-08,  3.8152e-01, -1.4931e-03, -3.5405e-01,  3.5276e-01,
         3.5710e-01, -7.0241e-02, -3.7045e-02,  3.4074e-01, -2.1979e-01,
         1.1437e-01,  2.9531e-03, -8.2748e-02, -1.2344e-01, -3.0914e-01,
         3.4187e-01, -1.2435e-01,  4.5532e-02,  1.3547e-01, -1.0128e-01,
         3.4855e-01, -3.8225e-01,  3.0708e-01, -3.6551e-01,  3.4410e-01,
         3.5347e-01, -2.7290e-02, -3.7461e-01,  3.7526e-01,  3.5255e-01,
         3.6401e-01,  3.4594e-01, -1.1084e-01,  6.4577e-02,  1.3424e-01,
         3.5340e-01,  1.2303e-01,  3.5242e-01,  1.2318e-01,  3.5380e-01,
        -3.6599e-01,  3.4378e-01,  9.8369e-02, -2.0112e-01, -3.6834e-01,
         4.3543e-02, -1.2577e-01,  6.8463e-02,  3.4533e-01,  2.1923e-01,
        -6.9265e-02,  3.5332e-01,  9.1315e-02,  3.6611e-01, -2.5413e-01,
         3.6323e-01,  2.5554e-01, -2.9903e-03, -2.4967e-02, -3.2682e-01,
         3.7240e-01,  9.6635e-02,  3.9400e-01,  3.5884e-01, -5.1846e-02,
         4.8485e-02,  3.4361e-01, -3.4633e-02,  3.7315e-01,  3.5520e-01,
        -3.5663e-01,  1.2200e-01, -1.1325e-01,  9.8240e-02, -3.6303e-01,
        -1.1433e-01,  1.8741e-01,  2.1784e-01,  3.5168e-01, -9.6387e-02,
         1.0015e-01, -6.6282e-02, -3.4732e-01, -3.7034e-01, -1.0242e-01,
        -1.1198e-01,  3.3916e-01, -3.5897e-01, -6.4055e-03,  3.7485e-01,
        -3.8264e-01,  3.5500e-01, -1.2375e-01,  3.6119e-01, -3.6412e-01,
        -3.4650e-01, -3.4956e-01,  9.9456e-02,  3.5239e-01,  1.1875e-01,
         3.4723e-01, -1.0375e-01,  3.6542e-01,  3.6700e-01,  3.8588e-01,
         3.7564e-01, -3.5591e-01,  3.0796e-02, -3.5950e-01,  3.6111e-01,
         3.5376e-01, -3.3447e-01, -3.5336e-01,  3.5123e-01,  1.3942e-01,
        -1.1965e-01, -1.7977e-01, -3.7314e-01,  5.0041e-02, -8.4628e-02,
         4.0254e-01, -3.5345e-01, -3.7155e-01, -1.3863e-01, -5.8973e-02,
         3.4676e-02,  1.2745e-01,  3.6500e-01,  2.3245e-02])
##########################################################
prot_encoder.encoder.layers.1.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0777,  0.0435, -0.0862,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0485, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0306,  0.0483],
        [-0.0517, -0.0149,  0.0659,  ...,  0.0579, -0.0457,  0.0403]])
tensor([[-0.2322, -0.2007,  0.2187,  ...,  0.1474, -0.1233,  0.1995],
        [ 0.2257,  0.2674, -0.2576,  ..., -0.3098,  0.1829, -0.1878],
        [ 0.1720,  0.2620, -0.3976,  ..., -0.1315,  0.1796, -0.2151],
        ...,
        [ 0.3989,  0.1699, -0.1445,  ..., -0.2957,  0.2356, -0.1493],
        [ 0.3351,  0.1820, -0.1729,  ..., -0.2696,  0.2825, -0.1834],
        [-0.3132, -0.2452,  0.4632,  ...,  0.1332, -0.3139,  0.2446]])
##########################################################
prot_encoder.encoder.layers.1.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-0.3537,  0.1081,  0.3017, -0.3549,  0.1303, -0.1271, -0.3418, -0.3406,
         0.0908, -0.3408,  0.1260,  0.3656,  0.1394, -0.3084,  0.1261,  0.1365,
         0.3573, -0.1283, -0.1469, -0.3513, -0.1290, -0.2874,  0.3168, -0.1366,
        -0.1376, -0.1209,  0.3599,  0.3622,  0.0809,  0.1297, -0.0977,  0.3637,
        -0.2811,  0.1292,  0.1772, -0.2137, -0.3594, -0.3343, -0.1279,  0.2732,
        -0.3449, -0.0826,  0.3495, -0.3555,  0.0601,  0.0283,  0.3551, -0.2986,
        -0.3739, -0.1639,  0.1306,  0.1183,  0.3539,  0.3263,  0.3384,  0.1301,
        -0.3488,  0.0415, -0.3146,  0.1135,  0.3012, -0.3256, -0.3633, -0.3428,
         0.3420,  0.0732,  0.0699,  0.2061, -0.3463, -0.3549,  0.3663,  0.1830,
        -0.1363, -0.3300, -0.1336,  0.0487,  0.1207,  0.0073, -0.1371,  0.4121,
         0.3473,  0.1086, -0.1038, -0.1305, -0.3630,  0.3522, -0.0790, -0.0401,
        -0.0138, -0.1259,  0.1696, -0.2723, -0.3620,  0.1073,  0.0932,  0.0149,
        -0.3417,  0.1278,  0.3541,  0.3449,  0.1277,  0.3872, -0.3366, -0.2502,
        -0.3410, -0.3430, -0.0858, -0.1210, -0.1204, -0.1376,  0.3627,  0.3559,
         0.1123, -0.3393,  0.1402, -0.4068, -0.4297, -0.1193,  0.3499, -0.1480,
        -0.1633, -0.1896,  0.0712,  0.1202, -0.3075,  0.0820,  0.0181, -0.3748])
##########################################################
prot_encoder.encoder.layers.1.linear1.weight shape: torch.Size([64, 128])
tensor([[ 0.0803,  0.0805, -0.0310,  ..., -0.0861, -0.0321, -0.0411],
        [-0.0046, -0.0457, -0.1090,  ..., -0.0019,  0.0430, -0.0441],
        [ 0.0128, -0.0393, -0.0018,  ..., -0.0116,  0.1567, -0.0880],
        ...,
        [ 0.0703,  0.0072,  0.0985,  ...,  0.0973, -0.0623, -0.0150],
        [ 0.0386,  0.0456, -0.0173,  ..., -0.0630, -0.0833, -0.0197],
        [ 0.0008,  0.0614, -0.0274,  ...,  0.0996, -0.0468,  0.0651]])
tensor([[-0.1743, -0.0062, -0.2639,  ..., -0.0481, -0.0947, -0.2800],
        [-0.2176, -0.0166, -0.2506,  ..., -0.2038,  0.1789, -0.2555],
        [ 0.2912,  0.3119,  0.3092,  ..., -0.3988,  0.5270,  0.2032],
        ...,
        [-0.0591, -0.2603,  0.4084,  ..., -0.0401, -0.3770, -0.1442],
        [-0.3080, -0.1567, -0.3065,  ...,  0.0551, -0.2506, -0.2915],
        [-0.2099,  0.1201, -0.1933,  ..., -0.1093,  0.1053, -0.1521]])
##########################################################
prot_encoder.encoder.layers.1.linear1.bias shape: torch.Size([64])
tensor([-0.0250,  0.0180, -0.0861,  0.0376, -0.0467,  0.0681,  0.0507, -0.0192,
         0.0337, -0.0159,  0.0222,  0.0514, -0.0768,  0.0162,  0.0261,  0.0345,
         0.0281,  0.0324,  0.0413,  0.0028, -0.0356,  0.0813, -0.0696,  0.0608,
        -0.0431, -0.0643, -0.0072,  0.0071,  0.0649,  0.0702, -0.0061,  0.0290,
        -0.0727, -0.0272, -0.0382,  0.0734, -0.0835, -0.0438, -0.0425,  0.0427,
        -0.0032,  0.0075, -0.0350,  0.0270, -0.0527, -0.0279,  0.0828, -0.0536,
         0.0573,  0.0599,  0.0368, -0.0062, -0.0522, -0.0149,  0.0005,  0.0297,
         0.0508, -0.0860, -0.0782,  0.0585,  0.0812,  0.0567, -0.0077,  0.0127])
tensor([-0.3228, -0.2094,  0.1584, -0.1902, -0.4274, -0.1645,  0.4754,  0.3412,
        -0.3015,  0.3496, -0.1096, -0.0053, -0.1982, -0.2125, -0.2158,  0.3649,
        -0.1958,  0.3693, -0.1836, -0.2469,  0.3322,  0.0448,  0.4284, -0.0638,
        -0.2666, -0.1608,  0.3233, -0.1274, -0.1606, -0.1582, -0.2292,  0.4227,
         0.2628,  0.1361,  0.1903, -0.0514, -0.3051, -0.1783, -0.3336, -0.0912,
        -0.1417, -0.1239,  0.1040, -0.2002,  0.0160, -0.1564, -0.2170, -0.1830,
        -0.0685,  0.4328,  0.3025, -0.1333, -0.1896, -0.1454,  0.3194, -0.0778,
        -0.1760, -0.4228, -0.3062, -0.0625, -0.2550, -0.0668, -0.3886, -0.2154])
##########################################################
prot_encoder.encoder.layers.1.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.0970, -0.0292,  0.0377,  ..., -0.0403,  0.0823, -0.0293],
        [-0.0524, -0.0265, -0.0480,  ...,  0.0880, -0.0577, -0.0127],
        [ 0.0726,  0.1058, -0.0378,  ..., -0.0174,  0.0265,  0.0606],
        ...,
        [-0.1435, -0.0387,  0.0123,  ...,  0.0076,  0.0404, -0.0887],
        [ 0.0583,  0.0534,  0.0204,  ...,  0.0346, -0.1024, -0.1340],
        [-0.0332,  0.0559, -0.0560,  ...,  0.0050,  0.1184, -0.0744]])
tensor([[ 0.1840,  0.1125,  0.4014,  ...,  0.0946,  0.2690,  0.1797],
        [ 0.4030,  0.1171,  0.2936,  ...,  0.4136,  0.2125,  0.1035],
        [-0.3933, -0.0767, -0.3152,  ..., -0.3573, -0.2929, -0.0883],
        ...,
        [-0.3144,  0.0329, -0.2080,  ..., -0.2130,  0.2789,  0.0058],
        [ 0.1794,  0.2343,  0.2958,  ..., -0.1084, -0.1786,  0.0568],
        [ 0.4201,  0.0022,  0.2606,  ..., -0.1362,  0.4202, -0.2507]])
##########################################################
prot_encoder.encoder.layers.1.linear2.bias shape: torch.Size([128])
tensor([-0.1182,  0.0646,  0.0008, -0.0595,  0.0710, -0.0074, -0.0845, -0.1114,
         0.0555,  0.0241, -0.1157,  0.0894, -0.0410, -0.0008,  0.0374,  0.0021,
        -0.0535,  0.0135,  0.0153,  0.0757,  0.0807,  0.0810, -0.0713,  0.0207,
         0.1064, -0.0170,  0.0162,  0.0275, -0.0396, -0.0285, -0.0726, -0.0859,
        -0.0350, -0.1200,  0.0271, -0.0607,  0.1068, -0.0537,  0.0798, -0.0467,
        -0.0325,  0.0945,  0.0455, -0.0038, -0.0678,  0.1204,  0.0363,  0.0999,
        -0.0391, -0.1018, -0.0562,  0.0251,  0.0028,  0.1054,  0.0747,  0.0139,
         0.0395,  0.0414, -0.0185,  0.0687,  0.0981,  0.0435, -0.0411, -0.0493,
         0.1250, -0.0381,  0.0445,  0.1141,  0.0302,  0.0075,  0.0767,  0.1089,
         0.0577, -0.1065,  0.0402, -0.0100, -0.1008,  0.0900, -0.0211,  0.0569,
         0.0043,  0.1239, -0.0032, -0.1046, -0.0472, -0.0728,  0.0371, -0.1220,
        -0.0720, -0.0652, -0.0181, -0.0107, -0.0156, -0.0628,  0.0205, -0.0876,
        -0.0442, -0.0234,  0.0045,  0.0475,  0.1056,  0.0616,  0.0599,  0.0487,
        -0.0669,  0.0971,  0.0804,  0.1205,  0.0237, -0.0217, -0.0002,  0.0236,
         0.1213,  0.0462,  0.0240,  0.0174, -0.1079, -0.0424, -0.0862,  0.1223,
        -0.0236, -0.0300,  0.0469,  0.1132, -0.0838, -0.0935, -0.0828, -0.0944])
tensor([ 0.0428,  0.4506, -0.5578, -0.1734,  0.4704, -0.3816,  0.0734,  0.1768,
         0.2407, -0.0712, -0.4771,  0.6605,  0.1091,  0.3649, -0.1028, -0.1154,
         0.0732,  0.1468, -0.4110,  0.3289,  0.4643, -0.3576,  0.0706, -0.1196,
         0.4916, -0.3761,  0.3391, -0.1079, -0.1693, -0.1625, -0.5523, -0.4217,
         0.2820, -0.4526, -0.0612, -0.2251, -0.3888, -0.1963,  0.1458,  0.0919,
        -0.3938, -0.0390,  0.2518,  0.0418,  0.3388,  0.1439, -0.3030, -0.1784,
        -0.0019, -0.1659, -0.4420,  0.3586,  0.0264, -0.0325, -0.2097,  0.1632,
        -0.0933,  0.1783,  0.5311, -0.0765, -0.0175, -0.3897,  0.3810, -0.2763,
         0.1861,  0.5831, -0.3019, -0.0740, -0.3289, -0.2124,  0.6264, -0.2350,
        -0.3680,  0.2463, -0.0925,  0.3238, -0.3144,  0.0968,  0.2148, -0.0359,
         0.3012,  0.5509,  0.3854, -0.5732,  0.1163, -0.4206,  0.1561, -0.1504,
        -0.1831, -0.1942, -0.1839,  0.5312,  0.3425, -0.2297, -0.3669, -0.1383,
         0.0785,  0.3129,  0.4126,  0.2244, -0.0245, -0.3215, -0.2300,  0.0928,
        -0.3332,  0.4628, -0.0525, -0.1295, -0.3462, -0.1551,  0.1723,  0.4138,
         0.5457,  0.1903,  0.3828,  0.1735, -0.6231, -0.1225,  0.0474, -0.2924,
        -0.0175,  0.3455,  0.0082,  0.4719, -0.1711, -0.2365,  0.0051, -0.1071])
##########################################################
prot_encoder.encoder.layers.1.norm1.weight shape: torch.Size([128])
tensor([-0.0901, -0.0171, -0.0634,  0.1264,  0.1087,  0.0661, -0.1314, -0.0740,
         0.1273,  0.1026,  0.0041,  0.1544, -0.2865, -0.0301, -0.0328, -0.0181,
         0.1603,  0.1363,  0.0357, -0.1042, -0.0560,  0.0835,  0.0153,  0.0099,
        -0.0626,  0.0703,  0.0650,  0.0299, -0.1016, -0.0618, -0.1228, -0.0973,
        -0.1066, -0.0804,  0.1344, -0.1247, -0.1035,  0.0196,  0.0032,  0.1962,
         0.0634,  0.1753,  0.1205, -0.0669,  0.0861,  0.1074, -0.2545, -0.1213,
         0.1415, -0.0731, -0.0766,  0.1846, -0.0291, -0.0250, -0.1052,  0.1167,
         0.0869,  0.1612, -0.0029, -0.0058, -0.0094,  0.0686, -0.0278, -0.0367,
         0.1115, -0.0502,  0.0393, -0.0308,  0.0562,  0.0822,  0.0649, -0.0453,
         0.0090,  0.0515,  0.0096, -0.0911, -0.0242,  0.0293, -0.0103,  0.1345,
         0.1081,  0.2269,  0.0697,  0.0557, -0.1189, -0.1856, -0.0967, -0.0088,
         0.1292, -0.1547, -0.1103, -0.0830,  0.0335, -0.1170, -0.0190,  0.0439,
        -0.1065, -0.0034,  0.1657,  0.1089, -0.0296,  0.0122,  0.0151,  0.0771,
         0.0940, -0.0670,  0.0503,  0.0377,  0.0701,  0.0515,  0.1515,  0.0908,
        -0.0089, -0.0279,  0.0291,  0.0141,  0.0294,  0.0098, -0.0217,  0.0339,
        -0.0096, -0.0122, -0.0268, -0.0253, -0.0769, -0.2179, -0.0166, -0.1560])
tensor([-0.4243, -0.1914,  0.2958,  0.2347,  0.0760, -0.0409, -0.4118, -0.2801,
         0.2700,  0.3322,  0.1265,  0.2917, -0.4265, -0.2449,  0.0828,  0.1350,
         0.4882, -0.0196, -0.0190, -0.4296,  0.0311, -0.2593,  0.3537,  0.3976,
         0.0216,  0.0203,  0.3395, -0.3178, -0.2455,  0.0837, -0.1221, -0.4757,
        -0.1124, -0.0225, -0.1856,  0.1463,  0.2568, -0.0326,  0.1484,  0.3090,
         0.4305,  0.0319,  0.3647, -0.4454,  0.2132,  0.1510, -0.4348,  0.3624,
         0.4224, -0.1341, -0.0083,  0.0762,  0.3837,  0.0622, -0.3924, -0.0078,
         0.4231, -0.1790, -0.0033, -0.0541, -0.1889, -0.4165,  0.2764, -0.1584,
         0.2291, -0.0906,  0.1566,  0.0131,  0.4079, -0.2954,  0.4484, -0.0227,
         0.0038,  0.2837, -0.1485, -0.2299,  0.2486, -0.2930, -0.3621,  0.7321,
         0.2913,  0.3256, -0.0682, -0.0338, -0.4464, -0.4664,  0.0233,  0.0836,
        -0.1839, -0.1554, -0.2155, -0.4283, -0.2877, -0.3065, -0.2828,  0.1936,
        -0.4682, -0.1580,  0.5432,  0.3962,  0.1161, -0.4991,  0.0933, -0.3243,
        -0.2721, -0.4432, -0.2043, -0.2070,  0.0061, -0.0848,  0.4181,  0.4537,
        -0.0154, -0.3368, -0.1337,  0.5158,  0.5596,  0.0858,  0.3376,  0.0886,
         0.3177, -0.0625, -0.2857, -0.1067,  0.2424, -0.0906,  0.1755, -0.3995])
##########################################################
prot_encoder.encoder.layers.1.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.3312,  0.3116,  0.1381, -0.3244,  0.1912, -0.1937,  0.2682,  0.2570,
         0.2693, -0.1807, -0.1670,  0.3475, -0.2633,  0.0810, -0.1468, -0.1269,
         0.3234, -0.1161, -0.1821,  0.3225,  0.1826,  0.1243,  0.1621, -0.3463,
         0.1598, -0.1871,  0.2648, -0.1405, -0.3523, -0.1333,  0.3128, -0.3971,
         0.1341, -0.1799, -0.1329, -0.1663, -0.3640, -0.1546, -0.4512,  0.3312,
        -0.3602, -0.1325,  0.1769,  0.3813,  0.3683, -0.2778, -0.3594, -0.2849,
        -0.4070,  0.0726, -0.1702,  0.1629,  0.1938, -0.1439, -0.2786,  0.1389,
        -0.3517,  0.1276, -0.1388, -0.3697, -0.2095,  0.2525, -0.0722,  0.1707,
         0.1474,  0.3975, -0.3526,  0.2172, -0.3547,  0.1739,  0.3924, -0.4200,
        -0.4217, -0.1827, -0.1375,  0.3323, -0.1239,  0.4386, -0.2472,  0.5777,
         0.2035,  0.3471, -0.1214, -0.1762,  0.3379, -0.2890,  0.1252,  0.1735,
         0.1812,  0.2653, -0.3841,  0.5656,  0.1616,  0.1612, -0.3083,  0.2998,
         0.3532,  0.3210,  0.3756,  0.2873, -0.1256, -0.2758, -0.2865,  0.1207,
         0.3552,  0.3597, -0.1456, -0.1858, -0.1756, -0.1447,  0.2709,  0.3760,
         0.4384,  0.1109,  0.3324, -0.5316, -0.5003,  0.2741,  0.1439, -0.4368,
         0.1263,  0.1689,  0.0145,  0.3715, -0.0997, -0.1367,  0.4897,  0.4484])
##########################################################
prot_encoder.encoder.layers.1.norm2.weight shape: torch.Size([128])
tensor([ 0.0945,  0.0372, -0.0638, -0.1360, -0.0108, -0.0031,  0.0358,  0.0576,
        -0.1132,  0.1323, -0.0284, -0.0939, -0.0219, -0.1052, -0.1945,  0.0649,
         0.0895,  0.0288,  0.0486, -0.0820,  0.0354,  0.0753,  0.0007, -0.0627,
         0.1420, -0.1304, -0.1864, -0.0361, -0.0290, -0.0217,  0.0083,  0.0097,
         0.0107,  0.0412, -0.0878,  0.0321,  0.1155, -0.0320, -0.0126,  0.1885,
        -0.0415,  0.0003,  0.1151,  0.0431, -0.0685,  0.0551, -0.0784,  0.0398,
        -0.0346,  0.1408, -0.0482, -0.0277,  0.1019, -0.0512,  0.0887,  0.1012,
         0.0114,  0.0282, -0.1437,  0.0208, -0.0199,  0.0842, -0.1190,  0.0906,
         0.0569, -0.0271,  0.1000, -0.0782, -0.0920, -0.0919,  0.0529, -0.1712,
         0.0373, -0.0516,  0.0107, -0.2001, -0.0627, -0.0380,  0.0115, -0.0331,
         0.0697,  0.0109, -0.1139, -0.0263,  0.0159, -0.0204,  0.1746,  0.1208,
         0.0620,  0.0621, -0.0040, -0.0263, -0.0378, -0.0490,  0.1086,  0.1062,
         0.0901,  0.1731,  0.0295, -0.1435,  0.0041, -0.1730,  0.0973,  0.0634,
         0.1049, -0.0368,  0.0127, -0.1216, -0.1253, -0.0191, -0.0102, -0.0254,
        -0.0014,  0.1717, -0.0202,  0.0543,  0.0033,  0.0162,  0.0353,  0.2462,
        -0.0200, -0.0410, -0.0953,  0.0206, -0.0414,  0.0057, -0.0990,  0.0919])
tensor([ 0.0499,  0.2125, -0.1298,  0.2041,  0.4668,  0.4663,  0.4397, -0.2144,
        -0.1244, -0.1242, -0.3948,  0.3621, -0.1674, -0.3758, -0.0826,  0.1734,
        -0.0794, -0.0499, -0.4829, -0.2210,  0.5402, -0.2937, -0.1233,  0.0370,
         0.7509, -0.5426, -0.3435,  0.0820,  0.1707,  0.1337, -0.3521, -0.1554,
        -0.2393, -0.4193,  0.0233,  0.3108,  0.4083, -0.2842,  0.0106, -0.0120,
        -0.4487, -0.1661,  0.1570,  0.0163,  0.3010,  0.0195,  0.2252, -0.5430,
        -0.0455, -0.2230, -0.4352,  0.0705,  0.0385,  0.0691,  0.2283, -0.0084,
        -0.0282,  0.1121, -0.4547,  0.2463,  0.1146, -0.3023, -0.2201,  0.2684,
         0.0540,  0.5526,  0.1651, -0.1179, -0.5292, -0.1698,  0.6072, -0.0275,
        -0.4994,  0.1908,  0.1445, -0.2883, -0.1541,  0.1285,  0.1261,  0.3418,
         0.1748,  0.4129,  0.4900, -0.4350,  0.0124, -0.2707,  0.0418, -0.1798,
         0.1432,  0.1542, -0.3700,  0.5532,  0.5776, -0.0736, -0.1843,  0.1734,
        -0.0788,  0.4114,  0.2289, -0.1842,  0.1302, -0.3411,  0.1408,  0.1879,
         0.0595,  0.3086,  0.1173,  0.1745, -0.6138,  0.1722, -0.0056, -0.3233,
        -0.4941, -0.1644,  0.3681,  0.0421,  0.5774, -0.1753, -0.1066,  0.4569,
        -0.0583,  0.3404,  0.0525,  0.3771, -0.1698,  0.0897,  0.1019,  0.0975])
##########################################################
prot_encoder.encoder.layers.1.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.4032,  0.2452,  0.2904,  0.3665,  0.1794, -0.4344,  0.1822,  0.0241,
        -0.0062,  0.1197,  0.1776,  0.3671,  0.0661, -0.1775,  0.1707,  0.1946,
         0.0242, -0.4423,  0.2508, -0.1520,  0.1929,  0.1605,  0.1613,  0.2018,
         0.4120,  0.0865, -0.3195,  0.1808,  0.0164,  0.1355,  0.3754,  0.2263,
        -0.0683,  0.1818, -0.1264,  0.0740, -0.4349, -0.2834,  0.0223,  0.3666,
         0.3822, -0.2172,  0.0334,  0.1903,  0.1533, -0.0421, -0.0784,  0.4086,
        -0.1455,  0.2596,  0.3877, -0.0939, -0.0742,  0.2206, -0.1594,  0.3507,
        -0.3979, -0.4427, -0.5123, -0.0377,  0.4096,  0.1760, -0.3133, -0.2572,
         0.0033,  0.2728, -0.2506,  0.2916,  0.3828,  0.3548,  0.5589,  0.0608,
         0.2379,  0.5179,  0.0683, -0.3169,  0.0232, -0.1545,  0.2100,  0.3047,
         0.1084,  0.3882, -0.1007,  0.4042,  0.2187,  0.2648,  0.0395,  0.1081,
         0.4148,  0.3616, -0.2578,  0.2825,  0.3487,  0.0039, -0.2643,  0.3950,
        -0.0425,  0.2593,  0.2695, -0.0132,  0.2000,  0.3687, -0.3210, -0.4346,
        -0.0558,  0.1467,  0.1766, -0.0909,  0.4102, -0.4973, -0.0508, -0.4113,
        -0.4495,  0.0665,  0.1529,  0.0234, -0.5789,  0.0555,  0.0773, -0.4496,
        -0.0026,  0.1531,  0.0619,  0.3535, -0.4554,  0.1861, -0.4151, -0.0976])
##########################################################
linear.weight shape: torch.Size([300, 600])
tensor([[ 0.0113,  0.0231, -0.0334,  ...,  0.0395, -0.0007, -0.0066],
        [ 0.0380,  0.0131, -0.0167,  ...,  0.0288, -0.0024, -0.0120],
        [ 0.0337,  0.0070, -0.0196,  ..., -0.0193, -0.0405,  0.0091],
        ...,
        [-0.0281, -0.0114,  0.0131,  ...,  0.0238,  0.0184,  0.0256],
        [ 0.0144, -0.0127,  0.0133,  ..., -0.0157,  0.0235, -0.0213],
        [-0.0397, -0.0098, -0.0044,  ..., -0.0364, -0.0265, -0.0304]])
tensor([[ 0.0849,  0.1314,  0.0751,  ...,  0.3701,  0.1446,  0.1113],
        [ 0.1630,  0.1423,  0.1157,  ..., -0.0979, -0.1304, -0.1395],
        [-0.3434, -0.3527, -0.4038,  ..., -0.4448, -0.5047, -0.4684],
        ...,
        [-0.0281, -0.0114,  0.0131,  ...,  0.0238,  0.0184,  0.0256],
        [ 0.0144, -0.0127,  0.0133,  ..., -0.0157,  0.0235, -0.0213],
        [-0.0397, -0.0098, -0.0044,  ..., -0.0364, -0.0265, -0.0304]])
##########################################################
linear.bias shape: torch.Size([300])
tensor([-9.3139e-03, -1.3349e-02,  1.4181e-02,  2.1110e-02,  3.0747e-02,
        -3.1475e-02, -2.7974e-02,  6.0503e-03, -1.0879e-02, -3.7698e-02,
         3.3337e-02,  3.4774e-02,  3.6432e-02, -2.0463e-02,  1.7337e-02,
        -1.6103e-02,  2.1358e-02,  6.7086e-03,  3.3878e-02, -3.6222e-02,
        -2.9979e-02,  7.7262e-03,  3.7586e-02,  3.5363e-02,  7.9957e-03,
        -1.4962e-02, -1.3760e-02,  4.0118e-02, -4.5047e-03,  7.7051e-03,
        -1.1655e-02, -3.3245e-02, -1.4898e-02, -1.9957e-04, -1.1004e-02,
        -3.1010e-02, -2.1594e-02, -8.5334e-03,  2.0647e-02,  1.8650e-02,
        -3.7308e-03,  2.4489e-02,  2.9272e-02, -2.6460e-02, -2.7409e-02,
        -2.8625e-02, -2.0864e-03,  2.1386e-02,  3.9275e-02, -8.7853e-03,
         7.3395e-03,  1.7012e-02,  2.0254e-02,  1.0640e-03, -1.7311e-02,
        -1.9507e-02,  2.3582e-02, -4.0479e-02, -1.1124e-03,  2.2219e-02,
        -1.4510e-02, -2.7484e-02, -1.3690e-02,  2.7693e-03,  2.4256e-02,
        -2.0795e-02, -3.7581e-02,  1.8676e-02,  2.8696e-02, -3.2044e-02,
        -3.0074e-02,  5.3290e-03, -1.4953e-02,  5.7319e-03, -4.3637e-03,
         1.7188e-02, -2.9931e-02,  1.5565e-03, -2.1964e-02, -5.5680e-03,
        -2.9043e-02, -8.2202e-03,  2.6158e-03, -3.4339e-02, -1.0661e-02,
        -1.3714e-02,  2.6718e-02,  3.0596e-02,  3.4782e-02, -5.9146e-03,
         3.4189e-02, -3.8782e-02,  1.2858e-02,  3.8889e-02,  2.0904e-02,
         8.7117e-03, -1.6542e-02,  3.5708e-02, -3.4070e-02,  3.7505e-02,
        -2.0351e-02, -2.1296e-02, -3.2392e-02, -3.1829e-02, -3.4723e-02,
         4.7218e-03,  2.6178e-03, -2.1226e-02, -1.1145e-02,  2.5730e-02,
        -7.2232e-03,  4.7917e-03,  2.7337e-02, -8.3661e-03, -3.6548e-02,
         2.8955e-02, -4.8237e-03, -3.8562e-02, -4.0689e-02, -3.3960e-02,
         2.4649e-02, -1.9005e-02,  3.1959e-02, -2.3582e-02,  4.0145e-02,
        -1.4657e-02,  6.0029e-03, -3.6884e-02, -2.9941e-02,  8.1066e-03,
        -3.5315e-02,  1.3502e-02,  2.7034e-02,  1.9970e-02,  3.4088e-02,
        -3.7746e-02, -2.4748e-02,  1.5099e-02, -4.0129e-02,  2.2872e-02,
         3.6043e-02, -2.4598e-02, -2.7367e-02,  4.0197e-02,  2.2999e-02,
         3.5976e-02,  3.5313e-02, -3.2733e-02, -3.7761e-02, -6.9293e-03,
         3.8152e-02, -7.8742e-03, -2.3133e-03,  1.9013e-02, -3.2779e-02,
        -3.4014e-02,  3.0160e-02, -3.0361e-02, -2.6030e-02, -3.6570e-02,
        -2.0860e-02, -3.4524e-02, -2.5552e-02, -1.4226e-04,  5.8896e-03,
         2.2118e-02,  3.9777e-02, -9.2667e-03, -5.5788e-03,  3.0369e-02,
        -1.0228e-03, -1.4707e-02,  1.3439e-02,  2.2941e-02, -2.4932e-02,
         2.9253e-02,  8.7512e-03,  1.5662e-02,  1.6123e-03,  3.5042e-02,
        -2.6364e-02, -3.8201e-02, -2.8963e-02, -9.3378e-03, -2.8382e-02,
         2.3896e-02, -2.2847e-02, -1.7583e-03, -1.8505e-02,  1.3951e-02,
         3.5664e-02, -4.0222e-02,  1.8027e-02, -6.9750e-03, -1.8421e-02,
        -9.1123e-03, -4.1284e-03,  2.8588e-02, -3.3108e-03,  1.3892e-02,
        -1.8034e-02, -2.2301e-02, -4.0510e-02,  1.7557e-02, -3.0297e-02,
         4.4235e-03,  7.5342e-03,  3.3321e-02,  1.3859e-02, -1.8399e-02,
        -4.0661e-03,  1.8474e-03, -3.9163e-02, -4.5387e-03, -9.6402e-03,
         2.9152e-02, -3.6046e-02,  1.1659e-02,  1.0475e-02,  3.7287e-04,
        -1.4532e-04, -3.2438e-03,  3.3783e-02, -6.8215e-03,  4.4507e-03,
        -7.8017e-03, -3.3455e-02,  1.0412e-03,  9.0097e-04,  4.0346e-02,
        -3.0829e-03, -2.3246e-02,  3.9789e-03, -1.6683e-02,  4.0373e-02,
         2.1323e-02, -3.1497e-02,  3.8355e-02, -9.1603e-03,  3.3922e-02,
         2.8778e-02,  3.5900e-03,  2.4710e-02,  3.6202e-02,  1.4250e-02,
        -2.3044e-03,  3.6749e-02, -3.9414e-03,  1.4828e-02,  8.3062e-03,
        -2.6982e-02,  1.8186e-03, -2.2214e-02, -3.7018e-02,  3.8588e-02,
         3.3359e-02, -1.3672e-02, -4.1571e-03,  5.3720e-03, -3.4380e-02,
         7.1399e-03, -3.7730e-02,  4.0124e-02, -8.7760e-05, -2.7470e-02,
        -4.2184e-03,  1.1348e-02, -3.4111e-03, -3.3621e-02,  2.5059e-02,
         2.2840e-02,  3.9080e-02, -1.8599e-02, -1.7701e-02, -3.4168e-02,
         6.0385e-03, -2.5557e-02, -2.3862e-02, -3.1938e-02,  1.4597e-02,
         1.6642e-03,  3.6958e-02,  3.0665e-02, -2.0517e-02,  3.1198e-02,
         1.3226e-02, -2.3948e-02, -3.7540e-02,  3.5760e-02, -3.7587e-02,
        -6.9111e-03,  2.6518e-03, -3.6684e-02,  6.5981e-03,  2.2165e-02,
        -2.4803e-02, -1.0959e-02, -2.8514e-02,  2.9683e-02,  2.9802e-02])
tensor([-0.3620, -0.3566,  0.1806,  0.1445, -0.3404, -0.2087, -0.0195, -0.1645,
        -0.3547, -0.3701, -0.1837,  0.1187,  0.1194, -0.3666, -0.3267, -0.2321,
         0.1457,  0.1190,  0.1388,  0.0616, -0.3684,  0.1189,  0.0825, -0.1191,
        -0.3417, -0.3831,  0.1177, -0.3021,  0.1243,  0.0815,  0.0861,  0.0937,
        -0.3560,  0.1258,  0.0479,  0.0944, -0.3710,  0.1114,  0.1424,  0.1429,
         0.1311,  0.1440,  0.1278, -0.3777,  0.0626, -0.3772,  0.1112, -0.3239,
        -0.3028,  0.1213,  0.0897, -0.2342, -0.0228,  0.0239, -0.3559, -0.2821,
        -0.3225, -0.3823,  0.1300, -0.3399,  0.0275, -0.0933,  0.1082,  0.1065,
         0.1434,  0.0793, -0.3856,  0.3081, -0.3270,  0.3040,  0.0931,  0.1327,
         0.0441,  0.1291, -0.3489,  0.1443, -0.3714,  0.1123,  0.1035,  0.1214,
        -0.3808, -0.3787, -0.3510, -0.3885, -0.0827, -0.2147,  0.1314, -0.2027,
        -0.3193,  0.0022,  0.1022,  0.0997, -0.2242, -0.3286, -0.3487, -0.3363,
         0.1140, -0.3095,  0.0820,  0.1192, -0.3616,  0.1099, -0.0902,  0.1046,
        -0.3780,  0.0277, -0.3680, -0.3715,  0.0767, -0.2714,  0.1094,  0.1077,
        -0.3388,  0.0867, -0.3522, -0.3146,  0.0037,  0.2767,  0.0422,  0.0788,
        -0.3303,  0.0454,  0.1425, -0.1355,  0.1716,  0.0714, -0.0247,  0.0935,
        -0.3999,  0.1075, -0.4037, -0.1284,  0.3576,  0.0636,  0.0675,  0.0923,
        -0.3717, -0.2336, -0.0443, -0.3284,  0.2182, -0.3722,  0.1050, -0.3160,
         0.0567,  0.2900, -0.0023,  0.1005,  0.0798,  0.1062, -0.1862, -0.3585,
         0.1780,  0.1394,  0.0643,  0.0709,  0.1282,  0.2520, -0.3808, -0.3774,
         0.1190, -0.0222,  0.0635, -0.1030,  0.0902,  0.1559,  0.1331, -0.5004,
        -0.3645,  0.1853,  0.1285,  0.0247,  0.1297, -0.3260, -0.0068,  0.1227,
         0.3347, -0.2567,  0.3487, -0.0649,  0.0736,  0.0888,  0.1009, -0.3250,
         0.2123,  0.0362,  0.1001,  0.3388,  0.0736,  0.0152,  0.1178,  0.0951,
         0.3523,  0.0348,  0.1056,  0.1152,  0.1406, -0.3095,  0.1735,  0.1268,
        -0.2287, -0.2319, -0.2377, -0.1346,  0.1666,  0.2139, -0.2146,  0.2403,
        -0.1968, -0.2386, -0.2140,  0.2082, -0.2521, -0.2243, -0.2236, -0.1738,
        -0.1893,  0.2294, -0.1715, -0.2177, -0.0513, -0.2209,  0.2526, -0.2136,
        -0.1924, -0.2160,  0.1343,  0.0896, -0.1632, -0.0660, -0.2206, -0.2365,
         0.2095, -0.2275,  0.2546, -0.1843, -0.2379,  0.2309, -0.1822, -0.1324,
        -0.1720, -0.2093, -0.1895, -0.1269, -0.2081, -0.2224, -0.0486, -0.1969,
        -0.1612,  0.2007, -0.2462,  0.2058,  0.1686, -0.0681,  0.1917,  0.1645,
        -0.2211,  0.1533, -0.0771, -0.2534,  0.1967, -0.2536,  0.2358, -0.2186,
         0.1079,  0.1317, -0.2085, -0.2148, -0.2466, -0.1942, -0.1837, -0.1801,
        -0.2202, -0.2218, -0.0342,  0.0060, -0.0256, -0.0239, -0.0319,  0.0146,
         0.0017,  0.0370,  0.0307, -0.0205,  0.0312,  0.0132, -0.0239, -0.0375,
         0.0358, -0.0376, -0.0069,  0.0027, -0.0367,  0.0066,  0.0222, -0.0248,
        -0.0110, -0.0285,  0.0297,  0.0298])
##########################################################
decoder.embedding.weight shape: torch.Size([287, 128])
tensor([[ 1.0376, -0.9642,  0.6833,  ..., -0.8728,  1.0359, -2.2508],
        [ 0.9336, -1.4255,  0.0298,  ...,  0.9638,  0.6910, -0.7072],
        [ 0.9326,  0.6384,  0.1058,  ..., -1.1317,  1.4238,  1.4502],
        ...,
        [ 0.5189,  2.1471,  1.5455,  ...,  1.0523,  1.7914,  1.0658],
        [ 0.4014, -0.3289,  1.2577,  ..., -1.3232, -0.2986,  0.0595],
        [ 0.7866,  0.8080,  1.1792,  ..., -1.7921, -1.2654, -1.8182]])
tensor([[ 1.0376, -0.9642,  0.6833,  ..., -0.8728,  1.0359, -2.2508],
        [ 0.9336, -1.4255,  0.0298,  ...,  0.9638,  0.6910, -0.7072],
        [ 1.3034,  0.4289,  0.0660,  ..., -1.0449,  1.0896,  1.2054],
        ...,
        [ 0.5189,  2.1471,  1.5455,  ...,  1.0523,  1.7914,  1.0658],
        [ 0.4014, -0.3289,  1.2577,  ..., -1.3232, -0.2986,  0.0595],
        [ 0.7866,  0.8080,  1.1792,  ..., -1.7921, -1.2654, -1.8182]])
##########################################################
decoder.blks.block0.attention1.W_q.weight shape: torch.Size([128, 128])
tensor([[ 0.0743, -0.0188,  0.1830,  ..., -0.0882, -0.0295,  0.0011],
        [-0.0233,  0.1259,  0.2207,  ..., -0.0449,  0.0324,  0.1887],
        [ 0.1646,  0.0434,  0.0518,  ...,  0.1554, -0.0125,  0.2452],
        ...,
        [ 0.1076, -0.0285, -0.1260,  ...,  0.0282, -0.1125, -0.0646],
        [-0.0348,  0.0294, -0.0548,  ..., -0.1045, -0.0553, -0.0024],
        [ 0.1083, -0.0567,  0.0662,  ..., -0.0070, -0.0066, -0.0757]])
tensor([[-0.2805, -0.1287,  0.0076,  ...,  0.2038, -0.2871,  0.1324],
        [-0.3698,  0.1295, -0.0130,  ..., -0.4125, -0.1971,  0.1698],
        [-0.0669, -0.2689, -0.1232,  ...,  0.4982,  0.2555,  0.4942],
        ...,
        [ 0.3849,  0.2251,  0.0865,  ...,  0.2814,  0.1315, -0.1798],
        [-0.3008, -0.1984, -0.0794,  ..., -0.3318,  0.1580, -0.2429],
        [ 0.1054, -0.3241,  0.3644,  ...,  0.2243, -0.1846, -0.0037]])
##########################################################
decoder.blks.block0.attention1.W_k.weight shape: torch.Size([128, 128])
tensor([[ 3.8589e-05, -9.7340e-02,  7.3628e-03,  ..., -3.7948e-02,
         -1.8758e-02, -1.6887e-02],
        [ 3.7377e-02, -1.6815e-01,  6.6378e-03,  ..., -9.1969e-02,
          1.0663e-01,  6.1354e-02],
        [ 1.2001e-01, -1.3719e-02,  3.2977e-02,  ...,  5.2659e-02,
          4.1940e-02,  1.4238e-02],
        ...,
        [-6.2311e-02, -2.3273e-02,  4.5147e-02,  ..., -3.5575e-02,
         -3.8622e-03,  2.3307e-01],
        [-4.5899e-02,  1.4042e-02,  3.5753e-02,  ..., -1.3180e-01,
          1.1789e-02, -2.2665e-01],
        [-1.0428e-01,  1.9972e-01, -1.8358e-01,  ..., -1.1954e-01,
         -1.1356e-01,  7.5271e-02]])
tensor([[-0.1983, -0.0912,  0.3706,  ...,  0.0630,  0.3007, -0.1472],
        [ 0.1634,  0.0178, -0.0800,  ...,  0.0963,  0.2930, -0.3055],
        [ 0.4566, -0.0732,  0.2912,  ..., -0.0927,  0.2863,  0.3619],
        ...,
        [ 0.2635, -0.3941, -0.2314,  ..., -0.2709,  0.1344, -0.0240],
        [-0.3601, -0.3573, -0.3065,  ..., -0.3682, -0.2072, -0.4290],
        [-0.4031, -0.0328, -0.5059,  ...,  0.2088, -0.3694, -0.1446]])
##########################################################
decoder.blks.block0.attention1.W_v.weight shape: torch.Size([128, 128])
tensor([[ 0.0616, -0.0498, -0.0671,  ...,  0.0523, -0.0328, -0.0370],
        [ 0.0537, -0.0179,  0.0048,  ...,  0.0256,  0.0435, -0.0145],
        [-0.0384, -0.0039,  0.0092,  ..., -0.0167, -0.0025,  0.0579],
        ...,
        [ 0.0640, -0.0185, -0.0837,  ..., -0.0042,  0.0073,  0.0582],
        [-0.0430,  0.0156, -0.0497,  ...,  0.0683, -0.0115,  0.0081],
        [-0.0443, -0.0280, -0.0369,  ...,  0.0168,  0.0023, -0.0367]])
tensor([[ 0.4327, -0.2633, -0.2419,  ...,  0.3282, -0.2841, -0.2519],
        [-0.2595,  0.2288, -0.1945,  ...,  0.3883,  0.3494, -0.3168],
        [-0.2831, -0.2614, -0.2452,  ..., -0.2811,  0.3506,  0.3112],
        ...,
        [ 0.1183, -0.2469,  0.1007,  ...,  0.2558, -0.2579,  0.3252],
        [ 0.2836,  0.3351,  0.2915,  ...,  0.2164,  0.0905,  0.3756],
        [ 0.0774, -0.2933,  0.1708,  ...,  0.3100, -0.3694,  0.1116]])
##########################################################
decoder.blks.block0.attention1.W_o.weight shape: torch.Size([128, 128])
tensor([[-0.0689, -0.0401, -0.0450,  ...,  0.0534, -0.0444,  0.0402],
        [-0.0280, -0.0113,  0.0066,  ...,  0.0105,  0.0251, -0.0293],
        [-0.0141,  0.0022, -0.0271,  ...,  0.0119,  0.0010,  0.0290],
        ...,
        [-0.0421, -0.0054,  0.0212,  ...,  0.0283,  0.0305, -0.0326],
        [-0.0241, -0.0225, -0.0212,  ..., -0.0367,  0.0129,  0.0583],
        [ 0.0225,  0.0840, -0.0375,  ...,  0.0194, -0.0014,  0.0034]])
tensor([[ 0.2265,  0.3318,  0.0497,  ..., -0.3181,  0.0231, -0.3311],
        [-0.1079, -0.3749, -0.0984,  ...,  0.2933, -0.3119,  0.2418],
        [-0.3749, -0.0857, -0.0241,  ...,  0.1744, -0.1856,  0.2283],
        ...,
        [-0.1401, -0.3272, -0.3336,  ...,  0.0913, -0.2963, -0.1503],
        [ 0.3439,  0.1372,  0.0622,  ..., -0.2940,  0.2647, -0.1490],
        [ 0.1480, -0.2865, -0.4101,  ...,  0.3695, -0.1354,  0.3749]])
##########################################################
decoder.blks.block0.addnorm1.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.2352, 1.2310, 0.7471, 0.7051, 1.2065, 0.7413, 0.6632, 1.2005, 0.7864,
        1.2444, 1.2315, 1.2133, 0.7901, 1.2554, 1.2102, 0.6684, 0.7025, 1.2938,
        1.2523, 0.6583, 0.6974, 1.2380, 0.8212, 0.7528, 1.3533, 0.7819, 1.2210,
        1.2240, 1.2718, 0.7639, 0.7994, 1.2262, 0.7753, 0.7589, 0.7335, 0.7174,
        1.2133, 0.7878, 0.8794, 1.2352, 0.7786, 0.8029, 0.6290, 1.2443, 1.3721,
        0.7797, 0.7353, 1.2324, 0.7520, 1.2515, 1.2257, 0.8964, 1.2154, 0.7749,
        0.8004, 1.2187, 0.7799, 0.7827, 0.6394, 1.3690, 0.7765, 1.2025, 0.7498,
        0.7775, 0.7706, 1.2480, 0.8194, 0.7820, 0.6280, 1.2792, 0.7029, 0.7435,
        0.9688, 0.7623, 1.1354, 1.0275, 1.2008, 1.2824, 0.7095, 1.2264, 1.1950,
        1.1745, 1.2038, 0.7575, 0.7905, 0.7025, 0.7816, 0.7790, 1.2470, 1.2248,
        0.7752, 0.7204, 0.7932, 1.0643, 0.7942, 1.3311, 1.2122, 1.2555, 0.7863,
        0.6757, 1.2798, 1.3720, 0.9925, 0.9177, 1.1889, 0.7363, 1.2368, 0.7270,
        1.2693, 0.7539, 0.7321, 1.1322, 0.8742, 1.2288, 1.2338, 0.6748, 0.9669,
        0.7408, 0.8063, 1.0878, 0.7507, 1.3293, 0.9726, 0.7511, 0.7397, 1.2189,
        0.8217, 0.8138])
##########################################################
decoder.blks.block0.addnorm1.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.2060, -0.2322, -0.2314, -0.2247,  0.1733,  0.2193,  0.2580,  0.2679,
         0.2297, -0.2339,  0.2698, -0.1936, -0.2327,  0.1120,  0.0053,  0.2360,
         0.2158, -0.2317, -0.2169,  0.2506, -0.2206,  0.2164,  0.2168,  0.2427,
         0.2333,  0.2635, -0.2459,  0.2258, -0.2230, -0.1540, -0.2264,  0.2686,
        -0.2322,  0.2401,  0.2355, -0.2684,  0.2410,  0.1171, -0.1930,  0.2419,
        -0.3193,  0.2344, -0.2495, -0.2034, -0.2176,  0.2070,  0.2446,  0.2481,
        -0.2208,  0.2305,  0.2641,  0.2276,  0.2296,  0.2289,  0.2668, -0.2299,
        -0.2391, -0.2258, -0.2568, -0.2138, -0.2417, -0.2289, -0.2521,  0.2268,
         0.2913,  0.2296,  0.2568,  0.2486, -0.2351, -0.2188,  0.2488, -0.1611,
         0.2382, -0.2323,  0.2007,  0.2368,  0.2470, -0.3711, -0.2357,  0.2333,
         0.2086, -0.0633,  0.2868, -0.2510, -0.2550,  0.1496,  0.2430, -0.2176,
         0.2412,  0.2419, -0.2194,  0.2441, -0.2733, -0.2187, -0.2316, -0.2410,
        -0.2174, -0.2138, -0.3712, -0.2242,  0.2259,  0.2600,  0.1774, -0.2749,
         0.2441,  0.2316,  0.2011,  0.2230,  0.2234,  0.2442, -0.0215,  0.2404,
         0.0305,  0.2238,  0.0300, -0.1734, -0.2406,  0.2393, -0.2204,  0.1957,
        -0.2278, -0.2533, -0.2373,  0.1581,  0.1411, -0.2360,  0.2229, -0.2252])
##########################################################
decoder.blks.block0.attention2.W_q.weight shape: torch.Size([128, 128])
tensor([[ 0.0677, -0.2044, -0.1377,  ...,  0.0330, -0.1132,  0.0162],
        [-0.0039, -0.0675, -0.1565,  ...,  0.0798, -0.1126,  0.0640],
        [-0.1133, -0.1937,  0.1692,  ..., -0.0939, -0.0274,  0.0953],
        ...,
        [ 0.0910,  0.0148,  0.0016,  ...,  0.1834,  0.1081, -0.0038],
        [-0.0606,  0.1077,  0.0748,  ...,  0.0280, -0.1565,  0.1097],
        [-0.0256,  0.1008, -0.1530,  ..., -0.1116,  0.1934,  0.0777]])
tensor([[-0.1209, -0.5030,  0.1262,  ...,  0.3066, -0.3765, -0.2504],
        [-0.3253,  0.2474, -0.3362,  ...,  0.2452,  0.1965,  0.2947],
        [-0.3829,  0.1082,  0.0085,  ...,  0.0704, -0.1955, -0.2013],
        ...,
        [-0.1495,  0.2055, -0.2569,  ...,  0.4106,  0.2908,  0.2267],
        [ 0.1820, -0.1215,  0.3180,  ..., -0.2378, -0.4380, -0.0806],
        [ 0.1739, -0.1154,  0.0593,  ..., -0.3609,  0.4443,  0.3407]])
##########################################################
decoder.blks.block0.attention2.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.0834,  0.1093, -0.0214,  ...,  0.0661, -0.0398, -0.0293],
        [-0.0401, -0.0813,  0.0783,  ...,  0.1542, -0.0292, -0.0155],
        [-0.1582, -0.0372,  0.0073,  ..., -0.2275,  0.0476, -0.2090],
        ...,
        [-0.0520, -0.0722, -0.0265,  ..., -0.0514, -0.0030, -0.1212],
        [ 0.0759,  0.0318,  0.0796,  ...,  0.1689, -0.0141,  0.2267],
        [ 0.1368,  0.2237, -0.1102,  ...,  0.0062, -0.1211,  0.1040]])
tensor([[ 0.1270,  0.3033,  0.1728,  ...,  0.2543, -0.3037, -0.3079],
        [ 0.2378, -0.3055, -0.1363,  ...,  0.3850, -0.2788, -0.2543],
        [-0.4514, -0.3131, -0.2820,  ..., -0.5093,  0.2671, -0.0366],
        ...,
        [-0.3274,  0.1388,  0.1724,  ..., -0.3198,  0.2055,  0.0932],
        [ 0.3417,  0.2652,  0.3208,  ...,  0.4423, -0.2052,  0.0475],
        [-0.1054,  0.4341,  0.1122,  ..., -0.2236, -0.3463, -0.0939]])
##########################################################
decoder.blks.block0.attention2.W_v.weight shape: torch.Size([128, 128])
tensor([[-2.6229e-02, -7.6467e-02,  2.1693e-02,  ..., -5.2905e-02,
          1.9544e-02, -2.3286e-02],
        [-6.4973e-03, -3.9823e-02, -1.9747e-02,  ...,  4.9925e-02,
         -1.9479e-02,  6.0261e-02],
        [-4.2240e-02, -3.7173e-02,  1.3312e-02,  ...,  4.8841e-02,
         -1.4290e-02,  3.3303e-02],
        ...,
        [ 1.8846e-02,  1.0949e-03, -4.4666e-02,  ..., -2.5436e-02,
         -5.5273e-05,  4.1955e-02],
        [ 1.7697e-02, -5.6712e-02, -9.1737e-02,  ...,  9.4845e-03,
         -9.2925e-02, -3.9497e-03],
        [ 6.0296e-03, -4.9350e-05,  3.3397e-02,  ...,  2.8960e-02,
          2.4178e-02,  1.7275e-03]])
tensor([[-0.1375, -0.1809, -0.0180,  ..., -0.1752,  0.3810,  0.3450],
        [-0.3727, -0.4013, -0.3656,  ..., -0.3089, -0.2925, -0.2050],
        [-0.1747, -0.1743, -0.0849,  ..., -0.0945, -0.1498, -0.0980],
        ...,
        [-0.3239,  0.0132, -0.0779,  ..., -0.3616, -0.3022, -0.2782],
        [ 0.1918,  0.0886,  0.0877,  ...,  0.1804,  0.1256,  0.2173],
        [-0.3385, -0.3582, -0.3220,  ..., -0.3118, -0.1387, -0.2605]])
##########################################################
decoder.blks.block0.attention2.W_o.weight shape: torch.Size([128, 128])
tensor([[-0.0295,  0.0355,  0.0002,  ..., -0.0105,  0.0326,  0.0261],
        [ 0.0648, -0.0119,  0.0196,  ...,  0.0280, -0.0264,  0.0210],
        [ 0.0127,  0.0212, -0.0664,  ..., -0.0587,  0.0167, -0.0129],
        ...,
        [-0.0381,  0.0229, -0.0276,  ...,  0.0006, -0.0240,  0.0229],
        [-0.0211, -0.0728, -0.0331,  ...,  0.0105,  0.0331,  0.0619],
        [-0.0311,  0.0058, -0.0545,  ...,  0.0089,  0.0340,  0.0346]])
tensor([[ 0.3094, -0.3053,  0.3448,  ..., -0.1413,  0.1639, -0.1085],
        [ 0.1956, -0.1346,  0.1106,  ...,  0.1346, -0.1356,  0.1517],
        [ 0.1447, -0.1094,  0.0585,  ..., -0.4026,  0.3597, -0.3531],
        ...,
        [ 0.0954, -0.1085,  0.0985,  ..., -0.3441,  0.3194, -0.3157],
        [-0.1527,  0.0563, -0.1506,  ..., -0.0984,  0.1530, -0.0687],
        [ 0.1007, -0.1235,  0.0636,  ..., -0.3363,  0.3780, -0.3053]])
##########################################################
decoder.blks.block0.addnorm2.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.9383, 1.2507, 1.0165, 0.6311, 1.0363, 0.8819, 1.3408, 1.0833, 0.9490,
        1.2164, 1.3718, 1.3718, 0.6562, 1.3721, 1.3692, 1.1134, 1.0558, 0.8946,
        1.0118, 0.7939, 1.0720, 1.1739, 0.6616, 0.6333, 1.1186, 0.6892, 1.3016,
        1.3551, 1.3521, 0.6509, 1.1249, 0.9182, 0.9117, 0.6278, 0.6311, 0.6367,
        1.1582, 0.6529, 0.6407, 1.2827, 0.6521, 0.6472, 0.6297, 1.3475, 0.9323,
        0.7949, 0.9158, 1.0331, 0.9099, 1.1619, 0.9692, 0.6351, 1.3229, 0.7129,
        0.6680, 1.0520, 0.6970, 1.0917, 0.6461, 1.2349, 0.6829, 1.3715, 0.6280,
        0.7828, 0.6391, 1.3265, 0.6631, 0.6622, 1.1259, 1.0149, 1.0801, 0.8787,
        1.0659, 0.6381, 1.3718, 1.1279, 1.0700, 0.9630, 0.6438, 0.9236, 1.3497,
        1.2188, 0.9443, 0.6958, 0.7529, 1.0177, 0.7391, 0.7701, 1.3233, 1.0679,
        0.8055, 0.6373, 0.6405, 1.1236, 0.6342, 1.3488, 1.0188, 1.3715, 0.7524,
        1.0791, 1.3152, 1.3570, 0.9184, 0.6513, 1.1123, 0.6526, 1.2519, 1.0358,
        1.3591, 0.7403, 0.9556, 0.8819, 0.6291, 1.1083, 1.3567, 1.1108, 1.0788,
        1.0566, 0.6410, 1.3487, 1.0882, 0.8883, 0.9031, 0.6581, 1.0343, 1.3625,
        0.8114, 1.0485])
##########################################################
decoder.blks.block0.addnorm2.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.3477, -0.2065, -0.1052, -0.3166,  0.3709,  0.2019, -0.0694,  0.3486,
         0.0939, -0.2432, -0.0425,  0.0126, -0.3230, -0.0987, -0.1264,  0.0853,
        -0.0155, -0.3530, -0.3653,  0.2851, -0.1105,  0.2630,  0.3595,  0.3689,
         0.1887,  0.3266, -0.1830,  0.0245,  0.0777, -0.3619, -0.0644,  0.3712,
        -0.1321,  0.3451,  0.3724, -0.3606,  0.3115,  0.3665, -0.3239,  0.1548,
        -0.3672,  0.3470, -0.2233,  0.0434, -0.1504,  0.0922,  0.2250,  0.3401,
        -0.1982,  0.3437,  0.3617,  0.3574,  0.0958,  0.3346,  0.3089, -0.3391,
        -0.2844, -0.0989, -0.2838, -0.2627, -0.2693, -0.1069, -0.3052,  0.1853,
         0.3622,  0.1054,  0.3509,  0.3365,  0.0306, -0.3322,  0.0723, -0.1222,
         0.2091, -0.3695, -0.0482, -0.0306,  0.2791, -0.3482, -0.3110,  0.3649,
        -0.0397, -0.3027,  0.3522, -0.2996, -0.2426,  0.0962,  0.2517, -0.2105,
         0.2111,  0.2322, -0.1975,  0.2910, -0.3720, -0.0535, -0.3723, -0.1873,
        -0.3443,  0.0580,  0.0694, -0.1532, -0.0845,  0.2448,  0.2499, -0.3683,
         0.2569,  0.3275,  0.2027,  0.0046, -0.0288,  0.1602,  0.0797,  0.2980,
        -0.3651,  0.3649, -0.3116, -0.0029, -0.1911,  0.0127, -0.3014,  0.0579,
        -0.0722, -0.2937, -0.2658,  0.3456, -0.0941, -0.1631,  0.2338, -0.1555])
##########################################################
decoder.blks.block0.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[ 1.0684e-02, -6.4926e-02, -8.0731e-02,  ...,  2.1014e-02,
          6.5622e-02, -3.3557e-02],
        [ 3.0327e-02,  2.8394e-03, -5.1014e-02,  ...,  7.9879e-02,
          5.1558e-02,  2.6868e-02],
        [ 9.6405e-03,  2.5722e-02,  1.4940e-02,  ..., -4.7623e-05,
         -6.0234e-02, -3.7804e-02],
        ...,
        [ 1.0869e-01,  1.3021e-02, -3.7066e-02,  ..., -4.7501e-03,
          3.9920e-02, -6.7083e-02],
        [ 8.0526e-02,  5.5007e-03, -1.8460e-02,  ..., -1.0329e-02,
          3.4999e-02,  3.2617e-02],
        [ 8.2862e-03,  2.4979e-02,  3.4474e-03,  ..., -1.4771e-02,
          1.4859e-02,  7.7824e-03]])
tensor([[ 0.3722, -0.2089, -0.1793,  ..., -0.3294,  0.4179, -0.1565],
        [ 0.3845, -0.3526, -0.0738,  ..., -0.2774,  0.4213, -0.3324],
        [ 0.2657,  0.0519,  0.3305,  ...,  0.3653, -0.3961, -0.2278],
        ...,
        [ 0.1571, -0.0142, -0.3079,  ..., -0.2576, -0.2804, -0.0343],
        [ 0.1495, -0.1197, -0.1372,  ..., -0.0916,  0.3854,  0.3431],
        [ 0.3532, -0.1056, -0.3406,  ..., -0.3560,  0.3597, -0.1100]])
##########################################################
decoder.blks.block0.ffn.dense1.bias shape: torch.Size([64])
tensor([ 0.0676,  0.0671, -0.0063,  0.0366, -0.0244, -0.0454,  0.0576,  0.0857,
        -0.0874,  0.0222, -0.0151,  0.0735, -0.0391, -0.0677,  0.0219, -0.0280,
        -0.0403, -0.0496, -0.0371, -0.0489, -0.0427, -0.0088,  0.0149, -0.0021,
        -0.0454,  0.0858,  0.0567, -0.0377,  0.0413,  0.0019,  0.0531,  0.0236,
        -0.0213,  0.0408,  0.0429, -0.0742,  0.0701, -0.0342,  0.0705, -0.0854,
        -0.0062,  0.0492, -0.0243, -0.0039,  0.0612,  0.0842, -0.0799,  0.0207,
         0.0236, -0.0303,  0.0651,  0.0776,  0.0712, -0.0840,  0.0655,  0.0398,
        -0.0279, -0.0594, -0.0676, -0.0638,  0.0043,  0.0022, -0.0424, -0.0386])
tensor([-0.2884, -0.2912,  0.3541, -0.0680,  0.2496,  0.3075, -0.0480,  0.0415,
        -0.2058, -0.2901, -0.1284,  0.2792, -0.3932, -0.0663, -0.3493, -0.0752,
         0.0528, -0.2875, -0.4018, -0.3946,  0.2664, -0.0277,  0.2764, -0.3559,
        -0.1667,  0.3336, -0.2874,  0.1925, -0.3307, -0.3212, -0.0336,  0.3683,
        -0.3922,  0.1264, -0.3258, -0.4453, -0.2683,  0.1810, -0.2953, -0.3655,
        -0.1374, -0.3181,  0.2367, -0.3576, -0.2882, -0.2672, -0.4349,  0.0140,
        -0.0156,  0.3313, -0.2773,  0.0464,  0.2884, -0.4253,  0.0836, -0.3239,
         0.2071, -0.1603, -0.0073, -0.4214,  0.0154, -0.2621, -0.1630, -0.3853])
##########################################################
decoder.blks.block0.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[-0.0402,  0.0281,  0.0703,  ...,  0.0008,  0.0781,  0.0047],
        [ 0.0648, -0.0580,  0.0126,  ..., -0.1107,  0.0352, -0.0513],
        [-0.0343, -0.0580, -0.0183,  ...,  0.0050,  0.0044, -0.0833],
        ...,
        [ 0.0527, -0.1000, -0.0255,  ...,  0.0700,  0.0325, -0.0173],
        [-0.0421,  0.0422,  0.1002,  ..., -0.0018,  0.0085,  0.0627],
        [-0.0651, -0.0037, -0.0201,  ...,  0.0053,  0.0137,  0.0124]])
tensor([[ 0.3308,  0.3423,  0.3558,  ...,  0.3556,  0.4408,  0.3496],
        [ 0.0597, -0.1529, -0.1249,  ..., -0.0427, -0.1720,  0.0722],
        [-0.0426, -0.2043, -0.2292,  ...,  0.0874, -0.0959,  0.0399],
        ...,
        [-0.1477, -0.2086, -0.2277,  ..., -0.2900, -0.1512, -0.1555],
        [ 0.3273,  0.3121,  0.2333,  ...,  0.3699,  0.3781,  0.4130],
        [-0.0986, -0.2452, -0.2591,  ...,  0.0774, -0.0244,  0.1341]])
##########################################################
decoder.blks.block0.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.0437,  0.0273, -0.1193,  0.0683,  0.0051, -0.1034, -0.0714,  0.0289,
        -0.0374, -0.0960,  0.0553, -0.0445, -0.1006, -0.0974, -0.0549,  0.0635,
        -0.0020,  0.0785, -0.0900,  0.0338, -0.1213, -0.0816, -0.0153,  0.1057,
         0.0506,  0.0013,  0.0237,  0.0891, -0.0920, -0.1247,  0.1157,  0.0288,
         0.0130, -0.0386,  0.1172,  0.0967,  0.0029, -0.0847,  0.1019, -0.0066,
         0.0465,  0.0384, -0.0373, -0.0683,  0.0762,  0.0623, -0.0387,  0.0739,
         0.0454,  0.0186, -0.0663,  0.0242, -0.0842, -0.0024, -0.0314,  0.0851,
        -0.1170,  0.1000, -0.0407, -0.0066,  0.1214, -0.0861,  0.0553, -0.0287,
         0.1243,  0.0156, -0.0108,  0.0218,  0.0393, -0.0745, -0.0365,  0.0910,
         0.0149,  0.0349, -0.1074,  0.0144,  0.0452, -0.1018,  0.0095,  0.1066,
         0.0372, -0.1148, -0.0535, -0.0623, -0.0638, -0.0211, -0.0142, -0.0711,
         0.0943, -0.1146,  0.0095,  0.0023,  0.0179,  0.0377, -0.0469, -0.0652,
        -0.0184,  0.0256, -0.0988, -0.0094, -0.0711,  0.0215,  0.0153, -0.1007,
         0.0411,  0.0852, -0.0423,  0.0300, -0.0492,  0.0033, -0.0510,  0.0333,
        -0.0173,  0.1021, -0.0755,  0.0926,  0.0378,  0.0871, -0.1075, -0.1024,
        -0.0017, -0.0034, -0.0163,  0.1107,  0.0317,  0.0849,  0.0313, -0.1023])
tensor([ 0.3866, -0.1288, -0.2643, -0.1391,  0.3767,  0.1366, -0.1334,  0.3732,
         0.0770, -0.1556,  0.0015, -0.0218, -0.4467, -0.1982, -0.1778,  0.1680,
         0.0371, -0.2870, -0.4500,  0.3766, -0.1891,  0.1561,  0.1384,  0.4780,
         0.2171,  0.3409, -0.1807,  0.0993, -0.0100, -0.4951,  0.0931,  0.4007,
         0.0525,  0.2973,  0.1548, -0.2633,  0.2856,  0.2839, -0.2421,  0.0418,
        -0.3196,  0.3888, -0.3288, -0.0060, -0.0313,  0.0285,  0.1511,  0.3403,
        -0.1995,  0.3848,  0.2674,  0.3809, -0.0414,  0.2363,  0.2476, -0.2420,
        -0.3986,  0.0368, -0.3216, -0.2885, -0.1698, -0.1226, -0.2398,  0.1561,
         0.4958,  0.1279,  0.3606,  0.3863,  0.0970, -0.1929,  0.1022, -0.0334,
         0.1235, -0.3236, -0.1179, -0.0297,  0.3301, -0.2289, -0.2525,  0.4760,
        -0.0372,  0.2546,  0.3133, -0.3871, -0.1685, -0.0584,  0.3327, -0.3447,
         0.2240,  0.0776, -0.1426,  0.2653, -0.3535,  0.0090, -0.4179, -0.2536,
        -0.2829,  0.1038,  0.2686, -0.2013, -0.1725,  0.1369,  0.3849, -0.4636,
         0.1453,  0.3756,  0.1346,  0.0577, -0.0277,  0.2849,  0.0439,  0.2496,
         0.0610,  0.4694, -0.4401,  0.1354, -0.0425,  0.1140, -0.4529, -0.1066,
        -0.0563, -0.2714, -0.1508,  0.4175, -0.0748, -0.1354,  0.3332, -0.2575])
##########################################################
decoder.blks.block0.addnorm3.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.2693, 1.0481, 0.6297, 0.6818, 1.0465, 0.9007, 0.6293, 1.1442, 0.6321,
        1.3371, 1.3515, 1.1337, 1.1122, 1.3351, 0.9401, 0.6509, 0.6429, 0.9381,
        1.3725, 1.0314, 0.6342, 1.2775, 0.7741, 1.0747, 0.8720, 0.8586, 1.3040,
        1.1084, 1.3619, 0.8615, 0.6459, 1.1307, 0.6288, 0.9957, 0.8330, 1.0913,
        1.2952, 0.8184, 1.0969, 1.1270, 0.6925, 1.1224, 1.1399, 1.3707, 0.8774,
        0.8509, 0.7225, 1.3105, 1.0071, 1.3320, 1.3628, 1.1152, 1.1610, 0.7293,
        0.6883, 1.3672, 0.8520, 0.6350, 1.3527, 1.1133, 0.8292, 0.8904, 1.0555,
        0.7130, 0.9005, 1.0452, 0.9974, 1.0343, 0.8687, 1.2018, 0.6505, 0.7224,
        1.0672, 0.6918, 1.3409, 0.6508, 1.3712, 0.9172, 1.1127, 1.3721, 1.3689,
        1.2056, 1.0186, 1.0421, 0.8948, 0.6295, 1.0739, 0.9370, 1.2623, 0.6625,
        0.6436, 0.9844, 1.0794, 0.6603, 0.8503, 1.3712, 1.0803, 1.3063, 0.7261,
        0.9682, 1.3626, 0.6341, 1.1084, 0.6380, 1.2013, 1.0555, 1.1744, 0.6970,
        0.9333, 0.9138, 1.0100, 1.0397, 0.9632, 1.3395, 1.3658, 1.1021, 0.7424,
        0.6341, 1.0088, 1.3722, 0.6334, 1.3725, 1.1061, 0.6776, 1.0188, 1.3722,
        1.0851, 0.6333])
##########################################################
decoder.blks.block0.addnorm3.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.3585, -0.1714, -0.1495, -0.2140,  0.3703,  0.2380, -0.0161,  0.3489,
         0.1108, -0.0802, -0.0231,  0.0083, -0.3609, -0.0910, -0.1269,  0.0944,
        -0.0035, -0.3470, -0.3418,  0.2832, -0.0590,  0.2103,  0.1681,  0.3718,
         0.1919,  0.3500, -0.1435, -0.0039,  0.0873, -0.3665, -0.0132,  0.3722,
         0.0527,  0.3512, -0.0349, -0.3690,  0.2475,  0.3588, -0.3199,  0.0824,
        -0.3631,  0.3582, -0.2980,  0.0648, -0.1681, -0.0668,  0.2067,  0.2886,
        -0.2576,  0.3633,  0.3025,  0.3682,  0.0417,  0.2710,  0.2560, -0.3415,
        -0.3111, -0.0819, -0.3035, -0.3074, -0.2934, -0.0566, -0.3297,  0.1910,
         0.3615,  0.1198,  0.3712,  0.3712,  0.0508, -0.1595,  0.1445, -0.2833,
         0.0394, -0.3686, -0.0447, -0.0619,  0.3065, -0.3475, -0.2932,  0.3639,
        -0.0862, -0.3434,  0.3542, -0.2773, -0.0367,  0.0839,  0.3566, -0.3003,
         0.1370,  0.2009, -0.1562,  0.2837, -0.3721, -0.0500, -0.3706, -0.1374,
        -0.3033,  0.0712,  0.1206, -0.1795, -0.1025,  0.1122,  0.3705, -0.3718,
         0.1370,  0.2895,  0.1717,  0.0074, -0.0287,  0.2866,  0.1086,  0.2547,
         0.0940,  0.3620, -0.3430,  0.0983, -0.0644,  0.0015, -0.3589,  0.0055,
        -0.0195, -0.2942, -0.0990,  0.3477, -0.1128, -0.1935,  0.2910, -0.1052])
##########################################################
decoder.blks.block1.attention1.W_q.weight shape: torch.Size([128, 128])
tensor([[ 0.0090, -0.0154, -0.0618,  ..., -0.0881, -0.0658,  0.1099],
        [ 0.1335, -0.1329,  0.1070,  ...,  0.0676,  0.2192,  0.0917],
        [-0.1977, -0.0312,  0.1125,  ..., -0.0049, -0.1096, -0.0049],
        ...,
        [-0.0839,  0.0787, -0.0201,  ...,  0.0241, -0.0772, -0.0467],
        [-0.0714,  0.1731, -0.1315,  ..., -0.0637, -0.0912,  0.0498],
        [-0.0556, -0.1563, -0.0468,  ..., -0.0628,  0.0415,  0.0669]])
tensor([[ 0.0941, -0.0478,  0.0618,  ..., -0.2160, -0.1735,  0.4653],
        [-0.2128,  0.2113,  0.2203,  ..., -0.2993,  0.0969,  0.4379],
        [ 0.1409,  0.3131,  0.4675,  ..., -0.3730, -0.2368,  0.3480],
        ...,
        [ 0.0431,  0.4391, -0.3301,  ..., -0.1056, -0.4467, -0.1756],
        [ 0.0227, -0.1667, -0.0432,  ..., -0.1381, -0.4557,  0.4066],
        [-0.1620, -0.0274,  0.3044,  ...,  0.2876, -0.0904,  0.1119]])
##########################################################
decoder.blks.block1.attention1.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.0923, -0.0715, -0.0636,  ...,  0.0009, -0.0733, -0.0740],
        [ 0.0205, -0.0079,  0.1420,  ...,  0.2185,  0.1272, -0.1137],
        [-0.0180,  0.0040, -0.1002,  ...,  0.0496,  0.0010,  0.0088],
        ...,
        [ 0.1171,  0.1266,  0.0429,  ...,  0.0010,  0.0116,  0.0171],
        [ 0.0034,  0.0881,  0.0872,  ...,  0.0291,  0.0170,  0.0807],
        [ 0.1425,  0.0599, -0.0053,  ..., -0.1348,  0.0971, -0.1069]])
tensor([[ 0.0338,  0.2708,  0.0612,  ...,  0.1467,  0.2709,  0.2824],
        [ 0.1269, -0.1342, -0.0007,  ...,  0.5615,  0.1822,  0.2429],
        [-0.1434, -0.3519,  0.0479,  ..., -0.3180, -0.3514,  0.0624],
        ...,
        [ 0.2239,  0.4968,  0.0557,  ..., -0.3687, -0.3489,  0.3865],
        [ 0.1164, -0.0351, -0.2850,  ...,  0.1039, -0.3120,  0.0409],
        [ 0.1851, -0.0702, -0.3689,  ..., -0.0458,  0.1706, -0.1983]])
##########################################################
decoder.blks.block1.attention1.W_v.weight shape: torch.Size([128, 128])
tensor([[-6.3489e-02, -1.8893e-02, -8.7038e-03,  ...,  9.7960e-03,
         -3.7828e-02,  2.5027e-02],
        [-1.0303e-05, -7.2780e-02, -3.7604e-02,  ...,  1.5280e-02,
          1.2328e-02, -1.3493e-02],
        [-7.8688e-02,  6.7328e-02,  1.9516e-02,  ..., -1.7216e-02,
          2.9434e-02, -8.1243e-02],
        ...,
        [-3.0585e-02, -6.8485e-02,  2.9540e-02,  ..., -1.0712e-03,
          3.7299e-02,  3.6774e-02],
        [-1.5042e-02, -3.4467e-02,  5.6490e-02,  ..., -1.0914e-01,
         -1.0881e-02, -4.6604e-03],
        [-8.8972e-03,  7.0779e-03,  7.9664e-03,  ..., -2.2808e-03,
         -6.4154e-02, -5.9241e-02]])
tensor([[-0.1812,  0.3252,  0.3412,  ...,  0.1357, -0.1664,  0.1478],
        [ 0.1243, -0.1875, -0.3824,  ..., -0.3302,  0.1428, -0.3560],
        [-0.0761, -0.2952, -0.3389,  ..., -0.1306,  0.1259, -0.1959],
        ...,
        [ 0.3202, -0.4227, -0.0868,  ..., -0.1217,  0.3947, -0.3264],
        [-0.0830,  0.0662,  0.1744,  ...,  0.2569, -0.1252,  0.1035],
        [ 0.3403,  0.1164,  0.3573,  ...,  0.3440, -0.4141,  0.0609]])
##########################################################
decoder.blks.block1.attention1.W_o.weight shape: torch.Size([128, 128])
tensor([[-0.0107,  0.0404, -0.0050,  ...,  0.0045,  0.0112, -0.0061],
        [-0.0687,  0.0495, -0.0231,  ...,  0.0293,  0.0258, -0.0157],
        [ 0.0210,  0.0297,  0.0057,  ..., -0.0122,  0.0443, -0.0011],
        ...,
        [ 0.0242, -0.0223, -0.0345,  ...,  0.0215, -0.0058, -0.0427],
        [-0.0011, -0.0025, -0.0315,  ..., -0.0110, -0.0104, -0.0175],
        [-0.0417,  0.0082,  0.0322,  ..., -0.0459, -0.0169, -0.0241]])
tensor([[ 0.2929,  0.0641, -0.3706,  ..., -0.3118, -0.0294,  0.2525],
        [-0.3675,  0.0666,  0.3413,  ...,  0.3807,  0.1385, -0.3859],
        [-0.1244,  0.3897,  0.0084,  ...,  0.1169, -0.3272, -0.1510],
        ...,
        [ 0.1148,  0.3228, -0.1441,  ..., -0.0821, -0.3622,  0.0623],
        [ 0.0489, -0.3449, -0.0115,  ...,  0.0697,  0.3607, -0.0803],
        [-0.0222,  0.3762, -0.0573,  ..., -0.1061, -0.1459,  0.0405]])
##########################################################
decoder.blks.block1.addnorm1.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.2146, 1.3523, 0.6425, 0.7614, 1.1429, 0.6935, 0.8229, 1.3246, 0.8191,
        1.3674, 1.3177, 1.1876, 0.9841, 1.3183, 1.3560, 0.6245, 0.9376, 0.8945,
        1.2759, 0.6474, 0.9567, 1.0814, 0.7428, 1.0980, 0.6917, 0.7929, 1.1941,
        1.2147, 1.3683, 0.6573, 1.0397, 1.0252, 1.0078, 0.7595, 0.6301, 0.7339,
        1.3181, 0.6537, 1.0595, 1.2172, 0.6326, 1.0594, 0.9959, 1.0110, 1.1361,
        0.6481, 1.0614, 1.1750, 0.7145, 1.3731, 1.3719, 0.6324, 1.3333, 0.6290,
        0.6338, 1.3258, 0.7333, 0.7522, 1.3716, 1.0853, 0.9784, 1.1938, 0.8882,
        0.6446, 0.6880, 1.3670, 0.7465, 0.7199, 0.6579, 1.3403, 1.0356, 0.6589,
        1.0851, 0.8244, 1.2031, 0.9197, 1.3524, 1.2223, 1.0649, 1.3487, 0.8794,
        0.9472, 1.3716, 0.6490, 0.7716, 0.8232, 0.6288, 0.6306, 1.3197, 0.9991,
        0.7883, 0.8363, 1.0711, 1.2095, 0.7373, 1.3684, 1.1834, 1.2954, 0.6304,
        1.0520, 1.3672, 1.1264, 1.0669, 0.6413, 0.9718, 0.7583, 1.2176, 0.8959,
        0.8869, 0.6397, 0.6409, 0.9953, 0.8105, 1.1981, 1.3714, 1.1152, 1.0617,
        0.9131, 0.6465, 1.3669, 0.7204, 0.8821, 0.8710, 0.7015, 0.7307, 1.1098,
        0.6271, 1.1045])
##########################################################
decoder.blks.block1.addnorm1.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.2349, -0.2569, -0.1967, -0.2283,  0.3060,  0.1180, -0.0709,  0.3722,
         0.0421, -0.0245,  0.3529, -0.0534, -0.2940,  0.0568, -0.1317,  0.0747,
         0.3085, -0.3710, -0.3711,  0.3497, -0.2860,  0.3552,  0.3234,  0.3646,
         0.2555, -0.0330, -0.3248,  0.1274, -0.3697,  0.0154, -0.2424,  0.3399,
        -0.2202,  0.2488,  0.1227, -0.1462,  0.2553,  0.3694, -0.3667,  0.2379,
        -0.3633,  0.3199, -0.1980, -0.0951, -0.0298,  0.3711,  0.3436,  0.2749,
        -0.2165,  0.3710,  0.3716,  0.2174,  0.2365, -0.0697,  0.0021, -0.3624,
        -0.2623, -0.1619, -0.2429, -0.3045, -0.0762, -0.2220, -0.2784,  0.0053,
         0.3422,  0.3017,  0.1910,  0.0736, -0.3389, -0.3313,  0.1065,  0.0193,
        -0.0837, -0.3733,  0.3692, -0.0077,  0.3240,  0.3704, -0.2687,  0.2908,
        -0.0482,  0.1238,  0.3524, -0.0955, -0.2699,  0.2102,  0.0953, -0.0446,
         0.3032,  0.1116, -0.1688,  0.1701, -0.0479, -0.0641, -0.0022, -0.2378,
        -0.3345, -0.1351,  0.1219, -0.0836, -0.1059,  0.3723,  0.2555, -0.3607,
         0.3596,  0.3727,  0.3377, -0.0129,  0.0089,  0.0144, -0.3611,  0.2048,
        -0.1216,  0.3637, -0.3475,  0.0728, -0.3011,  0.0451, -0.1992,  0.1696,
        -0.0317, -0.0846, -0.3017,  0.0195,  0.3287, -0.0589,  0.1310, -0.1358])
##########################################################
decoder.blks.block1.attention2.W_q.weight shape: torch.Size([128, 128])
tensor([[ 0.0472, -0.0552, -0.1935,  ..., -0.0196, -0.1815, -0.0719],
        [-0.0951, -0.2123, -0.0629,  ..., -0.0069,  0.0046, -0.1531],
        [-0.0576,  0.0180, -0.0133,  ..., -0.0461,  0.0513, -0.1616],
        ...,
        [-0.0384,  0.1351,  0.0091,  ..., -0.0570, -0.0963, -0.0881],
        [-0.0245,  0.0941,  0.1474,  ..., -0.0057,  0.1075,  0.2084],
        [-0.0188,  0.0209, -0.0695,  ...,  0.1658, -0.0161, -0.0225]])
tensor([[-0.2341, -0.2745, -0.1097,  ..., -0.2465,  0.1260,  0.1023],
        [ 0.1117, -0.4751, -0.3391,  ..., -0.2187,  0.2629, -0.3761],
        [ 0.2062,  0.1881,  0.2412,  ...,  0.2271, -0.1352, -0.4621],
        ...,
        [-0.2587,  0.4343,  0.1861,  ...,  0.1434, -0.3930, -0.2600],
        [ 0.1672, -0.1552, -0.0586,  ..., -0.3082,  0.3492,  0.4156],
        [-0.3221, -0.1720, -0.2746,  ..., -0.1352,  0.2558,  0.2309]])
##########################################################
decoder.blks.block1.attention2.W_k.weight shape: torch.Size([128, 128])
tensor([[ 0.0003,  0.0046,  0.1163,  ..., -0.0421,  0.0143, -0.0407],
        [-0.0434,  0.0603, -0.1368,  ...,  0.0856, -0.0399, -0.1687],
        [-0.0547,  0.1447, -0.1032,  ...,  0.0501,  0.0130, -0.0486],
        ...,
        [-0.1279, -0.0213,  0.1236,  ...,  0.0859,  0.0762, -0.0353],
        [ 0.0673,  0.0543,  0.1588,  ...,  0.1925, -0.1158,  0.0023],
        [-0.0398,  0.0254, -0.1364,  ...,  0.0160,  0.0342, -0.0305]])
tensor([[ 0.2066, -0.2518, -0.1353,  ...,  0.1846, -0.2648, -0.3025],
        [ 0.2203,  0.3327,  0.1272,  ...,  0.3359, -0.2605, -0.4252],
        [ 0.2233,  0.0496, -0.2705,  ...,  0.3050, -0.1870, -0.2478],
        ...,
        [-0.3594, -0.2824, -0.1322,  ..., -0.1697,  0.2906,  0.1655],
        [ 0.3724, -0.1279, -0.0174,  ...,  0.4944,  0.1842,  0.3130],
        [-0.2215,  0.3089,  0.1296,  ..., -0.1676, -0.1425, -0.2077]])
##########################################################
decoder.blks.block1.attention2.W_v.weight shape: torch.Size([128, 128])
tensor([[ 0.0474, -0.0260,  0.0641,  ..., -0.0060, -0.0322, -0.0748],
        [-0.0027, -0.0421, -0.0014,  ...,  0.0241, -0.0598, -0.0050],
        [ 0.0460, -0.0439,  0.0547,  ...,  0.0160, -0.0640, -0.0175],
        ...,
        [ 0.0088,  0.0050, -0.0117,  ..., -0.0222, -0.0439,  0.0439],
        [ 0.0013, -0.0107, -0.0389,  ...,  0.0265, -0.0193,  0.0161],
        [-0.0388, -0.0418, -0.0127,  ...,  0.0200, -0.0742, -0.0316]])
tensor([[ 3.8739e-01, -1.3864e-01,  1.0925e-02,  ...,  3.3089e-01,
         -1.3016e-01,  2.9289e-01],
        [ 1.3386e-01, -3.7852e-01, -3.4324e-01,  ...,  1.6266e-01,
         -4.0343e-01, -3.5316e-01],
        [-2.0369e-01,  1.3710e-01,  2.4233e-01,  ..., -2.6024e-01,
          9.4880e-02,  1.6614e-01],
        ...,
        [ 3.6430e-01, -1.0268e-01, -6.7452e-02,  ...,  3.2270e-01,
          3.0491e-01,  3.9702e-01],
        [ 1.4574e-01, -3.2300e-01, -3.2428e-01,  ...,  1.9611e-01,
          1.4512e-01,  3.2583e-01],
        [-3.4057e-03,  5.7196e-02, -2.5228e-02,  ...,  1.1112e-01,
          3.0202e-04,  3.3234e-03]])
##########################################################
decoder.blks.block1.attention2.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0451, -0.0079,  0.0020,  ..., -0.0036,  0.0227, -0.0247],
        [-0.0055, -0.0145,  0.0177,  ...,  0.0378, -0.0241,  0.0387],
        [-0.0232,  0.0074,  0.0623,  ..., -0.0054,  0.0535, -0.0281],
        ...,
        [ 0.0416,  0.0012,  0.0373,  ...,  0.0313,  0.0587, -0.0067],
        [-0.0182, -0.0043,  0.0651,  ..., -0.0120, -0.0026, -0.0044],
        [ 0.0209,  0.0082, -0.0382,  ..., -0.0276, -0.0045,  0.0595]])
tensor([[ 0.1768, -0.1389, -0.3410,  ...,  0.3409, -0.1083, -0.3493],
        [-0.1371,  0.1166,  0.3606,  ..., -0.3049,  0.1073,  0.3733],
        [-0.1540,  0.1369,  0.4103,  ..., -0.3539,  0.1803,  0.3039],
        ...,
        [ 0.3832, -0.3419, -0.0874,  ...,  0.1626, -0.2825, -0.3063],
        [ 0.1134, -0.1352, -0.2782,  ...,  0.3321, -0.1335, -0.3430],
        [-0.1094,  0.1365,  0.3131,  ..., -0.3744,  0.1240,  0.3943]])
##########################################################
decoder.blks.block1.addnorm2.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.3706, 0.9054, 1.0634, 1.0050, 1.1516, 1.0393, 1.1255, 0.9196, 0.8323,
        1.3514, 1.2839, 1.3720, 0.6289, 1.3679, 0.9040, 0.6516, 1.0997, 0.8719,
        1.3436, 0.6676, 1.1213, 1.0325, 0.9092, 1.1083, 0.6535, 0.6338, 0.9963,
        1.3673, 0.8997, 0.8225, 1.1095, 1.1623, 0.6341, 0.6291, 0.6402, 0.6287,
        1.3135, 1.1187, 0.9524, 1.2157, 0.7236, 0.5965, 0.6501, 0.9036, 1.3408,
        0.8597, 0.8922, 1.3660, 0.7183, 0.8965, 1.3674, 0.6369, 1.3565, 1.0543,
        1.0729, 1.1439, 0.7854, 0.7946, 1.3561, 0.5866, 0.7784, 1.3501, 0.9070,
        0.6622, 0.6397, 1.2107, 1.0508, 0.6289, 0.6593, 0.8852, 1.0314, 0.6466,
        0.6369, 0.6297, 1.3678, 1.1239, 1.3449, 0.8810, 0.9284, 1.3652, 0.8766,
        1.3543, 0.8950, 0.6336, 0.7767, 1.0270, 0.8028, 0.9424, 1.0419, 0.9230,
        0.7263, 0.6997, 0.9674, 1.3504, 0.9149, 0.9440, 0.9500, 0.9997, 0.6251,
        0.6308, 0.8853, 1.1235, 0.6442, 1.0945, 1.3578, 1.1113, 1.3682, 1.0668,
        0.8812, 0.6413, 1.0913, 0.8903, 0.6469, 1.1654, 1.3722, 1.1025, 0.6312,
        1.0393, 0.7012, 1.3064, 0.6872, 0.8804, 1.3406, 0.9934, 0.6398, 0.9286,
        0.7797, 0.6606])
##########################################################
decoder.blks.block1.addnorm2.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.3432, -0.3689, -0.2771, -0.1230,  0.3649,  0.0292, -0.0889,  0.3491,
         0.1610,  0.0864,  0.3330,  0.0735, -0.2127, -0.1076, -0.1302,  0.3707,
        -0.0603, -0.3629, -0.3533,  0.3430,  0.0825,  0.3672,  0.0218, -0.0224,
         0.3681, -0.1036, -0.3718,  0.3581, -0.3560,  0.0817, -0.2626, -0.0087,
        -0.3023,  0.3598, -0.3428, -0.3594,  0.3020, -0.1257, -0.3442,  0.3074,
        -0.1920,  0.3198, -0.3702, -0.3724,  0.0410, -0.0603,  0.3399, -0.0259,
        -0.1429,  0.3514, -0.1117,  0.0865,  0.0774, -0.1013, -0.0034, -0.3621,
        -0.2805, -0.0038,  0.0831, -0.3712, -0.1555, -0.0531, -0.1728,  0.0442,
         0.3651,  0.0954, -0.1135,  0.3725, -0.3715, -0.3668,  0.3626, -0.2784,
         0.0286, -0.3706, -0.0066, -0.0612,  0.1803,  0.3486, -0.1909, -0.0603,
         0.3588,  0.1278,  0.3471, -0.3628, -0.0151,  0.2484,  0.2534, -0.0094,
         0.2567, -0.0376, -0.2176,  0.2787,  0.0574,  0.0262, -0.0889, -0.3632,
        -0.3659, -0.3669, -0.3437, -0.0324,  0.3497,  0.0577, -0.0717, -0.0910,
         0.0854, -0.0648,  0.3607, -0.0839,  0.3717,  0.3731,  0.1241,  0.1066,
        -0.1296,  0.3685, -0.2233,  0.1057,  0.0519,  0.0095, -0.2740,  0.3628,
        -0.2998, -0.0915,  0.0338, -0.0912,  0.3563, -0.2216,  0.3680, -0.2964])
##########################################################
decoder.blks.block1.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[ 0.0173,  0.0167,  0.0172,  ...,  0.0245, -0.0248,  0.0261],
        [-0.0140,  0.0015, -0.0162,  ..., -0.0338, -0.0582, -0.0170],
        [-0.0054,  0.0559,  0.0359,  ...,  0.0379,  0.0236, -0.0324],
        ...,
        [ 0.0472, -0.0334, -0.0263,  ..., -0.0329, -0.0082,  0.0417],
        [-0.0119,  0.0429, -0.0008,  ...,  0.0075, -0.0613,  0.0018],
        [ 0.0620,  0.0257, -0.0476,  ...,  0.0193,  0.0437,  0.0165]])
tensor([[ 0.1453,  0.3615, -0.3301,  ..., -0.0305,  0.3078,  0.3806],
        [ 0.3564,  0.1026, -0.3682,  ...,  0.0678, -0.3678,  0.3448],
        [-0.3505, -0.0483,  0.1663,  ...,  0.1669, -0.0982, -0.0121],
        ...,
        [ 0.1731, -0.3499,  0.2371,  ...,  0.0321,  0.1894, -0.2283],
        [ 0.3336,  0.1719, -0.1294,  ...,  0.3567, -0.4301,  0.3645],
        [ 0.1920,  0.3648, -0.3911,  ...,  0.1447, -0.3285,  0.3654]])
##########################################################
decoder.blks.block1.ffn.dense1.bias shape: torch.Size([64])
tensor([ 0.0472, -0.0189, -0.0795, -0.0698, -0.0494, -0.0362, -0.0815, -0.0259,
        -0.0387,  0.0308,  0.0651,  0.0726,  0.0215,  0.0873, -0.0170, -0.0786,
        -0.0526,  0.0862, -0.0475,  0.0073,  0.0127, -0.0442,  0.0224, -0.0410,
        -0.0851,  0.0609,  0.0055,  0.0827, -0.0748,  0.0719, -0.0860,  0.0044,
        -0.0762,  0.0770,  0.0817, -0.0300, -0.0353,  0.0475, -0.0406,  0.0740,
         0.0170,  0.0449,  0.0662, -0.0376, -0.0603,  0.0112,  0.0794,  0.0168,
        -0.0494, -0.0086,  0.0568, -0.0010, -0.0297, -0.0390,  0.0396,  0.0247,
         0.0668,  0.0828, -0.0349,  0.0635, -0.0632,  0.0076, -0.0702,  0.0149])
tensor([ 0.1572,  0.3319, -0.4418, -0.4463,  0.0692,  0.3299,  0.0468,  0.3452,
         0.1768,  0.1603,  0.2563, -0.1780,  0.3699,  0.2582, -0.3850, -0.1605,
         0.0422,  0.2890,  0.0759,  0.2063,  0.3566,  0.1856, -0.0987,  0.3112,
         0.2881,  0.1897,  0.2460,  0.2130, -0.1021, -0.2748,  0.0422,  0.3610,
        -0.3079,  0.2013,  0.3720, -0.3867, -0.3882,  0.3257,  0.3242,  0.3664,
         0.3884, -0.2974,  0.4371,  0.2483,  0.2869, -0.3402,  0.3761, -0.3458,
         0.1153,  0.3269,  0.1361,  0.3746,  0.2177,  0.0795,  0.2693, -0.3249,
         0.3614,  0.1481,  0.1008, -0.0566,  0.0537,  0.1774,  0.2780,  0.3567])
##########################################################
decoder.blks.block1.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[-0.0120, -0.0079, -0.0793,  ..., -0.0680,  0.0480, -0.0350],
        [ 0.0241,  0.0328,  0.0020,  ..., -0.0497,  0.0075, -0.0845],
        [-0.0039, -0.0719, -0.0117,  ..., -0.0368, -0.0501,  0.0041],
        ...,
        [-0.0238,  0.0003, -0.0027,  ..., -0.0303,  0.0198,  0.0277],
        [ 0.0471,  0.0451, -0.0513,  ...,  0.0543,  0.0621,  0.1021],
        [ 0.0123, -0.0289,  0.0052,  ..., -0.0182,  0.0340, -0.0305]])
tensor([[ 0.3448,  0.2298,  0.1581,  ...,  0.2205,  0.4186,  0.3373],
        [-0.3226, -0.2641, -0.3659,  ..., -0.1894, -0.3400, -0.4354],
        [-0.3760, -0.3179, -0.3815,  ..., -0.2684, -0.4095, -0.3286],
        ...,
        [ 0.0739, -0.2425,  0.0759,  ..., -0.2467, -0.2657, -0.3364],
        [ 0.3963,  0.3313,  0.3106,  ...,  0.2927,  0.4180,  0.4643],
        [-0.3380, -0.2877, -0.3593,  ..., -0.2038, -0.3196, -0.4000]])
##########################################################
decoder.blks.block1.ffn.dense2.bias shape: torch.Size([128])
tensor([-0.1152,  0.0313,  0.0856, -0.0056,  0.0038, -0.1206,  0.0394,  0.0797,
        -0.0712, -0.0378, -0.1014, -0.0616, -0.0621, -0.0460, -0.0467,  0.0935,
         0.0381,  0.0783, -0.0159,  0.0530,  0.0457, -0.0563, -0.0203,  0.1033,
        -0.0975, -0.0734,  0.0836, -0.0051, -0.0603,  0.1250,  0.0162, -0.0021,
        -0.0239,  0.0214,  0.1194,  0.0502,  0.0472, -0.0053,  0.0100,  0.0355,
         0.0239, -0.0306,  0.0740, -0.0288, -0.0201, -0.0600, -0.0466, -0.0619,
        -0.0596, -0.0393,  0.0958,  0.1227, -0.1142,  0.0252,  0.0046, -0.1122,
         0.0999,  0.0955,  0.0371, -0.1046,  0.1112, -0.0124, -0.0237,  0.1075,
         0.0473, -0.1243, -0.0624, -0.0110, -0.0442,  0.0095,  0.0969,  0.0930,
         0.0103,  0.0105, -0.1077,  0.1109, -0.0058,  0.0669,  0.0776,  0.0686,
         0.0418, -0.1243, -0.0939, -0.0126, -0.0186,  0.0366, -0.0119, -0.1126,
         0.0503, -0.0934,  0.0337, -0.0045, -0.0858,  0.0285,  0.0619,  0.1150,
        -0.0871,  0.0226, -0.0606,  0.0204,  0.0890, -0.0821,  0.1244, -0.0823,
        -0.0213,  0.1210,  0.0768, -0.0264,  0.0293,  0.0749, -0.0779,  0.0428,
         0.1106, -0.0990,  0.1012,  0.1212, -0.0407, -0.0051, -0.0855, -0.0439,
         0.0935, -0.0205,  0.0898, -0.0377, -0.0796,  0.0084, -0.0772,  0.1121])
tensor([ 0.2442, -0.3397, -0.1828, -0.2582,  0.3590, -0.1430, -0.0715,  0.4293,
         0.0028,  0.0432,  0.2704, -0.1269, -0.0784, -0.1288, -0.3954,  0.4616,
        -0.0240, -0.2850, -0.1235,  0.4015,  0.1211,  0.3075,  0.3488,  0.0261,
         0.2563, -0.1814, -0.2886,  0.3670, -0.4128,  0.2273, -0.3534, -0.0699,
        -0.3952,  0.3929, -0.2440,  0.0199,  0.2994, -0.1330, -0.3602,  0.3902,
         0.1216,  0.3326, -0.1857, -0.4001, -0.0097, -0.1668,  0.3151, -0.0919,
        -0.2819,  0.3081, -0.0265,  0.1393, -0.1467, -0.0613,  0.1664, -0.4761,
        -0.0382,  0.0324,  0.1332, -0.4737,  0.0497, -0.2388, -0.1285,  0.0932,
        -0.0444, -0.0371, -0.1669,  0.3599, -0.4160, -0.3533,  0.4640,  0.1481,
        -0.0718, -0.3620, -0.0639,  0.1125, -0.0400,  0.4178, -0.0434,  0.0124,
         0.3920,  0.0066,  0.2502, -0.3805, -0.3913,  0.3648,  0.1697, -0.1225,
         0.2966, -0.1524, -0.1771,  0.3175, -0.0016,  0.1080, -0.3054, -0.2101,
        -0.4453, -0.3386, -0.1620,  0.0356,  0.4428, -0.1227,  0.0673, -0.4450,
        -0.0380,  0.0242,  0.4345, -0.1334,  0.3954,  0.4241,  0.0543,  0.1815,
        -0.2349,  0.2743, -0.2607,  0.2012, -0.0745,  0.0755, -0.2978,  0.3140,
        -0.2384, -0.1284, -0.0960, -0.1202,  0.2769, -0.1787,  0.2917, -0.2463])
##########################################################
decoder.blks.block1.addnorm3.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.3646, 1.3404, 1.1001, 0.9601, 1.3258, 0.6374, 0.6476, 1.2921, 0.6214,
        1.0922, 1.3724, 1.2093, 0.6532, 1.2310, 1.0656, 1.3389, 0.8513, 0.8773,
        1.1734, 1.1256, 0.6423, 1.3247, 1.0442, 0.6499, 1.1338, 0.6382, 1.3794,
        1.3628, 1.1178, 0.6846, 1.1258, 0.9011, 1.1047, 1.0950, 0.6315, 0.6407,
        1.3475, 1.1095, 1.1115, 1.2491, 0.7461, 1.3510, 0.7669, 1.3628, 1.1485,
        0.9255, 1.1143, 0.9314, 1.0498, 0.8778, 1.3345, 0.6563, 1.2873, 0.8721,
        0.9933, 1.3693, 0.6265, 0.6407, 0.8722, 1.1162, 0.6308, 1.1905, 0.6524,
        0.6472, 0.6337, 0.9347, 0.6286, 1.0547, 1.1369, 0.9477, 1.1278, 0.9979,
        0.6374, 0.6921, 0.9331, 0.6543, 0.9264, 0.8998, 0.6583, 0.9367, 0.8826,
        1.3484, 0.8888, 0.9853, 0.6322, 1.0652, 0.6404, 0.6328, 1.2607, 0.8703,
        0.6857, 1.1085, 0.6593, 0.8718, 0.6421, 1.3575, 1.3636, 1.3451, 1.0079,
        0.6509, 0.8912, 1.1206, 0.6566, 0.6239, 1.3710, 1.0987, 1.3513, 0.6385,
        1.3529, 0.8255, 0.9650, 0.8798, 0.6326, 1.3833, 0.9819, 0.6391, 0.6323,
        0.9635, 0.6424, 1.3455, 1.1049, 0.8780, 1.3554, 0.7574, 0.8010, 0.8959,
        1.1224, 1.1079])
##########################################################
decoder.blks.block1.addnorm3.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.3653, -0.3695, -0.2518, -0.2280,  0.3566, -0.0740, -0.1167,  0.3465,
         0.0037,  0.1048,  0.3670, -0.0149,  0.0423, -0.1071, -0.3405,  0.3725,
        -0.0950, -0.3560, -0.3070,  0.3443,  0.0969,  0.3712,  0.3632, -0.1005,
         0.3713, -0.1194, -0.3669,  0.3705, -0.3491,  0.1167, -0.3589, -0.0858,
        -0.3715,  0.3724, -0.3581,  0.0510,  0.2985, -0.1278, -0.3709,  0.3706,
         0.1086,  0.3656, -0.2985, -0.3678,  0.0493, -0.1152,  0.3720, -0.0623,
        -0.1923,  0.3460, -0.1201, -0.0378, -0.0344, -0.1129,  0.1501, -0.3677,
        -0.0603, -0.0024,  0.1036, -0.3729,  0.0333, -0.3484, -0.0249, -0.0597,
        -0.1129,  0.1601, -0.1186,  0.3739, -0.3612, -0.3566,  0.3746,  0.0875,
        -0.1066, -0.3649,  0.3132, -0.0369, -0.0500,  0.3453, -0.0352, -0.0834,
         0.3498,  0.1262,  0.3446, -0.3520, -0.1958,  0.3729,  0.1370,  0.0564,
         0.2376, -0.0772, -0.1485,  0.2935,  0.1050,  0.0970, -0.3629, -0.3157,
        -0.3537, -0.3565, -0.3588,  0.0617,  0.3510, -0.0774, -0.0900, -0.3574,
        -0.0122, -0.1104,  0.3552, -0.1137,  0.3605,  0.3697,  0.1272,  0.0758,
        -0.3408,  0.3696, -0.3526,  0.0974, -0.0094,  0.0495, -0.1091,  0.3564,
        -0.3622, -0.0578, -0.1950, -0.1066,  0.3500, -0.1470,  0.3707, -0.3714])
##########################################################
decoder.blks.block2.attention1.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0123,  0.1477,  0.0296,  ..., -0.1204, -0.2010, -0.1341],
        [ 0.0576,  0.0810, -0.0564,  ..., -0.0713, -0.0136,  0.1934],
        [-0.0138,  0.2179,  0.0082,  ...,  0.0038, -0.0383,  0.0113],
        ...,
        [ 0.0396,  0.1737, -0.1123,  ..., -0.0262, -0.0375, -0.0519],
        [-0.2009,  0.1681,  0.0404,  ...,  0.2096, -0.0813, -0.0544],
        [-0.1084, -0.0251, -0.0841,  ...,  0.0307,  0.1581,  0.1409]])
tensor([[-0.3595,  0.2092,  0.3674,  ...,  0.2398, -0.5073, -0.0253],
        [-0.0690,  0.4404,  0.2845,  ...,  0.0486, -0.1371,  0.5401],
        [-0.3828,  0.3434,  0.1328,  ...,  0.3551, -0.4030,  0.3673],
        ...,
        [-0.3282,  0.2075,  0.0112,  ..., -0.0621, -0.3857,  0.0887],
        [-0.5422,  0.5374,  0.1717,  ...,  0.3302, -0.2075,  0.3024],
        [-0.0529,  0.0941,  0.3093,  ...,  0.2021,  0.4968,  0.1785]])
##########################################################
decoder.blks.block2.attention1.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.0866,  0.0498,  0.1003,  ..., -0.0439, -0.0458, -0.1459],
        [ 0.0899, -0.1629, -0.0274,  ..., -0.0501,  0.0378, -0.1095],
        [ 0.0085,  0.0546, -0.0328,  ...,  0.0218, -0.0067,  0.1084],
        ...,
        [ 0.0133,  0.0586, -0.1736,  ...,  0.0499, -0.1058, -0.0187],
        [-0.0760,  0.1014,  0.0330,  ..., -0.0124, -0.0085,  0.0387],
        [ 0.0426, -0.1729,  0.0897,  ...,  0.0311,  0.1210, -0.1449]])
tensor([[-0.0698, -0.0602,  0.4352,  ..., -0.1536, -0.0890, -0.4880],
        [-0.2779, -0.0276, -0.3929,  ...,  0.0384, -0.0913,  0.2921],
        [-0.1261, -0.2782,  0.0368,  ..., -0.0715,  0.2519, -0.1800],
        ...,
        [-0.3382,  0.1933, -0.2279,  ...,  0.4216,  0.0348, -0.0187],
        [-0.2032, -0.2365,  0.5045,  ..., -0.1397, -0.1467, -0.3126],
        [-0.0604, -0.3034,  0.4257,  ..., -0.0402,  0.0088, -0.4969]])
##########################################################
decoder.blks.block2.attention1.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0326,  0.0211,  0.0356,  ..., -0.0261,  0.0521,  0.0009],
        [ 0.0104,  0.0516, -0.0335,  ..., -0.0689, -0.0050,  0.0521],
        [ 0.0099, -0.0175, -0.0114,  ...,  0.0029,  0.0273, -0.0391],
        ...,
        [ 0.0508,  0.0008,  0.0006,  ...,  0.0612, -0.0236,  0.0510],
        [-0.0120, -0.0402, -0.0115,  ...,  0.0355,  0.0046, -0.0427],
        [-0.0350, -0.0149, -0.0674,  ..., -0.0842, -0.0106,  0.0119]])
tensor([[ 0.3102, -0.3211, -0.0946,  ..., -0.1548,  0.3937, -0.3478],
        [ 0.1413, -0.3111, -0.1633,  ..., -0.1939,  0.3350, -0.2964],
        [-0.1175,  0.3581,  0.1189,  ...,  0.1308, -0.0887,  0.0846],
        ...,
        [ 0.3938, -0.0954, -0.1314,  ..., -0.2846,  0.3241, -0.0814],
        [-0.1408,  0.3572,  0.1184,  ...,  0.1639, -0.1304,  0.0859],
        [-0.3768,  0.0931,  0.0636,  ...,  0.2583, -0.3567,  0.1405]])
##########################################################
decoder.blks.block2.attention1.W_o.weight shape: torch.Size([128, 128])
tensor([[-8.7708e-03,  2.2676e-02,  2.1616e-03,  ...,  3.9456e-02,
          1.2307e-02,  2.5430e-02],
        [-3.1702e-02,  3.7888e-02,  3.1792e-03,  ...,  1.2334e-02,
         -2.2588e-02, -3.2773e-03],
        [-3.8663e-02,  1.7793e-02,  3.1242e-05,  ..., -1.4826e-02,
          4.6803e-02, -5.9052e-02],
        ...,
        [ 1.4557e-02, -1.5590e-02, -3.8265e-02,  ..., -5.3468e-04,
         -3.9868e-02, -4.1029e-02],
        [-5.6818e-02, -9.3003e-03, -1.3427e-02,  ..., -3.1537e-02,
          4.4582e-02,  4.4347e-02],
        [ 2.6671e-02,  4.3961e-02,  5.2746e-02,  ...,  2.1329e-02,
          3.6340e-04,  4.2124e-02]])
tensor([[-0.1601,  0.3708, -0.1286,  ..., -0.0900,  0.1468, -0.3204],
        [-0.3920,  0.1611, -0.3380,  ..., -0.3307,  0.3228, -0.1314],
        [-0.4131,  0.1204, -0.1286,  ..., -0.3653,  0.3933, -0.1765],
        ...,
        [ 0.4068, -0.3695,  0.0820,  ...,  0.1316, -0.4413,  0.3081],
        [ 0.3297, -0.1248,  0.1146,  ...,  0.3162, -0.0862,  0.1746],
        [-0.2657,  0.1524, -0.0782,  ..., -0.3228,  0.3459, -0.0747]])
##########################################################
decoder.blks.block2.addnorm1.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.3388, 0.8820, 1.0876, 0.6750, 1.2410, 1.0658, 1.1317, 0.9314, 1.0579,
        1.3479, 1.3649, 0.9579, 0.6413, 1.3071, 1.3592, 1.2695, 0.6527, 0.8732,
        0.9825, 0.6502, 1.1104, 0.9116, 0.6333, 1.1081, 0.6277, 0.6155, 0.9138,
        1.3354, 0.8874, 1.0963, 0.6557, 1.3537, 1.1005, 0.9939, 1.0831, 1.0797,
        1.1816, 1.1116, 0.6177, 0.9593, 1.0786, 1.2574, 0.7510, 0.8862, 1.1351,
        0.6368, 0.6623, 1.3763, 0.9797, 1.3591, 1.3479, 0.7061, 0.9270, 1.0429,
        0.8156, 1.3287, 0.7581, 1.0776, 1.4118, 0.6367, 1.0594, 1.3153, 1.1203,
        0.8978, 0.6393, 1.3138, 1.1066, 1.0848, 0.8784, 0.8794, 0.7340, 1.0670,
        1.1314, 0.6575, 0.8743, 1.1324, 1.1428, 0.8855, 0.5808, 1.3145, 0.8703,
        1.3435, 0.8897, 1.1047, 0.6538, 1.0402, 0.9477, 1.0556, 1.1748, 0.6887,
        0.9054, 1.0093, 1.1572, 1.3392, 1.0815, 1.3915, 0.9290, 0.9003, 1.0539,
        1.1410, 0.8754, 0.6566, 1.3365, 0.6639, 1.1742, 0.8801, 1.3763, 0.6570,
        0.8880, 1.0109, 1.0228, 1.0196, 1.1284, 0.9094, 0.8867, 0.6304, 0.9627,
        1.0514, 1.0095, 0.8764, 0.7878, 1.3320, 1.3164, 1.0890, 0.6353, 1.2726,
        0.6427, 0.8660])
##########################################################
decoder.blks.block2.addnorm1.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0041, -0.3704, -0.3532, -0.3860,  0.3578, -0.0492, -0.0882,  0.3341,
        -0.0602,  0.1080,  0.3515, -0.3631,  0.0983, -0.1094,  0.1460,  0.3672,
         0.3755, -0.3502, -0.3628,  0.3487, -0.1954,  0.3766, -0.1116,  0.0661,
         0.3489, -0.1235, -0.3647,  0.3650, -0.3456,  0.1109, -0.3562, -0.0964,
        -0.3838,  0.0577, -0.3547,  0.1061,  0.3500, -0.3371, -0.3690,  0.3654,
         0.1243,  0.3673, -0.1971, -0.3729,  0.0668,  0.3700,  0.3796, -0.0445,
        -0.2553, -0.1162, -0.1323,  0.1219,  0.3821, -0.1277,  0.2383, -0.3809,
         0.0257, -0.2001, -0.1657, -0.3700,  0.0820, -0.2476,  0.0865,  0.0219,
        -0.1198,  0.3764, -0.1183,  0.0303, -0.3646, -0.3621,  0.3726,  0.0805,
        -0.0798, -0.0276,  0.3593, -0.0117,  0.2899,  0.3489, -0.1128,  0.3505,
         0.3526,  0.1301,  0.3637,  0.0419, -0.3834,  0.3574, -0.0907,  0.0742,
         0.0517, -0.0720, -0.0350,  0.1216,  0.0644,  0.1183,  0.1390, -0.3580,
        -0.3549, -0.3566,  0.1234,  0.0503,  0.3461,  0.3681, -0.0978, -0.3792,
         0.2466,  0.2636,  0.3657,  0.3976,  0.3728,  0.1114,  0.1186,  0.2979,
        -0.1068,  0.3590, -0.3570, -0.3718, -0.3464,  0.3686,  0.0488,  0.3543,
        -0.0855, -0.2326, -0.3489, -0.0993,  0.3452, -0.0247,  0.3733, -0.3515])
##########################################################
decoder.blks.block2.attention2.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0909,  0.0565, -0.0025,  ...,  0.1990, -0.1242, -0.0256],
        [ 0.0949, -0.0627,  0.0052,  ...,  0.1515,  0.1046,  0.1189],
        [-0.0436,  0.1335,  0.0140,  ...,  0.1585, -0.0283, -0.0079],
        ...,
        [ 0.0435,  0.1095, -0.1758,  ...,  0.1001,  0.1242,  0.0846],
        [-0.0699,  0.0785, -0.0649,  ..., -0.0903,  0.0797, -0.1122],
        [ 0.0259, -0.1591, -0.0457,  ...,  0.2002, -0.0891,  0.0947]])
tensor([[-0.3411, -0.1422,  0.2515,  ..., -0.0513,  0.0714, -0.2335],
        [ 0.3813,  0.1031, -0.1751,  ...,  0.4139, -0.0752,  0.2937],
        [-0.3238, -0.0325,  0.1906,  ..., -0.0889,  0.1398, -0.1709],
        ...,
        [ 0.2047,  0.2759, -0.4827,  ...,  0.3982, -0.1472,  0.2554],
        [-0.3160, -0.1141,  0.1883,  ..., -0.3550,  0.2873, -0.2979],
        [-0.1775, -0.3419,  0.2036,  ..., -0.0216,  0.1576, -0.1063]])
##########################################################
decoder.blks.block2.attention2.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.1173, -0.0534,  0.0411,  ...,  0.0640, -0.0469, -0.1787],
        [ 0.0170, -0.0088,  0.1347,  ..., -0.1237, -0.0414,  0.1634],
        [-0.0020, -0.0127, -0.0945,  ...,  0.0989,  0.0512, -0.0333],
        ...,
        [ 0.1313, -0.0339, -0.0917,  ...,  0.1178,  0.0255,  0.1326],
        [-0.0453, -0.0984, -0.0139,  ..., -0.2012,  0.1143, -0.1088],
        [-0.0012, -0.0211, -0.0761,  ...,  0.0465,  0.1237, -0.1855]])
tensor([[-0.3129,  0.1799,  0.2999,  ..., -0.1442,  0.2164,  0.1036],
        [-0.2372,  0.2145,  0.3563,  ..., -0.3565, -0.2716, -0.1037],
        [-0.1804, -0.2624, -0.2912,  ..., -0.0935,  0.3174,  0.2646],
        ...,
        [-0.1100, -0.2445, -0.3027,  ..., -0.1123, -0.2376, -0.0964],
        [-0.2787, -0.3395, -0.2459,  ...,  0.0219,  0.3266,  0.1339],
        [-0.2278, -0.2604, -0.3206,  ..., -0.1971,  0.3738,  0.0512]])
##########################################################
decoder.blks.block2.attention2.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0698, -0.0313, -0.0105,  ...,  0.0214,  0.0254, -0.0387],
        [ 0.0392, -0.0304, -0.0771,  ...,  0.0313, -0.0151, -0.0103],
        [-0.0319,  0.0054, -0.0279,  ..., -0.0662,  0.0093, -0.0004],
        ...,
        [ 0.0276,  0.0356, -0.0259,  ..., -0.0254, -0.0415,  0.0010],
        [ 0.0891,  0.0174,  0.0165,  ..., -0.0382, -0.0453,  0.0379],
        [ 0.0111,  0.0435, -0.0106,  ..., -0.0500,  0.0004, -0.0312]])
tensor([[-0.1909,  0.4750,  0.5345,  ..., -0.1354, -0.1206, -0.1425],
        [ 0.3769, -0.1854, -0.2059,  ...,  0.3740,  0.2684,  0.2852],
        [-0.3661,  0.1988,  0.1328,  ..., -0.4145, -0.2401, -0.2606],
        ...,
        [ 0.1521,  0.0387, -0.1551,  ...,  0.1045,  0.2382,  0.1823],
        [ 0.4297,  0.3396,  0.3077,  ...,  0.3021,  0.3450,  0.4015],
        [ 0.3480,  0.3616,  0.2776,  ...,  0.2826,  0.3700,  0.3196]])
##########################################################
decoder.blks.block2.attention2.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0127, -0.0527, -0.0775,  ..., -0.0180,  0.0232, -0.0509],
        [ 0.0169, -0.0419, -0.0105,  ..., -0.0260, -0.0147, -0.0336],
        [ 0.0225, -0.0170,  0.0192,  ..., -0.0672, -0.0049, -0.0553],
        ...,
        [ 0.0123,  0.0056,  0.0537,  ...,  0.0180,  0.0162, -0.0954],
        [ 0.0375,  0.0178,  0.0017,  ..., -0.0379,  0.0009, -0.0025],
        [-0.0013,  0.0154, -0.0509,  ...,  0.0261,  0.0384, -0.0202]])
tensor([[ 0.1364,  0.3937, -0.5238,  ..., -0.1546,  0.4220,  0.3508],
        [-0.1035, -0.4676,  0.4153,  ...,  0.1109, -0.3993, -0.4182],
        [ 0.3619,  0.1284, -0.1255,  ..., -0.4096,  0.1327,  0.0830],
        ...,
        [ 0.3529,  0.1263, -0.0669,  ..., -0.3225,  0.1418,  0.0301],
        [ 0.1654,  0.4001, -0.3812,  ..., -0.1705,  0.3594,  0.3557],
        [ 0.3405,  0.1397, -0.1749,  ..., -0.3151,  0.1686,  0.1104]])
##########################################################
decoder.blks.block2.addnorm2.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.5162, 1.3481, 1.1999, 1.1341, 0.7881, 0.8109, 1.1660, 1.3507, 1.0454,
        1.4755, 0.9988, 0.8493, 0.5933, 1.0891, 0.9179, 1.2415, 1.0446, 1.2063,
        0.7946, 1.1332, 0.4212, 0.8437, 1.0994, 0.7973, 1.0131, 1.1472, 0.8650,
        0.8324, 1.2655, 0.9201, 0.7884, 1.4333, 1.0537, 1.0082, 1.2581, 0.5632,
        0.8728, 0.8550, 1.0423, 0.7574, 0.9408, 0.8089, 0.5330, 0.9263, 1.0781,
        0.5112, 0.6593, 0.7993, 1.2846, 1.3755, 0.9681, 1.3788, 1.1603, 1.2170,
        0.7574, 0.9070, 1.2086, 1.0873, 1.3407, 1.0151, 0.8549, 1.0052, 0.9776,
        0.8032, 1.2860, 0.9865, 0.4987, 0.8428, 1.1064, 1.3365, 0.5456, 1.1207,
        0.7377, 0.5491, 1.1018, 1.1468, 1.1871, 0.7753, 1.3128, 0.8574, 0.8238,
        1.2497, 1.2604, 1.1076, 0.4813, 1.1678, 0.9972, 1.2426, 0.8912, 1.1675,
        0.8079, 0.9514, 0.6146, 1.2039, 0.6436, 0.9887, 1.1026, 0.8783, 1.1466,
        0.4951, 1.4341, 1.0207, 0.8932, 0.6259, 0.9204, 0.6014, 0.7833, 1.0792,
        1.3984, 0.8512, 1.0652, 1.2910, 1.1040, 1.3000, 0.8379, 1.1398, 0.8069,
        1.2008, 0.9327, 0.8417, 0.9463, 0.8038, 0.8766, 1.2101, 1.1312, 1.2692,
        0.9517, 1.2942])
##########################################################
decoder.blks.block2.addnorm2.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.5895, -0.3797,  0.1996, -0.4937,  0.2010,  0.1485,  0.4979, -0.1026,
         0.1615,  0.2716,  0.3010, -0.0892, -0.1755,  0.2965, -0.3534,  0.0499,
         0.3363,  0.1696,  0.0142,  0.5937, -0.2103,  0.3167, -0.0658,  0.1860,
         0.4540, -0.0911, -0.0753,  0.3143, -0.4105, -0.5055, -0.4616, -0.1670,
        -0.0447,  0.5200,  0.2592, -0.2102,  0.1040, -0.3692, -0.0735,  0.2847,
        -0.1400,  0.3448, -0.0250, -0.1889,  0.0154,  0.0594,  0.3591,  0.1194,
        -0.4760, -0.1599,  0.2524,  0.5046, -0.0811, -0.2229,  0.4210, -0.3648,
         0.2137, -0.4738,  0.1006, -0.0454,  0.0869, -0.3659, -0.1925,  0.4217,
        -0.3861,  0.1489,  0.1766,  0.4828, -0.4477,  0.0603,  0.2151,  0.0515,
         0.1254, -0.2258,  0.3917, -0.1445,  0.0204,  0.0870,  0.1941,  0.1096,
         0.2250, -0.1633,  0.4799, -0.5923, -0.2742,  0.5396,  0.5108, -0.4869,
         0.3309, -0.1163, -0.1147,  0.0778, -0.2466, -0.2436, -0.1245, -0.3920,
        -0.3545, -0.2937,  0.1328, -0.2446, -0.1835,  0.4619, -0.0387, -0.2576,
         0.3700, -0.0784,  0.1898, -0.0137,  0.4087,  0.4815, -0.1181,  0.0282,
        -0.0512, -0.0219,  0.0897, -0.3429, -0.4252,  0.4295, -0.2826,  0.2923,
        -0.0832,  0.0091, -0.3459,  0.4198,  0.3477, -0.0180,  0.4833, -0.0073])
##########################################################
decoder.blks.block2.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[-0.0278,  0.0393, -0.0084,  ...,  0.0406,  0.0168,  0.0315],
        [ 0.0126, -0.0011,  0.0374,  ...,  0.0219,  0.0350, -0.0075],
        [ 0.0532, -0.0211,  0.0941,  ...,  0.0060, -0.0175, -0.0323],
        ...,
        [ 0.0026, -0.0231,  0.0601,  ..., -0.0022,  0.0857, -0.0225],
        [ 0.0760, -0.0501,  0.0390,  ...,  0.0085, -0.0167, -0.0439],
        [ 0.0142,  0.0154, -0.0058,  ...,  0.0372, -0.0371,  0.0252]])
tensor([[-0.1643, -0.0916, -0.1581,  ..., -0.1107, -0.3215,  0.0934],
        [-0.3269,  0.3276,  0.0072,  ..., -0.0486, -0.1005,  0.3275],
        [-0.0706, -0.1490,  0.4373,  ...,  0.1271, -0.3640,  0.3125],
        ...,
        [ 0.0802,  0.1797, -0.3682,  ..., -0.2167, -0.0342, -0.2620],
        [-0.2529, -0.2280,  0.1714,  ...,  0.1444, -0.1419,  0.0914],
        [-0.4785,  0.2933, -0.1975,  ...,  0.1156, -0.0601, -0.4620]])
##########################################################
decoder.blks.block2.ffn.dense1.bias shape: torch.Size([64])
tensor([-0.0357, -0.0712, -0.0074, -0.0234, -0.0401,  0.0870, -0.0562,  0.0522,
        -0.0385,  0.0024,  0.0291,  0.0095, -0.0835, -0.0734,  0.0512,  0.0720,
         0.0555, -0.0174, -0.0868, -0.0692,  0.0589,  0.0265, -0.0127,  0.0003,
         0.0288, -0.0287, -0.0773,  0.0135,  0.0383, -0.0834,  0.0452, -0.0704,
         0.0055, -0.0323,  0.0073, -0.0499,  0.0177,  0.0426,  0.0299,  0.0430,
         0.0808,  0.0865, -0.0464, -0.0115, -0.0128, -0.0780, -0.0692, -0.0708,
         0.0404,  0.0606, -0.0340,  0.0453, -0.0270, -0.0463,  0.0546, -0.0199,
        -0.0036, -0.0637, -0.0461,  0.0834, -0.0393, -0.0657, -0.0184,  0.0483])
tensor([ 0.0757, -0.2366,  0.1196, -0.4021, -0.0993,  0.1346,  0.0995, -0.4339,
        -0.2753,  0.1464, -0.0262,  0.3815,  0.1903,  0.2095, -0.0426,  0.4146,
        -0.1760, -0.3151,  0.0737,  0.2765,  0.0186, -0.3125,  0.3338,  0.3427,
         0.3924,  0.1030, -0.4909,  0.1084,  0.1461,  0.0469,  0.3664,  0.2534,
        -0.0028, -0.3734,  0.2362,  0.2366,  0.1276,  0.1709, -0.0423,  0.0852,
         0.1860,  0.2546,  0.0897, -0.1837, -0.1198,  0.2696,  0.1278, -0.0038,
         0.4132, -0.2822,  0.0818,  0.3997,  0.1008,  0.4689,  0.3985,  0.4941,
         0.3399,  0.0588,  0.5314,  0.3878,  0.4843, -0.4271,  0.1163, -0.1820])
##########################################################
decoder.blks.block2.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[-0.0371, -0.0197, -0.0110,  ...,  0.0126,  0.0242,  0.0011],
        [ 0.0452,  0.0135, -0.0572,  ...,  0.0079,  0.0426,  0.0165],
        [ 0.0109,  0.0240,  0.0388,  ..., -0.0042,  0.0867, -0.0704],
        ...,
        [ 0.0769,  0.0272,  0.0320,  ..., -0.0188,  0.0187, -0.0741],
        [ 0.0501, -0.0242,  0.0053,  ..., -0.0648,  0.0294, -0.0033],
        [ 0.0475,  0.0412,  0.0046,  ..., -0.0264, -0.0577,  0.0077]])
tensor([[ 0.3438,  0.3383,  0.3454,  ...,  0.2781,  0.3908,  0.3325],
        [ 0.1098,  0.0840,  0.0411,  ..., -0.1968,  0.1596,  0.4798],
        [-0.1458,  0.1148,  0.1528,  ..., -0.2149,  0.1783,  0.0463],
        ...,
        [ 0.1647,  0.1375,  0.1620,  ..., -0.1294,  0.1480,  0.1298],
        [ 0.4003,  0.3288, -0.1012,  ...,  0.1582, -0.0536,  0.2813],
        [-0.0852,  0.1530,  0.1282,  ..., -0.1491,  0.0670,  0.1848]])
##########################################################
decoder.blks.block2.ffn.dense2.bias shape: torch.Size([128])
tensor([-0.0488,  0.0239, -0.0289,  0.0902,  0.0008, -0.0582,  0.0601, -0.0040,
        -0.1065, -0.0002,  0.0552, -0.0290, -0.1196, -0.0631,  0.0747,  0.1244,
        -0.0611, -0.1200,  0.0623,  0.1018,  0.0931, -0.0178,  0.1125, -0.0571,
         0.1052, -0.1197,  0.0340, -0.0295, -0.0232,  0.1144, -0.0658,  0.0126,
        -0.1036, -0.1169,  0.1115, -0.0003,  0.0422, -0.0094, -0.0406,  0.0242,
         0.0620, -0.0930, -0.0444, -0.0098,  0.0602,  0.0109,  0.0493,  0.1188,
        -0.0365, -0.0847, -0.0936, -0.0695, -0.1102,  0.0659, -0.0221,  0.0117,
        -0.1228,  0.1154,  0.0380,  0.0781, -0.1218, -0.1071,  0.0225, -0.0504,
        -0.0569,  0.1028, -0.0279, -0.0447,  0.0135, -0.0319, -0.0289, -0.0173,
        -0.0739,  0.1101, -0.0618, -0.0239, -0.1247, -0.0452,  0.0254, -0.0429,
        -0.0888,  0.1045,  0.0159, -0.0963,  0.0041, -0.0761,  0.1140,  0.0867,
         0.0815, -0.1140, -0.1055,  0.0110,  0.0324,  0.0902,  0.1031,  0.0978,
        -0.1005, -0.0179,  0.0719,  0.0766, -0.0995, -0.0990,  0.0947,  0.0253,
         0.0708,  0.0722,  0.0438, -0.0110,  0.0357,  0.0333, -0.0345, -0.0691,
        -0.0482,  0.1054, -0.1235, -0.0459,  0.0293,  0.0042, -0.0232,  0.1056,
         0.1082, -0.0695, -0.0997,  0.0892,  0.0904, -0.0195, -0.1164,  0.1244])
tensor([ 4.3820e-01, -1.3307e-01, -1.2116e-01, -3.7196e-01,  3.1654e-01,
        -1.2901e-01,  6.5880e-01, -1.7202e-01, -6.8324e-02, -4.6541e-01,
         3.6260e-04,  4.3189e-02, -3.6410e-01, -1.3402e-01, -1.2435e-01,
         9.8637e-02,  4.6224e-01,  1.2154e-01,  3.0618e-02,  2.8907e-01,
        -3.2407e-01,  3.7774e-01, -1.9824e-02,  1.4860e-01,  6.1522e-01,
        -6.0117e-02,  1.0542e-01,  3.9324e-01, -4.1793e-01, -2.5607e-01,
        -3.6500e-01,  3.0469e-01, -3.3128e-02,  3.6566e-01,  2.8898e-01,
        -4.6351e-01, -4.4490e-02, -3.7544e-01,  3.6526e-02,  4.0969e-01,
         1.6153e-01,  4.2635e-01, -3.3902e-03, -1.1504e-01,  1.2476e-01,
        -8.6654e-02,  5.1088e-01,  5.7413e-01, -4.7051e-01, -2.9136e-01,
         2.6190e-01,  3.8332e-01, -1.7822e-01, -9.7581e-02,  3.4122e-01,
        -4.3078e-01, -2.9823e-01, -3.8284e-01,  6.7785e-02,  1.5930e-01,
        -1.8817e-01, -4.9681e-01, -8.4115e-02,  1.4175e-01,  2.3883e-01,
         3.0602e-01,  3.5315e-01,  4.4061e-01, -3.6854e-01,  1.2590e-01,
         4.3233e-01,  1.2895e-01,  4.2392e-01, -1.5504e-02,  1.3660e-01,
        -1.1382e-01, -9.2704e-02,  3.7012e-01, -1.5904e-01,  2.5887e-01,
         2.1292e-01, -1.5934e-01,  3.9781e-01, -5.4129e-01, -3.7094e-01,
         2.5923e-01,  5.6670e-01, -1.7687e-01,  5.0904e-01, -1.1878e-01,
        -5.1214e-01, -7.3999e-02, -4.5279e-01, -1.7985e-01, -1.5096e-01,
        -4.0660e-01, -3.5363e-01, -3.4768e-01,  1.3474e-01, -3.5284e-01,
        -2.3628e-01,  3.5138e-01,  2.4201e-02, -3.0512e-01,  4.4273e-01,
        -1.3398e-02,  1.7009e-02, -2.0730e-01,  4.7793e-01,  5.4678e-01,
         1.3239e-01, -1.2892e-01, -1.1694e-01, -1.7249e-02, -8.5842e-02,
        -4.7030e-01, -4.2169e-01,  5.6046e-01, -7.5600e-02,  4.5079e-01,
         1.5952e-01, -3.2442e-02, -5.0792e-01,  5.3420e-01,  4.8554e-01,
         7.7769e-02,  7.3610e-02,  1.8683e-01])
##########################################################
decoder.blks.block2.addnorm3.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.0415, 0.6638, 0.4578, 1.0914, 0.7395, 0.4632, 0.9271, 0.9227, 0.3672,
        1.2217, 0.8143, 0.7024, 0.7023, 0.6575, 0.7970, 0.6952, 0.9413, 0.5975,
        0.7039, 0.8515, 1.1034, 1.2785, 0.6683, 0.3867, 1.1258, 0.6229, 0.7906,
        1.2790, 0.8761, 0.8427, 0.6704, 0.8059, 0.5315, 0.8066, 1.0292, 1.0990,
        0.7229, 0.6455, 0.4781, 1.1136, 0.6389, 1.1003, 0.4810, 0.6994, 0.4925,
        0.5142, 1.1185, 1.2797, 1.1147, 0.8538, 0.8120, 1.0348, 0.7376, 0.9247,
        0.7532, 1.3617, 0.4374, 0.8805, 0.6988, 0.5747, 0.3659, 1.2958, 0.4461,
        0.7291, 0.5990, 0.6556, 0.9290, 0.9112, 0.8910, 0.8178, 1.0402, 0.7239,
        1.1159, 0.5636, 0.6388, 0.4924, 0.7073, 0.6495, 0.4440, 0.8575, 0.8173,
        0.8689, 1.0345, 0.9252, 0.9599, 0.3651, 0.9976, 0.5289, 1.2410, 0.4216,
        0.7530, 0.5034, 1.1281, 0.8648, 0.6350, 1.1340, 0.6173, 0.8157, 0.8076,
        1.0702, 0.8149, 1.1333, 0.6466, 0.5437, 1.1730, 0.5262, 0.6906, 0.4524,
        1.3397, 0.9865, 0.6983, 0.5063, 0.6338, 0.8311, 0.8318, 1.1713, 0.9523,
        0.9551, 0.3630, 0.8575, 0.4180, 0.6983, 1.2790, 1.0939, 1.0235, 0.6607,
        0.5383, 0.4103])
##########################################################
decoder.blks.block2.addnorm3.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 2.2900e-01, -1.4160e-01, -1.5686e-01, -3.3762e-01,  6.5906e-02,
         9.1361e-02,  1.7971e-01, -3.7029e-04,  1.1456e-01, -3.4530e-01,
         6.9161e-02, -1.2932e-01, -1.3755e-01, -6.8786e-02,  1.8212e-01,
         1.8011e-01,  3.5224e-01,  1.4687e-01, -1.8462e-01,  9.5193e-02,
        -3.7020e-01,  3.8471e-01,  5.3401e-02,  1.1509e-01,  3.3591e-01,
        -1.8078e-01, -7.1669e-02,  3.3882e-01, -3.8774e-01, -2.6972e-01,
        -1.0770e-01,  2.6744e-01, -1.5915e-01,  2.0412e-01,  9.6844e-02,
        -3.4777e-01,  1.0970e-01, -9.5823e-02, -1.2444e-01,  3.3052e-01,
        -8.4534e-02,  1.7414e-01, -1.4463e-01, -1.5215e-01, -9.5258e-02,
         2.0895e-01,  3.4293e-01,  3.3954e-01, -3.6222e-01, -6.4092e-02,
         3.2243e-01,  2.9554e-01,  1.7434e-01, -7.4793e-02,  3.0185e-01,
        -4.2559e-01, -1.0056e-01, -1.0660e-01, -1.4862e-01, -6.3435e-02,
        -8.5398e-02, -3.6794e-01, -5.0227e-02,  1.2175e-01,  3.0310e-01,
         1.3794e-01,  3.1881e-01,  3.1551e-01, -1.4765e-01,  9.1959e-02,
         3.2588e-01,  4.1286e-03,  3.3424e-01,  8.8153e-02,  1.2485e-01,
         1.1448e-01,  1.8260e-01,  1.3584e-01, -1.4928e-01,  1.1307e-01,
         7.7641e-02, -1.0313e-01,  3.1602e-01, -3.0849e-01, -3.8161e-01,
         1.1647e-01,  2.8146e-01, -7.6680e-02,  3.2338e-01,  1.2195e-01,
        -1.1867e-01,  9.2965e-02, -3.5980e-01, -8.8485e-02, -7.9835e-02,
        -3.6003e-01, -8.4324e-02, -1.2118e-01, -8.4258e-02, -3.5007e-01,
        -9.5166e-02,  3.6097e-01,  9.4046e-02,  8.2627e-02,  3.3635e-01,
         1.3861e-01,  9.4330e-02, -1.8826e-01,  3.6127e-01,  3.0904e-01,
         1.4210e-01,  1.6478e-01,  1.6142e-01,  7.4388e-02, -9.6086e-02,
        -3.7826e-01, -3.5717e-01,  3.7525e-01, -8.1297e-02,  1.2949e-01,
        -7.9768e-02, -1.2519e-01, -3.4946e-01,  3.4531e-01,  3.6660e-01,
        -7.3843e-02,  5.8039e-02, -7.5481e-02])
##########################################################
decoder.dense.weight shape: torch.Size([287, 128])
tensor([[-0.0207,  0.0183,  0.0149,  ..., -0.0326, -0.0046,  0.0009],
        [ 0.0045, -0.0031,  0.0328,  ..., -0.0163, -0.0178,  0.0009],
        [-0.0421, -0.0191, -0.0113,  ..., -0.0412, -0.0326,  0.0048],
        ...,
        [-0.0521, -0.0237, -0.0076,  ..., -0.0282, -0.0159, -0.0307],
        [ 0.0068,  0.0470, -0.0095,  ..., -0.0211, -0.0102, -0.0450],
        [-0.0096, -0.0627,  0.0304,  ...,  0.0276, -0.0036,  0.0098]])
tensor([[ 0.2208,  0.0254,  0.3353,  ...,  0.0619,  0.0751,  0.0865],
        [ 0.1742, -0.1184, -0.1061,  ..., -0.4253,  0.2582, -0.1205],
        [-0.6265,  0.2610,  0.2439,  ..., -0.1088, -0.1836,  0.2811],
        ...,
        [-0.0637,  0.5158,  0.3598,  ..., -0.0261,  0.0560, -0.0426],
        [-0.1288,  0.1248,  0.3103,  ..., -0.0108, -0.1512, -0.0461],
        [ 0.0336, -0.2447, -0.2284,  ..., -0.0558, -0.1033,  0.0099]])
##########################################################
decoder.dense.bias shape: torch.Size([287])
tensor([ 1.4485e-02,  3.2215e-02,  8.0003e-02,  5.0856e-02, -7.4020e-02,
         3.5250e-02, -3.5490e-02,  1.7175e-03, -4.3832e-02, -6.5225e-02,
         7.9765e-02,  5.4173e-02, -1.9227e-03,  4.6947e-03, -6.4243e-04,
         1.5628e-02,  2.0877e-02,  7.3163e-02,  2.3476e-03,  4.3474e-02,
        -7.0823e-02, -7.0201e-02,  1.9186e-02,  7.2470e-02, -1.3416e-02,
         6.2355e-02, -8.2154e-02, -1.4869e-02, -7.3689e-02,  2.8569e-02,
         7.7117e-02, -1.9969e-02, -2.2707e-02,  8.0457e-02,  1.8214e-02,
        -4.3362e-02,  7.1250e-02,  8.6045e-02,  1.7885e-03, -7.7455e-02,
         5.2497e-02, -6.8517e-03,  3.9523e-02, -6.1872e-02,  1.5229e-02,
         5.4290e-02, -7.0781e-02,  8.1674e-02, -7.3462e-02, -4.1243e-02,
        -4.4624e-02,  6.3807e-02,  1.8486e-02, -7.2901e-02, -1.8866e-02,
         1.1728e-02, -4.0126e-02,  2.9309e-02,  2.8255e-02, -1.3633e-02,
         1.8520e-02,  8.2383e-02, -7.0787e-02, -8.5065e-02, -3.0082e-03,
        -4.2519e-02, -2.9242e-03, -7.2166e-02,  7.7586e-02, -5.2488e-02,
        -3.3429e-03, -1.2535e-02,  7.4015e-02, -4.3512e-02, -6.8421e-02,
        -6.7882e-02, -7.0233e-02,  2.6517e-02, -8.8110e-03,  1.9514e-02,
        -2.6349e-02, -4.3616e-02, -3.4736e-02, -7.2083e-02, -7.6065e-02,
         5.1067e-02, -7.4880e-02,  6.6085e-03,  5.8023e-03,  2.5502e-02,
        -8.6624e-04,  7.5036e-02, -3.5620e-02,  1.1010e-02,  5.7534e-02,
        -6.3139e-02, -8.2031e-02, -5.0803e-02, -2.7064e-02, -5.9750e-02,
        -7.3721e-02, -7.9191e-02, -8.2689e-02,  5.1520e-02, -1.3702e-02,
        -3.5650e-02,  6.6789e-02, -6.7696e-02, -5.9597e-02, -8.2112e-02,
         1.3884e-02, -2.3621e-02, -3.3944e-02, -7.7901e-02,  8.1718e-02,
        -8.5054e-02,  4.7494e-03, -1.8054e-02,  3.6737e-02, -6.5319e-02,
         2.6081e-02, -5.1561e-03,  3.1697e-03,  5.1517e-02,  6.1550e-02,
        -6.8281e-02, -1.3241e-02,  6.3538e-02,  1.7547e-02,  5.4526e-02,
        -6.5895e-02, -1.0394e-02, -4.3523e-02,  8.2192e-02,  7.4689e-02,
         3.5041e-02,  5.2998e-02,  6.7245e-02, -4.3653e-02, -6.5204e-02,
         1.2306e-02,  6.3253e-02, -4.2935e-02, -3.0772e-02,  7.4676e-02,
         6.1218e-02, -1.4496e-02, -3.6196e-02, -2.2623e-02,  1.2492e-02,
        -3.2323e-02,  8.7651e-02,  7.3314e-02, -8.0215e-02, -5.5671e-02,
         8.3676e-03, -1.0185e-03, -2.4269e-02, -6.3545e-02,  4.1607e-02,
         9.6253e-03, -5.0200e-03,  7.4096e-02, -4.8169e-02, -1.8158e-02,
         7.6847e-02, -4.9281e-02,  2.0578e-02,  2.2836e-02, -6.2573e-03,
         7.4581e-02,  2.0800e-02, -2.7527e-02,  4.8031e-02, -8.1166e-02,
         6.4165e-04,  3.2250e-02, -1.4399e-02, -7.5759e-02, -6.0098e-02,
        -6.9379e-02,  5.1317e-02,  3.5705e-02,  8.0370e-02, -1.8579e-02,
         4.5076e-02, -5.6241e-02, -4.8298e-02, -8.4750e-02, -2.4918e-02,
        -4.1324e-02,  8.0685e-02,  5.0803e-02,  7.3042e-02, -7.3662e-03,
        -3.7796e-02,  1.4764e-02, -7.7246e-02,  3.4047e-02,  7.6333e-02,
         3.5071e-02, -1.0625e-02, -1.6945e-02, -5.0226e-02,  1.7320e-02,
         8.0433e-02,  1.7220e-02,  1.3338e-03,  3.4546e-02, -7.8199e-02,
         4.6754e-02, -6.2434e-02, -3.8383e-02, -1.7308e-02, -7.5476e-02,
         2.0616e-02, -8.6287e-02, -5.3595e-02, -2.1190e-02,  1.5549e-02,
         4.8544e-02, -6.6446e-04,  7.2289e-02, -6.0205e-02,  5.7187e-02,
         6.0528e-02,  6.1732e-02, -6.7729e-02,  4.7188e-02, -5.7047e-02,
        -1.6402e-02,  6.1350e-02, -6.0933e-02, -4.9312e-02, -5.4572e-02,
         5.3489e-02,  3.9849e-02,  6.6679e-02, -7.7879e-02, -7.1293e-02,
         2.6161e-02, -6.9017e-02,  6.9148e-02,  3.5334e-02,  3.4529e-02,
         7.3160e-02,  8.1122e-02,  8.3316e-02,  4.4763e-02,  7.2580e-02,
         6.5961e-02, -1.4665e-02, -6.1788e-02, -3.3618e-03,  1.6644e-02,
        -3.7017e-04, -6.7966e-02, -6.3541e-02,  3.4422e-02, -2.8441e-02,
         7.2098e-02, -1.9811e-02,  7.4497e-02, -6.3168e-02, -7.6447e-02,
         2.2949e-02, -5.2431e-02,  3.5521e-02,  1.2605e-02, -1.9495e-02,
         1.2949e-02,  7.3229e-02, -2.0671e-03, -4.3060e-02, -4.3815e-02,
         1.0374e-02, -7.3478e-02, -6.0851e-02,  5.1020e-02,  5.2986e-02,
        -2.0589e-02, -1.5504e-02,  4.6945e-02, -8.5674e-02, -3.7150e-02,
         1.8461e-03, -5.3056e-05])
tensor([ 7.7749e-02, -1.2675e-01, -4.8742e-01, -1.3268e-01,  3.0492e-01,
         5.3441e-01, -3.2518e-01,  3.1947e-01, -1.2624e-01,  4.3016e-01,
        -1.3081e-02, -4.6589e-02, -3.6612e-02,  3.8041e-01,  1.0668e-03,
        -3.5179e-01,  1.5558e-01,  1.5098e-01,  4.2431e-01,  5.6189e-01,
        -7.8879e-02, -4.5877e-01, -4.7325e-01,  5.3088e-01,  3.0312e-01,
         4.7865e-02, -3.2149e-01,  5.0914e-01,  1.0137e-01,  2.7481e-01,
        -2.4469e-02,  2.5208e-01,  4.1770e-01,  2.0056e-01,  2.1455e-01,
         2.2007e-01,  6.1080e-01,  6.0831e-01,  1.9832e-01, -3.0311e-01,
         5.1985e-02,  4.9114e-01, -7.4198e-02, -8.6767e-02,  5.0857e-02,
        -2.2238e-01, -7.1791e-02,  4.1485e-01,  1.3515e-01, -4.3291e-01,
        -5.9524e-02,  2.2559e-01,  1.3188e-01, -2.5039e-01,  3.0677e-01,
        -1.6283e-01,  4.3625e-01,  6.0491e-02, -1.0590e-01,  1.0194e-01,
         4.3591e-01,  5.2710e-01,  3.3222e-01,  1.0712e-02,  2.6815e-02,
         4.0373e-01,  6.6099e-02,  2.8514e-01,  5.1597e-01, -1.0454e-01,
        -4.2841e-01,  3.5848e-01,  4.9262e-01, -3.5548e-01, -9.5069e-02,
         1.2480e-01, -3.2358e-01, -3.8674e-01,  2.9246e-01, -2.4672e-01,
         2.1425e-01, -1.6056e-01,  5.0896e-02,  3.3683e-01,  1.8389e-01,
        -4.2254e-01,  4.7324e-01,  5.7892e-01,  4.6278e-01, -3.0682e-01,
        -3.8112e-02,  5.9346e-02, -5.2888e-01,  2.8979e-01, -3.9935e-01,
         1.3057e-01, -3.0432e-01,  6.7810e-02, -1.1411e-01,  1.9635e-01,
        -1.4871e-01,  2.7903e-01, -2.9788e-01,  1.4834e-01, -1.7203e-01,
        -1.2172e-01, -1.5048e-01,  4.1520e-01, -4.6321e-01,  2.3881e-02,
         1.0395e-01,  1.1078e-01, -4.7205e-01, -1.3493e-01,  6.0166e-01,
         4.3583e-01, -3.1374e-01,  9.5220e-02,  5.5278e-01, -9.9499e-02,
         1.2664e-01,  5.3622e-02,  1.1123e-01,  5.3056e-01, -2.4266e-02,
        -2.5460e-01,  4.7959e-01,  2.0510e-01, -8.4712e-02, -3.8631e-01,
        -4.0674e-01,  9.2626e-02, -1.4011e-01,  3.1634e-01,  5.7322e-01,
         6.6433e-02,  4.3090e-02,  4.5077e-01, -4.0800e-01,  1.8228e-01,
        -7.1587e-03,  1.5941e-01,  5.5517e-01, -5.7011e-01,  5.8252e-01,
        -4.9642e-01, -3.6530e-01, -8.6673e-02,  4.9938e-01,  8.9682e-02,
         3.9646e-01,  1.4934e-01, -4.3579e-01, -6.2925e-01,  3.6798e-02,
         5.3437e-01, -1.9002e-01,  3.9092e-01,  1.0932e-01, -3.4160e-01,
        -1.7754e-01,  2.6848e-01,  4.7165e-01,  1.6525e-01, -1.1096e-02,
        -2.3194e-01, -4.5755e-01, -4.8208e-01,  1.3840e-01,  4.9076e-01,
         2.4477e-02, -5.0755e-01, -3.1772e-01, -3.1513e-01, -6.1403e-01,
         5.1267e-01, -2.2338e-01, -3.1893e-01, -3.8995e-01,  1.6975e-01,
        -5.5292e-01,  4.8682e-01,  1.8550e-01, -1.9228e-02, -9.9411e-02,
         2.7253e-01,  4.0984e-01,  4.3476e-02,  2.1024e-01,  3.4040e-01,
         3.5576e-01, -2.7808e-01,  1.3768e-01, -2.9540e-01,  5.3872e-04,
         1.7485e-03,  3.3145e-01, -1.5530e-01,  5.1491e-01,  3.2576e-01,
         6.6958e-02,  1.5291e-01, -1.8243e-01,  2.3110e-01,  1.3109e-02,
         1.8770e-03, -4.4712e-01, -2.3299e-01, -5.4404e-01, -9.7377e-02,
        -4.7568e-01, -3.0924e-01,  2.7279e-01,  5.3556e-02, -3.1570e-01,
        -4.9157e-01,  1.9624e-01,  3.5406e-01, -2.9993e-01, -3.8797e-01,
         4.9539e-01,  4.7405e-01,  1.3273e-01,  2.8920e-02, -1.8810e-01,
        -9.1584e-02,  3.8529e-01,  4.1242e-01,  8.7103e-02, -5.8738e-01,
         1.8108e-01, -8.5364e-02,  3.1855e-01,  2.6199e-01, -3.4381e-01,
        -4.3274e-01, -2.8093e-01,  5.7887e-02,  1.0291e-01, -8.0768e-02,
        -4.5829e-01, -1.6065e-01,  3.5414e-01,  2.1557e-01,  4.1048e-01,
        -3.3604e-01,  4.7095e-01, -1.6562e-01,  2.5206e-01,  2.2600e-01,
        -2.7234e-01, -4.6445e-01,  5.8012e-02, -3.7410e-01,  1.2604e-01,
         2.4041e-01, -1.9345e-01, -1.3019e-01,  4.7290e-02,  2.9496e-01,
        -5.4195e-03, -5.1656e-01, -2.9966e-01,  4.5006e-01, -5.9992e-01,
        -1.2705e-01,  6.3029e-02,  2.9549e-01,  2.5736e-01, -2.6170e-01,
         5.4242e-01,  5.8597e-01,  2.4879e-01,  1.3194e-01, -3.3095e-01,
        -3.6687e-01,  4.9998e-01,  2.7075e-01, -2.4967e-01,  1.7027e-01,
         1.7797e-01,  5.5026e-01,  3.0396e-01, -9.0152e-03, -2.7498e-01,
        -4.5964e-01,  2.6256e-02])
##########################################################
decoder.dense_blks.dense0.dense.weight shape: torch.Size([287, 287])
tensor([[-0.0038,  0.0106,  0.0105,  ..., -0.0134, -0.0279, -0.0359],
        [ 0.0060, -0.0225,  0.0409,  ..., -0.0537,  0.0191,  0.0354],
        [ 0.0056, -0.0379, -0.0123,  ...,  0.0624, -0.0407, -0.0542],
        ...,
        [-0.0305,  0.0123,  0.0414,  ...,  0.0272,  0.0193,  0.0033],
        [ 0.0350,  0.0018, -0.0397,  ..., -0.0108,  0.0088,  0.0083],
        [ 0.0155, -0.0373,  0.0012,  ...,  0.0133, -0.0441,  0.0016]])
tensor([[ 0.0554,  0.1372,  0.1142,  ..., -0.2975, -0.3828, -0.3838],
        [ 0.1217,  0.3246,  0.4043,  ...,  0.2416,  0.2674, -0.3196],
        [ 0.3475,  0.0265,  0.1633,  ...,  0.1931,  0.2822, -0.3390],
        ...,
        [ 0.0421,  0.3591,  0.1640,  ..., -0.1568,  0.3803, -0.0717],
        [ 0.3723,  0.2971,  0.3741,  ..., -0.0164,  0.0672, -0.2967],
        [ 0.3877,  0.0853,  0.3684,  ...,  0.2822,  0.2016, -0.3681]])
##########################################################
decoder.dense_blks.dense0.dense.bias shape: torch.Size([287])
tensor([ 0.0545, -0.0278, -0.0250,  0.0532,  0.0343, -0.0384,  0.0038,  0.0308,
        -0.0201,  0.0440,  0.0464,  0.0316, -0.0099, -0.0345,  0.0191,  0.0058,
         0.0308,  0.0198, -0.0386,  0.0536, -0.0237,  0.0376, -0.0522, -0.0258,
        -0.0256,  0.0002,  0.0426, -0.0262,  0.0082, -0.0399,  0.0239, -0.0205,
         0.0305, -0.0354, -0.0249,  0.0016, -0.0239,  0.0013, -0.0294,  0.0233,
        -0.0150,  0.0447,  0.0507, -0.0011, -0.0556,  0.0277,  0.0055, -0.0499,
         0.0330,  0.0103, -0.0160,  0.0369,  0.0015, -0.0579, -0.0462, -0.0474,
        -0.0403,  0.0514,  0.0454, -0.0082, -0.0262,  0.0294,  0.0293, -0.0054,
         0.0421, -0.0029,  0.0420,  0.0085,  0.0293,  0.0497, -0.0175,  0.0276,
         0.0425,  0.0177,  0.0494, -0.0408,  0.0352,  0.0293,  0.0308,  0.0008,
         0.0317, -0.0355,  0.0065, -0.0347, -0.0458,  0.0564, -0.0031, -0.0224,
        -0.0548, -0.0049,  0.0478, -0.0440, -0.0371,  0.0477,  0.0039,  0.0338,
         0.0535,  0.0273, -0.0264, -0.0095,  0.0427,  0.0242, -0.0364,  0.0214,
        -0.0266,  0.0480, -0.0265, -0.0148, -0.0425,  0.0444,  0.0525,  0.0334,
        -0.0524, -0.0376, -0.0545,  0.0069,  0.0466, -0.0391,  0.0363, -0.0132,
        -0.0145,  0.0397,  0.0110, -0.0151, -0.0203, -0.0472,  0.0547,  0.0342,
        -0.0480,  0.0388,  0.0045,  0.0163, -0.0314,  0.0174, -0.0121, -0.0363,
         0.0584,  0.0520,  0.0241,  0.0404,  0.0005, -0.0508,  0.0174, -0.0023,
        -0.0306, -0.0282,  0.0224,  0.0303, -0.0285,  0.0012,  0.0514,  0.0017,
         0.0180,  0.0110, -0.0144, -0.0064,  0.0480,  0.0247,  0.0193,  0.0096,
        -0.0120,  0.0439, -0.0168,  0.0302, -0.0249, -0.0070,  0.0006,  0.0231,
         0.0563,  0.0564, -0.0582,  0.0267, -0.0130, -0.0583,  0.0530,  0.0368,
        -0.0483,  0.0046,  0.0098, -0.0345,  0.0016, -0.0379, -0.0004, -0.0324,
        -0.0571, -0.0172, -0.0138, -0.0119, -0.0367,  0.0055, -0.0235, -0.0474,
        -0.0048,  0.0030, -0.0492, -0.0522, -0.0332,  0.0431,  0.0415, -0.0252,
        -0.0365, -0.0397, -0.0408,  0.0006, -0.0236,  0.0384, -0.0249,  0.0079,
        -0.0418, -0.0584, -0.0220, -0.0330, -0.0257, -0.0019,  0.0008,  0.0491,
         0.0009,  0.0113, -0.0414, -0.0392, -0.0205, -0.0031, -0.0228,  0.0129,
        -0.0093, -0.0035, -0.0062, -0.0511, -0.0432, -0.0029,  0.0451,  0.0230,
         0.0574,  0.0167,  0.0397,  0.0470,  0.0049, -0.0209, -0.0115,  0.0036,
         0.0380,  0.0153, -0.0168, -0.0412,  0.0420, -0.0403,  0.0531,  0.0229,
        -0.0534,  0.0314, -0.0065, -0.0196,  0.0551, -0.0147,  0.0389,  0.0323,
        -0.0493,  0.0561, -0.0470, -0.0290, -0.0151,  0.0274, -0.0027, -0.0083,
         0.0158, -0.0162, -0.0048, -0.0054,  0.0457, -0.0036,  0.0074, -0.0201,
        -0.0588,  0.0370, -0.0385,  0.0433, -0.0237, -0.0005,  0.0401,  0.0237,
         0.0191,  0.0134,  0.0458, -0.0077, -0.0167,  0.0281, -0.0072])
tensor([-0.2534,  0.0685, -0.3284,  0.2627,  0.1038, -0.3065,  0.2121, -0.2543,
         0.1347, -0.2222, -0.2186, -0.3143, -0.2643,  0.0928,  0.1854,  0.2049,
        -0.2667, -0.2347, -0.0223,  0.1027, -0.3148,  0.1744, -0.1632,  0.1505,
        -0.3393, -0.3513,  0.0489,  0.1391, -0.3043,  0.1555, -0.3738,  0.0550,
        -0.1701, -0.0915, -0.2941,  0.2003,  0.1281, -0.2903,  0.1190,  0.0467,
        -0.3160,  0.2382, -0.0163,  0.1747, -0.3393, -0.2448,  0.0741,  0.1728,
         0.2323, -0.3084, -0.2305, -0.3207,  0.1398, -0.3808,  0.1517, -0.1502,
        -0.4122, -0.2798,  0.2065,  0.1817, -0.3136,  0.2368,  0.2440, -0.2707,
         0.2480, -0.3484, -0.3029,  0.1519,  0.1327, -0.0386, -0.3501, -0.0198,
        -0.2510, -0.2937, -0.2538, -0.3149, -0.3042, -0.3396,  0.2435,  0.1495,
         0.1681, -0.2795,  0.1587, -0.0393,  0.0990,  0.0814, -0.2732, -0.4063,
        -0.1284, -0.3198, -0.3033,  0.0258, -0.1021, -0.2037,  0.2164, -0.2650,
         0.1012, -0.2574, -0.3803, -0.0365,  0.1281,  0.2416, -0.1328, -0.3405,
         0.1819,  0.2370, -0.3941,  0.1444, -0.1734, -0.4220,  0.0024, -0.2544,
        -0.3689,  0.0713, -0.1497,  0.2224, -0.3205, -0.3231,  0.2389, -0.3207,
         0.2098, -0.2381,  0.1516, -0.3284, -0.2862, -0.2966,  0.2684,  0.2487,
        -0.4161,  0.1989,  0.2114,  0.0455,  0.0255,  0.2310,  0.1605, -0.1202,
         0.2751, -0.3200, -0.0833, -0.2264,  0.0257,  0.0780, -0.2622, -0.3728,
         0.1850,  0.1882, -0.3635,  0.2175,  0.1602, -0.2915,  0.2614,  0.0974,
        -0.2606, -0.2787, -0.2764, -0.3666, -0.3225, -0.3087, -0.2370,  0.2049,
         0.0746, -0.3027, -0.0141, -0.2605, -0.3031,  0.1822, -0.3048,  0.0436,
        -0.0714, -0.2235,  0.0701, -0.3455,  0.0271,  0.1018, -0.2282, -0.3160,
        -0.3457,  0.1841,  0.2058, -0.3266, -0.2842, -0.1534, -0.3462, -0.0706,
        -0.1875, -0.4591, -0.3313,  0.1420,  0.1081,  0.1674, -0.2916, -0.3239,
        -0.3010,  0.2188,  0.1222, -0.0434, -0.3058,  0.1648, -0.2995, -0.3473,
        -0.3440,  0.1664,  0.1449, -0.2771, -0.2752, -0.2536, -0.3958, -0.2341,
        -0.1129,  0.1481, -0.3118, -0.3060,  0.0519, -0.2557,  0.2128, -0.2173,
        -0.4191,  0.1944,  0.0082,  0.1201, -0.3850,  0.1245, -0.2738,  0.1119,
        -0.2776, -0.3208, -0.3478, -0.0141,  0.1190, -0.4317,  0.2135,  0.0679,
        -0.2336, -0.3321, -0.3320,  0.1307, -0.2952,  0.1377, -0.0021, -0.0791,
         0.0548,  0.2190, -0.3752, -0.3200, -0.2550,  0.1335,  0.2672, -0.3020,
         0.0705, -0.2421, -0.0126,  0.1811, -0.2551, -0.2589, -0.2065, -0.0827,
        -0.3434,  0.0672,  0.0460, -0.1690, -0.3373, -0.3361, -0.3346,  0.1825,
         0.0182, -0.3396,  0.1504, -0.0039, -0.2043, -0.2592, -0.2453, -0.3320,
        -0.4187,  0.0765, -0.5119,  0.1299, -0.3155,  0.1303,  0.2030,  0.2270,
        -0.4813,  0.1565, -0.2340,  0.1158, -0.3205,  0.1560,  0.1028])
##########################################################
decoder.dense_blks.dense1.dense.weight shape: torch.Size([287, 287])
tensor([[-0.0163, -0.0288, -0.0112,  ...,  0.0238,  0.0105, -0.0087],
        [ 0.0052, -0.0321,  0.0191,  ...,  0.0287, -0.0124,  0.0150],
        [-0.0142, -0.0078, -0.0699,  ..., -0.0269, -0.0091,  0.0010],
        ...,
        [-0.0167,  0.0365,  0.0146,  ..., -0.0106,  0.0227, -0.0165],
        [ 0.0041, -0.0169,  0.0292,  ..., -0.0218, -0.0170, -0.0138],
        [ 0.0090,  0.0021, -0.0081,  ..., -0.0336, -0.0045,  0.0244]])
tensor([[-0.2453, -0.2586,  0.2178,  ..., -0.2047, -0.2193, -0.2384],
        [-0.2248, -0.2621, -0.2109,  ..., -0.2014, -0.2425, -0.2150],
        [ 0.1803,  0.0317,  0.0891,  ...,  0.1323,  0.1114,  0.0602],
        ...,
        [-0.2466, -0.1935,  0.2445,  ..., -0.2406, -0.2068, -0.2464],
        [ 0.2045, -0.3890,  0.1555,  ...,  0.1638,  0.0235,  0.0426],
        [ 0.2127, -0.3634,  0.1791,  ..., -0.0310,  0.1728, -0.0441]])
##########################################################
decoder.dense_blks.dense1.dense.bias shape: torch.Size([287])
tensor([-2.3843e-02, -6.4110e-03, -2.5859e-02,  4.0229e-03, -3.8234e-02,
         2.4266e-02,  2.3374e-04,  2.9305e-02,  3.6892e-02, -4.1563e-02,
        -5.4935e-02, -3.6645e-03,  4.7360e-02, -4.1798e-02, -3.5099e-02,
        -1.9686e-02,  4.3191e-05, -2.6712e-02,  1.4545e-02,  2.8784e-02,
        -3.3782e-03,  4.3781e-02,  5.1936e-02,  5.5796e-02, -3.6430e-02,
         1.5303e-02,  5.0802e-02,  5.7725e-02, -2.7027e-02,  5.4516e-02,
         4.8050e-02,  2.1159e-02, -1.9166e-02,  4.2783e-02,  3.1438e-02,
        -3.8612e-02, -2.3364e-02,  4.4115e-02,  4.2895e-02, -3.8500e-02,
         1.9271e-02, -4.9468e-02, -4.5753e-02,  2.6288e-02, -4.5166e-03,
        -2.4180e-02, -5.7705e-02, -4.5517e-02,  2.1806e-02, -3.8301e-02,
        -4.5158e-02,  2.1007e-02,  3.0110e-02,  1.0099e-02, -1.2273e-02,
        -5.6963e-02,  5.5360e-02,  2.6698e-03,  3.8215e-03, -3.0393e-04,
        -1.2801e-02,  2.9917e-02,  1.6771e-02, -3.9012e-02, -2.0524e-02,
        -2.7460e-02, -9.4579e-03, -4.0257e-02,  6.1430e-03,  2.3895e-02,
         2.7294e-02, -2.1400e-02, -2.0629e-02, -1.8339e-03, -5.7984e-02,
        -5.2052e-02, -2.2180e-02,  2.5043e-02,  3.5241e-02,  5.1906e-02,
         1.5632e-02,  5.6086e-02,  5.4487e-02,  2.9907e-02,  3.7311e-04,
         5.7258e-02,  4.8155e-02, -1.4890e-02,  1.6945e-02, -4.8112e-04,
        -4.1357e-03, -2.6368e-02,  4.9657e-02, -4.0805e-02,  4.3475e-02,
        -4.6142e-02, -3.5708e-02, -3.2889e-02, -2.0960e-02, -1.6302e-02,
         6.4559e-03,  1.2058e-02, -4.1882e-02,  5.0623e-02,  3.6838e-02,
         1.4963e-03, -5.7591e-02, -8.9746e-03, -4.1981e-02,  2.5789e-02,
        -5.5087e-02, -5.3822e-02,  4.5359e-02, -2.2286e-02,  2.5770e-02,
         5.1260e-04, -1.1905e-02, -5.7507e-02, -2.8145e-02,  2.9077e-02,
        -2.3882e-02, -1.3330e-02,  2.9808e-02, -3.6587e-02,  3.7193e-02,
         3.9242e-02, -4.2604e-02, -3.3075e-02,  5.0972e-02, -4.5982e-02,
         2.9351e-02, -4.1635e-03,  1.1000e-03, -1.8706e-02,  5.5226e-02,
        -3.7941e-02,  4.2560e-02, -3.4027e-02,  7.0585e-03,  9.3101e-03,
         5.4138e-03, -1.6948e-02,  5.1916e-02,  1.9321e-02, -5.2040e-02,
        -4.3026e-02,  6.7972e-03,  5.5021e-02,  3.3097e-02, -2.1677e-02,
         5.8010e-02, -2.9709e-03,  3.2904e-02, -4.0990e-02, -5.5945e-02,
        -4.3409e-02, -8.9540e-03, -1.2016e-02,  4.3642e-02, -5.4243e-02,
        -3.8394e-02,  5.8760e-02,  2.7525e-02,  4.9522e-03, -2.1203e-02,
        -2.5949e-02, -4.5183e-02, -2.9687e-02, -2.9313e-02, -3.0192e-02,
        -2.0149e-02,  2.1708e-02,  3.7372e-02,  1.7897e-03,  2.0781e-02,
        -3.1560e-02, -1.2966e-02,  8.6405e-03,  1.7465e-02,  4.9839e-02,
        -1.9900e-02,  2.7570e-02, -5.1582e-02, -4.3022e-02, -8.6129e-04,
         3.8342e-02,  4.0825e-02, -1.5777e-02, -3.6243e-03,  3.8083e-02,
         9.8493e-03, -1.7615e-02, -5.8477e-02,  4.4765e-02, -1.7369e-02,
         3.7618e-02, -5.5858e-02,  8.5363e-03,  3.1700e-04,  5.7690e-03,
        -3.7143e-02,  3.8202e-02,  2.4050e-02, -4.4024e-02, -2.0461e-02,
         2.0630e-03,  5.5239e-02, -2.2206e-02, -1.1096e-02,  1.4631e-02,
         4.0878e-02,  9.6727e-03, -8.4251e-04, -5.4662e-02, -5.4613e-02,
        -1.8406e-03,  5.7337e-02,  5.6643e-04, -2.7921e-02, -9.7551e-03,
        -8.6369e-04, -3.1651e-02,  3.9574e-02,  2.0508e-02,  4.1594e-02,
         5.5685e-03,  4.3013e-02,  5.9539e-03, -5.0708e-02,  4.3917e-02,
         1.5576e-02, -7.6884e-03, -2.8640e-02,  2.5918e-02, -3.0225e-02,
        -4.8175e-02, -2.7603e-02, -4.1488e-02, -5.7596e-02,  1.4411e-02,
        -2.8767e-03, -5.7509e-02,  3.2550e-02, -4.3381e-02,  3.2979e-02,
         4.7184e-02,  5.6426e-02, -4.7324e-02, -4.4014e-02, -3.3660e-02,
         5.7293e-02, -3.9303e-02,  5.0946e-02,  5.5629e-03, -5.3562e-02,
         9.7007e-03,  4.8916e-02, -5.1380e-02,  4.9500e-02,  8.8902e-03,
        -3.8792e-02, -2.6713e-02, -4.3088e-03,  4.4493e-02,  5.4127e-02,
        -3.0590e-02, -5.3373e-02, -5.7183e-02,  1.6432e-02, -3.4520e-02,
        -2.0591e-02,  3.7495e-02,  2.6561e-02, -4.1530e-03,  4.1497e-02,
         1.6156e-02,  1.6764e-02,  5.7855e-02,  1.6193e-02, -3.6289e-02,
        -5.4572e-02,  2.3763e-02,  2.4093e-02,  1.0857e-02, -3.2035e-02,
         1.0101e-02,  4.0009e-02])
tensor([-0.2538, -0.2364, -0.1790, -0.1524, -0.0830, -0.2058, -0.1385, -0.2007,
        -0.0567, -0.2226, -0.2850,  0.7236, -0.0143,  0.3978, -0.2817, -0.2497,
        -0.2300, -0.2567, -0.2155, -0.2012, -0.2334, -0.1862, -0.1781, -0.0421,
        -0.2665, -0.1536, -0.1792, -0.1723, -0.1940, -0.1755, -0.0328, -0.2089,
        -0.1941, -0.1872, -0.0902, -0.3236, -0.1891, -0.0377, -0.0259,  0.4962,
         0.0406, -0.2795, -0.2758, -0.2037, -0.2345, -0.1790, -0.1665, -0.2755,
        -0.2082, -0.2683, -0.2353, -0.2090, -0.0542, -0.0326, -0.2423, -0.2091,
         0.0321, -0.2274, -0.2259, -0.2303, -0.2428, -0.2001, -0.2133, -0.1545,
        -0.2617, -0.1736, -0.1641, -0.2496, -0.2239, -0.2061,  0.0734, -0.2514,
        -0.1714, -0.1687, -0.2879, -0.2820, -0.2522, -0.0740, -0.0403, -0.0381,
        -0.2144,  0.0242,  0.0476, -0.2001, -0.1706, -0.1728, -0.0153, -0.1739,
        -0.2131, -0.2305, -0.2342, -0.1392, -0.1804, -0.1997, -0.1865, -0.2762,
        -0.1911, -0.1867, -0.1764, -0.1358,  0.5289, -0.2180, -0.2719, -0.1794,
        -0.1932, -0.2426,  0.2009, -0.1617, -0.2303, -0.2042, -0.2850,  0.1120,
        -0.1847, -0.2523, -0.0392, -0.1405, -0.1572, -0.1749, -0.1707, -0.1998,
         0.5398, -0.2433, -0.0712, -0.2185, -0.1928, -0.0148, -0.1689, -0.1887,
        -0.1791, -0.0190, -0.0360, -0.2760, -0.1695, -0.1370, -0.1748, -0.0708,
        -0.1875, -0.2640, -0.1420, -0.1504, -0.1216, -0.1741, -0.0390, -0.2107,
        -0.2820, -0.1955, -0.1455, -0.0489, -0.1969, -0.2070,  0.0321, -0.2330,
        -0.1971, -0.2713, -0.2403, -0.2734, -0.2390, -0.2420, -0.1864, -0.2807,
        -0.2683, -0.1713, -0.2025, -0.2251,  0.6321, -0.1741, -0.4140, -0.1965,
        -0.1820, -0.1748, -0.1868, -0.2092, -0.0356,  0.6953, -0.0245, -0.2887,
        -0.2430, -0.2214, -0.2126, -0.1802, -0.2161, -0.2025, -0.2120, -0.2027,
        -0.1064,  0.0289, -0.1892, -0.2458, -0.2515, -0.0519, -0.0634, -0.2476,
        -0.2885, -0.1853, -0.1776,  0.0450,  0.2243, -0.1412, -0.2297, -0.2243,
        -0.2672, -0.0120, -0.2060, -0.0693, -0.1915, -0.1565,  0.0201, -0.2522,
        -0.3833, -0.2154, -0.1891, -0.2203, -0.1312, -0.2847, -0.2843, -0.1603,
        -0.0527, -0.2295, -0.2579, -0.1741, -0.2309, -0.2617, -0.1904, -0.0949,
        -0.1884, -0.2515, -0.1870, -0.2270, -0.2807, -0.0256, -0.1305, -0.1670,
        -0.1859, -0.0653, -0.1789, -0.2782, -0.1911, -0.2365, -0.4292, -0.2156,
        -0.1436, -0.2195, -0.2017, -0.2734, -0.0697,  0.0252, -0.0198, -0.1995,
        -0.0934, -0.2650, -0.1727,  0.5171, -0.1791, -0.2245, -0.3065, -0.2203,
        -0.0198, -0.2465, -0.0329, -0.1349, -0.2688, -0.2567, -0.2343, -0.0134,
        -0.1759, -0.2606, -0.2179, -0.2872, -0.0171, -0.2091, -0.2506, -0.0402,
        -0.2035, -0.1610, -0.0387, -0.2143, -0.0914, -0.0152, -0.0331, -0.2663,
        -0.2846, -0.2063,  0.0258, -0.2192, -0.2621, -0.1475, -0.0563])
##########################################################
decoder.dense_blks.dense2.dense.weight shape: torch.Size([287, 287])
tensor([[-0.0041, -0.0135,  0.0123,  ..., -0.0139, -0.0133,  0.0055],
        [-0.0489, -0.0209,  0.0064,  ...,  0.0148,  0.0273, -0.0444],
        [ 0.0236,  0.0186,  0.0158,  ..., -0.0218, -0.0043, -0.0030],
        ...,
        [-0.0029,  0.0193, -0.0293,  ...,  0.0237,  0.0132,  0.0024],
        [-0.0019,  0.0222,  0.0312,  ..., -0.0465,  0.0122,  0.0102],
        [ 0.0281, -0.0140,  0.0266,  ..., -0.0105,  0.0268, -0.0253]])
tensor([[-0.2022, -0.2432, -0.2167,  ..., -0.2428, -0.2432, -0.2244],
        [-0.0489, -0.0209,  0.0064,  ...,  0.0148,  0.0273, -0.0444],
        [-0.2059, -0.2114, -0.2140,  ..., -0.2516, -0.2343, -0.2330],
        ...,
        [-0.2327, -0.2107, -0.2592,  ..., -0.2063, -0.2168, -0.2276],
        [-0.2318, -0.2078, -0.1987,  ..., -0.2765, -0.2178, -0.2198],
        [ 0.0281, -0.0140,  0.0266,  ..., -0.0105,  0.0268, -0.0253]])
##########################################################
decoder.dense_blks.dense2.dense.bias shape: torch.Size([287])
tensor([-0.0325, -0.0469, -0.0076,  0.0135,  0.0237,  0.0316,  0.0106, -0.0086,
        -0.0415,  0.0490,  0.0371, -0.0169, -0.0097,  0.0365, -0.0328,  0.0142,
        -0.0582,  0.0581,  0.0207, -0.0138, -0.0306,  0.0342, -0.0059, -0.0247,
        -0.0383,  0.0236,  0.0006,  0.0276, -0.0333, -0.0515,  0.0106,  0.0506,
         0.0475,  0.0380, -0.0196, -0.0587,  0.0471,  0.0123,  0.0306,  0.0126,
        -0.0420,  0.0186,  0.0157,  0.0506,  0.0395, -0.0296,  0.0336, -0.0081,
        -0.0231, -0.0007,  0.0489, -0.0322,  0.0136,  0.0460, -0.0374,  0.0496,
         0.0036, -0.0314,  0.0095,  0.0036,  0.0503, -0.0240, -0.0303, -0.0439,
         0.0498, -0.0524, -0.0081, -0.0054,  0.0338,  0.0073, -0.0544,  0.0109,
         0.0415,  0.0047, -0.0371,  0.0022,  0.0188,  0.0209, -0.0141, -0.0180,
         0.0015, -0.0516,  0.0447, -0.0198, -0.0570, -0.0582, -0.0319, -0.0483,
        -0.0353,  0.0588, -0.0173,  0.0546, -0.0155, -0.0112, -0.0436,  0.0552,
         0.0050,  0.0302,  0.0255, -0.0460,  0.0181,  0.0111,  0.0562,  0.0139,
         0.0336,  0.0513, -0.0132,  0.0439,  0.0219, -0.0513,  0.0453,  0.0492,
         0.0587,  0.0192,  0.0483, -0.0377,  0.0531, -0.0026, -0.0222, -0.0181,
         0.0436, -0.0385,  0.0301,  0.0338,  0.0532,  0.0411, -0.0281,  0.0543,
         0.0428, -0.0053,  0.0523, -0.0366,  0.0356,  0.0301, -0.0086, -0.0539,
        -0.0570, -0.0530,  0.0250,  0.0031,  0.0184,  0.0057,  0.0247, -0.0096,
        -0.0423,  0.0512,  0.0059, -0.0285,  0.0369, -0.0151, -0.0091, -0.0187,
         0.0199, -0.0103, -0.0428,  0.0410, -0.0541,  0.0004, -0.0270, -0.0228,
        -0.0536, -0.0433,  0.0257,  0.0414,  0.0232, -0.0432,  0.0526,  0.0241,
         0.0312,  0.0581, -0.0246,  0.0353, -0.0246, -0.0377,  0.0442,  0.0513,
         0.0546, -0.0313,  0.0093, -0.0521, -0.0100, -0.0538,  0.0384, -0.0513,
        -0.0152, -0.0073,  0.0085, -0.0412,  0.0578,  0.0488,  0.0297, -0.0094,
         0.0161,  0.0372, -0.0554, -0.0440,  0.0493, -0.0464, -0.0578, -0.0214,
         0.0356,  0.0234, -0.0188, -0.0176,  0.0412,  0.0195,  0.0588, -0.0387,
         0.0206, -0.0337,  0.0051, -0.0054,  0.0229, -0.0236,  0.0017, -0.0440,
         0.0228, -0.0006, -0.0364,  0.0165, -0.0319, -0.0073, -0.0170, -0.0033,
        -0.0313,  0.0393,  0.0415, -0.0307, -0.0222, -0.0490, -0.0539,  0.0288,
         0.0476, -0.0271,  0.0171, -0.0084,  0.0229,  0.0111, -0.0249,  0.0153,
         0.0228,  0.0029,  0.0403, -0.0026, -0.0401, -0.0577,  0.0505,  0.0133,
        -0.0246, -0.0531, -0.0564,  0.0299,  0.0497, -0.0230,  0.0373, -0.0347,
         0.0572, -0.0386,  0.0370, -0.0352, -0.0349, -0.0132,  0.0179,  0.0476,
         0.0572,  0.0429, -0.0081,  0.0453,  0.0149, -0.0323, -0.0100,  0.0016,
        -0.0178,  0.0073, -0.0169,  0.0408,  0.0335,  0.0129,  0.0099, -0.0219,
        -0.0170,  0.0342, -0.0584, -0.0546,  0.0280,  0.0266, -0.0512])
tensor([-0.2625, -0.7249, -0.2377,  0.1669,  0.9994,  1.1538,  1.2753,  1.3581,
         0.9289,  0.6967,  0.4824,  0.5787,  0.8153,  0.6964, -0.2627,  0.2371,
         0.2877,  0.4740,  0.3214,  0.2165, -0.2606,  0.3346,  0.5147,  0.4089,
        -0.2682, -0.2064,  0.1410, -0.2025, -0.1998, -0.2217, -0.2194, -0.1794,
        -0.1825, -0.1920, -0.0196, -0.0587, -0.1829, -0.2178, -0.1995, -0.2174,
        -0.2131, -0.2115, -0.2144, -0.1794, -0.1905, -0.2595, -0.1964, -0.2381,
        -0.2528, -0.2307, -0.1811, -0.0322, -0.2164, -0.1841, -0.0374, -0.1804,
        -0.2265, -0.0314, -0.2206, -0.2265, -0.1797, -0.0240, -0.2594, -0.2730,
        -0.1802, -0.0524, -0.2381, -0.5626, -0.1962, -0.2228, -0.3743, -0.2191,
        -0.1886, -0.2253, -0.0371, -0.2279, -0.2112, -0.2091, -0.2441, -0.2480,
        -0.2286, -0.0516, -0.1853, -0.2498, -0.0570, -0.0582, -0.3518, -0.0483,
        -0.3388, -0.1712, -0.0173, -0.1754, -0.0155, -0.2412, -0.0436, -0.1749,
        -0.2250, -0.1998, -0.2045, -0.0460, -0.2119, -0.2189, -0.1738, -0.2161,
        -0.1965, -0.1788, -0.0132, -0.1861, -0.2081, -0.0513, -0.1848, -0.1808,
        -0.1713, -0.2108, -0.1818, -0.3240, -0.1769, -0.2326, -0.2521, -0.2479,
        -0.1864, -0.7165, -0.2000, -0.1962, -0.1769, -0.1889, -0.0281, -0.1757,
        -0.1873, -0.2353, -0.1777, -0.0366, -0.1944, -0.1999, -0.2384, -0.0539,
        -0.3433, -0.0530, -0.2050, -0.2269, -0.2116, -0.2244, -0.2053, -0.2396,
        -0.0423, -0.1788, -0.2241, -0.2581, -0.1931, -0.2451, -0.2391, -0.0187,
        -0.2101, -0.2403, -0.0428, -0.1891, -0.0541, -0.2296, -0.0270, -0.0228,
        -0.3735, -0.4083, -0.2044, -0.1886, -0.2068, -0.3295, -0.1774, -0.2059,
        -0.1988, -0.1719, -0.2545, -0.1948, -0.0246, -0.2677, -0.1858, -0.1787,
        -0.1754, -0.0313, -0.2208, -0.0521, -0.2401, -0.0538, -0.1916, -0.0513,
        -0.2453, -0.2373, -0.2215, -0.0412, -0.1722, -0.1812, -0.2003, -0.0094,
        -0.2140, -0.1928, -0.0554, -0.3304, -0.1807, -0.3328, -0.2877, -0.2514,
        -0.1944, -0.2066, -0.2488, -0.2476, -0.1889, -0.2105, -0.1712, -0.3742,
        -0.2095, -0.3201, -0.2249, -0.2355, -0.2071, -0.2536, -0.2283, -0.6835,
        -0.2072, -0.2306, -0.0364, -0.2136, -0.6863, -0.2373, -0.2470, -0.2333,
        -0.0313, -0.1907, -0.1885, -0.3956, -0.2521, -0.3845, -0.3738, -0.2013,
        -0.1825, -0.0271, -0.2129, -0.2384, -0.2071, -0.2189, -0.2549, -0.2148,
        -0.2072, -0.2271, -0.1897, -0.2326, -0.3265, -0.0577, -0.1796, -0.2168,
        -0.2546, -0.3394, -0.0564, -0.2001, -0.1803, -0.7010, -0.1927, -0.0347,
        -0.1728, -0.0386, -0.1930, -0.0352, -0.0349, -0.2432, -0.2121, -0.1825,
        -0.1729, -0.1871, -0.2381, -0.1847, -0.2151, -0.2623, -0.3135, -0.2284,
        -0.2476, -0.2227, -0.2469, -0.1892, -0.1965, -0.2171, -0.2201, -0.2519,
        -0.2470, -0.1958, -0.0584, -0.0546, -0.2020, -0.2035, -0.0512])
##########################################################
{'smi_encoder.embedding.weight': tensor(0.0117), 'decoder.embedding.weight': tensor(0.0283), 'prot_encoder.embedding.weight': tensor(0.0425), 'smi_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(0.0560), 'smi_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(0.0602), 'smi_encoder.encoder.layers.1.self_attn.in_proj_weight': tensor(0.0709), 'prot_encoder.encoder.layers.1.self_attn.in_proj_weight': tensor(0.0725), 'smi_encoder.encoder.layers.1.self_attn.in_proj_bias': tensor(0.0767), 'prot_encoder.encoder.layers.1.self_attn.in_proj_bias': tensor(0.0854), 'prot_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(0.1002), 'prot_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(0.1118), 'smi_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(0.1221), 'smi_encoder.encoder.layers.0.linear2.weight': tensor(0.1224), 'prot_encoder.dense.weight': tensor(0.1239), 'prot_encoder.dense.bias': tensor(0.1315), 'smi_encoder.encoder.layers.0.linear1.weight': tensor(0.1370), 'prot_encoder.ffn.dense1.weight': tensor(0.1381), 'prot_encoder.encoder.layers.0.linear2.weight': tensor(0.1462), 'prot_encoder.ffn.dense2.weight': tensor(0.1545), 'prot_encoder.encoder.layers.0.linear1.weight': tensor(0.1626), 'decoder.dense_blks.dense2.dense.weight': tensor(0.1706), 'linear.bias': tensor(0.1732), 'smi_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(0.1733), 'prot_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(0.1745), 'linear.weight': tensor(0.1806), 'prot_encoder.ffn.dense1.bias': tensor(0.1868), 'decoder.dense_blks.dense1.dense.bias': tensor(0.1903), 'decoder.blks.block2.addnorm3.ln.bias': tensor(0.1906), 'smi_encoder.encoder.layers.1.linear1.weight': tensor(0.1908), 'smi_encoder.encoder.layers.0.linear2.bias': tensor(0.1928), 'decoder.blks.block2.addnorm1.ln.weight': tensor(0.1947), 'smi_encoder.encoder.layers.1.linear2.weight': tensor(0.1959), 'decoder.dense_blks.dense1.dense.weight': tensor(0.1983), 'prot_encoder.encoder.layers.1.linear1.weight': tensor(0.2003), 'prot_encoder.ffn.dense2.bias': tensor(0.2006), 'decoder.blks.block2.addnorm2.ln.weight': tensor(0.2020), 'prot_encoder.addnorm.ln.weight': tensor(0.2037), 'prot_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(0.2038), 'smi_encoder.encoder.layers.0.norm2.weight': tensor(0.2039), 'prot_encoder.encoder.layers.0.linear1.bias': tensor(0.2061), 'decoder.blks.block0.ffn.dense2.bias': tensor(0.2065), 'decoder.dense_blks.dense0.dense.weight': tensor(0.2072), 'decoder.blks.block1.addnorm2.ln.bias': tensor(0.2083), 'decoder.blks.block0.addnorm3.ln.bias': tensor(0.2088), 'smi_encoder.encoder.layers.0.norm1.bias': tensor(0.2089), 'prot_encoder.addnorm.ln.bias': tensor(0.2092), 'decoder.blks.block0.addnorm3.ln.weight': tensor(0.2094), 'decoder.blks.block1.addnorm1.ln.bias': tensor(0.2102), 'smi_encoder.encoder.layers.0.linear1.bias': tensor(0.2111), 'smi_encoder.encoder.layers.0.norm1.weight': tensor(0.2114), 'decoder.blks.block1.ffn.dense2.bias': tensor(0.2135), 'prot_encoder.encoder.layers.1.linear2.weight': tensor(0.2136), 'prot_encoder.encoder.layers.1.norm1.weight': tensor(0.2139), 'decoder.blks.block0.ffn.dense2.weight': tensor(0.2150), 'decoder.dense.weight': tensor(0.2153), 'decoder.dense_blks.dense0.dense.bias': tensor(0.2167), 'decoder.blks.block0.attention1.W_o.weight': tensor(0.2174), 'decoder.blks.block1.addnorm2.ln.weight': tensor(0.2174), 'smi_encoder.encoder.layers.0.norm2.bias': tensor(0.2175), 'decoder.blks.block0.attention1.W_k.weight': tensor(0.2190), 'decoder.blks.block1.addnorm3.ln.bias': tensor(0.2195), 'prot_encoder.encoder.layers.0.norm2.bias': tensor(0.2196), 'prot_encoder.encoder.layers.0.linear2.bias': tensor(0.2202), 'decoder.blks.block0.ffn.dense1.weight': tensor(0.2203), 'decoder.blks.block0.attention1.W_v.weight': tensor(0.2207), 'decoder.blks.block0.attention1.W_q.weight': tensor(0.2208), 'decoder.blks.block0.addnorm2.ln.weight': tensor(0.2209), 'smi_encoder.encoder.layers.1.norm1.bias': tensor(0.2215), 'prot_encoder.encoder.layers.1.self_attn.out_proj.bias': tensor(0.2228), 'decoder.blks.block0.addnorm2.ln.bias': tensor(0.2230), 'smi_encoder.encoder.layers.1.self_attn.out_proj.weight': tensor(0.2232), 'decoder.blks.block0.addnorm1.ln.bias': tensor(0.2232), 'decoder.blks.block1.ffn.dense2.weight': tensor(0.2244), 'decoder.blks.block1.addnorm1.ln.weight': tensor(0.2248), 'smi_encoder.encoder.layers.1.self_attn.out_proj.bias': tensor(0.2254), 'decoder.blks.block1.attention1.W_v.weight': tensor(0.2255), 'decoder.blks.block1.ffn.dense1.weight': tensor(0.2255), 'decoder.blks.block0.attention2.W_v.weight': tensor(0.2256), 'prot_encoder.encoder.layers.0.norm1.bias': tensor(0.2258), 'decoder.blks.block1.attention1.W_o.weight': tensor(0.2261), 'decoder.blks.block1.addnorm3.ln.weight': tensor(0.2269), 'prot_encoder.encoder.layers.1.self_attn.out_proj.weight': tensor(0.2279), 'prot_encoder.encoder.layers.1.linear1.bias': tensor(0.2279), 'decoder.blks.block2.attention1.W_q.weight': tensor(0.2281), 'decoder.blks.block1.attention1.W_k.weight': tensor(0.2283), 'prot_encoder.encoder.layers.0.norm1.weight': tensor(0.2285), 'decoder.blks.block1.attention1.W_q.weight': tensor(0.2286), 'prot_encoder.encoder.layers.1.norm2.weight': tensor(0.2287), 'smi_encoder.encoder.layers.1.linear1.bias': tensor(0.2289), 'decoder.blks.block2.attention1.W_k.weight': tensor(0.2290), 'prot_encoder.encoder.layers.1.norm2.bias': tensor(0.2292), 'decoder.blks.block2.attention1.W_o.weight': tensor(0.2300), 'decoder.dense_blks.dense2.dense.bias': tensor(0.2302), 'decoder.blks.block1.attention2.W_v.weight': tensor(0.2307), 'decoder.blks.block0.addnorm1.ln.weight': tensor(0.2310), 'decoder.blks.block2.addnorm1.ln.bias': tensor(0.2315), 'decoder.blks.block2.attention1.W_v.weight': tensor(0.2316), 'decoder.blks.block0.attention2.W_k.weight': tensor(0.2320), 'decoder.blks.block0.attention2.W_o.weight': tensor(0.2337), 'decoder.blks.block0.attention2.W_q.weight': tensor(0.2340), 'decoder.blks.block1.attention2.W_k.weight': tensor(0.2341), 'decoder.blks.block1.attention2.W_q.weight': tensor(0.2353), 'smi_encoder.encoder.layers.1.norm1.weight': tensor(0.2353), 'decoder.blks.block2.attention2.W_k.weight': tensor(0.2354), 'decoder.blks.block1.attention2.W_o.weight': tensor(0.2360), 'decoder.blks.block2.attention2.W_q.weight': tensor(0.2361), 'decoder.blks.block2.attention2.W_o.weight': tensor(0.2362), 'decoder.blks.block2.ffn.dense1.bias': tensor(0.2363), 'smi_encoder.encoder.layers.1.linear2.bias': tensor(0.2377), 'decoder.blks.block0.ffn.dense1.bias': tensor(0.2393), 'decoder.blks.block2.ffn.dense1.weight': tensor(0.2406), 'decoder.blks.block2.ffn.dense2.weight': tensor(0.2431), 'decoder.blks.block2.addnorm2.ln.bias': tensor(0.2475), 'decoder.blks.block1.ffn.dense1.bias': tensor(0.2477), 'prot_encoder.encoder.layers.1.linear2.bias': tensor(0.2485), 'decoder.blks.block2.attention2.W_v.weight': tensor(0.2502), 'prot_encoder.encoder.layers.1.norm1.bias': tensor(0.2549), 'prot_encoder.encoder.layers.0.norm2.weight': tensor(0.2562), 'decoder.blks.block2.ffn.dense2.bias': tensor(0.2605), 'decoder.dense.bias': tensor(0.2686), 'smi_encoder.encoder.layers.1.norm2.weight': tensor(0.2724), 'decoder.blks.block2.addnorm3.ln.weight': tensor(0.2734), 'smi_encoder.encoder.layers.1.norm2.bias': tensor(0.2835)}