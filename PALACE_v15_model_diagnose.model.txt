smi_encoder.embedding.weight shape: torch.Size([287, 128])
tensor([[ 1.0131, -0.2699, -1.8087,  ..., -0.3295, -0.7485, -1.9519],
        [ 0.0252,  0.2658,  0.8077,  ..., -0.9470, -1.1543, -0.1074],
        [ 0.2496, -1.1481, -0.6821,  ..., -0.5859,  0.6502, -0.0364],
        ...,
        [ 0.4938,  0.4496,  0.6148,  ...,  1.5956,  0.0266, -0.2141],
        [ 0.7097,  0.5078,  0.7414,  ..., -0.3503,  1.2614, -0.1880],
        [ 1.8792,  0.3156,  1.0133,  ..., -1.0239,  0.4238, -0.2535]])
tensor([[ 1.0131, -0.2699, -1.8087,  ..., -0.3295, -0.7485, -1.9519],
        [ 0.0251,  0.2658,  0.8078,  ..., -0.9470, -1.1543, -0.1074],
        [ 0.2496, -1.1481, -0.6821,  ..., -0.5859,  0.6502, -0.0364],
        ...,
        [ 0.4938,  0.4496,  0.6148,  ...,  1.5956,  0.0266, -0.2141],
        [ 0.7097,  0.5078,  0.7414,  ..., -0.3503,  1.2614, -0.1880],
        [ 1.8792,  0.3156,  1.0133,  ..., -1.0239,  0.4238, -0.2535]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0225,  0.0498,  0.0418,  ..., -0.0527, -0.0153,  0.0417],
        [ 0.0522,  0.0300,  0.0596,  ...,  0.0271,  0.0557,  0.0364],
        [ 0.0548,  0.0149,  0.0074,  ..., -0.0020,  0.0201, -0.0678],
        ...,
        [ 0.0134, -0.0292,  0.0240,  ...,  0.0355, -0.0091,  0.0176],
        [-0.0610,  0.0653,  0.0309,  ...,  0.0310, -0.0158, -0.0573],
        [ 0.0606, -0.0553,  0.0208,  ..., -0.0636, -0.0095, -0.0584]])
tensor([[-0.0225,  0.0499,  0.0419,  ..., -0.0527, -0.0154,  0.0416],
        [ 0.0522,  0.0300,  0.0595,  ...,  0.0272,  0.0557,  0.0364],
        [ 0.0548,  0.0149,  0.0074,  ..., -0.0019,  0.0201, -0.0678],
        ...,
        [ 0.0132, -0.0292,  0.0240,  ...,  0.0354, -0.0091,  0.0177],
        [-0.0610,  0.0653,  0.0309,  ...,  0.0310, -0.0159, -0.0572],
        [ 0.0606, -0.0553,  0.0208,  ..., -0.0636, -0.0095, -0.0585]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 4.1654e-06, -1.0621e-05, -3.8005e-06, -9.4587e-06,  1.2276e-05,
         6.5293e-06,  2.8318e-06, -1.0182e-05, -1.5475e-05, -7.3265e-07,
        -8.2672e-06, -1.2022e-05,  3.7979e-06,  1.8580e-05,  2.4990e-06,
        -5.2695e-06, -9.6180e-06,  9.8255e-06, -8.7922e-07, -1.6121e-05,
         1.3552e-05, -7.7079e-06, -7.2011e-06, -1.3643e-05,  2.6003e-06,
        -2.4987e-06, -1.3819e-05, -5.1109e-07, -5.9474e-06,  2.8574e-05,
        -6.7400e-06, -1.2440e-05, -1.9746e-05,  4.5984e-06, -2.6131e-05,
        -7.6553e-06,  7.7596e-06, -1.1557e-05, -4.2702e-05,  1.6165e-06,
         4.1933e-05, -9.1710e-06,  9.1748e-07,  1.6854e-05,  2.7091e-06,
         4.1588e-05,  1.1986e-05,  3.5999e-06, -1.7692e-05, -1.0152e-05,
        -2.7334e-06,  9.9366e-06, -4.6930e-06, -1.1691e-05, -2.4989e-06,
        -8.5895e-06,  1.0077e-05, -9.9028e-06,  8.1176e-06, -2.2517e-06,
         1.1676e-05,  9.8742e-06, -1.3336e-05,  4.9822e-06, -8.0220e-06,
        -6.7436e-06, -1.6633e-06, -3.9305e-06,  1.0635e-05,  1.2738e-05,
        -1.4936e-05,  1.3682e-05,  3.6833e-06, -1.3698e-05, -1.0224e-05,
        -2.8769e-06,  3.8075e-06,  2.5162e-06,  1.6533e-05,  1.2124e-05,
         2.6790e-06,  1.2434e-05, -4.7643e-06, -5.0498e-06, -1.3679e-06,
        -1.1027e-05, -2.6229e-06,  9.1529e-06,  1.1086e-06,  3.9877e-06,
         1.4601e-06, -4.5829e-06, -1.1735e-06, -1.2095e-07, -8.2985e-06,
         6.3563e-06,  3.6698e-06,  1.2593e-06, -2.0125e-06, -1.3546e-05,
        -1.9208e-06, -1.8888e-07,  2.4090e-06, -1.5940e-06, -7.4391e-06,
        -8.3535e-06, -6.7281e-06,  1.9276e-06,  2.4738e-06, -2.9632e-06,
         2.5425e-06,  7.9059e-06,  9.8540e-06, -1.8169e-06,  3.8908e-06,
        -2.3804e-06,  2.1034e-06,  9.8707e-06, -5.3975e-07,  8.4453e-06,
        -1.0052e-06, -4.2234e-06, -2.2693e-06, -1.1426e-05,  1.2739e-05,
        -5.0304e-06,  2.8944e-06,  4.7420e-06, -4.4723e-12,  1.6149e-13,
        -2.9323e-12,  8.1123e-13,  1.4581e-12, -5.4152e-12,  6.5050e-14,
        -1.1130e-13, -3.6189e-12,  1.0740e-12, -2.3571e-12, -2.8511e-12,
         2.1135e-12, -8.5582e-13, -4.2050e-12,  2.1687e-12,  1.1277e-13,
         9.0112e-13, -3.2055e-12,  3.0709e-12,  3.6164e-12,  1.6490e-12,
         4.4787e-13, -1.2241e-12,  2.3075e-12, -1.6456e-12,  2.6338e-13,
        -2.7038e-13,  2.7148e-12,  6.5744e-13,  2.4147e-12, -1.8663e-12,
         2.8237e-12, -6.1045e-12, -3.7648e-13,  3.8626e-12, -1.6668e-12,
        -3.1788e-12, -6.0513e-13,  2.7330e-12, -1.0278e-12, -3.1200e-12,
         8.0464e-12,  2.7147e-12, -4.8783e-12,  2.3961e-12, -5.8138e-12,
         1.6900e-13, -1.4877e-12, -1.3111e-12,  2.0616e-12, -4.8518e-13,
        -2.9091e-12, -3.0934e-12, -2.0876e-13, -3.1659e-13, -2.0435e-13,
         2.3687e-12, -1.7976e-12, -8.9215e-13,  3.5238e-13, -8.5752e-13,
         5.2423e-14,  5.5011e-14,  2.7243e-12,  3.2571e-13, -1.1978e-12,
        -1.1283e-12, -4.5130e-13, -4.0872e-13,  2.0870e-12,  4.4131e-13,
         8.9475e-13,  6.1411e-14,  1.6159e-12, -3.6828e-12, -3.8155e-12,
         5.5221e-13, -2.1600e-13, -1.7528e-12,  2.2806e-12, -4.5589e-12,
         9.9051e-13, -2.8069e-12, -1.6098e-12, -1.3112e-12,  1.7111e-12,
         2.0242e-12,  1.2538e-12, -1.5985e-12,  3.6962e-13, -1.2216e-12,
        -2.3732e-13,  2.2350e-12,  6.7552e-13, -1.1308e-12,  1.6196e-12,
         1.0002e-12,  5.5263e-13,  3.7913e-12,  2.5140e-12,  2.2885e-12,
        -1.1266e-12,  2.5719e-13, -3.4522e-12,  1.9343e-12, -5.4356e-12,
        -1.3298e-12, -6.6912e-14,  4.5636e-12,  2.8817e-12,  1.3579e-13,
        -2.0488e-13, -1.9417e-12,  9.6985e-13,  9.9872e-13, -3.6430e-12,
        -4.2701e-13,  5.8397e-13, -8.7944e-13,  3.9178e-12, -4.7945e-12,
         1.3827e-12, -3.6150e-12,  6.3499e-13,  4.6254e-12,  9.3251e-13,
         1.4895e-12, -1.3578e-05, -1.1020e-05,  7.1992e-06, -1.5439e-05,
        -5.4814e-06, -4.5869e-06,  6.9289e-06, -7.5501e-06,  1.1038e-05,
        -4.0351e-06,  1.6018e-05, -1.5348e-06, -5.9433e-06,  2.4760e-06,
        -1.0772e-05, -7.2987e-06, -3.7130e-06,  1.3535e-05,  5.6475e-06,
        -1.1899e-05,  2.5010e-07,  7.1802e-06, -8.2861e-06,  9.2492e-06,
        -7.3738e-06, -1.4546e-05,  1.2530e-05,  5.8267e-06, -1.3027e-05,
        -1.8293e-06,  1.4826e-06, -6.9503e-06,  1.2791e-05,  1.8468e-06,
        -3.5890e-06,  8.2497e-06, -1.6841e-05, -5.4185e-07, -5.7977e-06,
         4.7906e-06,  4.2739e-06,  1.5717e-06, -1.2990e-05, -8.6629e-06,
         2.1924e-06,  1.1773e-05,  5.0096e-06, -9.4231e-06, -1.1236e-05,
         2.5067e-06, -3.5909e-06,  4.1206e-07,  5.4137e-06, -1.4493e-06,
        -5.7335e-06,  1.5053e-05, -5.4555e-06,  1.4721e-05, -5.3380e-06,
        -9.7283e-06, -1.5043e-05,  8.0458e-07, -1.5645e-06,  8.3502e-06,
        -7.0606e-06,  9.8897e-06, -6.6438e-06, -7.6323e-06,  9.0724e-06,
         7.2208e-06, -4.0485e-06, -1.3384e-05,  8.3325e-06,  8.0463e-06,
         1.4581e-06,  6.1828e-07,  7.6663e-06,  1.1533e-05, -4.5463e-06,
        -9.8725e-06,  4.1917e-06,  1.4852e-05,  1.0966e-05, -8.9928e-06,
        -5.5870e-06, -7.1664e-06, -5.8612e-06, -3.9006e-06, -1.7029e-05,
        -9.8619e-06,  3.4325e-06, -7.1747e-06, -7.7494e-06,  3.3556e-06,
         3.2573e-06,  2.4400e-06,  3.9259e-06,  2.3231e-06,  3.1173e-06,
        -1.0250e-06, -6.1137e-06, -5.1577e-06, -3.0666e-07,  7.9928e-06,
        -8.6169e-06, -7.7425e-06,  6.9437e-07, -9.0464e-06,  2.0657e-07,
        -6.8927e-06, -2.4623e-06, -4.7817e-06,  1.7612e-05,  3.1733e-06,
         7.0843e-06, -1.2152e-05,  2.5731e-07,  1.4445e-06,  1.2094e-05,
         7.1565e-06,  1.3642e-06,  1.1391e-05,  1.1206e-05,  4.5707e-07,
        -9.4549e-06,  7.0717e-06, -4.8066e-06, -9.9627e-07])
##########################################################
smi_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0195, -0.0317, -0.0510,  ..., -0.0840,  0.0122, -0.0714],
        [-0.0169, -0.0862, -0.0542,  ..., -0.0039,  0.0410,  0.0698],
        [-0.0497, -0.0115,  0.0451,  ..., -0.0327, -0.0224,  0.0855],
        ...,
        [-0.0498,  0.0312,  0.0274,  ...,  0.0140,  0.0436, -0.0074],
        [ 0.0508,  0.0038,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0864, -0.0189,  ..., -0.0154,  0.0077,  0.0106]])
tensor([[-0.0195, -0.0317, -0.0510,  ..., -0.0840,  0.0122, -0.0714],
        [-0.0169, -0.0862, -0.0542,  ..., -0.0039,  0.0410,  0.0698],
        [-0.0497, -0.0116,  0.0450,  ..., -0.0327, -0.0225,  0.0855],
        ...,
        [-0.0498,  0.0312,  0.0273,  ...,  0.0140,  0.0436, -0.0074],
        [ 0.0508,  0.0038,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0864, -0.0190,  ..., -0.0154,  0.0077,  0.0106]])
##########################################################
smi_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 1.3031e-06, -9.1354e-07,  3.9563e-06, -7.9475e-07, -3.2072e-06,
         3.5753e-06, -1.8399e-06, -1.5364e-07,  8.2957e-07,  9.4648e-07,
         6.5672e-06, -1.2760e-05, -1.5164e-06,  4.9569e-07,  6.0586e-07,
         3.4709e-06, -2.2116e-07,  1.1494e-05, -3.2431e-06,  1.3060e-06,
         1.3258e-05,  1.0285e-07,  9.1938e-07,  2.4486e-06,  1.2546e-06,
         2.4232e-07,  6.0978e-06,  1.6621e-06,  7.6108e-07,  1.0035e-06,
         2.2074e-05, -1.2391e-04, -1.1689e-06, -3.8718e-06, -3.0395e-06,
         1.4666e-06,  6.1582e-07,  7.7494e-07,  2.9450e-06,  5.9490e-06,
        -4.8092e-07, -1.4248e-06,  7.2681e-07,  2.4872e-07,  1.6029e-06,
         1.7988e-07,  1.8152e-06,  3.2090e-06,  2.4632e-06, -4.8077e-06,
         1.1782e-06,  3.7470e-07,  4.3648e-07, -7.1903e-08,  3.6372e-07,
         1.3982e-06,  3.0042e-06, -4.0679e-07, -7.3058e-07,  9.6139e-07,
         5.7828e-06,  1.3226e-05, -6.2598e-06, -7.0458e-08,  7.0525e-08,
        -1.5948e-06, -1.0863e-05,  1.1555e-05, -1.9246e-06, -8.3548e-07,
         4.4853e-07, -8.1555e-06, -2.3972e-06, -1.0779e-06,  4.4293e-06,
        -2.9687e-05, -1.2877e-05, -1.5841e-06,  9.6092e-06,  1.8861e-06,
         2.7597e-06, -3.2559e-06,  7.8400e-07, -6.9196e-06,  1.4241e-06,
         1.3456e-06,  3.4093e-06,  1.8847e-06,  5.0849e-06,  2.1645e-07,
         7.4379e-08, -1.8043e-06,  1.0920e-06,  1.2177e-06, -1.0427e-06,
        -2.9851e-05,  7.5901e-07,  2.3948e-06,  2.0832e-06,  2.7852e-07,
         1.9018e-06,  6.1087e-07,  2.7725e-05, -8.3212e-07,  1.2756e-06,
         6.3220e-07,  2.2360e-07, -1.7166e-06,  7.3710e-06,  2.3146e-05,
         8.4703e-07, -3.0842e-08,  1.7550e-06,  1.4007e-06,  5.9679e-07,
        -4.3833e-07,  7.1562e-06,  2.7893e-06,  1.2040e-07,  1.3717e-06,
        -8.5028e-08, -3.8659e-07,  2.9951e-06, -4.0642e-07,  7.1698e-07,
        -3.4056e-07,  9.5642e-08,  4.4907e-06])
##########################################################
smi_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[-0.0809,  0.0384,  0.1065,  ...,  0.0697,  0.1585,  0.0046],
        [ 0.0176,  0.0092, -0.0373,  ..., -0.0127, -0.0107, -0.0750],
        [ 0.0117, -0.0557, -0.0673,  ..., -0.0928,  0.0549,  0.0634],
        ...,
        [ 0.0864,  0.1034, -0.1057,  ..., -0.0676, -0.0252, -0.0317],
        [ 0.0057, -0.0809, -0.0439,  ..., -0.0148, -0.0933, -0.0473],
        [-0.0622, -0.0319, -0.0700,  ...,  0.0439, -0.0144, -0.0280]])
tensor([[-0.0809,  0.0384,  0.1065,  ...,  0.0697,  0.1585,  0.0046],
        [ 0.0176,  0.0092, -0.0373,  ..., -0.0127, -0.0107, -0.0750],
        [ 0.0117, -0.0557, -0.0673,  ..., -0.0929,  0.0550,  0.0634],
        ...,
        [ 0.0864,  0.1034, -0.1057,  ..., -0.0676, -0.0252, -0.0317],
        [ 0.0057, -0.0809, -0.0439,  ..., -0.0148, -0.0933, -0.0473],
        [-0.0622, -0.0318, -0.0701,  ...,  0.0439, -0.0144, -0.0280]])
##########################################################
smi_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([ 0.0390, -0.0360,  0.0304,  0.0522,  0.0824, -0.0713,  0.0320, -0.0662,
         0.0418,  0.0410, -0.0810,  0.0478,  0.0367,  0.0600,  0.0502,  0.0205,
        -0.0817,  0.0190,  0.0307, -0.0279, -0.0589,  0.0853, -0.0780,  0.0147,
        -0.0857, -0.0591,  0.0313,  0.0502, -0.0049, -0.0560, -0.0108,  0.0365,
        -0.0032, -0.0299,  0.0512, -0.0053, -0.0227,  0.0858, -0.0145, -0.0820,
        -0.0140, -0.0369,  0.0268, -0.0360, -0.0799, -0.0019,  0.0174, -0.0067,
         0.0582, -0.0320,  0.0775,  0.0108,  0.0556, -0.0371, -0.0313, -0.0403,
         0.0199, -0.0528, -0.0291,  0.0233,  0.0368, -0.0160,  0.0090,  0.0428])
tensor([ 0.0382, -0.0360,  0.0297,  0.0533,  0.0833, -0.0713,  0.0315, -0.0661,
         0.0428,  0.0389, -0.0810,  0.0477,  0.0367,  0.0605,  0.0497,  0.0194,
        -0.0817,  0.0198,  0.0310, -0.0282, -0.0588,  0.0850, -0.0785,  0.0148,
        -0.0858, -0.0590,  0.0303,  0.0510, -0.0042, -0.0564, -0.0106,  0.0370,
        -0.0040, -0.0300,  0.0501, -0.0052, -0.0237,  0.0860, -0.0147, -0.0820,
        -0.0150, -0.0367,  0.0263, -0.0364, -0.0799, -0.0016,  0.0172, -0.0074,
         0.0581, -0.0318,  0.0768,  0.0109,  0.0564, -0.0375, -0.0314, -0.0400,
         0.0205, -0.0527, -0.0288,  0.0230,  0.0365, -0.0159,  0.0085,  0.0413])
##########################################################
smi_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[ 0.0440,  0.0633,  0.0414,  ...,  0.1342,  0.0143, -0.0068],
        [ 0.0472,  0.0151,  0.0323,  ..., -0.0268,  0.0435, -0.0323],
        [-0.0880,  0.0102, -0.0640,  ..., -0.0099,  0.0668,  0.1059],
        ...,
        [-0.0299, -0.0792, -0.0207,  ...,  0.0200, -0.0350,  0.1171],
        [ 0.0602, -0.0391, -0.0578,  ..., -0.1355,  0.0426,  0.0282],
        [-0.0242, -0.0056,  0.0089,  ..., -0.0019, -0.0222, -0.0029]])
tensor([[ 0.0440,  0.0634,  0.0414,  ...,  0.1342,  0.0144, -0.0068],
        [ 0.0473,  0.0151,  0.0324,  ..., -0.0268,  0.0435, -0.0322],
        [-0.0880,  0.0102, -0.0639,  ..., -0.0099,  0.0668,  0.1059],
        ...,
        [-0.0299, -0.0792, -0.0207,  ...,  0.0200, -0.0350,  0.1171],
        [ 0.0603, -0.0391, -0.0578,  ..., -0.1355,  0.0426,  0.0282],
        [-0.0242, -0.0056,  0.0090,  ..., -0.0019, -0.0222, -0.0029]])
##########################################################
smi_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([-0.0847, -0.0490, -0.0445, -0.1036,  0.1047,  0.0644, -0.0245, -0.0003,
         0.0468, -0.1232,  0.0717, -0.1169,  0.0174,  0.0834,  0.0273,  0.0251,
        -0.1055, -0.0227, -0.0934, -0.1000, -0.1053, -0.0765,  0.0598, -0.0744,
         0.0463, -0.1234,  0.0209,  0.0470,  0.1235, -0.0195,  0.0541, -0.0480,
         0.1148, -0.0727,  0.1159,  0.0683,  0.0448,  0.0013,  0.0749, -0.0401,
        -0.0255,  0.0300, -0.0717,  0.0446,  0.1231, -0.0057,  0.0908, -0.0754,
         0.0632, -0.0747,  0.0050,  0.0100, -0.0558, -0.1103, -0.0367, -0.1223,
         0.0116,  0.0084,  0.1070,  0.0195,  0.0647, -0.1003,  0.1218, -0.0149,
        -0.0808, -0.0539,  0.0720, -0.0909,  0.0187, -0.0974,  0.0365,  0.0534,
         0.1002,  0.0488, -0.0039,  0.0430, -0.0285,  0.0922, -0.0023, -0.1090,
        -0.0465, -0.1081, -0.1037,  0.0554,  0.1193, -0.0494, -0.0893, -0.0008,
         0.0709, -0.0112,  0.0506, -0.0140, -0.0871, -0.0452, -0.0507,  0.0925,
         0.0545,  0.0031,  0.0901, -0.0819, -0.1022,  0.1177,  0.0682,  0.0710,
         0.0319, -0.0796,  0.0767, -0.1053, -0.0900, -0.0381,  0.0686, -0.0737,
        -0.0403,  0.0102, -0.1008, -0.0361, -0.0079,  0.1185,  0.0208, -0.0328,
         0.0247, -0.0611, -0.1211,  0.0626, -0.0295,  0.0828,  0.0049, -0.0736])
tensor([-0.0840, -0.0486, -0.0444, -0.1035,  0.1040,  0.0648, -0.0244, -0.0002,
         0.0468, -0.1231,  0.0711, -0.1186,  0.0174,  0.0839,  0.0275,  0.0251,
        -0.1053, -0.0241, -0.0933, -0.1010, -0.1061, -0.0761,  0.0597, -0.0743,
         0.0466, -0.1232,  0.0214,  0.0471,  0.1235, -0.0193,  0.0507, -0.0604,
         0.1149, -0.0723,  0.1165,  0.0685,  0.0449,  0.0015,  0.0753, -0.0407,
        -0.0258,  0.0301, -0.0715,  0.0450,  0.1234, -0.0056,  0.0915, -0.0758,
         0.0635, -0.0744,  0.0051,  0.0100, -0.0557, -0.1098, -0.0365, -0.1223,
         0.0115,  0.0081,  0.1071,  0.0197,  0.0636, -0.0977,  0.1226, -0.0147,
        -0.0807, -0.0533,  0.0735, -0.0891,  0.0189, -0.0973,  0.0366,  0.0523,
         0.1003,  0.0490, -0.0046,  0.0373, -0.0270,  0.0923, -0.0029, -0.1088,
        -0.0464, -0.1082, -0.1034,  0.0563,  0.1195, -0.0493, -0.0891, -0.0009,
         0.0714, -0.0110,  0.0502, -0.0139, -0.0868, -0.0450, -0.0503,  0.0978,
         0.0546,  0.0026,  0.0904, -0.0817, -0.1023,  0.1176,  0.0652,  0.0712,
         0.0323, -0.0796,  0.0769, -0.1055, -0.0888, -0.0352,  0.0689, -0.0736,
        -0.0402,  0.0103, -0.1002, -0.0360, -0.0063,  0.1186,  0.0209, -0.0333,
         0.0250, -0.0610, -0.1206,  0.0625, -0.0294,  0.0829,  0.0051, -0.0730])
##########################################################
smi_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([ 0.0841, -0.0202,  0.1208,  0.0397,  0.0984,  0.0485, -0.0402,  0.0064,
         0.0076, -0.0090, -0.0895,  0.0992,  0.0778,  0.0169,  0.0238,  0.0534,
         0.0399, -0.1431,  0.1446, -0.0292, -0.1332, -0.0212,  0.0350,  0.0686,
        -0.0666,  0.0636,  0.0936, -0.0196,  0.0182,  0.0004, -0.0805,  0.0788,
         0.0522, -0.1728, -0.0415,  0.0216, -0.0040, -0.0808,  0.0308, -0.0589,
        -0.0086,  0.0643, -0.0439, -0.0254,  0.0496, -0.0012,  0.0258, -0.1334,
         0.0601, -0.0871, -0.0663, -0.0059, -0.0061,  0.0426, -0.0380, -0.0140,
         0.0956,  0.0117, -0.1134,  0.0219, -0.0789,  0.1091, -0.0900,  0.0287,
         0.0281, -0.0587, -0.0701,  0.0615, -0.1003, -0.0666, -0.0272,  0.1615,
        -0.0470, -0.1313, -0.0642,  0.0713, -0.1295, -0.0494, -0.0633,  0.0830,
         0.0405, -0.2078,  0.0424, -0.1345,  0.0141, -0.0159, -0.1516, -0.1322,
         0.0844, -0.0420, -0.0218, -0.1046,  0.0374,  0.0345, -0.0745, -0.0721,
         0.0078, -0.0917,  0.0818,  0.0517,  0.0888,  0.0365, -0.1619, -0.0421,
        -0.0427, -0.0506, -0.0367,  0.1311,  0.0853,  0.1393,  0.0462, -0.0285,
         0.0578,  0.0223, -0.0245, -0.0599,  0.0540, -0.0880,  0.0939, -0.0469,
        -0.0412,  0.0361,  0.0683,  0.0108,  0.0142, -0.0436,  0.0111,  0.0483])
tensor([ 0.0840, -0.0198,  0.1213,  0.0399,  0.0978,  0.0492, -0.0415,  0.0064,
         0.0077, -0.0090, -0.0906,  0.0997,  0.0774,  0.0168,  0.0239,  0.0527,
         0.0399, -0.1424,  0.1441, -0.0299, -0.1316, -0.0202,  0.0358,  0.0683,
        -0.0663,  0.0637,  0.0926, -0.0192,  0.0183,  0.0006, -0.0795,  0.0885,
         0.0519, -0.1747, -0.0416,  0.0215, -0.0038, -0.0810,  0.0293, -0.0597,
        -0.0085,  0.0637, -0.0442, -0.0255,  0.0494, -0.0010,  0.0262, -0.1329,
         0.0602, -0.0869, -0.0666, -0.0058, -0.0059,  0.0428, -0.0376, -0.0138,
         0.0955,  0.0108, -0.1132,  0.0218, -0.0773,  0.1084, -0.0911,  0.0288,
         0.0284, -0.0587, -0.0709,  0.0591, -0.1007, -0.0666, -0.0272,  0.1616,
        -0.0468, -0.1293, -0.0651,  0.0660, -0.1289, -0.0491, -0.0595,  0.0829,
         0.0405, -0.2079,  0.0426, -0.1352,  0.0138, -0.0160, -0.1519, -0.1320,
         0.0847, -0.0413, -0.0217, -0.1047,  0.0370,  0.0344, -0.0739, -0.0761,
         0.0077, -0.0911,  0.0818,  0.0515,  0.0889,  0.0368, -0.1598, -0.0432,
        -0.0436, -0.0505, -0.0370,  0.1314,  0.0845,  0.1397,  0.0463, -0.0285,
         0.0579,  0.0220, -0.0252, -0.0599,  0.0525, -0.0882,  0.0937, -0.0471,
        -0.0403,  0.0361,  0.0680,  0.0109,  0.0144, -0.0440,  0.0111,  0.0487])
##########################################################
smi_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 2.8751e-04,  1.0577e-03,  3.8667e-04, -1.3397e-04, -4.7421e-04,
         6.8866e-04,  6.0896e-04,  1.5563e-04,  6.8761e-05, -4.1630e-04,
        -9.8546e-04, -1.6920e-03, -2.8634e-04,  6.9303e-04,  3.8286e-04,
         5.4628e-04, -5.9760e-05, -1.1082e-03, -2.9963e-04, -6.9006e-04,
        -1.1968e-03,  2.2042e-04, -7.1552e-05,  4.4783e-04, -2.3280e-04,
        -5.0094e-05,  6.5847e-04, -7.9053e-04,  1.7344e-04,  3.5815e-04,
        -3.3919e-03, -1.6249e-02, -5.0352e-04,  2.9048e-04,  1.0320e-03,
         5.1063e-04,  5.2431e-04, -5.8894e-05,  8.1957e-04, -8.8899e-04,
        -4.1275e-04, -2.5840e-04, -9.9282e-05,  2.9954e-04,  4.5529e-04,
        -2.6766e-04,  6.5249e-04, -4.0512e-04,  4.1631e-04,  9.2321e-04,
        -1.1867e-04,  1.5758e-04,  6.9958e-04, -3.5127e-05, -2.1196e-04,
        -2.6728e-04,  3.8741e-04, -5.4603e-04,  3.8194e-05, -2.1224e-06,
        -1.1274e-03,  1.6812e-03,  1.1491e-03, -1.3044e-04,  7.3512e-05,
         5.3821e-04,  1.9458e-03,  2.3755e-03,  4.2008e-04,  2.9178e-04,
         1.5283e-04, -8.2873e-04,  7.5121e-04,  1.5774e-04, -7.2068e-04,
        -5.4670e-03,  1.6509e-03,  6.2317e-04, -1.8823e-03,  2.4651e-04,
         7.4476e-04,  1.7679e-04,  1.8900e-04,  6.5915e-04,  1.4285e-04,
        -1.3158e-04,  1.6734e-05, -2.0320e-04,  7.2532e-04, -2.2089e-04,
        -3.3867e-04,  2.8044e-04,  1.6516e-04,  2.9303e-04,  1.1793e-04,
         6.1375e-03,  6.0955e-04, -5.4383e-04,  2.5106e-04, -2.2336e-05,
         2.2210e-04, -6.1285e-05, -2.1033e-03,  4.7390e-04,  2.3799e-05,
        -3.4679e-05,  5.4406e-05, -1.6025e-04,  9.4872e-04,  2.4810e-03,
         8.0973e-05,  5.2517e-04,  3.6910e-04,  4.5025e-04,  1.7943e-05,
         1.1321e-04,  1.6902e-03, -3.3376e-04, -8.1094e-05, -2.8027e-04,
        -2.9309e-05, -3.0499e-04,  6.4282e-04,  1.5278e-05, -7.7608e-05,
         3.3570e-04, -4.3414e-04,  1.0166e-03])
##########################################################
smi_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([-0.1449,  0.0988,  0.0088,  0.0086,  0.1060,  0.1030, -0.0441, -0.0622,
        -0.0319,  0.0121,  0.0852,  0.0952, -0.0994, -0.0855, -0.0003, -0.0247,
         0.0798,  0.1223,  0.0631, -0.1196, -0.1045,  0.0969, -0.0486, -0.0041,
         0.0317, -0.0030,  0.1310,  0.0267, -0.0523, -0.0053,  0.1793, -0.1632,
         0.0130, -0.0660,  0.0668,  0.0109,  0.0253,  0.0078,  0.1248,  0.2153,
        -0.1186, -0.0305,  0.0672, -0.0748, -0.0514,  0.0470, -0.1037, -0.0663,
         0.0375,  0.0729,  0.0154,  0.1401, -0.0033, -0.0681,  0.0417, -0.0641,
        -0.0484,  0.1539,  0.0869,  0.0288, -0.0779, -0.1988,  0.1279,  0.0026,
         0.0153, -0.0411, -0.0878, -0.1493,  0.0409, -0.0211, -0.0542,  0.1031,
        -0.0338, -0.0557,  0.0615,  0.2221, -0.0765,  0.0484,  0.1675, -0.0038,
         0.0122, -0.0113,  0.0371,  0.0700,  0.0423,  0.0062,  0.0712, -0.0381,
        -0.0544,  0.0299, -0.1574, -0.0092, -0.0266,  0.0381,  0.1009, -0.1429,
         0.0315, -0.0574,  0.0125, -0.0823, -0.0399, -0.0532,  0.1604,  0.0340,
        -0.1239,  0.0345,  0.0054,  0.0493, -0.0998,  0.1377, -0.0394, -0.0026,
        -0.0706,  0.0262,  0.1115,  0.0088,  0.1399, -0.0261, -0.0476, -0.0772,
        -0.0698,  0.0202, -0.0565,  0.0619, -0.0269,  0.0180,  0.0264, -0.1181])
tensor([-0.1444,  0.0987,  0.0099,  0.0083,  0.1039,  0.1032, -0.0440, -0.0622,
        -0.0317,  0.0120,  0.0857,  0.0985, -0.0994, -0.0859, -0.0003, -0.0246,
         0.0796,  0.1214,  0.0629, -0.1207, -0.1038,  0.0966, -0.0487, -0.0036,
         0.0313, -0.0028,  0.1306,  0.0266, -0.0521, -0.0053,  0.1774, -0.1718,
         0.0126, -0.0713,  0.0676,  0.0109,  0.0252,  0.0080,  0.1245,  0.2157,
        -0.1187, -0.0300,  0.0672, -0.0748, -0.0516,  0.0471, -0.1044, -0.0654,
         0.0378,  0.0726,  0.0157,  0.1401, -0.0033, -0.0680,  0.0417, -0.0643,
        -0.0490,  0.1537,  0.0874,  0.0288, -0.0756, -0.1969,  0.1296,  0.0027,
         0.0151, -0.0408, -0.0894, -0.1477,  0.0412, -0.0216, -0.0542,  0.1032,
        -0.0335, -0.0535,  0.0620,  0.2171, -0.0756,  0.0482,  0.1665, -0.0041,
         0.0124, -0.0155,  0.0369,  0.0717,  0.0423,  0.0063,  0.0728, -0.0388,
        -0.0550,  0.0299, -0.1571, -0.0088, -0.0262,  0.0381,  0.1008, -0.1486,
         0.0313, -0.0573,  0.0129, -0.0820, -0.0403, -0.0526,  0.1564,  0.0338,
        -0.1243,  0.0347,  0.0054,  0.0512, -0.0991,  0.1368, -0.0396, -0.0025,
        -0.0707,  0.0262,  0.1113,  0.0088,  0.1391, -0.0256, -0.0473, -0.0774,
        -0.0697,  0.0203, -0.0559,  0.0614, -0.0270,  0.0174,  0.0264, -0.1179])
##########################################################
smi_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-3.7217e-06,  3.1222e-04, -2.0821e-04,  3.6819e-04, -8.4830e-04,
         1.9757e-04,  4.3033e-05, -1.2136e-05,  4.6552e-04,  1.8232e-04,
        -9.4135e-04, -2.4927e-03,  2.3055e-04, -5.7190e-04, -6.4652e-05,
         7.0450e-04,  1.3979e-04, -1.4881e-03, -6.8927e-05,  1.0804e-03,
         1.1279e-03,  2.8087e-04,  5.6152e-04, -4.5942e-04,  5.2107e-04,
        -3.0318e-04,  4.5251e-04, -3.0578e-04,  3.5255e-04, -6.3663e-05,
        -2.2417e-03,  1.0940e-02, -2.9206e-04, -6.1047e-04,  6.6054e-04,
         9.3866e-05, -3.6388e-04,  5.7041e-04,  2.1498e-04, -6.9132e-04,
         4.4061e-04,  3.9091e-04, -7.7219e-06, -3.6240e-04, -2.5592e-04,
        -2.0812e-04, -6.3705e-04,  9.5855e-04,  5.2103e-04,  4.0389e-04,
        -2.9092e-04, -1.5173e-04,  9.3273e-05, -5.3121e-04, -1.3698e-05,
         1.9544e-04,  6.8135e-04, -4.0921e-04, -4.9814e-05,  2.6914e-04,
         1.9211e-03, -1.0213e-03,  7.5749e-04, -4.3217e-05,  2.8844e-04,
        -1.2832e-03, -1.8559e-03, -1.3879e-03,  9.5934e-05,  3.6414e-04,
         9.9684e-05, -1.4281e-03,  3.2517e-04,  4.4362e-05, -1.6792e-03,
        -2.6136e-03, -2.2351e-03, -2.5150e-04, -8.7598e-04,  4.7168e-05,
        -2.8937e-04,  2.1959e-03,  2.6545e-04,  1.2376e-03, -3.2807e-05,
        -4.3806e-04,  1.9063e-04,  7.6581e-04, -6.5050e-04,  2.2013e-04,
         4.2634e-04,  9.7299e-04, -4.2676e-04,  6.0000e-05,  2.1850e-04,
        -5.0809e-03, -4.3476e-04,  1.3984e-03,  6.1212e-04, -2.3539e-04,
         5.5168e-04,  4.7432e-04, -1.7407e-03, -1.1081e-04, -2.7365e-04,
        -2.6957e-04,  1.3320e-04, -9.5450e-04, -1.3257e-03,  2.2137e-03,
        -4.5518e-04, -2.1051e-04,  2.6084e-05,  1.0286e-04,  4.7920e-04,
         1.5139e-04,  1.2640e-03,  6.8302e-04,  2.5685e-04,  1.0390e-03,
        -2.1896e-04, -2.6906e-04, -6.9297e-04, -5.1532e-04,  3.0244e-04,
        -4.3028e-04,  2.8253e-04, -4.2840e-04])
##########################################################
smi_encoder.encoder.layers.1.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0225,  0.0498,  0.0418,  ..., -0.0527, -0.0153,  0.0417],
        [ 0.0522,  0.0300,  0.0596,  ...,  0.0271,  0.0557,  0.0364],
        [ 0.0548,  0.0149,  0.0074,  ..., -0.0020,  0.0201, -0.0678],
        ...,
        [ 0.0134, -0.0292,  0.0240,  ...,  0.0355, -0.0091,  0.0176],
        [-0.0610,  0.0653,  0.0309,  ...,  0.0310, -0.0158, -0.0573],
        [ 0.0606, -0.0553,  0.0208,  ..., -0.0636, -0.0095, -0.0584]])
tensor([[-0.0225,  0.0498,  0.0418,  ..., -0.0527, -0.0153,  0.0417],
        [ 0.0522,  0.0300,  0.0596,  ...,  0.0271,  0.0557,  0.0364],
        [ 0.0548,  0.0149,  0.0074,  ..., -0.0020,  0.0201, -0.0678],
        ...,
        [ 0.0133, -0.0292,  0.0240,  ...,  0.0354, -0.0091,  0.0176],
        [-0.0610,  0.0653,  0.0309,  ...,  0.0310, -0.0158, -0.0573],
        [ 0.0605, -0.0552,  0.0208,  ..., -0.0636, -0.0095, -0.0585]])
##########################################################
smi_encoder.encoder.layers.1.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 6.4606e-08,  9.3282e-08, -6.4313e-10, -2.4633e-08, -7.1718e-08,
        -7.9758e-08,  5.7951e-09, -3.1327e-09, -5.0830e-08, -5.1471e-08,
         1.3426e-08,  5.4008e-08,  7.0685e-08, -6.1731e-08, -1.8328e-08,
         1.1183e-07, -1.2885e-07, -1.3026e-07, -1.0383e-07, -2.0805e-07,
        -1.4961e-07,  3.0572e-08, -2.3714e-07,  6.1653e-08,  1.4352e-07,
         4.2905e-08,  3.1954e-07, -2.2663e-07,  1.6629e-07,  8.6124e-08,
        -7.3201e-08, -1.2400e-07,  2.5275e-07,  1.5548e-07, -2.8730e-08,
         9.1257e-08, -2.5455e-07, -1.5054e-07,  2.3344e-07,  1.1822e-07,
         8.7617e-09, -4.4938e-08,  2.8152e-07,  1.5687e-07, -2.4547e-07,
        -5.1878e-08, -2.2717e-07,  7.0468e-08,  9.8310e-08,  9.0228e-08,
        -3.4219e-08,  5.6342e-08,  6.6149e-08,  4.5992e-08, -5.5284e-08,
        -8.0698e-08, -8.4868e-08, -1.0253e-07,  4.1100e-08, -1.3000e-07,
         4.7538e-09, -8.3959e-09, -9.0375e-09,  6.6079e-09, -2.4992e-07,
         8.0653e-08,  8.1832e-08,  2.8399e-07,  1.7762e-07, -3.2834e-07,
         9.2476e-08, -1.3850e-09,  4.8647e-08, -1.5447e-07,  2.1116e-07,
         2.6229e-07, -1.2153e-07,  1.1181e-07, -4.5351e-07, -9.0081e-11,
        -2.9018e-08,  1.2658e-07, -3.4110e-07,  1.4439e-07, -5.5278e-08,
         7.3088e-08,  2.2699e-07, -4.4348e-08,  3.0872e-07,  8.5154e-08,
         3.0699e-07,  1.9855e-08,  3.7494e-07, -1.7670e-07,  2.2313e-07,
         1.7721e-07,  6.4600e-08,  1.9740e-07,  6.4115e-08,  4.3777e-08,
         8.0271e-08, -6.4584e-08, -6.5360e-08, -2.8068e-08,  1.1102e-09,
         1.8593e-07, -8.0712e-08, -8.8081e-08,  1.7136e-07,  9.5764e-09,
         7.7189e-08, -6.6318e-08, -1.2895e-08,  1.7996e-07,  5.7397e-08,
        -9.1058e-08,  4.5964e-08,  4.9455e-08, -2.6387e-08,  7.8957e-08,
        -1.3300e-07,  8.6557e-08, -8.4428e-08,  9.4344e-08,  5.2681e-08,
         1.1254e-07, -4.6072e-08, -2.3662e-09,  3.1325e-16,  6.9475e-15,
         2.5642e-15, -1.2543e-14,  3.0650e-15,  3.5567e-15, -7.7509e-16,
        -1.8733e-15, -1.2097e-15, -7.0560e-15, -5.3490e-15,  2.6644e-15,
         2.2738e-15,  6.4158e-16, -1.4071e-15, -8.3214e-16,  8.8244e-15,
        -5.5058e-16,  1.5493e-16, -9.1555e-16,  5.4033e-15,  8.7666e-17,
        -1.1751e-14,  5.2634e-15,  1.4556e-15,  2.3774e-15,  3.8090e-15,
        -1.6030e-15,  1.5696e-15,  5.7415e-15, -4.4075e-15, -4.2309e-15,
        -9.6906e-16, -4.2865e-15, -3.3545e-16, -3.5986e-15,  9.2174e-16,
         2.7428e-15, -2.1951e-15,  4.0314e-15,  9.5047e-16,  5.0464e-16,
        -8.2916e-16,  3.9144e-16, -4.9861e-15,  9.4607e-16, -6.7235e-15,
         2.5260e-15, -1.9531e-15,  8.8582e-15, -4.6540e-15,  2.2366e-15,
        -9.1172e-17,  2.5855e-15, -6.4062e-15, -9.3103e-15, -7.8306e-15,
         4.7432e-15,  5.6711e-15,  5.3592e-15,  4.5853e-15,  1.3232e-15,
        -2.1051e-15,  7.9231e-15, -2.1815e-15, -3.5341e-15, -3.5717e-16,
         1.5181e-15, -2.9461e-15, -2.3495e-15,  1.8571e-15,  1.8786e-15,
         5.1737e-15,  7.5644e-15,  1.1996e-16, -2.5817e-15,  2.4661e-15,
        -6.9208e-16, -5.0867e-15,  7.0319e-15, -2.2658e-15,  8.9964e-15,
         2.1812e-15, -2.7723e-15, -4.0669e-15,  8.8149e-15,  5.5692e-15,
         4.8595e-15, -2.0264e-15, -3.1708e-15, -6.2718e-16, -1.6653e-14,
        -7.6727e-15, -1.4570e-14, -1.0720e-14, -6.9786e-15,  2.9877e-15,
         6.9850e-15, -8.5974e-16,  9.2291e-16,  2.0456e-16, -1.5911e-15,
        -1.6960e-15,  4.4821e-15,  5.0297e-15,  2.4600e-15,  3.8879e-15,
         5.6494e-15,  9.4655e-16,  9.3228e-15,  1.1863e-15,  2.9220e-15,
         2.8241e-16,  5.9773e-16, -1.9393e-15, -3.4496e-15,  2.3360e-15,
        -2.1781e-15, -1.8224e-15, -5.4120e-15, -5.6427e-15, -4.5057e-15,
        -1.1926e-15,  9.8327e-17,  5.6858e-15, -5.0879e-15, -1.9264e-15,
        -4.1699e-15,  2.2807e-04,  7.7545e-04, -1.1744e-04,  5.0941e-04,
         4.3931e-04, -1.2357e-04,  2.4222e-04, -1.5029e-04, -7.5688e-05,
        -2.2175e-04, -5.7933e-04, -1.2483e-04,  1.2737e-03, -4.0803e-04,
         1.0127e-03,  1.0243e-03, -2.9230e-04, -6.9669e-04, -6.0133e-04,
         5.1668e-04, -7.2469e-05, -8.3714e-04,  1.2806e-03, -2.8510e-04,
         9.2717e-04,  5.5653e-04, -4.2172e-04,  4.8077e-04,  1.7031e-03,
         9.3933e-04,  4.4377e-04,  1.4724e-03, -1.4359e-04, -1.6059e-03,
         3.1675e-04, -9.6318e-04,  9.7001e-04, -4.0014e-04,  1.4631e-03,
        -1.1991e-03, -1.0183e-03,  1.2860e-04,  5.1746e-04,  5.8521e-04,
        -8.2228e-04, -9.8790e-04,  2.0127e-04,  4.0388e-04,  4.6058e-04,
        -1.3168e-04, -6.5827e-04, -3.8557e-04, -4.7275e-04, -1.0236e-03,
         5.4921e-04, -7.9684e-04, -1.0590e-04, -5.8923e-04,  1.3662e-03,
         1.1826e-03,  8.0067e-04,  7.9328e-04, -4.7789e-04,  3.8663e-05,
         1.0374e-03, -6.8684e-04, -6.3014e-04,  8.6900e-04, -5.7325e-04,
        -3.3581e-04,  2.4701e-04,  2.7865e-04, -9.6383e-04, -1.1428e-04,
        -1.0194e-05,  1.1001e-03, -1.2334e-03, -3.5816e-04,  1.0775e-03,
         4.4079e-04, -6.9813e-04, -5.7233e-04, -6.3789e-04,  1.3135e-03,
        -1.8962e-04,  8.6416e-04,  1.0558e-05,  7.4230e-04,  3.1265e-05,
         4.0279e-04,  4.7357e-04,  6.0247e-04,  4.4126e-04,  3.4545e-04,
         7.6638e-05, -4.5263e-04, -1.0456e-03,  5.5384e-04, -2.5697e-04,
         1.1515e-03, -7.7192e-04,  1.1765e-03,  3.9631e-04, -8.8267e-04,
         1.0671e-03, -4.1946e-04, -1.0988e-03, -3.7460e-04, -8.6894e-04,
         5.7170e-04,  1.1552e-03, -6.0405e-04, -1.6635e-04, -6.1869e-05,
         2.0825e-04,  9.5634e-04, -4.9305e-04, -4.0921e-05, -7.1890e-04,
         2.7847e-05, -1.0196e-03, -7.1692e-04,  5.3984e-05,  2.5726e-04,
         1.3981e-03, -7.0161e-04,  2.5502e-04, -7.6840e-04])
##########################################################
smi_encoder.encoder.layers.1.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0195, -0.0317, -0.0510,  ..., -0.0840,  0.0122, -0.0714],
        [-0.0169, -0.0862, -0.0542,  ..., -0.0039,  0.0410,  0.0698],
        [-0.0497, -0.0115,  0.0451,  ..., -0.0327, -0.0224,  0.0855],
        ...,
        [-0.0498,  0.0312,  0.0274,  ...,  0.0140,  0.0436, -0.0074],
        [ 0.0508,  0.0038,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0864, -0.0189,  ..., -0.0154,  0.0077,  0.0106]])
tensor([[-0.0195, -0.0317, -0.0510,  ..., -0.0840,  0.0122, -0.0715],
        [-0.0169, -0.0862, -0.0542,  ..., -0.0039,  0.0410,  0.0698],
        [-0.0497, -0.0115,  0.0451,  ..., -0.0327, -0.0224,  0.0855],
        ...,
        [-0.0498,  0.0312,  0.0274,  ...,  0.0140,  0.0435, -0.0074],
        [ 0.0508,  0.0038,  0.0192,  ...,  0.0083,  0.0258, -0.0459],
        [-0.0123, -0.0864, -0.0190,  ..., -0.0154,  0.0076,  0.0106]])
##########################################################
smi_encoder.encoder.layers.1.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-3.2727e-04,  2.0479e-04, -1.2068e-04, -1.2551e-04, -8.8137e-04,
         1.5109e-04,  2.6914e-04,  5.6369e-05,  6.8862e-05,  1.3065e-05,
        -8.1048e-04, -2.0081e-03, -1.6273e-04, -5.5602e-05, -3.9805e-05,
         2.2979e-04,  6.4446e-05, -1.3303e-03, -6.2626e-05,  1.9263e-04,
         1.1847e-03, -8.5882e-05,  5.6399e-05, -4.5362e-04, -8.3964e-05,
        -2.5714e-04,  5.4881e-04,  2.9483e-05, -1.0742e-04,  7.8752e-05,
        -1.9503e-03,  8.8069e-03,  2.4018e-05, -1.7952e-04,  2.6936e-04,
         7.6708e-05,  8.9493e-05,  3.5502e-04,  6.0242e-05, -7.0401e-04,
         1.1492e-04,  7.2622e-05, -2.5580e-05,  1.4220e-04,  5.6238e-05,
         6.6604e-05, -2.8054e-04,  5.4438e-04,  1.2235e-04,  5.5702e-04,
         5.0020e-05,  2.8494e-05,  7.8835e-05,  2.7311e-05,  1.5607e-04,
         2.2298e-04,  4.2056e-04, -1.4366e-05,  2.0383e-04,  1.3526e-04,
         2.1082e-03, -1.1686e-03,  8.3648e-04,  1.0762e-04, -6.5894e-05,
        -6.1862e-04, -1.7782e-03, -1.0820e-03,  2.0748e-04,  5.0033e-04,
         2.7637e-04, -1.1754e-03,  3.8100e-04, -3.1882e-04, -1.5209e-03,
        -2.1180e-03, -2.3669e-03, -5.5246e-05, -9.2412e-04, -3.1756e-04,
        -1.5531e-04,  1.8169e-03,  7.4992e-05,  1.2175e-03,  9.2319e-05,
         7.5279e-05,  5.5189e-05,  1.0179e-03, -5.6078e-04,  9.6228e-05,
         1.2221e-04,  6.3162e-04, -2.3979e-05, -7.3305e-05,  1.2051e-04,
        -4.5552e-03,  6.5001e-05,  9.2508e-04,  1.7017e-04,  4.2423e-05,
        -9.5799e-05, -6.9657e-05, -2.0316e-03,  2.0164e-04, -1.6169e-04,
        -1.1798e-04,  9.9608e-06, -1.2780e-04, -6.7376e-04,  1.8974e-03,
         2.6608e-04,  1.3393e-04,  1.6149e-04, -3.5784e-05,  1.2602e-04,
        -4.8623e-05,  6.4251e-04,  3.6062e-04,  7.3395e-04,  5.9070e-04,
        -1.5166e-05, -2.4226e-05, -3.3833e-04, -1.3099e-04, -1.1790e-05,
        -5.3282e-05,  1.1789e-04, -2.7243e-04])
##########################################################
smi_encoder.encoder.layers.1.linear1.weight shape: torch.Size([64, 128])
tensor([[-0.0809,  0.0384,  0.1065,  ...,  0.0697,  0.1585,  0.0046],
        [ 0.0176,  0.0092, -0.0373,  ..., -0.0127, -0.0107, -0.0750],
        [ 0.0117, -0.0557, -0.0673,  ..., -0.0928,  0.0549,  0.0634],
        ...,
        [ 0.0864,  0.1034, -0.1057,  ..., -0.0676, -0.0252, -0.0317],
        [ 0.0057, -0.0809, -0.0439,  ..., -0.0148, -0.0933, -0.0473],
        [-0.0622, -0.0319, -0.0700,  ...,  0.0439, -0.0144, -0.0280]])
tensor([[-0.0808,  0.0384,  0.1065,  ...,  0.0697,  0.1585,  0.0046],
        [ 0.0176,  0.0092, -0.0373,  ..., -0.0127, -0.0107, -0.0750],
        [ 0.0117, -0.0557, -0.0673,  ..., -0.0928,  0.0549,  0.0634],
        ...,
        [ 0.0864,  0.1034, -0.1057,  ..., -0.0676, -0.0252, -0.0317],
        [ 0.0057, -0.0809, -0.0439,  ..., -0.0149, -0.0933, -0.0473],
        [-0.0622, -0.0318, -0.0700,  ...,  0.0439, -0.0144, -0.0280]])
##########################################################
smi_encoder.encoder.layers.1.linear1.bias shape: torch.Size([64])
tensor([ 0.0390, -0.0360,  0.0304,  0.0522,  0.0824, -0.0713,  0.0320, -0.0662,
         0.0418,  0.0410, -0.0810,  0.0478,  0.0367,  0.0600,  0.0502,  0.0205,
        -0.0817,  0.0190,  0.0307, -0.0279, -0.0589,  0.0853, -0.0780,  0.0147,
        -0.0857, -0.0591,  0.0313,  0.0502, -0.0049, -0.0560, -0.0108,  0.0365,
        -0.0032, -0.0299,  0.0512, -0.0053, -0.0227,  0.0858, -0.0145, -0.0820,
        -0.0140, -0.0369,  0.0268, -0.0360, -0.0799, -0.0019,  0.0174, -0.0067,
         0.0582, -0.0320,  0.0775,  0.0108,  0.0556, -0.0371, -0.0313, -0.0403,
         0.0199, -0.0528, -0.0291,  0.0233,  0.0368, -0.0160,  0.0090,  0.0428])
tensor([ 0.0405, -0.0361,  0.0303,  0.0523,  0.0838, -0.0714,  0.0326, -0.0662,
         0.0411,  0.0421, -0.0810,  0.0477,  0.0366,  0.0593,  0.0506,  0.0209,
        -0.0808,  0.0193,  0.0305, -0.0274, -0.0587,  0.0857, -0.0780,  0.0151,
        -0.0857, -0.0590,  0.0325,  0.0496, -0.0038, -0.0557, -0.0103,  0.0355,
        -0.0026, -0.0298,  0.0511, -0.0053, -0.0226,  0.0855, -0.0144, -0.0820,
        -0.0132, -0.0359,  0.0269, -0.0361, -0.0799, -0.0021,  0.0177, -0.0070,
         0.0581, -0.0318,  0.0782,  0.0097,  0.0547, -0.0370, -0.0312, -0.0396,
         0.0188, -0.0528, -0.0290,  0.0232,  0.0367, -0.0162,  0.0087,  0.0429])
##########################################################
smi_encoder.encoder.layers.1.linear2.weight shape: torch.Size([128, 64])
tensor([[ 0.0440,  0.0633,  0.0414,  ...,  0.1342,  0.0143, -0.0068],
        [ 0.0472,  0.0151,  0.0323,  ..., -0.0268,  0.0435, -0.0323],
        [-0.0880,  0.0102, -0.0640,  ..., -0.0099,  0.0668,  0.1059],
        ...,
        [-0.0299, -0.0792, -0.0207,  ...,  0.0200, -0.0350,  0.1171],
        [ 0.0602, -0.0391, -0.0578,  ..., -0.1355,  0.0426,  0.0282],
        [-0.0242, -0.0056,  0.0089,  ..., -0.0019, -0.0222, -0.0029]])
tensor([[ 0.0441,  0.0633,  0.0414,  ...,  0.1341,  0.0143, -0.0067],
        [ 0.0472,  0.0151,  0.0323,  ..., -0.0268,  0.0435, -0.0323],
        [-0.0880,  0.0102, -0.0640,  ..., -0.0099,  0.0668,  0.1059],
        ...,
        [-0.0299, -0.0792, -0.0207,  ...,  0.0200, -0.0350,  0.1172],
        [ 0.0602, -0.0391, -0.0579,  ..., -0.1355,  0.0425,  0.0282],
        [-0.0242, -0.0056,  0.0089,  ..., -0.0019, -0.0222, -0.0030]])
##########################################################
smi_encoder.encoder.layers.1.linear2.bias shape: torch.Size([128])
tensor([-0.0847, -0.0490, -0.0445, -0.1036,  0.1047,  0.0644, -0.0245, -0.0003,
         0.0468, -0.1232,  0.0717, -0.1169,  0.0174,  0.0834,  0.0273,  0.0251,
        -0.1055, -0.0227, -0.0934, -0.1000, -0.1053, -0.0765,  0.0598, -0.0744,
         0.0463, -0.1234,  0.0209,  0.0470,  0.1235, -0.0195,  0.0541, -0.0480,
         0.1148, -0.0727,  0.1159,  0.0683,  0.0448,  0.0013,  0.0749, -0.0401,
        -0.0255,  0.0300, -0.0717,  0.0446,  0.1231, -0.0057,  0.0908, -0.0754,
         0.0632, -0.0747,  0.0050,  0.0100, -0.0558, -0.1103, -0.0367, -0.1223,
         0.0116,  0.0084,  0.1070,  0.0195,  0.0647, -0.1003,  0.1218, -0.0149,
        -0.0808, -0.0539,  0.0720, -0.0909,  0.0187, -0.0974,  0.0365,  0.0534,
         0.1002,  0.0488, -0.0039,  0.0430, -0.0285,  0.0922, -0.0023, -0.1090,
        -0.0465, -0.1081, -0.1037,  0.0554,  0.1193, -0.0494, -0.0893, -0.0008,
         0.0709, -0.0112,  0.0506, -0.0140, -0.0871, -0.0452, -0.0507,  0.0925,
         0.0545,  0.0031,  0.0901, -0.0819, -0.1022,  0.1177,  0.0682,  0.0710,
         0.0319, -0.0796,  0.0767, -0.1053, -0.0900, -0.0381,  0.0686, -0.0737,
        -0.0403,  0.0102, -0.1008, -0.0361, -0.0079,  0.1185,  0.0208, -0.0328,
         0.0247, -0.0611, -0.1211,  0.0626, -0.0295,  0.0828,  0.0049, -0.0736])
tensor([-0.0847, -0.0495, -0.0446, -0.1045,  0.1034,  0.0644, -0.0247, -0.0005,
         0.0471, -0.1236,  0.0720, -0.1181,  0.0173,  0.0832,  0.0272,  0.0253,
        -0.1051, -0.0216, -0.0935, -0.0998, -0.1059, -0.0761,  0.0597, -0.0747,
         0.0464, -0.1237,  0.0210,  0.0471,  0.1229, -0.0197,  0.0565, -0.0380,
         0.1148, -0.0724,  0.1160,  0.0683,  0.0448,  0.0012,  0.0752, -0.0392,
        -0.0258,  0.0299, -0.0718,  0.0444,  0.1230, -0.0059,  0.0902, -0.0758,
         0.0632, -0.0750,  0.0050,  0.0106, -0.0561, -0.1105, -0.0368, -0.1233,
         0.0119,  0.0077,  0.1070,  0.0196,  0.0628, -0.1012,  0.1217, -0.0150,
        -0.0811, -0.0532,  0.0738, -0.0921,  0.0186, -0.0978,  0.0360,  0.0529,
         0.1003,  0.0489, -0.0017,  0.0388, -0.0272,  0.0926, -0.0014, -0.1093,
        -0.0467, -0.1084, -0.1042,  0.0549,  0.1195, -0.0496, -0.0896, -0.0010,
         0.0704, -0.0118,  0.0504, -0.0142, -0.0874, -0.0454, -0.0509,  0.0960,
         0.0543,  0.0027,  0.0903, -0.0818, -0.1025,  0.1177,  0.0693,  0.0711,
         0.0327, -0.0798,  0.0767, -0.1055, -0.0907, -0.0372,  0.0684, -0.0740,
        -0.0402,  0.0100, -0.1011, -0.0363, -0.0069,  0.1180,  0.0215, -0.0332,
         0.0244, -0.0613, -0.1215,  0.0609, -0.0298,  0.0829,  0.0048, -0.0741])
##########################################################
smi_encoder.encoder.layers.1.norm1.weight shape: torch.Size([128])
tensor([ 0.0841, -0.0202,  0.1208,  0.0397,  0.0984,  0.0485, -0.0402,  0.0064,
         0.0076, -0.0090, -0.0895,  0.0992,  0.0778,  0.0169,  0.0238,  0.0534,
         0.0399, -0.1431,  0.1446, -0.0292, -0.1332, -0.0212,  0.0350,  0.0686,
        -0.0666,  0.0636,  0.0936, -0.0196,  0.0182,  0.0004, -0.0805,  0.0788,
         0.0522, -0.1728, -0.0415,  0.0216, -0.0040, -0.0808,  0.0308, -0.0589,
        -0.0086,  0.0643, -0.0439, -0.0254,  0.0496, -0.0012,  0.0258, -0.1334,
         0.0601, -0.0871, -0.0663, -0.0059, -0.0061,  0.0426, -0.0380, -0.0140,
         0.0956,  0.0117, -0.1134,  0.0219, -0.0789,  0.1091, -0.0900,  0.0287,
         0.0281, -0.0587, -0.0701,  0.0615, -0.1003, -0.0666, -0.0272,  0.1615,
        -0.0470, -0.1313, -0.0642,  0.0713, -0.1295, -0.0494, -0.0633,  0.0830,
         0.0405, -0.2078,  0.0424, -0.1345,  0.0141, -0.0159, -0.1516, -0.1322,
         0.0844, -0.0420, -0.0218, -0.1046,  0.0374,  0.0345, -0.0745, -0.0721,
         0.0078, -0.0917,  0.0818,  0.0517,  0.0888,  0.0365, -0.1619, -0.0421,
        -0.0427, -0.0506, -0.0367,  0.1311,  0.0853,  0.1393,  0.0462, -0.0285,
         0.0578,  0.0223, -0.0245, -0.0599,  0.0540, -0.0880,  0.0939, -0.0469,
        -0.0412,  0.0361,  0.0683,  0.0108,  0.0142, -0.0436,  0.0111,  0.0483])
tensor([ 0.0827, -0.0197,  0.1208,  0.0397,  0.0961,  0.0485, -0.0399,  0.0064,
         0.0076, -0.0091, -0.0897,  0.1022,  0.0778,  0.0170,  0.0239,  0.0534,
         0.0396, -0.1423,  0.1445, -0.0292, -0.1324, -0.0215,  0.0351,  0.0684,
        -0.0666,  0.0636,  0.0929, -0.0196,  0.0187,  0.0003, -0.0751,  0.0947,
         0.0522, -0.1746, -0.0420,  0.0216, -0.0040, -0.0808,  0.0295, -0.0605,
        -0.0086,  0.0644, -0.0440, -0.0254,  0.0496, -0.0012,  0.0269, -0.1331,
         0.0601, -0.0868, -0.0664, -0.0047, -0.0061,  0.0427, -0.0379, -0.0143,
         0.0959,  0.0113, -0.1137,  0.0219, -0.0764,  0.1049, -0.0911,  0.0286,
         0.0281, -0.0589, -0.0722,  0.0572, -0.1005, -0.0669, -0.0273,  0.1619,
        -0.0466, -0.1301, -0.0644,  0.0534, -0.1299, -0.0493, -0.0608,  0.0831,
         0.0405, -0.2077,  0.0423, -0.1354,  0.0140, -0.0159, -0.1523, -0.1324,
         0.0848, -0.0420, -0.0206, -0.1047,  0.0374,  0.0347, -0.0741, -0.0834,
         0.0077, -0.0910,  0.0819,  0.0512,  0.0887,  0.0368, -0.1583, -0.0420,
        -0.0442, -0.0508, -0.0366,  0.1313,  0.0845,  0.1381,  0.0464, -0.0284,
         0.0579,  0.0223, -0.0241, -0.0599,  0.0529, -0.0880,  0.0934, -0.0471,
        -0.0411,  0.0362,  0.0679,  0.0086,  0.0143, -0.0434,  0.0111,  0.0479])
##########################################################
smi_encoder.encoder.layers.1.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-5.7380e-04, -8.3078e-04, -1.1008e-04, -3.5398e-04, -1.0926e-03,
         1.9281e-05, -5.1980e-04, -7.4920e-05,  2.0405e-04,  3.0981e-04,
         1.0977e-03, -1.8648e-03, -2.3782e-04, -2.8476e-04, -3.7833e-04,
         3.0047e-04,  1.2810e-05,  9.9934e-04, -8.4371e-05, -6.9398e-05,
        -8.3632e-04,  3.4358e-04, -4.0013e-05, -7.3220e-04,  2.2060e-04,
        -5.8297e-04,  5.5975e-04,  2.2309e-04, -7.3039e-04, -2.0632e-04,
         2.5261e-03,  1.0923e-02, -5.2364e-05,  1.2984e-04, -3.5941e-04,
        -8.9525e-05, -7.7869e-05, -2.9157e-04,  2.4674e-04,  1.1151e-03,
        -4.7105e-04,  2.7036e-05,  1.1562e-04, -3.1744e-04,  1.0659e-04,
         9.8692e-05, -8.5784e-04, -3.7857e-04,  3.3706e-05, -5.2627e-04,
        -4.4191e-05,  1.2495e-03, -2.0951e-04, -1.4827e-04, -2.4595e-04,
        -8.2912e-04,  2.7936e-04, -1.0031e-03, -1.0383e-04,  3.5484e-04,
        -2.4484e-03, -1.2063e-03, -4.4689e-04,  1.4339e-04, -4.2366e-04,
         1.0738e-03,  2.3020e-03, -1.9852e-03, -7.4906e-05, -5.2371e-04,
        -6.6220e-04, -8.3785e-04, -6.4579e-04,  2.0215e-04,  2.3555e-03,
        -4.1213e-03,  1.6689e-03,  3.0366e-04,  1.4456e-03, -4.3521e-04,
        -6.0841e-04, -8.7316e-04, -3.5429e-05, -7.4450e-04,  8.7971e-05,
        -1.7876e-04,  6.0551e-05, -6.0139e-04, -6.2298e-04, -1.0137e-04,
        -1.9527e-04, -5.0175e-04, -2.1963e-04, -3.3249e-04, -2.0098e-04,
         5.2353e-03, -1.7086e-05, -8.2645e-04,  1.3015e-04, -1.9837e-04,
        -2.8971e-04, -2.5589e-04,  1.3184e-03, -1.9115e-04,  5.4392e-04,
         2.9104e-04,  1.6296e-04, -1.7774e-04, -8.6574e-04,  1.2379e-03,
         3.5727e-04, -2.4855e-04,  1.0006e-04, -4.7115e-04, -4.7754e-04,
         1.4651e-04,  1.2110e-03, -2.5613e-04,  7.6406e-04, -1.0634e-03,
         2.4032e-04, -1.8143e-04, -5.7046e-04, -2.4981e-03, -5.7532e-04,
         3.0781e-04,  6.5532e-04, -8.5553e-04])
##########################################################
smi_encoder.encoder.layers.1.norm2.weight shape: torch.Size([128])
tensor([-0.1449,  0.0988,  0.0088,  0.0086,  0.1060,  0.1030, -0.0441, -0.0622,
        -0.0319,  0.0121,  0.0852,  0.0952, -0.0994, -0.0855, -0.0003, -0.0247,
         0.0798,  0.1223,  0.0631, -0.1196, -0.1045,  0.0969, -0.0486, -0.0041,
         0.0317, -0.0030,  0.1310,  0.0267, -0.0523, -0.0053,  0.1793, -0.1632,
         0.0130, -0.0660,  0.0668,  0.0109,  0.0253,  0.0078,  0.1248,  0.2153,
        -0.1186, -0.0305,  0.0672, -0.0748, -0.0514,  0.0470, -0.1037, -0.0663,
         0.0375,  0.0729,  0.0154,  0.1401, -0.0033, -0.0681,  0.0417, -0.0641,
        -0.0484,  0.1539,  0.0869,  0.0288, -0.0779, -0.1988,  0.1279,  0.0026,
         0.0153, -0.0411, -0.0878, -0.1493,  0.0409, -0.0211, -0.0542,  0.1031,
        -0.0338, -0.0557,  0.0615,  0.2221, -0.0765,  0.0484,  0.1675, -0.0038,
         0.0122, -0.0113,  0.0371,  0.0700,  0.0423,  0.0062,  0.0712, -0.0381,
        -0.0544,  0.0299, -0.1574, -0.0092, -0.0266,  0.0381,  0.1009, -0.1429,
         0.0315, -0.0574,  0.0125, -0.0823, -0.0399, -0.0532,  0.1604,  0.0340,
        -0.1239,  0.0345,  0.0054,  0.0493, -0.0998,  0.1377, -0.0394, -0.0026,
        -0.0706,  0.0262,  0.1115,  0.0088,  0.1399, -0.0261, -0.0476, -0.0772,
        -0.0698,  0.0202, -0.0565,  0.0619, -0.0269,  0.0180,  0.0264, -0.1181])
tensor([-1.4419e-01,  9.8980e-02,  9.0075e-03,  1.4303e-02,  1.0267e-01,
         1.0289e-01, -4.4058e-02, -6.2196e-02, -3.2748e-02,  1.2421e-02,
         8.5655e-02,  9.5980e-02, -9.9420e-02, -8.5433e-02, -1.5042e-04,
        -2.4946e-02,  7.8006e-02,  1.2019e-01,  6.1821e-02, -1.1919e-01,
        -1.0336e-01,  9.6476e-02, -4.8514e-02, -4.3710e-03,  3.1871e-02,
        -2.2216e-03,  1.3054e-01,  2.6920e-02, -5.1048e-02, -5.3424e-03,
         1.7759e-01, -1.6999e-01,  1.2725e-02, -6.6862e-02,  6.6795e-02,
         1.0962e-02,  2.5376e-02,  7.9103e-03,  1.2433e-01,  2.1559e-01,
        -1.1869e-01, -3.0584e-02,  6.7254e-02, -7.4813e-02, -5.1285e-02,
         4.7053e-02, -1.0314e-01, -6.5240e-02,  3.7547e-02,  7.2633e-02,
         1.5515e-02,  1.4036e-01, -3.4837e-03, -6.7943e-02,  4.1637e-02,
        -6.5431e-02, -4.8804e-02,  1.5373e-01,  8.5808e-02,  2.8823e-02,
        -7.4374e-02, -1.9681e-01,  1.2648e-01,  2.5687e-03,  1.5061e-02,
        -4.0218e-02, -9.0336e-02, -1.4877e-01,  4.0868e-02, -2.0645e-02,
        -5.4281e-02,  1.0238e-01, -3.3477e-02, -5.2501e-02,  6.2934e-02,
         2.1491e-01, -7.5347e-02,  4.8879e-02,  1.6606e-01, -3.9492e-03,
         1.2287e-02, -1.1715e-02,  3.7799e-02,  6.9924e-02,  4.2455e-02,
         6.4584e-03,  7.1520e-02, -3.8578e-02, -5.4271e-02,  3.0389e-02,
        -1.5723e-01, -9.1949e-03, -2.6636e-02,  3.7912e-02,  1.0056e-01,
        -1.5102e-01,  3.1532e-02, -5.6579e-02,  1.2863e-02, -8.1656e-02,
        -3.9929e-02, -5.3094e-02,  1.5656e-01,  3.4083e-02, -1.2487e-01,
         3.4366e-02,  4.9635e-03,  4.7090e-02, -9.9568e-02,  1.3382e-01,
        -3.9132e-02, -2.6452e-03, -7.0237e-02,  2.6202e-02,  1.1130e-01,
         9.0186e-03,  1.3898e-01, -2.2819e-02, -4.7676e-02, -7.7060e-02,
        -6.9678e-02,  1.9762e-02, -5.6828e-02,  5.9477e-02, -2.7102e-02,
         1.8002e-02,  2.6171e-02, -1.1804e-01])
##########################################################
smi_encoder.encoder.layers.1.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 2.2954e-04, -3.8469e-04,  1.3811e-03, -5.1458e-03, -1.5862e-03,
        -1.0942e-04,  1.7280e-04,  9.7044e-05, -1.4076e-03, -3.9951e-04,
         5.7954e-04, -1.0081e-03,  3.5246e-05,  1.9668e-04,  3.9774e-04,
        -1.2075e-03,  1.2220e-03,  1.4095e-03,  7.3685e-04, -4.8243e-04,
         4.7022e-04,  7.8449e-04,  3.2384e-04,  5.0977e-04,  4.7637e-04,
        -5.6280e-04,  1.7442e-04,  7.3814e-04,  1.5742e-03,  1.9105e-04,
         2.1362e-03, -8.1311e-03, -2.4693e-04, -1.4055e-04,  1.9393e-04,
         2.2597e-04,  1.5972e-04,  2.1792e-04,  6.2607e-04,  6.4201e-04,
         1.6519e-04,  1.0682e-04,  1.8959e-04,  5.0620e-05,  1.5741e-04,
         4.4307e-05,  7.8718e-04,  1.6414e-04, -3.1718e-05, -1.2010e-04,
         1.6769e-04,  5.1606e-04,  4.9066e-04, -3.2096e-05,  1.2159e-04,
         1.3535e-03, -6.1450e-04, -4.4190e-04, -2.9920e-04,  6.8924e-05,
         3.3696e-03,  6.8598e-04,  6.2447e-04, -3.2661e-04,  3.4542e-04,
        -2.9286e-03, -2.5477e-03,  9.4047e-04,  3.4427e-04, -3.2650e-04,
         6.7191e-04,  4.5656e-05,  2.7032e-04, -1.2618e-03,  5.2800e-03,
        -2.4575e-03, -1.4031e-03,  9.4157e-04,  6.8483e-04,  5.0454e-05,
        -6.9164e-05, -2.3135e-04, -6.2442e-04, -1.4094e-04,  1.5635e-04,
        -5.5310e-04,  1.6824e-04,  2.6772e-05,  1.0239e-03, -1.7607e-03,
         1.4419e-04, -3.7222e-05,  9.0360e-06,  3.4276e-04, -3.6925e-04,
        -3.9617e-03, -9.3522e-04,  3.7980e-04,  5.0736e-04, -2.8939e-04,
         1.0817e-04, -3.1959e-05,  9.9556e-04,  1.2758e-04, -2.6937e-04,
         2.2240e-04, -8.1079e-04,  9.6108e-04,  6.8405e-04,  7.9077e-04,
         4.1597e-04,  1.0897e-04, -7.5188e-04, -5.4885e-04, -7.1833e-04,
         1.7188e-04,  1.2478e-03,  2.6795e-03, -1.9069e-03,  4.2715e-04,
         2.0326e-04,  5.5484e-04,  2.9716e-04, -3.6769e-03,  6.1436e-04,
         2.3583e-05,  5.5772e-04,  3.9938e-04])
##########################################################
prot_encoder.embedding.weight shape: torch.Size([29, 128])
tensor([[ 2.4886e-01,  1.9467e-01,  2.3676e-01,  ..., -1.7926e-01,
         -8.3672e-01,  6.2781e-01],
        [ 3.8768e-01, -8.0246e-01, -1.1083e-01,  ..., -6.9111e-02,
         -1.7946e-02,  8.1375e-01],
        [-3.6332e-02, -6.9242e-01, -1.1287e+00,  ..., -7.9413e-01,
         -4.9074e-01, -8.7455e-01],
        ...,
        [ 7.5512e-01, -5.5864e-01, -5.0096e-01,  ...,  2.4155e-01,
          5.0867e-01, -1.3138e+00],
        [-3.2454e-02, -7.2644e-01,  7.3096e-01,  ..., -9.9326e-01,
          4.8812e-01,  1.4374e-03],
        [-1.9197e+00,  1.5667e-01,  3.5023e-01,  ...,  7.4790e-01,
         -3.3693e-01, -4.8888e-01]])
tensor([[ 2.4886e-01,  1.9467e-01,  2.3676e-01,  ..., -1.7926e-01,
         -8.3672e-01,  6.2781e-01],
        [ 3.8773e-01, -8.0237e-01, -1.1089e-01,  ..., -6.9092e-02,
         -1.7767e-02,  8.1371e-01],
        [-3.6332e-02, -6.9242e-01, -1.1287e+00,  ..., -7.9413e-01,
         -4.9074e-01, -8.7455e-01],
        ...,
        [ 7.5512e-01, -5.5864e-01, -5.0096e-01,  ...,  2.4155e-01,
          5.0867e-01, -1.3138e+00],
        [-3.2454e-02, -7.2644e-01,  7.3096e-01,  ..., -9.9326e-01,
          4.8812e-01,  1.4374e-03],
        [-1.9197e+00,  1.5667e-01,  3.5023e-01,  ...,  7.4790e-01,
         -3.3693e-01, -4.8888e-01]])
##########################################################
prot_encoder.dense.weight shape: torch.Size([300, 2500])
tensor([[-0.0034,  0.0244,  0.0101,  ...,  0.0024, -0.0082,  0.0129],
        [ 0.0132, -0.0080,  0.0097,  ...,  0.0009, -0.0440, -0.0182],
        [-0.0321, -0.0038,  0.0083,  ..., -0.0067,  0.0232,  0.0017],
        ...,
        [ 0.0083,  0.0088,  0.0073,  ...,  0.0070, -0.0289, -0.0191],
        [-0.0123,  0.0150, -0.0053,  ..., -0.0075,  0.0372,  0.0024],
        [-0.0072, -0.0144,  0.0070,  ..., -0.0020,  0.0109,  0.0202]])
tensor([[-0.0035,  0.0239,  0.0101,  ...,  0.0024, -0.0082,  0.0129],
        [ 0.0131, -0.0076,  0.0096,  ...,  0.0010, -0.0438, -0.0180],
        [-0.0322, -0.0036,  0.0083,  ..., -0.0067,  0.0232,  0.0017],
        ...,
        [ 0.0083,  0.0086,  0.0073,  ...,  0.0069, -0.0289, -0.0191],
        [-0.0129,  0.0154, -0.0063,  ..., -0.0076,  0.0371,  0.0023],
        [-0.0072, -0.0144,  0.0070,  ..., -0.0020,  0.0109,  0.0202]])
##########################################################
prot_encoder.dense.bias shape: torch.Size([300])
tensor([-0.0078,  0.0094, -0.0063, -0.0140,  0.0074,  0.0195, -0.0125,  0.0059,
         0.0096, -0.0005, -0.0186,  0.0013, -0.0123,  0.0081, -0.0027, -0.0117,
        -0.0083,  0.0044,  0.0033, -0.0121,  0.0047,  0.0170,  0.0196,  0.0009,
         0.0023, -0.0177, -0.0168,  0.0094, -0.0172,  0.0051, -0.0088,  0.0029,
         0.0172,  0.0185,  0.0027, -0.0102,  0.0097, -0.0132, -0.0148, -0.0030,
        -0.0174,  0.0108, -0.0040,  0.0165, -0.0176, -0.0044,  0.0107, -0.0140,
         0.0087, -0.0003, -0.0091,  0.0036,  0.0112, -0.0167,  0.0190,  0.0162,
        -0.0141,  0.0004,  0.0045,  0.0113, -0.0163, -0.0021, -0.0133, -0.0196,
         0.0016, -0.0107, -0.0144, -0.0139,  0.0147,  0.0026, -0.0056,  0.0153,
        -0.0144,  0.0161,  0.0169, -0.0040,  0.0194, -0.0103, -0.0020, -0.0047,
         0.0035,  0.0160, -0.0132,  0.0038,  0.0160,  0.0170, -0.0016, -0.0085,
        -0.0102, -0.0090,  0.0012,  0.0163, -0.0095, -0.0087, -0.0005, -0.0134,
         0.0032,  0.0065, -0.0032,  0.0200,  0.0068,  0.0068, -0.0199,  0.0191,
         0.0131, -0.0103, -0.0075,  0.0094, -0.0198,  0.0125, -0.0149, -0.0109,
        -0.0118, -0.0199, -0.0129, -0.0078,  0.0031,  0.0063,  0.0183, -0.0197,
        -0.0022, -0.0105, -0.0067,  0.0004, -0.0052, -0.0043, -0.0143, -0.0137,
        -0.0121,  0.0019,  0.0193,  0.0067, -0.0141,  0.0137, -0.0161, -0.0068,
         0.0089,  0.0186,  0.0196, -0.0116, -0.0072, -0.0124,  0.0144,  0.0112,
         0.0134, -0.0162,  0.0187, -0.0024, -0.0150,  0.0094, -0.0188,  0.0039,
        -0.0002,  0.0028, -0.0120,  0.0164, -0.0079, -0.0087, -0.0197, -0.0182,
         0.0069, -0.0078,  0.0057, -0.0155, -0.0104, -0.0114, -0.0001, -0.0087,
         0.0087, -0.0048, -0.0050, -0.0036, -0.0048,  0.0138, -0.0128,  0.0111,
        -0.0160,  0.0177, -0.0136, -0.0129, -0.0142,  0.0101, -0.0178,  0.0115,
         0.0190,  0.0069,  0.0034, -0.0080,  0.0184,  0.0152, -0.0040,  0.0194,
         0.0012, -0.0030, -0.0005, -0.0155,  0.0028,  0.0063,  0.0047,  0.0046,
        -0.0150,  0.0034,  0.0050, -0.0025, -0.0089, -0.0160, -0.0081, -0.0002,
         0.0014, -0.0046, -0.0176,  0.0086, -0.0040,  0.0095, -0.0148,  0.0121,
         0.0048,  0.0006,  0.0050, -0.0023,  0.0062, -0.0028,  0.0040,  0.0128,
        -0.0065,  0.0193,  0.0016,  0.0025,  0.0140,  0.0172, -0.0089,  0.0150,
        -0.0156,  0.0008,  0.0124,  0.0110,  0.0161, -0.0191, -0.0133, -0.0008,
         0.0073,  0.0079, -0.0071,  0.0161, -0.0130, -0.0044, -0.0036,  0.0022,
        -0.0023, -0.0199, -0.0099, -0.0166, -0.0118,  0.0176, -0.0132, -0.0168,
         0.0152, -0.0183, -0.0154,  0.0155,  0.0097, -0.0147, -0.0133,  0.0113,
         0.0097,  0.0137, -0.0002, -0.0160,  0.0082,  0.0055,  0.0137, -0.0051,
        -0.0073,  0.0121, -0.0074,  0.0075, -0.0044, -0.0181,  0.0007, -0.0171,
         0.0046,  0.0112, -0.0181, -0.0197, -0.0067, -0.0131,  0.0120,  0.0101,
         0.0012,  0.0008, -0.0099, -0.0051, -0.0015, -0.0189, -0.0015,  0.0177,
         0.0098,  0.0008,  0.0181,  0.0087])
tensor([-7.7038e-03,  9.4760e-03, -6.3377e-03, -1.3974e-02,  7.3962e-03,
         1.9537e-02, -1.2407e-02,  5.9173e-03,  9.6295e-03, -4.9509e-04,
        -1.8601e-02,  1.3540e-03, -1.2228e-02,  8.1404e-03, -2.7569e-03,
        -1.1602e-02, -8.1633e-03,  4.3666e-03,  3.3369e-03, -1.2097e-02,
         4.6071e-03,  1.7027e-02,  1.9755e-02,  7.4914e-04,  2.2858e-03,
        -1.7816e-02, -1.6884e-02,  9.5110e-03, -1.7092e-02,  4.8616e-03,
        -8.7920e-03,  2.8289e-03,  1.6719e-02,  1.8587e-02,  2.5032e-03,
        -1.0193e-02,  9.7353e-03, -1.3276e-02, -1.4811e-02, -3.0085e-03,
        -1.7449e-02,  1.0771e-02, -3.9502e-03,  1.6468e-02, -1.7397e-02,
        -4.7110e-03,  1.0706e-02, -1.3898e-02,  8.6085e-03, -3.2573e-04,
        -9.1047e-03,  3.5006e-03,  1.1221e-02, -1.6700e-02,  1.8959e-02,
         1.6172e-02, -1.4126e-02,  1.5720e-04,  4.4828e-03,  1.1245e-02,
        -1.6227e-02, -2.1510e-03, -1.3300e-02, -1.9636e-02,  1.6846e-03,
        -1.0837e-02, -1.4412e-02, -1.4112e-02,  1.4737e-02,  2.6721e-03,
        -6.0567e-03,  1.4802e-02, -1.4354e-02,  1.6113e-02,  1.6976e-02,
        -3.9462e-03,  1.9444e-02, -1.0229e-02, -1.9511e-03, -4.7389e-03,
         3.5054e-03,  1.6010e-02, -1.3215e-02,  3.7886e-03,  1.6002e-02,
         1.7059e-02, -1.6216e-03, -8.5905e-03, -1.0509e-02, -8.9817e-03,
         9.0730e-04,  1.6242e-02, -9.5621e-03, -8.7059e-03, -6.7754e-04,
        -1.3678e-02,  3.2335e-03,  6.3495e-03, -3.3044e-03,  2.0016e-02,
         6.7597e-03,  6.9317e-03, -2.0235e-02,  1.9236e-02,  1.3160e-02,
        -1.0489e-02, -7.4747e-03,  9.2248e-03, -1.9900e-02,  1.2569e-02,
        -1.4954e-02, -1.0875e-02, -1.1714e-02, -1.9868e-02, -1.2896e-02,
        -7.7671e-03,  3.0256e-03,  6.2108e-03,  1.8657e-02, -1.9593e-02,
        -2.3336e-03, -1.0566e-02, -6.6919e-03,  4.4225e-04, -5.3091e-03,
        -4.2617e-03, -1.4444e-02, -1.3971e-02, -1.2135e-02,  1.5262e-03,
         1.9341e-02,  6.9293e-03, -1.4149e-02,  1.3663e-02, -1.6236e-02,
        -6.8475e-03,  8.7976e-03,  1.8599e-02,  1.9631e-02, -1.1446e-02,
        -7.2415e-03, -1.2694e-02,  1.4384e-02,  1.1164e-02,  1.3444e-02,
        -1.6141e-02,  1.8559e-02, -2.5322e-03, -1.4977e-02,  9.3940e-03,
        -1.8689e-02,  3.8003e-03, -1.7442e-04,  2.8871e-03, -1.1993e-02,
         1.6374e-02, -7.8301e-03, -8.7194e-03, -2.0085e-02, -1.8100e-02,
         6.9872e-03, -7.8189e-03,  5.6383e-03, -1.5456e-02, -1.0362e-02,
        -1.1468e-02, -1.5789e-05, -8.7215e-03,  8.6906e-03, -4.7968e-03,
        -4.8829e-03, -3.6815e-03, -4.8935e-03,  1.3765e-02, -1.2609e-02,
         1.0841e-02, -1.5934e-02,  1.7669e-02, -1.3615e-02, -1.3004e-02,
        -1.4294e-02,  1.0088e-02, -1.7791e-02,  1.1504e-02,  1.9195e-02,
         6.8496e-03,  3.5005e-03, -8.1522e-03,  1.8421e-02,  1.5409e-02,
        -4.0012e-03,  1.9357e-02,  6.5117e-04, -2.9951e-03, -8.1279e-04,
        -1.5562e-02,  2.8006e-03,  6.1916e-03,  4.7193e-03,  4.1314e-03,
        -1.5067e-02,  3.3554e-03,  4.9815e-03, -2.5739e-03, -9.0999e-03,
        -1.5995e-02, -8.1763e-03, -2.2541e-04,  1.0832e-03, -4.6919e-03,
        -1.7596e-02,  8.5709e-03, -3.9983e-03,  9.3658e-03, -1.4778e-02,
         1.2114e-02,  4.7371e-03,  6.4815e-04,  5.0146e-03, -2.3194e-03,
         6.3601e-03, -2.6579e-03,  4.0474e-03,  1.2308e-02, -6.5169e-03,
         1.9234e-02,  1.5352e-03,  2.3452e-03,  1.3799e-02,  1.7277e-02,
        -9.0107e-03,  1.5106e-02, -1.5750e-02,  7.5473e-04,  1.2434e-02,
         1.0836e-02,  1.6000e-02, -1.9225e-02, -1.3636e-02, -8.1907e-04,
         7.0827e-03,  7.7811e-03, -7.2469e-03,  1.6050e-02, -1.3102e-02,
        -4.3820e-03, -3.6602e-03,  2.0545e-03, -2.2547e-03, -1.9930e-02,
        -9.9197e-03, -1.6603e-02, -1.1809e-02,  1.7616e-02, -1.3197e-02,
        -1.6722e-02,  1.5302e-02, -1.8366e-02, -1.5591e-02,  1.5535e-02,
         9.6405e-03, -1.4722e-02, -1.3334e-02,  1.1412e-02,  9.7456e-03,
         1.3604e-02, -2.0860e-04, -1.6080e-02,  8.1856e-03,  5.4765e-03,
         1.3653e-02, -5.0145e-03, -7.3365e-03,  1.2212e-02, -7.3433e-03,
         7.4931e-03, -4.1849e-03, -1.7985e-02,  6.8515e-04, -1.7402e-02,
         4.7007e-03,  1.1264e-02, -1.7999e-02, -1.9824e-02, -6.6928e-03,
        -1.3090e-02,  1.1977e-02,  1.0120e-02,  1.1993e-03,  9.2546e-04,
        -9.9964e-03, -5.0560e-03, -1.4338e-03, -1.8869e-02, -1.6056e-03,
         1.7695e-02,  9.7486e-03,  7.7928e-04,  1.7476e-02,  8.6691e-03])
##########################################################
prot_encoder.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[ 0.0454, -0.0646,  0.0236,  ..., -0.0300, -0.0851, -0.0141],
        [ 0.0238,  0.0120, -0.0341,  ..., -0.0601, -0.0254,  0.0500],
        [ 0.0438, -0.0414,  0.0403,  ...,  0.0222,  0.0556, -0.0114],
        ...,
        [-0.1574, -0.0285,  0.0520,  ...,  0.0079, -0.0117, -0.1369],
        [ 0.0644, -0.0457, -0.0101,  ..., -0.1039,  0.0069, -0.1012],
        [ 0.0089, -0.0377,  0.1052,  ...,  0.1192,  0.0079,  0.1461]])
tensor([[ 0.0455, -0.0645,  0.0236,  ..., -0.0300, -0.0851, -0.0140],
        [ 0.0238,  0.0121, -0.0340,  ..., -0.0601, -0.0255,  0.0500],
        [ 0.0440, -0.0413,  0.0403,  ...,  0.0222,  0.0556, -0.0113],
        ...,
        [-0.1573, -0.0283,  0.0521,  ...,  0.0079, -0.0117, -0.1368],
        [ 0.0644, -0.0457, -0.0101,  ..., -0.1039,  0.0069, -0.1012],
        [ 0.0088, -0.0378,  0.1052,  ...,  0.1192,  0.0080,  0.1460]])
##########################################################
prot_encoder.ffn.dense1.bias shape: torch.Size([64])
tensor([ 0.0297, -0.0547, -0.0600,  0.0521,  0.0715, -0.0048, -0.0319,  0.0107,
        -0.0165,  0.0362,  0.0324, -0.0323, -0.0178, -0.0340,  0.0117,  0.0323,
         0.0229, -0.0794,  0.0714,  0.0722,  0.0588, -0.0495, -0.0550,  0.0873,
         0.0316, -0.0507, -0.0502,  0.0142,  0.0365, -0.0353,  0.0208,  0.0866,
         0.0366,  0.0116,  0.0822,  0.0141, -0.0440,  0.0156, -0.0507, -0.0500,
         0.0653,  0.0340, -0.0737, -0.0443, -0.0444,  0.0032,  0.0811, -0.0764,
        -0.0070, -0.0238,  0.0005, -0.0264,  0.0288, -0.0374,  0.0324,  0.0759,
        -0.0589, -0.0091,  0.0213, -0.0699,  0.0037,  0.0478,  0.0315,  0.0161])
tensor([ 0.0300, -0.0547, -0.0593,  0.0510,  0.0710, -0.0045, -0.0318,  0.0109,
        -0.0164,  0.0360,  0.0329, -0.0322, -0.0185, -0.0343,  0.0115,  0.0327,
         0.0228, -0.0790,  0.0715,  0.0718,  0.0593, -0.0492, -0.0551,  0.0870,
         0.0316, -0.0508, -0.0503,  0.0143,  0.0363, -0.0353,  0.0211,  0.0866,
         0.0368,  0.0116,  0.0819,  0.0142, -0.0442,  0.0155, -0.0507, -0.0500,
         0.0653,  0.0342, -0.0737, -0.0444, -0.0443,  0.0035,  0.0808, -0.0764,
        -0.0069, -0.0235,  0.0004, -0.0265,  0.0287, -0.0377,  0.0323,  0.0762,
        -0.0591, -0.0089,  0.0214, -0.0699,  0.0037,  0.0478,  0.0313,  0.0156])
##########################################################
prot_encoder.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[ 0.0473, -0.0015,  0.1647,  ...,  0.0070, -0.0731,  0.0033],
        [ 0.1388,  0.0340,  0.0484,  ..., -0.0523, -0.0885,  0.0445],
        [ 0.2287, -0.0074,  0.0546,  ..., -0.0921,  0.1341,  0.0460],
        ...,
        [-0.0063, -0.0788,  0.0540,  ..., -0.0530, -0.0361,  0.0316],
        [ 0.0051, -0.1067, -0.0882,  ...,  0.0784, -0.1430, -0.0204],
        [-0.0213,  0.0478, -0.0367,  ...,  0.0481, -0.0278, -0.0085]])
tensor([[ 0.0473, -0.0015,  0.1647,  ...,  0.0070, -0.0731,  0.0034],
        [ 0.1389,  0.0340,  0.0484,  ..., -0.0523, -0.0885,  0.0445],
        [ 0.2287, -0.0074,  0.0546,  ..., -0.0922,  0.1341,  0.0460],
        ...,
        [-0.0063, -0.0789,  0.0540,  ..., -0.0530, -0.0361,  0.0316],
        [ 0.0051, -0.1067, -0.0882,  ...,  0.0783, -0.1430, -0.0204],
        [-0.0213,  0.0478, -0.0367,  ...,  0.0481, -0.0279, -0.0085]])
##########################################################
prot_encoder.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.1085,  0.0881,  0.0972, -0.1037,  0.0206, -0.0317,  0.1064,  0.0867,
        -0.0329,  0.0112,  0.1055, -0.0727, -0.0676,  0.0085,  0.0947, -0.0934,
         0.0792,  0.0911, -0.0653, -0.0117, -0.0045, -0.0669,  0.0188,  0.0378,
        -0.0807, -0.0966, -0.0464,  0.1238,  0.0840,  0.0648, -0.0143,  0.1207,
         0.0097,  0.0954,  0.1107, -0.0344,  0.0608,  0.0045, -0.0935, -0.0367,
        -0.0883,  0.0650,  0.0185,  0.0673,  0.0060, -0.0021,  0.0208,  0.0594,
         0.0337,  0.0192,  0.1068,  0.0002,  0.0044, -0.1193,  0.0257,  0.0713,
        -0.0135,  0.0358,  0.1199,  0.1230,  0.1066,  0.1234, -0.1138,  0.1096,
        -0.0125,  0.0621,  0.0413, -0.0858, -0.0326, -0.0455,  0.0032, -0.0210,
        -0.0274, -0.0494,  0.0205,  0.0986, -0.0654,  0.0584, -0.0786,  0.0140,
         0.0012,  0.0935,  0.0796, -0.0746, -0.1014, -0.0944, -0.1169,  0.0218,
         0.0927, -0.0562,  0.0057,  0.0659, -0.0863, -0.0790,  0.1092, -0.0801,
         0.0002,  0.0457, -0.1164, -0.1204,  0.0604, -0.1208,  0.0626, -0.1037,
        -0.0146, -0.0459, -0.0171, -0.1031, -0.0405,  0.0072, -0.0030, -0.0812,
        -0.1111, -0.0840,  0.0370,  0.0025, -0.0636,  0.0479,  0.0571, -0.0786,
         0.1110, -0.0077, -0.1045,  0.1029,  0.0823,  0.0206,  0.0941,  0.0071])
tensor([ 1.0862e-01,  8.8160e-02,  9.7418e-02, -1.0576e-01,  2.0635e-02,
        -3.1500e-02,  1.0605e-01,  8.6846e-02, -3.3587e-02,  1.0806e-02,
         1.0552e-01, -7.3331e-02, -6.7312e-02,  8.5896e-03,  9.4757e-02,
        -9.3423e-02,  8.0013e-02,  9.1074e-02, -6.5247e-02, -1.1444e-02,
        -4.4654e-03, -6.6916e-02,  1.8888e-02,  3.7769e-02, -8.0480e-02,
        -9.6178e-02, -4.6434e-02,  1.2381e-01,  8.3989e-02,  6.4564e-02,
        -1.4649e-02,  1.2053e-01,  9.5754e-03,  9.5491e-02,  1.1003e-01,
        -3.4245e-02,  6.0595e-02,  4.5628e-03, -9.3493e-02, -3.3456e-02,
        -8.8232e-02,  6.4980e-02,  1.7783e-02,  6.7387e-02,  6.1995e-03,
        -2.4144e-03,  2.2711e-02,  5.9575e-02,  3.3836e-02,  1.9511e-02,
         1.0670e-01,  2.0654e-04,  4.4247e-03, -1.1913e-01,  2.5680e-02,
         7.1176e-02, -1.3417e-02,  3.5369e-02,  1.1982e-01,  1.2298e-01,
         1.0653e-01,  1.2333e-01, -1.1372e-01,  1.0959e-01, -1.2293e-02,
         6.2062e-02,  4.1537e-02, -8.5916e-02, -3.2618e-02, -4.5109e-02,
         3.1636e-03, -2.0928e-02, -2.7330e-02, -4.9066e-02,  2.0504e-02,
         9.9061e-02, -6.5486e-02,  5.8495e-02, -7.8563e-02,  1.4185e-02,
         9.3288e-04,  9.3419e-02,  7.9668e-02, -7.4445e-02, -1.0164e-01,
        -9.4817e-02, -1.1607e-01,  2.1876e-02,  9.2306e-02, -5.5833e-02,
         5.7459e-03,  6.5683e-02, -8.6137e-02, -7.9164e-02,  1.0923e-01,
        -7.9783e-02, -3.5334e-06,  4.5861e-02, -1.1653e-01, -1.2412e-01,
         6.0473e-02, -1.2071e-01,  6.2665e-02, -1.0370e-01, -1.3934e-02,
        -4.6019e-02, -1.6979e-02, -1.0295e-01, -4.0399e-02,  7.2830e-03,
        -2.8831e-03, -8.1124e-02, -1.1100e-01, -8.3819e-02,  3.6994e-02,
         2.4490e-03, -6.3577e-02,  4.7946e-02,  5.7202e-02, -7.8880e-02,
         1.1093e-01, -7.5895e-03, -1.0455e-01,  1.0273e-01,  8.2038e-02,
         2.0188e-02,  9.4158e-02,  6.3445e-03])
##########################################################
prot_encoder.addnorm.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.9999, 1.0000, 1.0000, 1.0036, 1.0000, 1.0000, 1.0000, 1.0000, 1.0003,
        0.9998, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 1.0000,
        0.9999, 0.9999, 1.0000, 0.9987, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000,
        1.0000, 0.9996, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 1.0000, 1.0000,
        0.9999, 1.0000, 0.9999, 0.9998, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 0.9999, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9998, 1.0000, 0.9998, 0.9999,
        0.9999, 1.0000, 1.0000, 0.9999, 1.0000, 0.9999, 0.9997, 1.0000, 1.0000,
        1.0013, 1.0000, 1.0000, 1.0000, 1.0000, 1.0003, 0.9999, 1.0000, 0.9999,
        1.0000, 1.0000, 0.9999, 0.9999, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000,
        1.0000, 1.0000, 1.0000, 0.9999, 1.0000, 1.0000, 1.0000, 0.9999, 1.0000,
        1.0000, 0.9999])
##########################################################
prot_encoder.addnorm.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 5.0462e-05,  9.1567e-06,  1.8338e-05,  1.1878e-04, -7.2082e-06,
         4.4758e-05, -3.2578e-05,  1.7076e-07, -8.8276e-05,  5.6405e-05,
        -7.6346e-06,  1.4997e-05,  8.9856e-05,  9.2148e-06,  3.1400e-05,
        -9.7092e-06,  2.7042e-04, -3.1390e-05,  1.4000e-05,  4.2189e-05,
         2.3344e-05, -2.3643e-05,  2.5265e-05, -5.3680e-05,  1.5464e-05,
         4.3877e-05,  2.4428e-05, -3.5041e-05,  1.3730e-05, -7.9386e-05,
        -8.0205e-05, -1.7098e-05, -4.4992e-06,  4.4083e-05, -1.7637e-04,
         4.2071e-05, -7.3850e-05, -1.4975e-05, -2.1202e-05,  1.0799e-03,
        -4.4272e-05, -9.2827e-06, -1.6948e-04, -8.3026e-06,  6.7026e-07,
        -6.6658e-05,  3.6496e-04,  5.1970e-05, -4.0685e-06,  1.9054e-05,
        -1.6060e-05, -6.8566e-05, -6.1932e-06,  4.8977e-05, -3.5752e-05,
        -4.0555e-05, -2.4776e-05, -1.2628e-04, -2.9551e-05,  4.8513e-09,
        -1.0376e-05, -4.6349e-05,  7.8640e-06, -2.6674e-05,  3.5329e-05,
        -4.1299e-05,  6.6906e-05, -4.4139e-05, -2.0266e-05,  9.0332e-05,
        -2.7867e-05, -1.0356e-05, -1.6968e-05,  6.6392e-05, -2.4121e-05,
         2.2486e-04, -1.6221e-05,  1.1672e-05, -1.8112e-05,  5.6112e-05,
        -8.4968e-05, -8.9669e-05, -6.2655e-05, -3.6623e-06, -9.5852e-05,
        -8.3641e-05,  2.3817e-04, -2.3525e-05, -1.1442e-04,  1.5489e-05,
         2.3818e-05, -7.3186e-05,  3.2351e-05, -2.9477e-05, -8.7674e-06,
         6.4015e-05,  5.5243e-05,  2.6524e-05, -8.5525e-05, -5.5407e-04,
         1.1975e-05, -2.0922e-05, -1.8513e-06, -5.4137e-05,  3.6346e-05,
        -3.7033e-05,  1.4645e-05,  1.5148e-05, -2.4164e-05, -3.7111e-06,
        -1.0982e-05, -2.5103e-05,  3.1533e-05,  3.5769e-05, -1.3190e-05,
        -2.6070e-05,  1.7814e-06, -2.3097e-05,  7.7643e-06, -8.3602e-05,
        -3.8305e-05,  2.2024e-05, -2.9522e-05, -8.6467e-05, -3.8700e-05,
        -1.1611e-04, -2.3207e-07, -8.9940e-05])
##########################################################
prot_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0325,  0.0295, -0.0003,  ...,  0.0036,  0.0438,  0.0559],
        [-0.0233,  0.0013, -0.0408,  ..., -0.0332, -0.0096, -0.0480],
        [-0.0524,  0.0547, -0.0364,  ..., -0.0681,  0.0650, -0.0076],
        ...,
        [ 0.0017,  0.0105, -0.0610,  ...,  0.0355,  0.0161,  0.0387],
        [ 0.0152,  0.0557, -0.0321,  ...,  0.0459, -0.0262, -0.0168],
        [-0.0179,  0.0332,  0.0153,  ...,  0.0326, -0.0114,  0.0434]])
tensor([[-0.0325,  0.0295, -0.0003,  ...,  0.0036,  0.0438,  0.0559],
        [-0.0233,  0.0013, -0.0408,  ..., -0.0332, -0.0096, -0.0480],
        [-0.0524,  0.0547, -0.0364,  ..., -0.0681,  0.0650, -0.0076],
        ...,
        [ 0.0017,  0.0104, -0.0610,  ...,  0.0355,  0.0161,  0.0387],
        [ 0.0151,  0.0556, -0.0321,  ...,  0.0458, -0.0262, -0.0168],
        [-0.0178,  0.0332,  0.0153,  ...,  0.0326, -0.0114,  0.0434]])
##########################################################
prot_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.1737e-06, -4.2888e-07,  4.1431e-06, -1.9894e-06,  2.9710e-06,
         4.6755e-06, -1.4964e-06,  1.3854e-06,  1.8469e-06, -6.2885e-06,
        -7.2109e-07,  2.1182e-06,  1.4750e-07, -1.9330e-06, -5.6922e-06,
         3.9428e-06,  3.3008e-06, -1.0930e-06,  1.8337e-07,  6.8700e-08,
        -6.2741e-06,  3.0331e-06, -4.8744e-06, -5.4291e-06, -3.3274e-06,
        -1.3341e-06,  6.0178e-06, -2.0555e-06, -3.1632e-06, -2.9479e-06,
         2.9699e-07, -4.7747e-08, -2.6420e-06, -2.8312e-07, -3.1261e-06,
         5.1533e-07, -2.3905e-06, -3.6483e-07, -2.1669e-06,  6.9620e-07,
        -1.4398e-06,  5.2938e-06,  4.1681e-06, -2.2094e-07,  2.5425e-06,
         2.4564e-06,  2.9800e-06, -2.7005e-06,  4.0523e-06,  5.7866e-07,
         7.8918e-06, -2.2514e-06,  3.2548e-07,  2.7214e-07,  2.7035e-06,
        -1.3378e-06, -3.7810e-06,  2.9531e-06, -5.0544e-07,  5.5522e-07,
        -1.2618e-06, -7.2812e-07, -1.2346e-08, -3.0155e-07,  3.6481e-06,
        -2.1443e-07, -3.1875e-07, -1.7126e-07,  1.3257e-06,  1.1278e-06,
         3.8497e-06, -1.8568e-06, -1.8682e-06, -1.4163e-07,  2.1450e-07,
         1.4163e-06,  2.1710e-07, -1.2912e-06,  6.6499e-07,  1.9406e-06,
         8.8739e-06,  2.9095e-06, -7.3129e-07,  3.3760e-07, -3.8797e-06,
         1.8427e-06, -7.6189e-07, -5.2093e-06, -4.3051e-06,  5.7359e-06,
        -5.2962e-06, -3.3107e-06, -5.5322e-06, -3.9935e-06, -5.4933e-08,
         2.4605e-06, -3.7095e-06, -1.5938e-06,  6.8809e-07, -3.0728e-06,
        -9.2375e-07, -1.6961e-06, -3.2036e-06,  8.0677e-07,  3.2559e-06,
        -1.5324e-06, -2.8861e-06,  2.3694e-06, -4.0549e-06,  1.5664e-06,
        -4.7474e-06, -1.8378e-07,  1.9537e-06, -2.1129e-06, -1.0190e-05,
        -5.2522e-07, -9.1844e-06,  3.7828e-06,  1.2593e-06, -2.4113e-06,
         7.3467e-06, -1.4774e-06,  2.3401e-06, -4.9304e-07, -2.6259e-06,
        -9.4120e-07,  7.4160e-07,  4.0050e-06,  2.7868e-14, -8.1297e-14,
        -9.4828e-14, -1.7310e-13, -2.6651e-14, -1.4461e-14,  8.4651e-15,
        -9.0970e-14, -4.0850e-14, -1.1476e-14, -6.6687e-14, -7.3957e-14,
        -2.0066e-14, -3.7457e-14, -1.2558e-13,  4.1575e-14, -1.6387e-14,
        -6.3913e-14, -1.4670e-14,  1.7980e-14, -5.0321e-14,  1.1816e-13,
        -7.5264e-14, -4.7998e-14, -1.3208e-13, -7.7072e-14,  6.0189e-14,
        -5.8493e-15,  8.2097e-14, -1.2389e-14,  6.4450e-14,  5.4567e-14,
         2.9031e-14,  4.1653e-15,  4.1286e-14,  1.1285e-14, -3.1110e-14,
        -8.4845e-14, -2.1057e-14,  1.8260e-13, -2.2955e-14, -4.1461e-15,
         3.1475e-14,  2.6656e-14,  3.8354e-14, -5.1836e-14,  4.3809e-14,
         1.3731e-13, -1.0301e-14, -3.9028e-14,  2.8795e-14, -3.3402e-14,
         1.1156e-13,  1.4088e-13,  1.5669e-13, -3.7577e-14,  9.1355e-14,
        -3.9983e-14,  6.5906e-14,  2.1219e-13, -8.8080e-14, -1.5611e-14,
        -8.1217e-14, -5.2853e-14,  4.6662e-14, -3.5427e-14,  4.9009e-14,
        -1.1493e-13, -9.6403e-14, -2.2734e-14,  6.7393e-14, -3.2177e-14,
         7.5318e-14,  2.1886e-13,  8.6033e-14,  5.2993e-14, -7.2596e-14,
        -2.9962e-14, -9.1520e-14, -5.8680e-14,  8.1992e-14, -1.3910e-13,
         1.0049e-13, -1.6394e-13,  1.7304e-13, -8.9323e-14,  3.9046e-14,
         1.0061e-13, -3.2696e-14, -9.6252e-14, -4.9641e-14, -2.7177e-14,
        -6.5349e-14, -6.6688e-15, -2.4641e-14,  8.8290e-15, -3.4085e-14,
         5.0610e-14,  3.1142e-14,  2.7208e-14, -1.3049e-13,  5.8334e-14,
        -4.0291e-13,  2.0842e-14,  3.6858e-14, -1.4325e-13, -1.9631e-13,
        -4.3326e-14, -1.7580e-14,  4.5536e-14, -6.8943e-14,  1.1409e-13,
         5.8358e-14,  7.6938e-16,  8.8255e-14, -4.8147e-14,  4.6377e-15,
        -4.5404e-14,  4.2130e-14,  6.8210e-14,  2.9949e-14,  6.9221e-14,
        -8.0545e-14,  7.3315e-14, -2.3372e-14, -1.0905e-14,  8.0166e-14,
        -2.3207e-14, -7.1571e-05,  3.1891e-05, -3.7976e-05,  3.0463e-05,
        -1.4458e-04,  5.1720e-05,  3.9092e-05,  1.8699e-05, -6.0277e-05,
         3.0017e-05, -1.1641e-05,  9.1447e-06,  4.2496e-05, -9.3759e-05,
         1.0428e-05,  2.1671e-05, -2.3725e-05,  4.6417e-05,  1.1201e-04,
        -1.4100e-04, -4.2516e-05,  6.4916e-05,  5.1479e-05, -7.2104e-05,
        -8.2055e-05, -2.8941e-05, -1.1001e-04,  4.2728e-05,  9.6001e-05,
         7.3269e-05, -2.2887e-05, -6.6872e-05, -1.9661e-05, -3.6891e-06,
         2.6432e-05,  2.3856e-05, -3.1566e-06,  8.3581e-05, -4.4298e-05,
        -1.3123e-04, -5.7725e-05,  4.9907e-05, -5.6740e-05,  6.1716e-05,
         4.0900e-05, -7.9340e-05, -1.9249e-05, -2.2958e-05,  5.4668e-05,
        -2.5144e-05,  1.0217e-04,  1.7272e-05,  1.0956e-05,  2.0602e-05,
         1.3808e-04,  5.5119e-05,  9.2580e-05, -2.7904e-05, -8.1833e-05,
         8.3748e-05, -4.5385e-05, -4.8243e-05, -5.2810e-06,  5.8188e-05,
        -1.1684e-04, -6.1604e-05, -4.9445e-05, -2.1689e-05, -3.8836e-05,
        -2.7440e-05,  5.5624e-06, -1.0081e-04, -4.7267e-05,  6.6651e-05,
         5.9495e-05, -1.6870e-06, -6.0748e-05,  5.1720e-06, -4.6924e-05,
        -6.3870e-06, -2.4570e-05,  1.0566e-05,  6.6569e-05,  1.4522e-04,
         2.0391e-05, -4.0131e-05,  3.5778e-06,  7.5875e-07,  9.4902e-05,
        -1.4696e-04,  8.3193e-05,  4.4385e-05, -1.2085e-05, -8.4802e-05,
         2.3308e-05, -8.1786e-05,  1.6912e-05, -8.9358e-06, -6.2058e-07,
        -5.6705e-05,  1.3520e-04,  6.0176e-05,  3.2226e-05,  8.9309e-05,
        -8.1461e-05,  1.0133e-05,  9.1188e-05, -6.9815e-05,  4.8560e-06,
         2.0158e-06, -2.7907e-05,  4.2254e-05, -6.7763e-05,  7.7278e-05,
         5.9453e-05,  2.7883e-05,  6.6978e-05,  3.0950e-05, -2.2106e-05,
        -4.0444e-05, -6.4170e-05, -6.4598e-05,  7.9926e-05,  1.8209e-05,
        -1.1952e-04, -7.1895e-05, -7.9883e-05,  7.4218e-05])
##########################################################
prot_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0777,  0.0435, -0.0862,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0485, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0306,  0.0483],
        [-0.0517, -0.0149,  0.0659,  ...,  0.0579, -0.0457,  0.0403]])
tensor([[-0.0777,  0.0434, -0.0862,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0485, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0306,  0.0483],
        [-0.0517, -0.0149,  0.0659,  ...,  0.0579, -0.0457,  0.0404]])
##########################################################
prot_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 2.0938e-05, -1.8688e-05,  8.1534e-06,  1.2319e-04, -4.4943e-06,
         1.3198e-05, -2.3730e-05, -4.8192e-06, -1.1879e-04,  9.3612e-05,
        -6.3877e-06,  7.2861e-07,  4.8303e-05, -7.9600e-06,  1.4154e-05,
         2.9683e-06,  2.0413e-04,  6.1026e-06,  1.1095e-05,  5.3531e-06,
        -1.3086e-05, -2.0977e-05,  2.4694e-06, -1.3440e-05,  2.2839e-06,
         5.0116e-05, -4.1756e-06, -1.5330e-06, -1.7033e-06, -4.2973e-05,
        -7.4553e-05, -1.3667e-05,  2.7193e-05, -2.2553e-05, -1.2996e-04,
        -1.8583e-06, -6.4438e-05, -1.5544e-05,  1.6726e-06,  9.4474e-04,
         5.2999e-07,  8.9525e-06, -1.1522e-04, -1.6976e-05,  3.5283e-05,
        -7.4675e-05,  2.7672e-04,  2.8035e-05, -8.5796e-06,  2.2749e-05,
        -5.1984e-05, -6.6283e-05,  3.9072e-06, -3.9138e-06, -7.3232e-06,
        -3.4904e-05, -7.8334e-06, -1.0889e-04, -1.0980e-05, -1.1091e-05,
        -3.3951e-06, -3.9791e-05,  5.1112e-07, -7.4570e-06,  1.3583e-06,
         1.3673e-05,  4.3049e-06, -4.7871e-06, -2.7753e-05,  8.0277e-05,
        -3.5812e-05,  4.1839e-05,  1.2431e-05,  1.5879e-05, -7.3363e-06,
         1.4391e-04, -1.6430e-05, -1.4499e-05,  5.0577e-06,  5.6695e-05,
        -5.1800e-05, -7.0858e-05, -2.7475e-06,  9.3935e-06, -6.8461e-05,
        -1.0117e-04,  2.4015e-04,  2.8838e-06, -6.4123e-05, -1.3678e-05,
         9.9933e-06, -5.1189e-05,  5.8774e-06, -6.4156e-05, -3.8108e-06,
         5.5033e-05,  1.7588e-05, -1.9369e-06, -4.0895e-05, -5.7640e-04,
        -2.3337e-05,  9.5289e-06, -1.2831e-05, -3.0079e-06, -3.8245e-06,
        -1.9429e-05,  2.8492e-06,  2.0125e-05,  1.4141e-05,  3.5171e-06,
         8.4088e-06,  2.5995e-06,  3.6750e-06,  5.5650e-06,  1.5810e-06,
        -1.4651e-05, -2.6803e-07, -7.3414e-06, -8.1285e-06, -9.1456e-05,
        -2.3528e-05,  2.2065e-06, -7.5709e-06, -1.4288e-05, -4.3946e-05,
        -8.6622e-05, -8.0563e-06, -9.4486e-05])
##########################################################
prot_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[ 0.0745,  0.0746, -0.0288,  ..., -0.0798, -0.0298, -0.0381],
        [-0.0043, -0.0423, -0.1010,  ..., -0.0017,  0.0398, -0.0409],
        [ 0.0119, -0.0364, -0.0016,  ..., -0.0108,  0.1452, -0.0815],
        ...,
        [ 0.0651,  0.0067,  0.0913,  ...,  0.0902, -0.0577, -0.0139],
        [ 0.0358,  0.0422, -0.0161,  ..., -0.0584, -0.0772, -0.0182],
        [ 0.0008,  0.0569, -0.0254,  ...,  0.0923, -0.0434,  0.0604]])
tensor([[ 0.0745,  0.0746, -0.0288,  ..., -0.0799, -0.0297, -0.0381],
        [-0.0043, -0.0423, -0.1010,  ..., -0.0018,  0.0398, -0.0409],
        [ 0.0119, -0.0364, -0.0016,  ..., -0.0108,  0.1452, -0.0815],
        ...,
        [ 0.0651,  0.0067,  0.0913,  ...,  0.0903, -0.0577, -0.0139],
        [ 0.0359,  0.0423, -0.0160,  ..., -0.0582, -0.0771, -0.0184],
        [ 0.0008,  0.0569, -0.0253,  ...,  0.0923, -0.0434,  0.0603]])
##########################################################
prot_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([-0.0250,  0.0180, -0.0861,  0.0376, -0.0467,  0.0681,  0.0507, -0.0192,
         0.0337, -0.0159,  0.0222,  0.0514, -0.0768,  0.0162,  0.0261,  0.0345,
         0.0281,  0.0324,  0.0413,  0.0028, -0.0356,  0.0813, -0.0696,  0.0608,
        -0.0431, -0.0643, -0.0072,  0.0071,  0.0649,  0.0702, -0.0061,  0.0290,
        -0.0727, -0.0272, -0.0382,  0.0734, -0.0835, -0.0438, -0.0425,  0.0427,
        -0.0032,  0.0075, -0.0350,  0.0270, -0.0527, -0.0279,  0.0828, -0.0536,
         0.0573,  0.0599,  0.0368, -0.0062, -0.0522, -0.0149,  0.0005,  0.0297,
         0.0508, -0.0860, -0.0782,  0.0585,  0.0812,  0.0567, -0.0077,  0.0127])
tensor([-0.0256,  0.0179, -0.0860,  0.0374, -0.0468,  0.0684,  0.0517, -0.0191,
         0.0330, -0.0167,  0.0218,  0.0511, -0.0768,  0.0161,  0.0260,  0.0342,
         0.0266,  0.0327,  0.0429,  0.0033, -0.0353,  0.0821, -0.0694,  0.0610,
        -0.0432, -0.0645, -0.0077,  0.0072,  0.0656,  0.0706, -0.0074,  0.0294,
        -0.0718, -0.0277, -0.0383,  0.0736, -0.0836, -0.0433, -0.0427,  0.0426,
        -0.0029,  0.0078, -0.0350,  0.0267, -0.0528, -0.0278,  0.0823, -0.0537,
         0.0561,  0.0599,  0.0365, -0.0058, -0.0520, -0.0141,  0.0005,  0.0301,
         0.0493, -0.0860, -0.0782,  0.0590,  0.0795,  0.0557, -0.0104,  0.0126])
##########################################################
prot_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.0899, -0.0270,  0.0349,  ..., -0.0373,  0.0763, -0.0272],
        [-0.0486, -0.0246, -0.0444,  ...,  0.0816, -0.0535, -0.0118],
        [ 0.0673,  0.0981, -0.0350,  ..., -0.0161,  0.0245,  0.0561],
        ...,
        [-0.1330, -0.0359,  0.0114,  ...,  0.0070,  0.0374, -0.0822],
        [ 0.0541,  0.0495,  0.0189,  ...,  0.0321, -0.0949, -0.1242],
        [-0.0308,  0.0518, -0.0519,  ...,  0.0046,  0.1097, -0.0690]])
tensor([[-0.0899, -0.0270,  0.0349,  ..., -0.0373,  0.0763, -0.0271],
        [-0.0486, -0.0246, -0.0444,  ...,  0.0816, -0.0535, -0.0118],
        [ 0.0673,  0.0981, -0.0350,  ..., -0.0161,  0.0246,  0.0561],
        ...,
        [-0.1330, -0.0359,  0.0114,  ...,  0.0070,  0.0374, -0.0822],
        [ 0.0541,  0.0495,  0.0189,  ...,  0.0321, -0.0949, -0.1242],
        [-0.0307,  0.0518, -0.0519,  ...,  0.0046,  0.1097, -0.0690]])
##########################################################
prot_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([-0.1182,  0.0646,  0.0008, -0.0595,  0.0710, -0.0074, -0.0845, -0.1114,
         0.0555,  0.0241, -0.1157,  0.0894, -0.0410, -0.0008,  0.0374,  0.0021,
        -0.0535,  0.0135,  0.0153,  0.0757,  0.0807,  0.0810, -0.0713,  0.0207,
         0.1064, -0.0170,  0.0162,  0.0275, -0.0396, -0.0285, -0.0726, -0.0859,
        -0.0350, -0.1200,  0.0271, -0.0607,  0.1068, -0.0537,  0.0798, -0.0467,
        -0.0325,  0.0945,  0.0455, -0.0038, -0.0678,  0.1204,  0.0363,  0.0999,
        -0.0391, -0.1018, -0.0562,  0.0251,  0.0028,  0.1054,  0.0747,  0.0139,
         0.0395,  0.0414, -0.0185,  0.0687,  0.0981,  0.0435, -0.0411, -0.0493,
         0.1250, -0.0381,  0.0445,  0.1141,  0.0302,  0.0075,  0.0767,  0.1089,
         0.0577, -0.1065,  0.0402, -0.0100, -0.1008,  0.0900, -0.0211,  0.0569,
         0.0043,  0.1239, -0.0032, -0.1046, -0.0472, -0.0728,  0.0371, -0.1220,
        -0.0720, -0.0652, -0.0181, -0.0107, -0.0156, -0.0628,  0.0205, -0.0876,
        -0.0442, -0.0234,  0.0045,  0.0475,  0.1056,  0.0616,  0.0599,  0.0487,
        -0.0669,  0.0971,  0.0804,  0.1205,  0.0237, -0.0217, -0.0002,  0.0236,
         0.1213,  0.0462,  0.0240,  0.0174, -0.1079, -0.0424, -0.0862,  0.1223,
        -0.0236, -0.0300,  0.0469,  0.1132, -0.0838, -0.0935, -0.0828, -0.0944])
tensor([-1.1806e-01,  6.4656e-02,  8.1053e-04, -5.4770e-02,  7.1141e-02,
        -7.3174e-03, -8.4431e-02, -1.1132e-01,  5.4496e-02,  2.5130e-02,
        -1.1566e-01,  8.9250e-02, -4.1118e-02, -4.0087e-04,  3.6557e-02,
         2.2406e-03, -5.2281e-02,  1.3428e-02,  1.5498e-02,  7.5159e-02,
         8.0764e-02,  8.0712e-02, -7.1228e-02,  2.0741e-02,  1.0677e-01,
        -1.6708e-02,  1.6199e-02,  2.7668e-02, -3.9319e-02, -2.8364e-02,
        -7.2493e-02, -8.5845e-02, -3.4904e-02, -1.1988e-01,  2.6559e-02,
        -6.0597e-02,  1.0695e-01, -5.3658e-02,  7.9890e-02, -4.0247e-02,
        -3.2390e-02,  9.4636e-02,  4.4119e-02, -3.7055e-03, -6.7982e-02,
         1.1998e-01,  3.4985e-02,  9.9870e-02, -3.8891e-02, -1.0138e-01,
        -5.5803e-02,  2.5184e-02,  2.8177e-03,  1.0537e-01,  7.4563e-02,
         1.3617e-02,  3.9594e-02,  4.1243e-02, -1.8171e-02,  6.8743e-02,
         9.8150e-02,  4.3051e-02, -4.0516e-02, -4.9332e-02,  1.2480e-01,
        -3.8084e-02,  4.5072e-02,  1.1399e-01,  3.0168e-02,  8.3234e-03,
         7.6579e-02,  1.0741e-01,  5.7793e-02, -1.0635e-01,  4.0246e-02,
        -1.1621e-02, -1.0057e-01,  9.0014e-02, -2.1018e-02,  5.6949e-02,
         4.4730e-03,  1.2392e-01, -3.0173e-03, -1.0449e-01, -4.7149e-02,
        -7.2624e-02,  3.4246e-02, -1.2170e-01, -7.1922e-02, -6.5205e-02,
        -1.7995e-02, -1.0528e-02, -1.5431e-02, -6.2469e-02,  2.0540e-02,
        -8.6766e-02, -4.4080e-02, -2.3187e-02,  4.3253e-03,  4.1309e-02,
         1.0571e-01,  6.1668e-02,  5.9847e-02,  4.8620e-02, -6.6365e-02,
         9.7330e-02,  8.0515e-02,  1.2031e-01,  2.3662e-02, -2.1644e-02,
        -7.2038e-05,  2.3610e-02,  1.2139e-01,  4.5829e-02,  2.4104e-02,
         1.7329e-02, -1.0785e-01, -4.2374e-02, -8.6093e-02,  1.1847e-01,
        -2.3439e-02, -2.9827e-02,  4.7105e-02,  1.1328e-01, -8.3505e-02,
        -9.3457e-02, -8.3310e-02, -9.3991e-02])
##########################################################
prot_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([-0.0835, -0.0158, -0.0588,  0.1172,  0.1008,  0.0612, -0.1218, -0.0686,
         0.1180,  0.0951,  0.0038,  0.1431, -0.2655, -0.0279, -0.0304, -0.0167,
         0.1486,  0.1263,  0.0331, -0.0966, -0.0519,  0.0774,  0.0142,  0.0091,
        -0.0581,  0.0652,  0.0602,  0.0278, -0.0942, -0.0573, -0.1138, -0.0902,
        -0.0988, -0.0745,  0.1246, -0.1156, -0.0959,  0.0181,  0.0030,  0.1818,
         0.0588,  0.1625,  0.1117, -0.0620,  0.0798,  0.0996, -0.2359, -0.1124,
         0.1312, -0.0677, -0.0710,  0.1711, -0.0270, -0.0232, -0.0975,  0.1081,
         0.0805,  0.1494, -0.0027, -0.0054, -0.0087,  0.0636, -0.0258, -0.0341,
         0.1033, -0.0465,  0.0364, -0.0285,  0.0520,  0.0762,  0.0602, -0.0420,
         0.0084,  0.0477,  0.0089, -0.0844, -0.0224,  0.0271, -0.0095,  0.1247,
         0.1002,  0.2103,  0.0646,  0.0516, -0.1102, -0.1720, -0.0897, -0.0082,
         0.1197, -0.1434, -0.1022, -0.0769,  0.0310, -0.1084, -0.0176,  0.0407,
        -0.0987, -0.0031,  0.1535,  0.1009, -0.0274,  0.0113,  0.0140,  0.0715,
         0.0871, -0.0621,  0.0466,  0.0349,  0.0650,  0.0478,  0.1404,  0.0842,
        -0.0082, -0.0259,  0.0270,  0.0131,  0.0272,  0.0091, -0.0201,  0.0314,
        -0.0089, -0.0113, -0.0249, -0.0234, -0.0712, -0.2020, -0.0154, -0.1446])
tensor([-0.0828, -0.0160, -0.0594,  0.1456,  0.1007,  0.0609, -0.1218, -0.0683,
         0.1212,  0.0938,  0.0039,  0.1424, -0.2655, -0.0271, -0.0298, -0.0170,
         0.1484,  0.1261,  0.0329, -0.0967, -0.0519,  0.0775,  0.0145,  0.0092,
        -0.0580,  0.0644,  0.0609,  0.0276, -0.0940, -0.0575, -0.1143, -0.0901,
        -0.0991, -0.0742,  0.1232, -0.1156, -0.0947,  0.0178,  0.0028,  0.1741,
         0.0594,  0.1625,  0.1113, -0.0624,  0.0800,  0.1001, -0.2341, -0.1125,
         0.1313, -0.0677, -0.0707,  0.1703, -0.0270, -0.0231, -0.0974,  0.1083,
         0.0801,  0.1485, -0.0023, -0.0055, -0.0088,  0.0634, -0.0261, -0.0343,
         0.1031, -0.0470,  0.0368, -0.0286,  0.0512,  0.0762,  0.0601, -0.0424,
         0.0085,  0.0476,  0.0088, -0.0841, -0.0226,  0.0266, -0.0097,  0.1244,
         0.1004,  0.2102,  0.0650,  0.0518, -0.1107, -0.1721, -0.0873, -0.0084,
         0.1184, -0.1431, -0.1017, -0.0768,  0.0312, -0.1082, -0.0174,  0.0394,
        -0.0965, -0.0032,  0.1537,  0.1135, -0.0280,  0.0115,  0.0142,  0.0714,
         0.0909, -0.0624,  0.0467,  0.0344,  0.0647,  0.0477,  0.1404,  0.0838,
        -0.0081, -0.0272,  0.0269,  0.0131,  0.0275,  0.0094, -0.0201,  0.0325,
        -0.0105, -0.0112, -0.0248, -0.0233, -0.0710, -0.2023, -0.0152, -0.1437])
##########################################################
prot_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-5.1957e-04, -1.2006e-04, -4.1828e-04,  6.6511e-04,  6.0124e-06,
         3.5528e-04,  1.5848e-04, -3.5063e-05, -1.0863e-03,  1.2825e-03,
         1.9034e-04,  9.8523e-05, -1.5300e-04,  2.3858e-04, -9.9688e-04,
         2.3262e-04,  1.5205e-03,  5.0222e-05,  4.5696e-04, -1.9866e-04,
         2.1573e-04, -4.0258e-04,  8.2042e-05,  8.4515e-07, -8.1978e-05,
         7.5827e-04, -1.6476e-04,  3.0855e-04,  2.5023e-05,  5.5693e-04,
         7.6490e-04,  5.9948e-05, -3.5093e-04, -1.1021e-05, -1.0351e-03,
         6.3186e-05,  7.7170e-04, -1.2699e-04,  2.2512e-04,  6.1153e-03,
        -1.7842e-04,  1.5341e-04, -1.2145e-03,  2.0907e-04,  5.4723e-04,
        -8.6930e-04, -1.6213e-03, -3.8917e-04, -8.2646e-05, -3.7491e-04,
         6.5582e-04, -4.0301e-04, -3.5150e-04,  2.6013e-04,  4.1884e-06,
        -3.5406e-04, -7.4539e-05, -6.2644e-04,  1.3429e-05, -1.3689e-04,
        -2.9295e-04, -5.7592e-04,  6.1397e-04,  2.1153e-05, -1.0336e-04,
        -7.9769e-04,  5.9298e-04,  1.3808e-04, -4.6306e-04,  1.1707e-03,
        -7.6024e-04, -1.1934e-03,  7.1230e-05,  2.8979e-04,  7.2448e-04,
        -2.4579e-03,  4.0739e-04,  2.5022e-04,  1.6100e-04,  5.1905e-04,
        -7.2005e-04, -3.6473e-04, -1.6057e-05,  2.2913e-04,  7.6816e-04,
         6.1013e-04, -2.5266e-03,  3.2169e-04, -4.2858e-04,  5.0236e-05,
        -1.3080e-04,  6.7350e-04, -8.0947e-05,  5.9711e-04, -2.2016e-05,
         1.1713e-03, -1.0859e-04,  2.3445e-04, -3.3745e-04, -5.8969e-03,
        -4.5016e-05,  4.7662e-05, -1.0831e-04, -7.1460e-05,  2.4685e-04,
        -1.9893e-04,  1.5990e-04,  4.6669e-04,  1.3502e-04,  3.2453e-04,
         2.8452e-04,  1.5856e-04, -3.3693e-05, -2.3459e-04,  2.2141e-04,
        -5.7780e-04, -1.0260e-05, -4.9869e-04,  1.2768e-04, -3.3443e-03,
         7.1611e-05,  8.3992e-05,  5.4174e-04,  2.4151e-06,  4.7759e-04,
         4.2678e-04, -3.5914e-04,  8.2090e-04])
##########################################################
prot_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([ 0.0876,  0.0345, -0.0591, -0.1260, -0.0100, -0.0029,  0.0332,  0.0534,
        -0.1049,  0.1226, -0.0263, -0.0870, -0.0203, -0.0975, -0.1803,  0.0601,
         0.0830,  0.0267,  0.0450, -0.0760,  0.0328,  0.0698,  0.0007, -0.0581,
         0.1316, -0.1208, -0.1727, -0.0335, -0.0269, -0.0201,  0.0077,  0.0090,
         0.0100,  0.0382, -0.0814,  0.0298,  0.1071, -0.0296, -0.0117,  0.1747,
        -0.0385,  0.0003,  0.1066,  0.0400, -0.0635,  0.0511, -0.0727,  0.0369,
        -0.0320,  0.1305, -0.0447, -0.0257,  0.0944, -0.0474,  0.0822,  0.0938,
         0.0106,  0.0262, -0.1332,  0.0193, -0.0184,  0.0780, -0.1103,  0.0840,
         0.0527, -0.0251,  0.0927, -0.0725, -0.0853, -0.0852,  0.0490, -0.1586,
         0.0346, -0.0478,  0.0099, -0.1855, -0.0581, -0.0352,  0.0107, -0.0307,
         0.0646,  0.0101, -0.1056, -0.0244,  0.0147, -0.0189,  0.1618,  0.1120,
         0.0575,  0.0575, -0.0037, -0.0243, -0.0350, -0.0454,  0.1007,  0.0984,
         0.0835,  0.1604,  0.0274, -0.1330,  0.0038, -0.1603,  0.0902,  0.0587,
         0.0973, -0.0341,  0.0117, -0.1127, -0.1161, -0.0177, -0.0095, -0.0235,
        -0.0013,  0.1591, -0.0187,  0.0503,  0.0031,  0.0151,  0.0327,  0.2282,
        -0.0185, -0.0380, -0.0883,  0.0191, -0.0384,  0.0053, -0.0918,  0.0852])
tensor([ 8.6737e-02,  3.4467e-02, -5.9648e-02, -1.5016e-01, -1.0232e-02,
        -2.8300e-03,  3.2845e-02,  5.3118e-02, -1.0690e-01,  1.2222e-01,
        -2.6318e-02, -8.5810e-02, -1.9434e-02, -9.7443e-02, -1.8011e-01,
         6.0154e-02,  8.1276e-02,  2.6631e-02,  4.4994e-02, -7.5443e-02,
         3.2666e-02,  6.9149e-02,  7.5135e-04, -5.8190e-02,  1.3177e-01,
        -1.2014e-01, -1.7284e-01, -3.3482e-02, -2.6742e-02, -2.0132e-02,
         7.1937e-03,  9.4680e-03,  9.2331e-03,  3.7606e-02, -7.9442e-02,
         2.9474e-02,  1.0599e-01, -2.9633e-02, -1.1760e-02,  1.6627e-01,
        -3.8580e-02,  1.0572e-04,  1.0572e-01,  4.0222e-02, -6.3629e-02,
         5.0646e-02, -6.6423e-02,  3.6799e-02, -3.1921e-02,  1.3019e-01,
        -4.3925e-02, -2.3718e-02,  9.4418e-02, -4.7173e-02,  8.1452e-02,
         9.3627e-02,  1.0784e-02,  2.4899e-02, -1.3314e-01,  1.9273e-02,
        -1.8312e-02,  7.7307e-02, -1.0995e-01,  8.4057e-02,  5.2162e-02,
        -2.5450e-02,  9.3063e-02, -7.2262e-02, -8.4973e-02, -8.5339e-02,
         4.8604e-02, -1.5757e-01,  3.4483e-02, -4.8014e-02,  9.8766e-03,
        -1.8536e-01, -5.7740e-02, -3.4932e-02,  1.0685e-02, -3.0064e-02,
         6.4515e-02,  6.8837e-03, -1.0599e-01, -2.4352e-02,  1.4496e-02,
        -1.8724e-02,  1.5944e-01,  1.1175e-01,  5.5916e-02,  5.6452e-02,
        -3.3644e-03, -2.3942e-02, -3.4895e-02, -4.4201e-02,  1.0062e-01,
         9.7367e-02,  8.1969e-02,  1.6040e-01,  2.6956e-02, -1.4029e-01,
         3.7063e-03, -1.6034e-01,  9.0138e-02,  5.8622e-02,  9.9978e-02,
        -3.3952e-02,  1.1849e-02, -1.1230e-01, -1.1608e-01, -1.7583e-02,
        -9.7269e-03, -2.3231e-02, -1.5976e-03,  1.5915e-01, -1.8712e-02,
         5.0236e-02,  2.9218e-03,  1.5075e-02,  3.2687e-02,  2.2660e-01,
        -1.8515e-02, -3.7943e-02, -8.8389e-02,  1.8706e-02, -3.8164e-02,
         4.2041e-03, -9.2204e-02,  8.3299e-02])
##########################################################
prot_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-3.5342e-04, -1.0229e-04,  9.9875e-05, -3.3088e-04, -2.4458e-04,
         4.4319e-04,  4.1465e-07,  1.6392e-05,  1.2189e-03,  8.4320e-04,
         5.4927e-05, -1.1826e-05,  1.2754e-03, -4.2640e-04,  4.6389e-04,
         1.2635e-04,  1.4876e-03, -7.8522e-04,  2.7103e-04,  8.4337e-04,
        -1.7268e-04, -5.7391e-04, -1.5850e-04,  1.6465e-04,  4.9813e-04,
        -3.8740e-04,  2.1291e-05, -7.5970e-05, -8.2772e-04, -3.0255e-04,
         3.5147e-04, -1.4732e-04,  3.0797e-04,  3.2538e-05,  7.8912e-04,
         1.2882e-04,  3.8480e-04, -1.1296e-05, -1.2737e-04,  3.8566e-03,
         2.2651e-05,  6.4974e-04, -1.3694e-03,  4.7348e-05,  4.2907e-04,
        -9.6211e-04,  1.9127e-03, -3.3904e-04, -6.1881e-04, -1.0105e-04,
        -8.2204e-04, -2.5634e-04, -1.1796e-04,  2.9352e-04, -1.9896e-04,
        -7.1076e-04,  9.1543e-05, -1.0177e-03, -1.8670e-04, -2.3904e-05,
         1.6347e-04, -7.6782e-04, -5.0557e-04, -2.2766e-04, -5.7401e-04,
         5.9225e-04,  7.4737e-04,  1.7966e-04,  2.0676e-04, -1.0350e-03,
        -3.6891e-04,  9.7812e-04, -7.0368e-05, -1.3471e-04, -2.3544e-05,
         1.4674e-03, -2.7624e-04,  1.9631e-04,  6.0834e-05, -2.0478e-05,
         2.6894e-04, -1.1549e-03, -8.6282e-05,  5.9480e-05, -6.1929e-04,
        -3.1107e-04, -1.6444e-03,  1.0899e-04, -2.3874e-04, -1.4550e-04,
        -9.2343e-05, -7.0574e-04, -2.8503e-04, -6.8916e-04, -8.8080e-05,
         9.1963e-04, -5.0369e-04,  9.3073e-05, -1.0335e-03,  5.1474e-03,
         2.1942e-05, -4.0399e-05, -1.2754e-04, -2.4891e-04,  4.4092e-04,
        -4.0826e-04,  8.4042e-05,  9.4065e-05,  7.0234e-05, -4.8659e-05,
        -6.0195e-04,  2.9484e-04, -3.0503e-04, -3.0889e-04, -3.4736e-04,
        -3.5304e-04,  1.2195e-04, -1.1786e-04, -4.8487e-05, -1.9043e-03,
        -2.0946e-04, -2.2288e-04, -2.7134e-04, -2.5153e-04, -4.5489e-04,
        -5.2833e-04,  1.0627e-03,  2.8117e-04])
##########################################################
prot_encoder.encoder.layers.1.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0325,  0.0295, -0.0003,  ...,  0.0036,  0.0438,  0.0559],
        [-0.0233,  0.0013, -0.0408,  ..., -0.0332, -0.0096, -0.0480],
        [-0.0524,  0.0547, -0.0364,  ..., -0.0681,  0.0650, -0.0076],
        ...,
        [ 0.0017,  0.0105, -0.0610,  ...,  0.0355,  0.0161,  0.0387],
        [ 0.0152,  0.0557, -0.0321,  ...,  0.0459, -0.0262, -0.0168],
        [-0.0179,  0.0332,  0.0153,  ...,  0.0326, -0.0114,  0.0434]])
tensor([[-0.0325,  0.0295, -0.0003,  ...,  0.0036,  0.0438,  0.0559],
        [-0.0233,  0.0013, -0.0408,  ..., -0.0332, -0.0096, -0.0480],
        [-0.0524,  0.0547, -0.0364,  ..., -0.0681,  0.0650, -0.0076],
        ...,
        [ 0.0018,  0.0105, -0.0610,  ...,  0.0355,  0.0161,  0.0387],
        [ 0.0152,  0.0557, -0.0321,  ...,  0.0459, -0.0263, -0.0168],
        [-0.0179,  0.0332,  0.0153,  ...,  0.0326, -0.0114,  0.0434]])
##########################################################
prot_encoder.encoder.layers.1.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 5.7212e-08, -1.5460e-08, -4.5323e-09, -4.6178e-08, -4.2245e-08,
        -8.0856e-09, -4.1770e-08, -4.9122e-08, -3.5648e-08,  4.8729e-08,
        -6.1985e-08, -6.7556e-08, -3.8961e-08, -1.0732e-07,  1.4569e-08,
        -1.2517e-07,  1.8467e-08,  2.7549e-08, -1.7356e-08,  4.6160e-08,
         3.6641e-08,  5.4555e-08, -8.8490e-08,  7.8377e-08, -7.1487e-08,
        -3.3745e-08,  1.3631e-08, -3.6057e-09, -2.6976e-08,  5.6789e-08,
        -3.7596e-08,  8.5721e-08, -3.8700e-08,  8.5630e-08, -1.6071e-07,
        -1.6754e-07, -8.1999e-08,  5.5190e-08,  5.0712e-08, -1.1046e-07,
        -4.3337e-09, -1.6382e-08,  7.4860e-08, -1.9242e-07,  7.5329e-09,
         1.1309e-07, -6.9545e-08, -5.8850e-08,  8.6965e-09,  4.0381e-09,
         3.2113e-08,  3.4376e-08, -1.5001e-08,  1.5577e-08, -4.1170e-08,
        -1.5298e-08, -2.5537e-08,  8.1946e-08,  1.5644e-08,  3.1702e-08,
         2.2230e-08,  2.4221e-08,  7.2796e-09,  7.4805e-09,  2.1920e-07,
        -1.3445e-08, -6.1368e-08, -1.0286e-07, -1.1162e-07,  1.0591e-07,
         3.8675e-08,  4.3816e-08, -2.0657e-08, -1.1583e-07,  1.4125e-07,
        -2.5271e-08,  1.1285e-07, -1.0513e-07, -5.3844e-08,  2.5984e-07,
         1.4760e-08, -8.5332e-08, -1.8362e-08, -2.7766e-08, -3.6243e-08,
        -1.2871e-08, -2.9932e-08,  1.5350e-08,  2.3655e-08, -2.5574e-08,
        -2.7827e-08, -2.0315e-08,  2.1840e-08, -2.5600e-08,  9.0365e-08,
        -3.7700e-08,  1.7774e-08, -2.8920e-08,  1.3039e-07, -1.4728e-08,
        -4.8238e-08, -7.6067e-08, -4.2410e-09, -1.0570e-07, -9.4053e-08,
        -5.4448e-08, -5.3912e-08,  2.2326e-08, -1.1819e-08, -1.2290e-07,
         6.4754e-08, -3.0279e-09,  2.8973e-10, -6.9648e-08, -8.6596e-08,
        -7.7351e-08,  1.1781e-08,  2.6825e-08,  5.4566e-08,  1.3639e-08,
        -1.1043e-07, -1.2227e-07, -1.2657e-07,  6.9047e-08,  1.1933e-07,
         3.3093e-08, -4.1413e-08, -1.5414e-08, -4.9322e-15, -4.7522e-15,
        -1.4295e-16,  2.2598e-15, -3.2325e-15, -1.7527e-15, -2.7270e-15,
        -6.2323e-15,  2.7448e-15,  1.1406e-14,  3.0310e-15,  4.5690e-15,
        -1.1390e-14,  5.1414e-16,  3.2243e-15,  1.1179e-15, -3.9814e-15,
         6.2091e-15, -2.9744e-15,  1.7149e-15, -1.0606e-15,  2.2145e-15,
        -4.5560e-15,  2.2343e-15,  4.2133e-15,  3.1303e-15, -5.0609e-16,
         4.9005e-15,  1.7007e-15,  1.5501e-15, -3.8677e-15,  4.3609e-15,
         7.3508e-16,  1.9973e-15, -2.4959e-15,  1.2225e-15, -1.7006e-15,
        -7.6815e-16,  2.8793e-15,  3.6842e-16, -3.0444e-15, -2.8675e-15,
        -7.5730e-16,  2.9705e-15,  1.8835e-15, -9.8045e-15,  6.3600e-15,
        -1.1766e-15,  2.7253e-15, -6.3637e-15,  6.5600e-16,  8.4870e-15,
        -1.6254e-15,  1.7062e-15, -1.1326e-15, -7.2420e-17, -9.1683e-15,
         7.1178e-15, -1.9987e-15,  4.9705e-15,  6.8326e-16,  1.0698e-14,
        -1.0023e-15,  9.0584e-15, -5.0076e-15,  2.3804e-15, -1.4756e-17,
        -4.0014e-15, -1.5841e-15,  7.9780e-16,  4.6377e-15, -1.7079e-15,
        -2.7535e-15,  4.6886e-15,  2.4439e-15, -2.2158e-15,  6.8490e-15,
         7.8089e-15, -4.0990e-15,  4.5468e-15,  9.8154e-15,  3.0758e-15,
         2.9910e-15,  2.7518e-15,  4.2924e-16,  5.7675e-16, -4.3875e-15,
        -5.7398e-15, -1.2952e-15, -3.1604e-15,  3.4605e-15, -7.6245e-15,
         8.2848e-15,  6.6934e-15, -3.7341e-15, -5.1270e-15, -2.5866e-15,
         3.7018e-15,  3.7178e-15,  7.7308e-16, -1.0327e-15, -1.8333e-15,
        -4.2127e-15,  7.6887e-15,  1.3824e-14,  5.7497e-15, -3.6706e-15,
         4.5062e-15, -2.8457e-15,  6.4143e-15, -6.0139e-15, -4.6686e-15,
        -7.3443e-15, -7.0110e-15, -7.3183e-16, -3.4220e-15,  2.9319e-15,
        -1.1005e-14, -2.3882e-15, -8.9794e-16, -1.0044e-15,  5.4259e-15,
        -3.6115e-15, -3.2741e-15, -1.7931e-15,  1.0592e-14, -5.0542e-15,
         1.1064e-15, -7.2805e-04,  6.5514e-05,  3.4715e-04, -4.4890e-04,
         4.2487e-04,  6.9333e-05,  5.5693e-05, -1.8432e-04, -1.2553e-06,
         1.4840e-05, -7.7330e-04,  1.2151e-04,  8.3433e-05, -1.8631e-04,
         8.2984e-04, -6.6308e-04,  7.0070e-04,  5.7040e-04, -5.8831e-05,
        -2.0301e-04, -3.2838e-05, -5.1567e-04, -9.9045e-05,  4.7765e-04,
        -6.5081e-04,  6.7257e-04, -3.6100e-04,  6.4001e-04,  1.2715e-03,
         2.2582e-04,  4.9287e-04,  5.9737e-04, -4.8797e-04, -2.5958e-04,
         6.6416e-04,  1.2315e-04, -6.0699e-04, -3.4273e-04,  1.9276e-04,
        -1.5371e-04, -1.5526e-04,  3.6224e-04, -3.6131e-04, -4.4068e-04,
         4.5056e-04, -4.2677e-04,  2.9668e-04,  4.9139e-04,  5.9790e-05,
         5.1838e-04, -1.1438e-04, -5.2512e-04,  1.0592e-04, -3.8541e-04,
        -3.4522e-04,  6.1949e-04,  7.0911e-04,  4.2151e-05, -5.8352e-04,
        -2.7285e-04,  1.0540e-04,  8.9727e-04, -4.1343e-04,  1.3491e-04,
         2.1561e-04,  5.8840e-04, -5.2452e-04,  3.5481e-05,  6.4851e-05,
         4.4563e-04, -3.3745e-04,  2.1287e-04, -1.3420e-04, -1.0290e-04,
         1.4579e-04, -2.3911e-04,  3.2682e-05,  3.8112e-04, -5.8051e-04,
         1.6100e-04,  8.7114e-05,  7.0332e-05, -3.6359e-04,  5.0306e-04,
        -2.4041e-04,  2.1862e-04, -3.5447e-04,  4.7509e-04, -4.0161e-04,
        -2.6147e-04,  4.5973e-04,  8.6119e-06,  2.2857e-05, -2.3926e-04,
        -2.2822e-04, -8.0421e-05, -7.9176e-05,  1.3782e-04,  6.3371e-04,
         1.4013e-05,  2.9754e-04,  2.3539e-04,  2.6944e-04,  3.8986e-04,
         2.8231e-04,  2.8478e-04, -9.5230e-05, -1.4202e-04, -1.2448e-03,
         1.6378e-04, -2.1183e-04, -5.5574e-04,  2.3274e-04,  2.5950e-05,
         3.5220e-04,  5.6572e-04, -6.3642e-04, -3.0318e-04,  2.7753e-04,
         2.3539e-04, -1.5758e-04,  2.3865e-05, -4.9735e-04, -6.9669e-04,
         1.4946e-04, -4.3262e-04, -6.9077e-04,  1.7090e-04])
##########################################################
prot_encoder.encoder.layers.1.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[-0.0777,  0.0435, -0.0862,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0485, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0306,  0.0483],
        [-0.0517, -0.0149,  0.0659,  ...,  0.0579, -0.0457,  0.0403]])
tensor([[-0.0777,  0.0435, -0.0862,  ..., -0.0174,  0.0451, -0.0246],
        [-0.0496,  0.0513, -0.0632,  ..., -0.0466, -0.0849,  0.0394],
        [-0.0132,  0.0485, -0.0817,  ..., -0.0294, -0.0181, -0.0196],
        ...,
        [ 0.0781, -0.0103,  0.0043,  ...,  0.0215, -0.0772,  0.0636],
        [ 0.0770, -0.0280, -0.0077,  ...,  0.0063,  0.0305,  0.0483],
        [-0.0517, -0.0149,  0.0659,  ...,  0.0579, -0.0457,  0.0403]])
##########################################################
prot_encoder.encoder.layers.1.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-4.0596e-04, -1.0684e-04,  1.4546e-04,  2.1043e-04, -2.6802e-04,
         2.6603e-04, -9.9526e-05, -1.3258e-05,  1.4371e-03,  4.8666e-04,
        -1.4268e-04, -2.0461e-04,  8.0216e-04, -1.5392e-04,  1.6049e-04,
        -1.1472e-05,  1.2795e-03, -7.6626e-04, -1.0860e-04,  6.2282e-04,
        -1.3243e-04, -5.5617e-04, -1.3664e-05, -1.1180e-05,  4.0052e-04,
        -4.6713e-04, -1.3554e-04,  8.5542e-05, -5.7302e-04, -1.3646e-04,
         1.2777e-05, -8.2597e-05,  1.6069e-04, -1.2715e-04,  7.6465e-04,
         2.2408e-05,  1.5024e-04, -7.9401e-05,  2.7207e-06,  3.1395e-03,
        -3.5820e-05,  4.2297e-04, -1.2957e-03, -8.9475e-05,  4.1198e-04,
        -6.1580e-04,  1.7587e-03, -1.7239e-04, -5.8660e-04, -1.8061e-04,
        -7.1510e-04,  4.4001e-05, -1.2675e-05,  8.7699e-05, -1.4415e-04,
        -5.8135e-04, -9.4993e-05, -1.1734e-03, -1.4797e-04, -5.2346e-05,
        -1.1593e-05, -7.6831e-04, -2.8609e-04, -1.9213e-04, -3.0335e-04,
         4.3573e-04,  5.0125e-04,  8.9789e-05,  2.5547e-04, -5.9614e-04,
        -4.3781e-04,  1.0055e-03,  8.5375e-06, -2.0527e-04, -7.7552e-05,
         1.3815e-03, -3.8365e-04,  1.7161e-04,  3.7996e-06,  2.3381e-05,
         6.1929e-05, -1.0472e-03, -1.2253e-04,  4.6284e-05, -6.5858e-04,
        -1.3095e-04, -1.8029e-03,  1.7634e-04, -2.5377e-04, -3.4428e-04,
        -8.9434e-05, -5.2524e-04, -2.1100e-04, -4.7838e-04, -4.5544e-05,
         8.8045e-04, -7.1906e-04, -3.0303e-05, -5.0054e-04,  4.5620e-03,
         2.2268e-05,  8.4541e-05, -1.8220e-04, -9.4871e-05,  5.1196e-05,
        -3.6779e-04,  1.0759e-04,  4.7152e-05,  2.1650e-04,  1.6395e-04,
        -4.5843e-04,  2.0202e-04, -8.2298e-05, -4.8259e-06, -1.6881e-04,
        -2.0009e-04,  1.0413e-04,  6.4007e-06, -6.7530e-05, -1.5264e-03,
        -6.0583e-06, -1.1178e-04, -4.0490e-05, -3.6237e-04, -6.4752e-04,
        -3.3115e-04,  8.3559e-04,  4.6410e-04])
##########################################################
prot_encoder.encoder.layers.1.linear1.weight shape: torch.Size([64, 128])
tensor([[ 0.0745,  0.0746, -0.0288,  ..., -0.0798, -0.0298, -0.0381],
        [-0.0043, -0.0423, -0.1010,  ..., -0.0017,  0.0398, -0.0409],
        [ 0.0119, -0.0364, -0.0016,  ..., -0.0108,  0.1452, -0.0815],
        ...,
        [ 0.0651,  0.0067,  0.0913,  ...,  0.0902, -0.0577, -0.0139],
        [ 0.0358,  0.0422, -0.0161,  ..., -0.0584, -0.0772, -0.0182],
        [ 0.0008,  0.0569, -0.0254,  ...,  0.0923, -0.0434,  0.0604]])
tensor([[ 0.0744,  0.0746, -0.0288,  ..., -0.0798, -0.0298, -0.0381],
        [-0.0044, -0.0423, -0.1010,  ..., -0.0018,  0.0398, -0.0410],
        [ 0.0119, -0.0364, -0.0016,  ..., -0.0108,  0.1452, -0.0815],
        ...,
        [ 0.0651,  0.0067,  0.0913,  ...,  0.0902, -0.0577, -0.0140],
        [ 0.0357,  0.0422, -0.0161,  ..., -0.0584, -0.0772, -0.0183],
        [ 0.0009,  0.0569, -0.0254,  ...,  0.0924, -0.0434,  0.0604]])
##########################################################
prot_encoder.encoder.layers.1.linear1.bias shape: torch.Size([64])
tensor([-0.0250,  0.0180, -0.0861,  0.0376, -0.0467,  0.0681,  0.0507, -0.0192,
         0.0337, -0.0159,  0.0222,  0.0514, -0.0768,  0.0162,  0.0261,  0.0345,
         0.0281,  0.0324,  0.0413,  0.0028, -0.0356,  0.0813, -0.0696,  0.0608,
        -0.0431, -0.0643, -0.0072,  0.0071,  0.0649,  0.0702, -0.0061,  0.0290,
        -0.0727, -0.0272, -0.0382,  0.0734, -0.0835, -0.0438, -0.0425,  0.0427,
        -0.0032,  0.0075, -0.0350,  0.0270, -0.0527, -0.0279,  0.0828, -0.0536,
         0.0573,  0.0599,  0.0368, -0.0062, -0.0522, -0.0149,  0.0005,  0.0297,
         0.0508, -0.0860, -0.0782,  0.0585,  0.0812,  0.0567, -0.0077,  0.0127])
tensor([-0.0252,  0.0171, -0.0859,  0.0367, -0.0468,  0.0681,  0.0515, -0.0191,
         0.0329, -0.0161,  0.0222,  0.0509, -0.0769,  0.0152,  0.0266,  0.0350,
         0.0281,  0.0327,  0.0419,  0.0031, -0.0358,  0.0814, -0.0693,  0.0606,
        -0.0430, -0.0645, -0.0074,  0.0069,  0.0648,  0.0706, -0.0062,  0.0295,
        -0.0718, -0.0273, -0.0381,  0.0737, -0.0834, -0.0438, -0.0427,  0.0426,
        -0.0034,  0.0077, -0.0351,  0.0270, -0.0518, -0.0279,  0.0825, -0.0534,
         0.0577,  0.0599,  0.0364, -0.0063, -0.0520, -0.0145,  0.0007,  0.0304,
         0.0504, -0.0862, -0.0778,  0.0592,  0.0807,  0.0565, -0.0077,  0.0134])
##########################################################
prot_encoder.encoder.layers.1.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.0899, -0.0270,  0.0349,  ..., -0.0373,  0.0763, -0.0272],
        [-0.0486, -0.0246, -0.0444,  ...,  0.0816, -0.0535, -0.0118],
        [ 0.0673,  0.0981, -0.0350,  ..., -0.0161,  0.0245,  0.0561],
        ...,
        [-0.1330, -0.0359,  0.0114,  ...,  0.0070,  0.0374, -0.0822],
        [ 0.0541,  0.0495,  0.0189,  ...,  0.0321, -0.0949, -0.1242],
        [-0.0308,  0.0518, -0.0519,  ...,  0.0046,  0.1097, -0.0690]])
tensor([[-0.0899, -0.0270,  0.0349,  ..., -0.0373,  0.0763, -0.0271],
        [-0.0486, -0.0246, -0.0444,  ...,  0.0816, -0.0535, -0.0118],
        [ 0.0673,  0.0980, -0.0350,  ..., -0.0161,  0.0245,  0.0561],
        ...,
        [-0.1330, -0.0359,  0.0114,  ...,  0.0070,  0.0374, -0.0822],
        [ 0.0541,  0.0492,  0.0189,  ...,  0.0317, -0.0950, -0.1246],
        [-0.0308,  0.0518, -0.0519,  ...,  0.0046,  0.1097, -0.0690]])
##########################################################
prot_encoder.encoder.layers.1.linear2.bias shape: torch.Size([128])
tensor([-0.1182,  0.0646,  0.0008, -0.0595,  0.0710, -0.0074, -0.0845, -0.1114,
         0.0555,  0.0241, -0.1157,  0.0894, -0.0410, -0.0008,  0.0374,  0.0021,
        -0.0535,  0.0135,  0.0153,  0.0757,  0.0807,  0.0810, -0.0713,  0.0207,
         0.1064, -0.0170,  0.0162,  0.0275, -0.0396, -0.0285, -0.0726, -0.0859,
        -0.0350, -0.1200,  0.0271, -0.0607,  0.1068, -0.0537,  0.0798, -0.0467,
        -0.0325,  0.0945,  0.0455, -0.0038, -0.0678,  0.1204,  0.0363,  0.0999,
        -0.0391, -0.1018, -0.0562,  0.0251,  0.0028,  0.1054,  0.0747,  0.0139,
         0.0395,  0.0414, -0.0185,  0.0687,  0.0981,  0.0435, -0.0411, -0.0493,
         0.1250, -0.0381,  0.0445,  0.1141,  0.0302,  0.0075,  0.0767,  0.1089,
         0.0577, -0.1065,  0.0402, -0.0100, -0.1008,  0.0900, -0.0211,  0.0569,
         0.0043,  0.1239, -0.0032, -0.1046, -0.0472, -0.0728,  0.0371, -0.1220,
        -0.0720, -0.0652, -0.0181, -0.0107, -0.0156, -0.0628,  0.0205, -0.0876,
        -0.0442, -0.0234,  0.0045,  0.0475,  0.1056,  0.0616,  0.0599,  0.0487,
        -0.0669,  0.0971,  0.0804,  0.1205,  0.0237, -0.0217, -0.0002,  0.0236,
         0.1213,  0.0462,  0.0240,  0.0174, -0.1079, -0.0424, -0.0862,  0.1223,
        -0.0236, -0.0300,  0.0469,  0.1132, -0.0838, -0.0935, -0.0828, -0.0944])
tensor([-0.1175,  0.0646,  0.0008, -0.0585,  0.0710, -0.0073, -0.0845, -0.1113,
         0.0556,  0.0245, -0.1154,  0.0888, -0.0412, -0.0008,  0.0365,  0.0024,
        -0.0527,  0.0133,  0.0151,  0.0751,  0.0806,  0.0806, -0.0712,  0.0209,
         0.1058, -0.0174,  0.0161,  0.0277, -0.0394, -0.0284, -0.0724, -0.0858,
        -0.0349, -0.1197,  0.0277, -0.0606,  0.1063, -0.0535,  0.0798, -0.0448,
        -0.0323,  0.0944,  0.0446, -0.0038, -0.0677,  0.1200,  0.0358,  0.0999,
        -0.0391, -0.1011, -0.0559,  0.0253,  0.0026,  0.1052,  0.0748,  0.0135,
         0.0395,  0.0412, -0.0181,  0.0685,  0.0982,  0.0431, -0.0405, -0.0492,
         0.1248, -0.0384,  0.0459,  0.1141,  0.0305,  0.0073,  0.0762,  0.1070,
         0.0576, -0.1064,  0.0397, -0.0112, -0.1002,  0.0901, -0.0211,  0.0568,
         0.0044,  0.1237, -0.0032, -0.1043, -0.0470, -0.0727,  0.0382, -0.1210,
        -0.0718, -0.0649, -0.0180, -0.0106, -0.0156, -0.0626,  0.0204, -0.0861,
        -0.0435, -0.0240,  0.0043,  0.0498,  0.1055,  0.0615,  0.0593,  0.0486,
        -0.0670,  0.0972,  0.0804,  0.1200,  0.0236, -0.0216, -0.0002,  0.0236,
         0.1212,  0.0461,  0.0240,  0.0167, -0.1077, -0.0426, -0.0859,  0.1191,
        -0.0235, -0.0298,  0.0470,  0.1137, -0.0834, -0.0934, -0.0866, -0.0946])
##########################################################
prot_encoder.encoder.layers.1.norm1.weight shape: torch.Size([128])
tensor([-0.0835, -0.0158, -0.0588,  0.1172,  0.1008,  0.0612, -0.1218, -0.0686,
         0.1180,  0.0951,  0.0038,  0.1431, -0.2655, -0.0279, -0.0304, -0.0167,
         0.1486,  0.1263,  0.0331, -0.0966, -0.0519,  0.0774,  0.0142,  0.0091,
        -0.0581,  0.0652,  0.0602,  0.0278, -0.0942, -0.0573, -0.1138, -0.0902,
        -0.0988, -0.0745,  0.1246, -0.1156, -0.0959,  0.0181,  0.0030,  0.1818,
         0.0588,  0.1625,  0.1117, -0.0620,  0.0798,  0.0996, -0.2359, -0.1124,
         0.1312, -0.0677, -0.0710,  0.1711, -0.0270, -0.0232, -0.0975,  0.1081,
         0.0805,  0.1494, -0.0027, -0.0054, -0.0087,  0.0636, -0.0258, -0.0341,
         0.1033, -0.0465,  0.0364, -0.0285,  0.0520,  0.0762,  0.0602, -0.0420,
         0.0084,  0.0477,  0.0089, -0.0844, -0.0224,  0.0271, -0.0095,  0.1247,
         0.1002,  0.2103,  0.0646,  0.0516, -0.1102, -0.1720, -0.0897, -0.0082,
         0.1197, -0.1434, -0.1022, -0.0769,  0.0310, -0.1084, -0.0176,  0.0407,
        -0.0987, -0.0031,  0.1535,  0.1009, -0.0274,  0.0113,  0.0140,  0.0715,
         0.0871, -0.0621,  0.0466,  0.0349,  0.0650,  0.0478,  0.1404,  0.0842,
        -0.0082, -0.0259,  0.0270,  0.0131,  0.0272,  0.0091, -0.0201,  0.0314,
        -0.0089, -0.0113, -0.0249, -0.0234, -0.0712, -0.2020, -0.0154, -0.1446])
tensor([-0.0834, -0.0159, -0.0591,  0.1442,  0.1009,  0.0612, -0.1218, -0.0685,
         0.1205,  0.0948,  0.0038,  0.1425, -0.2655, -0.0279, -0.0302, -0.0167,
         0.1477,  0.1263,  0.0330, -0.0962, -0.0520,  0.0771,  0.0142,  0.0091,
        -0.0591,  0.0642,  0.0605,  0.0277, -0.0942, -0.0573, -0.1138, -0.0902,
        -0.0988, -0.0746,  0.1237, -0.1155, -0.0948,  0.0182,  0.0030,  0.1747,
         0.0589,  0.1625,  0.1109, -0.0621,  0.0800,  0.0995, -0.2342, -0.1123,
         0.1312, -0.0684, -0.0707,  0.1709, -0.0270, -0.0232, -0.0973,  0.1082,
         0.0806,  0.1491, -0.0024, -0.0055, -0.0087,  0.0630, -0.0256, -0.0341,
         0.1033, -0.0467,  0.0375, -0.0286,  0.0518,  0.0765,  0.0600, -0.0384,
         0.0084,  0.0481,  0.0089, -0.0850, -0.0219,  0.0270, -0.0095,  0.1245,
         0.1003,  0.2102,  0.0651,  0.0517, -0.1102, -0.1720, -0.0861, -0.0092,
         0.1191, -0.1431, -0.1022, -0.0768,  0.0310, -0.1080, -0.0177,  0.0378,
        -0.0971, -0.0032,  0.1535,  0.1117, -0.0274,  0.0115,  0.0139,  0.0715,
         0.0906, -0.0619,  0.0466,  0.0352,  0.0650,  0.0477,  0.1404,  0.0841,
        -0.0081, -0.0268,  0.0270,  0.0132,  0.0272,  0.0091, -0.0203,  0.0243,
        -0.0089, -0.0112, -0.0252, -0.0231, -0.0710, -0.2019, -0.0180, -0.1435])
##########################################################
prot_encoder.encoder.layers.1.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 5.9487e-04,  5.3839e-05, -2.3273e-04, -1.0023e-04, -2.5968e-04,
         4.1571e-04,  1.1136e-04,  5.6166e-05,  3.9876e-04,  5.7012e-04,
         1.1507e-04,  4.0659e-06, -2.7923e-04,  1.7807e-04, -8.2056e-04,
        -5.7259e-05,  6.2058e-04, -4.1259e-04, -1.2334e-04, -5.1345e-04,
        -7.0663e-05, -4.4729e-04,  2.1791e-04,  7.3555e-05, -8.3669e-04,
        -3.5437e-04,  6.5754e-05,  1.2681e-04,  4.7284e-04,  7.7208e-05,
         1.2146e-05, -3.8120e-05, -1.3555e-04,  3.0244e-04,  4.1088e-04,
        -3.0448e-05, -2.9328e-04,  1.7067e-04, -1.1227e-04,  1.4758e-03,
         5.0452e-05,  2.0259e-04, -5.9636e-04,  4.4548e-05,  5.5833e-04,
        -5.0011e-04, -6.5035e-04,  5.4422e-05, -3.2398e-04,  5.3396e-04,
         6.5244e-04,  1.2237e-05, -1.9170e-04,  3.3122e-05,  1.4614e-04,
        -3.8580e-04, -7.5599e-05, -4.4678e-04,  4.7118e-04, -5.3062e-04,
         6.6254e-05, -8.5310e-04,  2.7950e-04,  2.8059e-04, -2.2258e-04,
        -8.5352e-04,  1.4299e-03,  3.5829e-05,  4.0825e-04, -5.6032e-04,
        -5.4543e-04, -1.5812e-03,  5.4827e-06,  2.8523e-05, -2.5027e-04,
        -1.5651e-03,  6.2286e-04,  3.2810e-04, -2.0676e-04,  5.6734e-05,
         1.0292e-04, -3.7560e-04,  2.9178e-06,  2.6387e-04,  4.5844e-04,
         1.5782e-05,  1.1066e-03,  5.0052e-04, -1.8028e-04,  1.8015e-04,
         4.5424e-05,  4.3144e-04, -3.7083e-04,  3.0578e-04, -1.7238e-04,
         1.3561e-03,  5.3681e-04, -4.6267e-04, -2.9225e-04,  3.5061e-03,
        -2.2870e-04,  8.7072e-05, -3.8968e-04, -5.2974e-05,  2.3138e-04,
         2.4873e-04,  1.3705e-04, -4.2279e-04,  2.6562e-04,  3.2870e-04,
        -1.8358e-04,  2.2098e-04,  1.2625e-04, -1.7968e-05, -7.5898e-05,
        -7.7464e-04,  3.0576e-04, -2.3708e-05,  3.9234e-04, -2.9474e-03,
         1.4830e-04,  1.3782e-04,  4.6873e-04,  6.7833e-04,  5.0530e-04,
         1.7490e-04, -4.3840e-03, -1.5968e-04])
##########################################################
prot_encoder.encoder.layers.1.norm2.weight shape: torch.Size([128])
tensor([ 0.0876,  0.0345, -0.0591, -0.1260, -0.0100, -0.0029,  0.0332,  0.0534,
        -0.1049,  0.1226, -0.0263, -0.0870, -0.0203, -0.0975, -0.1803,  0.0601,
         0.0830,  0.0267,  0.0450, -0.0760,  0.0328,  0.0698,  0.0007, -0.0581,
         0.1316, -0.1208, -0.1727, -0.0335, -0.0269, -0.0201,  0.0077,  0.0090,
         0.0100,  0.0382, -0.0814,  0.0298,  0.1071, -0.0296, -0.0117,  0.1747,
        -0.0385,  0.0003,  0.1066,  0.0400, -0.0635,  0.0511, -0.0727,  0.0369,
        -0.0320,  0.1305, -0.0447, -0.0257,  0.0944, -0.0474,  0.0822,  0.0938,
         0.0106,  0.0262, -0.1332,  0.0193, -0.0184,  0.0780, -0.1103,  0.0840,
         0.0527, -0.0251,  0.0927, -0.0725, -0.0853, -0.0852,  0.0490, -0.1586,
         0.0346, -0.0478,  0.0099, -0.1855, -0.0581, -0.0352,  0.0107, -0.0307,
         0.0646,  0.0101, -0.1056, -0.0244,  0.0147, -0.0189,  0.1618,  0.1120,
         0.0575,  0.0575, -0.0037, -0.0243, -0.0350, -0.0454,  0.1007,  0.0984,
         0.0835,  0.1604,  0.0274, -0.1330,  0.0038, -0.1603,  0.0902,  0.0587,
         0.0973, -0.0341,  0.0117, -0.1127, -0.1161, -0.0177, -0.0095, -0.0235,
        -0.0013,  0.1591, -0.0187,  0.0503,  0.0031,  0.0151,  0.0327,  0.2282,
        -0.0185, -0.0380, -0.0883,  0.0191, -0.0384,  0.0053, -0.0918,  0.0852])
tensor([ 0.0869,  0.0346, -0.0597, -0.1559, -0.0097, -0.0028,  0.0331,  0.0534,
        -0.1078,  0.1222, -0.0259, -0.0876, -0.0200, -0.0975, -0.1797,  0.0603,
         0.0806,  0.0264,  0.0449, -0.0752,  0.0326,  0.0688,  0.0013, -0.0582,
         0.1315, -0.1205, -0.1728, -0.0337, -0.0268, -0.0201,  0.0081,  0.0076,
         0.0096,  0.0376, -0.0805,  0.0296,  0.1063, -0.0295, -0.0132,  0.1702,
        -0.0383,  0.0003,  0.1063,  0.0400, -0.0635,  0.0495, -0.0643,  0.0367,
        -0.0321,  0.1303, -0.0446, -0.0254,  0.0944, -0.0473,  0.0820,  0.0939,
         0.0108,  0.0260, -0.1332,  0.0193, -0.0191,  0.0777, -0.1097,  0.0840,
         0.0524, -0.0265,  0.0943, -0.0730, -0.0852, -0.0853,  0.0482, -0.1567,
         0.0345, -0.0485,  0.0070, -0.1861, -0.0572, -0.0355,  0.0109, -0.0306,
         0.0645,  0.0088, -0.1057, -0.0239,  0.0147, -0.0192,  0.1599,  0.1110,
         0.0559,  0.0574, -0.0038, -0.0243, -0.0350, -0.0453,  0.1006,  0.0959,
         0.0823,  0.1603,  0.0279, -0.1423,  0.0036, -0.1603,  0.0900,  0.0587,
         0.1008, -0.0342,  0.0121, -0.1124, -0.1160, -0.0175, -0.0094, -0.0235,
        -0.0006,  0.1591, -0.0189,  0.0508,  0.0033,  0.0156,  0.0323,  0.2257,
        -0.0185, -0.0379, -0.0884,  0.0234, -0.0377,  0.0052, -0.0974,  0.0833])
##########################################################
prot_encoder.encoder.layers.1.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 1.0499e-03,  3.5526e-04,  3.0560e-05,  1.0227e-03,  9.8026e-04,
        -1.6938e-04,  5.1723e-05, -5.5379e-05,  5.0476e-05,  2.8071e-04,
        -5.0584e-04,  1.0054e-03, -1.4273e-04, -8.1001e-05,  5.3259e-04,
         5.3697e-04,  9.0310e-04, -7.9284e-04, -6.8737e-04,  5.2835e-04,
        -3.8980e-04, -8.0823e-04, -5.8137e-04, -4.3164e-04, -6.0188e-04,
         1.2142e-04, -8.3189e-05, -7.2707e-04, -9.9357e-04, -2.3066e-04,
        -5.5077e-04,  8.3262e-04,  5.3154e-04,  7.0277e-04, -7.4463e-04,
        -2.1542e-04, -1.7906e-04, -6.6184e-04, -2.0080e-03,  1.6233e-03,
        -5.6380e-04, -5.0796e-05, -6.9056e-04, -1.7901e-04, -1.1960e-04,
        -8.7274e-04,  8.0689e-05, -1.5967e-04, -1.8913e-04,  5.2923e-04,
        -4.8926e-05, -4.2092e-04, -3.8720e-04,  2.2735e-04,  1.7056e-04,
        -6.6616e-04, -1.2605e-04,  3.8217e-04, -3.2662e-04, -9.4379e-05,
        -1.3198e-03, -4.4151e-04, -5.0044e-04,  1.0743e-04, -4.3714e-04,
         3.0351e-03,  2.0011e-03, -2.2117e-04, -3.4836e-04,  3.2074e-04,
        -9.0928e-04,  1.4281e-03, -1.5176e-04,  8.1713e-04, -6.9125e-03,
         1.4955e-03, -6.8239e-04, -5.9273e-04, -1.3084e-03, -6.1442e-05,
         3.1013e-04, -3.7817e-04,  8.9397e-05, -4.7630e-04, -1.5676e-04,
         2.6595e-04,  8.4017e-04,  6.3365e-04,  3.2946e-05,  2.5991e-04,
         1.5390e-04,  4.2496e-06,  1.1209e-04, -1.7567e-04, -1.4175e-04,
         1.2612e-03, -6.9756e-05, -4.3714e-04, -2.2608e-03, -2.9904e-03,
        -6.4679e-04, -1.0666e-04, -8.7572e-04, -1.8093e-05, -1.5044e-04,
        -2.6177e-04,  9.9759e-04,  2.4200e-04, -4.4228e-05, -5.9020e-04,
        -1.7844e-04, -1.5387e-04,  7.8517e-04,  2.1178e-04,  8.2662e-04,
        -1.1305e-03, -1.6690e-04, -2.3721e-03,  1.0316e-03, -1.7016e-03,
        -2.9475e-05, -4.6878e-04, -2.4227e-04,  4.9921e-03, -5.5162e-04,
        -1.1055e-04,  5.9116e-03, -8.2499e-04])
##########################################################
cross_encoder.encoder.layers.0.self_attn.in_proj_weight shape: torch.Size([384, 128])
tensor([[-0.0401,  0.0412, -0.0053,  ..., -0.0539, -0.0494,  0.0470],
        [-0.0333,  0.0096,  0.0084,  ...,  0.0284, -0.0613, -0.0326],
        [-0.0486, -0.0002, -0.0032,  ..., -0.0639,  0.0555, -0.0388],
        ...,
        [-0.0224, -0.0400,  0.0455,  ..., -0.0584,  0.0101, -0.0370],
        [ 0.0139, -0.0595,  0.0189,  ..., -0.0405, -0.0065, -0.0274],
        [-0.0334,  0.0660,  0.0608,  ..., -0.0142, -0.0499, -0.0272]])
tensor([[-0.0401,  0.0412, -0.0053,  ..., -0.0539, -0.0494,  0.0470],
        [-0.0333,  0.0096,  0.0084,  ...,  0.0284, -0.0613, -0.0326],
        [-0.0486, -0.0002, -0.0032,  ..., -0.0639,  0.0555, -0.0388],
        ...,
        [-0.0223, -0.0400,  0.0455,  ..., -0.0584,  0.0101, -0.0370],
        [ 0.0140, -0.0595,  0.0189,  ..., -0.0405, -0.0065, -0.0274],
        [-0.0333,  0.0660,  0.0608,  ..., -0.0142, -0.0499, -0.0272]])
##########################################################
cross_encoder.encoder.layers.0.self_attn.in_proj_bias shape: torch.Size([384])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.0856e-07,  3.7902e-07, -6.5361e-07, -6.5120e-08,  5.1750e-07,
        -1.2603e-07, -1.8374e-07,  5.0709e-07,  2.0061e-07,  7.9799e-07,
         4.1776e-07, -3.2703e-07,  2.3569e-07,  3.6968e-07, -6.0450e-07,
        -2.8884e-08,  4.1188e-07, -1.0214e-06, -9.4218e-07, -1.1036e-06,
        -8.8713e-07,  2.1789e-07,  1.2227e-06, -2.4962e-07, -3.2170e-08,
        -5.2390e-07, -3.3056e-07,  6.3240e-08, -5.3255e-08,  1.2793e-06,
         6.6475e-07, -1.4423e-06, -4.7216e-09,  2.8845e-07, -4.7007e-07,
        -4.3209e-07,  6.0288e-07, -1.4683e-06, -2.7369e-07, -1.1304e-08,
         3.2895e-07, -4.4405e-07, -2.5801e-07, -6.3193e-07,  9.5442e-07,
        -1.0987e-06,  6.4571e-07, -1.0168e-06,  1.4702e-07, -5.7069e-07,
        -5.7305e-07, -1.8006e-07,  1.4398e-06,  2.5993e-08, -7.1089e-08,
        -3.6737e-07, -3.0455e-07, -3.0255e-07,  1.3234e-06, -3.8339e-08,
         1.0272e-07, -3.3939e-07,  8.8716e-07,  4.1098e-07,  1.2798e-07,
        -8.0161e-07, -2.2231e-06,  9.3219e-07, -4.8599e-07, -3.1217e-07,
         7.6957e-07, -8.4699e-08,  6.3272e-07,  8.8554e-07,  3.9449e-07,
         1.3318e-08, -9.1933e-07,  2.9279e-07, -1.4724e-07,  1.5607e-06,
        -2.1060e-06,  8.6621e-07,  3.3369e-07, -5.0761e-07,  1.2089e-06,
         1.0628e-06, -2.0738e-07, -8.5324e-07,  1.3644e-06,  8.4499e-07,
         1.6441e-07, -7.6320e-07, -1.4500e-07,  8.3548e-07,  8.6449e-07,
        -1.1829e-06, -2.5055e-07, -4.6107e-07,  2.9017e-07, -4.4709e-07,
        -1.1094e-06, -1.0836e-07, -5.1508e-08,  4.7536e-07, -3.7715e-07,
         2.7815e-07,  3.6492e-07,  1.5594e-08, -4.1729e-07,  1.6912e-07,
        -1.5090e-07, -4.3717e-07,  2.0376e-06, -1.4874e-06,  1.9081e-06,
        -3.2732e-09, -1.1342e-06, -1.1960e-06,  1.3039e-06,  3.4831e-07,
        -1.2161e-06, -1.4955e-06, -5.9657e-07, -7.6837e-07,  1.2513e-06,
        -1.2833e-06,  2.5736e-06,  4.5257e-07, -5.9202e-15,  7.6427e-15,
         2.7748e-16,  5.7061e-15, -1.5993e-15, -1.1265e-14, -1.2855e-14,
        -7.9810e-15, -2.6834e-15, -1.2469e-14, -2.5976e-15, -2.4382e-15,
        -1.4700e-14,  1.7010e-14, -7.7772e-15,  9.6310e-15, -1.3749e-15,
        -1.5146e-15,  3.8479e-16,  6.8219e-15,  1.0761e-14,  2.0092e-15,
        -8.1984e-16,  8.6056e-15, -6.9272e-15, -8.7555e-15,  3.7356e-15,
        -6.5138e-15,  8.3885e-15,  2.4022e-15,  6.2472e-15,  1.8507e-14,
         3.1099e-15, -7.1743e-15,  3.3386e-15, -5.2132e-15, -2.2572e-15,
         2.3285e-15, -2.5365e-15, -2.8539e-15, -1.0523e-14,  4.5189e-16,
         2.9848e-15, -5.4056e-16, -2.9269e-16,  9.7716e-15,  5.4778e-15,
         2.8458e-15,  4.6629e-15, -8.8042e-15,  1.5052e-15,  5.0327e-15,
         2.6974e-16, -7.3148e-15,  4.7280e-15, -9.1097e-15,  1.7629e-14,
         2.0746e-15, -9.6032e-15, -6.5409e-15, -8.6505e-15, -3.3280e-15,
         2.4763e-15, -2.2928e-15,  1.8403e-15,  3.7031e-15,  1.3027e-14,
        -1.8655e-15, -4.2494e-15,  9.8660e-15, -1.1782e-15, -8.2101e-15,
        -2.3499e-15, -8.6311e-15, -3.3798e-15, -2.4719e-15, -2.2348e-15,
         2.9324e-15,  2.5202e-15,  8.3581e-16,  4.5825e-16,  5.2441e-15,
         4.5541e-15, -1.3907e-14,  6.2104e-15,  6.4529e-15,  5.3299e-15,
         3.6183e-15,  7.6895e-15,  1.2872e-15,  3.5563e-15, -5.0765e-15,
         1.3079e-14, -7.4987e-16,  6.7854e-15,  4.4474e-15,  4.3454e-15,
         2.3013e-14, -1.4148e-14, -1.1352e-14,  2.9340e-14, -8.5475e-15,
         1.5731e-14, -1.4368e-14,  5.2480e-15, -3.4835e-16,  1.3044e-15,
         1.0612e-15, -9.6067e-15,  3.3548e-14,  3.1002e-15,  3.5047e-15,
         1.0100e-14, -1.9546e-14, -7.2728e-16,  5.7450e-16,  1.0569e-14,
         2.7154e-15, -4.8021e-15,  5.5724e-17,  9.9652e-15,  1.2895e-14,
         7.4965e-15, -7.8713e-15,  8.0848e-15, -1.3080e-14,  1.2716e-14,
        -1.9517e-15, -1.0929e-03,  3.1503e-03,  7.4705e-04,  8.1421e-04,
         2.7103e-03,  3.7009e-03,  2.9619e-03,  3.6312e-03,  9.9660e-04,
         1.0665e-03,  2.3955e-03,  3.8204e-03, -4.1200e-03, -4.0114e-03,
        -6.4314e-03,  2.4846e-03,  2.2147e-03,  2.4310e-03,  1.7339e-04,
         7.7047e-04, -3.5952e-03, -9.0119e-03, -2.6007e-03,  1.8630e-04,
         1.9122e-03, -8.7649e-04,  1.2714e-03,  4.3951e-03, -7.4563e-03,
         5.4386e-03,  1.6957e-03,  1.0647e-03,  9.5798e-03,  4.0795e-04,
        -6.3866e-04,  6.3688e-03,  2.2557e-03,  6.8164e-03, -2.0745e-03,
        -4.8502e-03,  2.7553e-05, -1.6060e-03,  1.8832e-03,  5.1132e-04,
        -2.3399e-04, -3.9740e-03, -6.6089e-04, -1.3460e-03, -1.9807e-03,
         3.1716e-04,  4.0698e-03, -2.1748e-03,  5.1978e-03, -4.0860e-03,
        -1.1879e-03, -1.1692e-04, -1.0314e-02, -4.1105e-03, -6.7697e-03,
        -2.3468e-03,  3.1183e-04,  4.0012e-03,  3.4748e-03, -2.5416e-03,
        -4.6828e-04,  8.1934e-04, -1.0459e-03, -2.1960e-03,  7.2566e-03,
         5.5172e-04,  3.9161e-03,  7.2395e-03, -2.3287e-04, -3.2590e-03,
         4.3849e-03, -6.4494e-04,  1.9310e-03, -5.1195e-03,  1.8856e-03,
         9.0804e-03, -7.7185e-03, -5.4896e-03,  3.0271e-03, -3.2723e-03,
         4.0505e-03,  1.8237e-03, -3.7733e-03, -5.5815e-03,  7.0627e-05,
        -8.5225e-03, -4.9238e-03,  1.4914e-03, -7.2629e-04,  1.2238e-03,
        -1.5975e-03,  1.1446e-03, -1.8714e-03,  8.5047e-03, -6.8739e-03,
         2.7846e-03,  4.6284e-03, -4.7152e-04, -5.6583e-03,  4.1271e-03,
         1.5273e-03, -1.2468e-04,  2.3613e-04,  4.6540e-04,  6.9993e-05,
        -8.4518e-04,  1.9219e-03,  2.3008e-03, -5.0007e-03,  6.0444e-03,
        -2.4487e-03,  4.0566e-04, -2.6343e-03, -1.4081e-03,  3.7740e-03,
         2.4416e-03, -2.4277e-03, -2.9844e-03, -1.7901e-03, -9.8841e-04,
        -5.2970e-03,  1.6997e-03, -8.3929e-04, -6.0872e-04])
##########################################################
cross_encoder.encoder.layers.0.self_attn.out_proj.weight shape: torch.Size([128, 128])
tensor([[ 8.7909e-05,  3.0279e-02, -9.1567e-03,  ...,  7.5423e-02,
         -2.2786e-02,  4.5643e-02],
        [ 6.7810e-02,  7.4392e-02, -3.5738e-02,  ..., -3.9617e-02,
         -2.6409e-02,  4.3155e-02],
        [-1.1801e-02, -2.2520e-02, -8.7259e-02,  ...,  6.7634e-02,
         -7.3776e-02, -2.1436e-02],
        ...,
        [-5.8160e-02, -2.1201e-02, -7.6753e-02,  ...,  7.9017e-02,
          7.6030e-03,  3.9384e-02],
        [-5.1556e-02,  5.9830e-02, -6.0876e-02,  ..., -4.8621e-03,
          7.4306e-03,  2.2564e-02],
        [-2.7383e-02,  8.7618e-02, -8.0539e-02,  ..., -1.8069e-02,
         -4.0330e-02,  4.2306e-02]])
tensor([[ 0.0001,  0.0303, -0.0091,  ...,  0.0755, -0.0228,  0.0457],
        [ 0.0678,  0.0744, -0.0358,  ..., -0.0397, -0.0264,  0.0432],
        [-0.0120, -0.0224, -0.0874,  ...,  0.0673, -0.0736, -0.0216],
        ...,
        [-0.0582, -0.0212, -0.0768,  ...,  0.0790,  0.0076,  0.0394],
        [-0.0517,  0.0600, -0.0611,  ..., -0.0053,  0.0079,  0.0224],
        [-0.0274,  0.0876, -0.0805,  ..., -0.0180, -0.0404,  0.0423]])
##########################################################
cross_encoder.encoder.layers.0.self_attn.out_proj.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.8302e-03,  2.1966e-03,  1.3834e-02, -3.9670e-02, -5.7469e-03,
         2.9485e-03, -2.3970e-03,  3.8927e-05, -1.4788e-02,  9.4945e-04,
         5.9750e-03, -3.3260e-03,  8.6127e-04,  1.5493e-04, -5.3243e-03,
         9.8546e-03, -5.3443e-03,  1.3817e-03, -1.9140e-03,  2.7855e-03,
        -3.5643e-03, -9.6749e-04, -7.3242e-03, -1.6421e-03,  2.8775e-03,
         2.6728e-03, -9.4852e-04, -1.6627e-03, -5.8692e-03, -6.2847e-04,
        -2.1597e-03,  2.4290e-02,  1.8197e-02,  1.8042e-03,  1.1578e-03,
        -8.4716e-04, -9.0101e-04, -1.4168e-03, -8.4574e-03,  3.9114e-04,
         1.2447e-03, -1.8797e-03, -2.1007e-03,  1.0396e-03, -3.0451e-05,
        -5.1508e-05, -2.5447e-03,  2.2942e-03, -2.4505e-04,  4.5545e-03,
         6.2146e-04,  3.0417e-03, -7.0652e-04,  1.6103e-03, -1.4259e-03,
         1.3286e-03,  5.8913e-03, -1.8597e-04,  1.2818e-03,  7.9664e-04,
        -6.0139e-04, -1.7437e-03,  8.3070e-04,  1.1827e-03, -4.7226e-04,
         3.2860e-03,  2.0123e-02, -1.5760e-03,  8.6014e-04,  8.4659e-04,
         2.2514e-04,  8.7649e-04,  2.4175e-04, -1.2224e-02,  1.4553e-02,
        -5.1982e-03,  1.2183e-03,  1.8240e-03, -7.6631e-03, -1.7527e-04,
         1.4514e-03, -1.4214e-04,  3.9417e-03,  1.5718e-03,  4.1236e-03,
        -1.2373e-03, -1.4577e-03, -6.2756e-03, -5.2160e-03,  5.2752e-03,
        -7.2634e-04,  8.6386e-04,  3.7154e-03,  1.1344e-03,  1.3008e-03,
         2.2348e-03, -1.2587e-02, -2.9910e-03,  1.1281e-02, -1.5867e-02,
        -2.1054e-03,  4.0655e-03, -3.9208e-04,  2.2581e-03,  2.0944e-02,
        -2.3393e-03,  6.5534e-03, -1.9223e-03,  8.9963e-04, -1.8070e-03,
         9.1147e-04, -2.0898e-04, -9.6969e-04,  8.9542e-04, -6.4274e-03,
        -2.5563e-02, -1.1793e-03, -1.7126e-02,  7.3917e-03, -3.2747e-03,
         1.3960e-03,  3.3423e-04,  6.0568e-04, -8.0538e-04,  9.5127e-04,
         4.2427e-04,  1.8644e-02, -8.0251e-04])
##########################################################
cross_encoder.encoder.layers.0.linear1.weight shape: torch.Size([64, 128])
tensor([[-9.7447e-02,  3.2885e-02, -1.9131e-02,  ..., -4.6177e-03,
          6.6864e-02,  4.2188e-02],
        [ 1.8782e-05, -3.8437e-02,  1.0159e-01,  ...,  7.0669e-02,
         -8.3384e-02, -3.9141e-03],
        [-1.1808e-01, -2.4029e-02, -1.0985e-01,  ..., -3.9547e-05,
         -3.8619e-02,  4.1206e-02],
        ...,
        [-1.8262e-01, -3.4801e-02, -9.8110e-02,  ..., -8.8087e-03,
         -4.9142e-02, -1.1163e-01],
        [ 4.4800e-02, -1.2352e-01, -4.0180e-02,  ..., -9.9445e-02,
         -6.6411e-03, -2.4675e-02],
        [ 7.4444e-02,  9.3048e-02,  6.1778e-02,  ...,  1.6162e-02,
         -1.8157e-02,  2.2595e-02]])
tensor([[-9.7466e-02,  3.2850e-02, -1.9149e-02,  ..., -4.6275e-03,
          6.6841e-02,  4.2201e-02],
        [-2.3620e-05, -3.8431e-02,  1.0158e-01,  ...,  7.0679e-02,
         -8.3282e-02, -3.9268e-03],
        [-1.1790e-01, -2.4018e-02, -1.0980e-01,  ..., -1.6782e-05,
         -3.8872e-02,  4.1189e-02],
        ...,
        [-1.8250e-01, -3.4766e-02, -9.8108e-02,  ..., -8.8617e-03,
         -4.9395e-02, -1.1157e-01],
        [ 4.4858e-02, -1.2348e-01, -4.0130e-02,  ..., -9.9477e-02,
         -6.5803e-03, -2.4666e-02],
        [ 7.4641e-02,  9.3095e-02,  6.1912e-02,  ...,  1.6217e-02,
         -1.8516e-02,  2.2609e-02]])
##########################################################
cross_encoder.encoder.layers.0.linear1.bias shape: torch.Size([64])
tensor([-0.0145, -0.0367,  0.0249,  0.0319,  0.0287, -0.0240, -0.0234,  0.0359,
        -0.0376,  0.0108,  0.0444,  0.0066, -0.0208,  0.0294, -0.0128, -0.0081,
         0.0088, -0.0125,  0.0345, -0.0108, -0.0767, -0.0520,  0.0595,  0.0274,
        -0.0528,  0.0860, -0.0149, -0.0442, -0.0850, -0.0149, -0.0225, -0.0061,
         0.0782, -0.0314, -0.0694, -0.0434, -0.0475, -0.0129, -0.0341,  0.0638,
         0.0335,  0.0604, -0.0118,  0.0108, -0.0807, -0.0799,  0.0845,  0.0535,
        -0.0814, -0.0264, -0.0756,  0.0357, -0.0511, -0.0090, -0.0264,  0.0735,
         0.0397, -0.0280,  0.0379,  0.0194, -0.0360,  0.0532,  0.0857,  0.0562])
tensor([-0.0128, -0.0367,  0.0243,  0.0328,  0.0294, -0.0234, -0.0233,  0.0350,
        -0.0379,  0.0085,  0.0448,  0.0057, -0.0203,  0.0308, -0.0117, -0.0080,
         0.0087, -0.0132,  0.0342, -0.0118, -0.0767, -0.0522,  0.0594,  0.0271,
        -0.0528,  0.0856, -0.0146, -0.0440, -0.0850, -0.0156, -0.0229, -0.0061,
         0.0789, -0.0311, -0.0695, -0.0430, -0.0476, -0.0127, -0.0341,  0.0611,
         0.0324,  0.0555, -0.0117,  0.0112, -0.0808, -0.0800,  0.0870,  0.0519,
        -0.0814, -0.0268, -0.0771,  0.0339, -0.0506, -0.0077, -0.0265,  0.0736,
         0.0421, -0.0280,  0.0392,  0.0213, -0.0364,  0.0517,  0.0833,  0.0519])
##########################################################
cross_encoder.encoder.layers.0.linear2.weight shape: torch.Size([128, 64])
tensor([[-0.0067,  0.0483, -0.0172,  ...,  0.1401,  0.0291,  0.0728],
        [ 0.0355,  0.0475,  0.0833,  ...,  0.0435,  0.0429,  0.0083],
        [ 0.1650,  0.1553,  0.0252,  ..., -0.0481,  0.0461,  0.0391],
        ...,
        [-0.1247,  0.0451, -0.0245,  ...,  0.0247, -0.0017, -0.0123],
        [ 0.0735, -0.0914,  0.0287,  ..., -0.0412, -0.0339,  0.0295],
        [-0.1179,  0.0481,  0.0340,  ..., -0.0068, -0.0268,  0.0411]])
tensor([[-0.0068,  0.0483, -0.0173,  ...,  0.1401,  0.0291,  0.0728],
        [ 0.0354,  0.0475,  0.0834,  ...,  0.0436,  0.0430,  0.0084],
        [ 0.1654,  0.1553,  0.0251,  ..., -0.0480,  0.0463,  0.0392],
        ...,
        [-0.1247,  0.0451, -0.0246,  ...,  0.0246, -0.0017, -0.0123],
        [ 0.0736, -0.0913,  0.0288,  ..., -0.0410, -0.0337,  0.0296],
        [-0.1180,  0.0481,  0.0340,  ..., -0.0067, -0.0267,  0.0411]])
##########################################################
cross_encoder.encoder.layers.0.linear2.bias shape: torch.Size([128])
tensor([ 0.1209,  0.0081, -0.0134, -0.0315, -0.0781,  0.1205,  0.0826, -0.0848,
        -0.1103,  0.0260, -0.0703,  0.0899, -0.0316,  0.0591,  0.1090,  0.1024,
         0.1157, -0.1129,  0.0313, -0.0341, -0.0630,  0.0269, -0.0783,  0.0498,
        -0.1152,  0.0540, -0.1142, -0.0113, -0.1176,  0.0217, -0.0057, -0.0094,
         0.0549, -0.0603, -0.0682,  0.0054, -0.0621, -0.0321,  0.0180,  0.0998,
        -0.0978,  0.0664,  0.0850, -0.0424,  0.0513, -0.0632,  0.0755,  0.0577,
         0.0159,  0.0930, -0.0421,  0.1031, -0.0252, -0.0990,  0.0180,  0.1203,
        -0.0562,  0.0491, -0.0111, -0.0282, -0.0183,  0.0055,  0.0166, -0.0926,
        -0.1171, -0.0756, -0.1243, -0.1249, -0.0445,  0.0219, -0.0025,  0.0595,
         0.0795,  0.1185,  0.0156,  0.0267, -0.0662, -0.0612,  0.0370, -0.0562,
         0.0142, -0.0423, -0.0952,  0.0586,  0.0929, -0.1239,  0.0395, -0.1183,
         0.0977,  0.0950,  0.0152, -0.0850, -0.0843, -0.0609,  0.0665, -0.0565,
        -0.0789, -0.0399,  0.0139, -0.0432, -0.0021,  0.0943, -0.0237, -0.0842,
         0.0897, -0.1084, -0.1164, -0.1117, -0.0071,  0.0122,  0.1152,  0.0611,
         0.0609, -0.1181,  0.0207,  0.0115, -0.0991, -0.0778,  0.0139,  0.1063,
         0.0311, -0.0181,  0.0111,  0.0727, -0.0466,  0.0367,  0.0340,  0.0929])
tensor([ 0.1193,  0.0090, -0.0098, -0.0432, -0.0770,  0.1189,  0.0798, -0.0833,
        -0.1162,  0.0252, -0.0699,  0.0904, -0.0318,  0.0582,  0.1079,  0.0992,
         0.1141, -0.1122,  0.0302, -0.0338, -0.0595,  0.0296, -0.0728,  0.0502,
        -0.1146,  0.0534, -0.1141, -0.0054, -0.1153,  0.0211, -0.0063, -0.0027,
         0.0644, -0.0595, -0.0671,  0.0046, -0.0610, -0.0330,  0.0121,  0.0997,
        -0.0975,  0.0633,  0.0832, -0.0424,  0.0512, -0.0623,  0.0737,  0.0566,
         0.0155,  0.0914, -0.0417,  0.1014, -0.0260, -0.0984,  0.0171,  0.1213,
        -0.0579,  0.0474, -0.0135, -0.0294, -0.0174,  0.0040,  0.0187, -0.0916,
        -0.1164, -0.0731, -0.1126, -0.1262, -0.0442,  0.0231, -0.0026,  0.0564,
         0.0779,  0.1166,  0.0174,  0.0253, -0.0636, -0.0611,  0.0414, -0.0561,
         0.0140, -0.0417, -0.0929,  0.0583,  0.0923, -0.1234,  0.0382, -0.1232,
         0.0967,  0.0923,  0.0140, -0.0840, -0.0835, -0.0604,  0.0652, -0.0528,
        -0.0826, -0.0388,  0.0168, -0.0480, -0.0040,  0.0929, -0.0238, -0.0854,
         0.0800, -0.1066, -0.1120, -0.1046, -0.0072,  0.0124,  0.1139,  0.0599,
         0.0643, -0.1182,  0.0219,  0.0025, -0.0994, -0.0627,  0.0126,  0.1051,
         0.0305, -0.0215,  0.0112,  0.0722, -0.0474,  0.0360,  0.0364,  0.0935])
##########################################################
cross_encoder.encoder.layers.0.norm1.weight shape: torch.Size([128])
tensor([ 0.1106,  0.0530,  0.0980,  0.0809, -0.1091, -0.0452,  0.0433, -0.0018,
         0.0640, -0.1126,  0.0912, -0.0480, -0.0066, -0.0231,  0.0898, -0.1127,
         0.0638,  0.0493,  0.0600,  0.0563, -0.0660, -0.0176, -0.0468,  0.0740,
         0.0958, -0.0334, -0.0158, -0.0219, -0.0990,  0.0185,  0.0672,  0.1403,
         0.0668,  0.0289,  0.0464,  0.0208, -0.0050,  0.0656,  0.0591,  0.0615,
         0.0295,  0.0197,  0.0687,  0.0129,  0.0162, -0.0339,  0.0319, -0.0687,
        -0.0571, -0.0959,  0.0540, -0.0603,  0.0379, -0.0395,  0.0751,  0.0512,
        -0.1359,  0.0193, -0.0278, -0.0096, -0.0801,  0.0021,  0.0215,  0.0229,
        -0.0480,  0.0945,  0.0633,  0.0465,  0.0593,  0.0213,  0.0514, -0.0361,
         0.0032,  0.1260,  0.1587,  0.0902,  0.0404,  0.0525, -0.0572, -0.0301,
         0.0423,  0.1165,  0.0506, -0.0684, -0.1062, -0.0399,  0.1395,  0.0504,
         0.0637, -0.0796,  0.0163, -0.0014,  0.0635,  0.0717, -0.0227,  0.0771,
         0.0934, -0.0698,  0.1336,  0.0787,  0.0370, -0.0876,  0.0461, -0.0192,
        -0.0777, -0.0679,  0.0498, -0.0075,  0.0797, -0.0213, -0.0141,  0.0137,
        -0.0258, -0.0908, -0.0976,  0.1073, -0.0770, -0.0404, -0.1092,  0.0489,
        -0.0259,  0.0033,  0.0056, -0.0819, -0.0255,  0.1617,  0.1845, -0.0275])
tensor([ 0.1098,  0.0529,  0.0979,  0.1340, -0.1062, -0.0447,  0.0440, -0.0013,
         0.0748, -0.1123,  0.0909, -0.0589, -0.0073, -0.0232,  0.0901, -0.1120,
         0.0621,  0.0485,  0.0597,  0.0540, -0.0679, -0.0164, -0.0500,  0.0740,
         0.0952, -0.0310, -0.0154, -0.0252, -0.0992,  0.0186,  0.0653,  0.1467,
         0.0660,  0.0304,  0.0455,  0.0208, -0.0038,  0.0661,  0.0604,  0.0543,
         0.0301,  0.0210,  0.0692,  0.0129,  0.0163, -0.0332,  0.0280, -0.0685,
        -0.0570, -0.0961,  0.0538, -0.0609,  0.0380, -0.0390,  0.0752,  0.0520,
        -0.1352,  0.0195, -0.0279, -0.0093, -0.0784, -0.0043,  0.0229,  0.0225,
        -0.0479,  0.0925,  0.0672,  0.0475,  0.0592,  0.0201,  0.0514, -0.0393,
         0.0035,  0.1242,  0.1567,  0.0808,  0.0394,  0.0530, -0.0585, -0.0300,
         0.0422,  0.1160,  0.0494, -0.0676, -0.1061, -0.0401,  0.1379,  0.0511,
         0.0640, -0.0784,  0.0175, -0.0020,  0.0631,  0.0715, -0.0224,  0.0917,
         0.0947, -0.0700,  0.1337,  0.1006,  0.0375, -0.0872,  0.0462, -0.0183,
        -0.0851, -0.0682,  0.0489, -0.0035,  0.0792, -0.0203, -0.0138,  0.0136,
        -0.0256, -0.0900, -0.0981,  0.1107, -0.0767, -0.0401, -0.1077,  0.0488,
        -0.0259,  0.0052,  0.0060, -0.0785, -0.0255,  0.1617,  0.1859, -0.0264])
##########################################################
cross_encoder.encoder.layers.0.norm1.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-1.0517e-03,  1.5491e-03,  3.5773e-03, -1.3287e-02,  1.3345e-03,
        -2.1453e-03, -3.0842e-03,  2.9222e-04, -7.1712e-03, -8.1350e-04,
         1.8429e-03,  3.0221e-04,  1.2262e-03, -5.6521e-04, -2.4963e-03,
        -3.5823e-03, -2.6495e-03,  1.3408e-03, -1.7752e-03,  8.9156e-04,
         3.2975e-03,  2.7458e-03,  5.9022e-03, -8.2131e-04,  7.2471e-04,
        -1.8168e-03,  5.2172e-04,  5.5834e-03,  2.4531e-03, -9.8700e-04,
        -1.3928e-03,  6.6537e-03,  1.1475e-02,  1.8754e-03,  1.0144e-03,
        -1.0187e-03,  1.7854e-04, -1.8726e-03, -6.4758e-03,  1.6053e-04,
         4.2618e-04, -4.8208e-03, -9.9170e-04,  1.4890e-04, -5.5882e-04,
         1.4896e-04, -1.6147e-03, -1.2565e-03,  3.9525e-06, -2.0153e-03,
         2.2595e-04, -1.9252e-03, -8.9592e-04, -5.1673e-04, -5.9735e-04,
         1.3452e-03, -1.4049e-03, -1.7705e-03, -3.2505e-03, -7.6545e-04,
         1.2385e-03, -2.2901e-03,  3.0623e-03,  1.6034e-03,  4.4203e-04,
         2.3279e-03,  1.2626e-02, -1.5283e-03,  3.1593e-04,  7.6758e-04,
        -8.8569e-04, -2.3908e-03, -1.3759e-03, -3.4502e-03,  1.1420e-03,
        -1.4621e-03,  1.7439e-03,  6.4652e-04,  5.4910e-03,  5.6235e-04,
         6.2636e-04,  3.8738e-04,  2.1241e-03, -2.4417e-04, -1.5186e-03,
         1.3864e-03, -5.2239e-04, -5.1943e-03, -3.3599e-03, -2.4367e-03,
        -3.7841e-04,  1.3425e-03,  1.3484e-03,  2.7503e-04, -1.9940e-03,
         3.6509e-03, -4.2574e-03,  1.8069e-03,  4.8227e-03, -4.5917e-03,
        -2.1530e-03, -1.7601e-03,  6.3539e-04, -1.5656e-03, -1.1214e-02,
         1.6627e-03,  4.3352e-03,  8.3217e-03, -3.5574e-04, -3.8203e-05,
        -1.3704e-03, -5.2350e-04,  3.2288e-03, -1.3201e-03,  2.0818e-03,
        -9.4963e-03,  9.4291e-05,  1.7070e-02, -2.6068e-03, -1.2901e-03,
        -1.9251e-03, -2.4077e-03,  3.2168e-04, -5.1601e-04, -1.5845e-03,
         2.4071e-05,  4.2551e-03,  1.0222e-03])
##########################################################
cross_encoder.encoder.layers.0.norm2.weight shape: torch.Size([128])
tensor([ 0.0111,  0.0344, -0.1069,  0.1372, -0.0240, -0.0033,  0.0822, -0.0970,
         0.1360,  0.0261,  0.0247, -0.1074,  0.0170, -0.0080, -0.0222,  0.0369,
         0.0504,  0.0098,  0.0448, -0.0572, -0.0831,  0.1005,  0.1020, -0.0313,
         0.0084,  0.1535, -0.0901,  0.1134,  0.0474,  0.0104,  0.0322,  0.2072,
        -0.1199,  0.0739,  0.0217, -0.0474,  0.0526,  0.0190, -0.1001,  0.0148,
         0.0140, -0.0446, -0.0276, -0.0379,  0.0116,  0.0400, -0.0434, -0.0136,
         0.0089,  0.0362, -0.0437,  0.0347, -0.0202, -0.0266, -0.0033, -0.0790,
        -0.0165, -0.0716,  0.0477, -0.0434,  0.0292,  0.0410,  0.0699,  0.0456,
         0.0051,  0.0891, -0.1628,  0.0529,  0.0057, -0.1267,  0.0044, -0.0400,
         0.0163,  0.0942,  0.1642,  0.0588, -0.0275, -0.0489,  0.0876, -0.0026,
        -0.0169, -0.0677, -0.0953,  0.0278,  0.0056,  0.0709,  0.0030,  0.1069,
        -0.0103,  0.0807, -0.0861, -0.0139, -0.0062, -0.0035, -0.0517,  0.1934,
        -0.1257, -0.0185, -0.1298, -0.1321,  0.0976, -0.0267, -0.0305,  0.1115,
        -0.1756, -0.0371, -0.0883,  0.1026,  0.0025,  0.0037,  0.0324, -0.0466,
        -0.1156, -0.0605,  0.0328,  0.1331, -0.0089,  0.1607,  0.0753, -0.0091,
        -0.0196, -0.1245, -0.0106, -0.1553,  0.0748,  0.0074,  0.1091,  0.0341])
tensor([ 0.0106,  0.0357, -0.1077,  0.1811, -0.0221, -0.0016,  0.0812, -0.0960,
         0.1470,  0.0281,  0.0278, -0.1140,  0.0182, -0.0112, -0.0211,  0.0294,
         0.0528,  0.0075,  0.0445, -0.0551, -0.0823,  0.1014,  0.0997, -0.0316,
         0.0106,  0.1523, -0.0907,  0.1140,  0.0428,  0.0110,  0.0305,  0.2161,
        -0.1262,  0.0737,  0.0189, -0.0474,  0.0516,  0.0229, -0.0993,  0.0253,
         0.0141, -0.0433, -0.0280, -0.0377,  0.0135,  0.0384, -0.0409, -0.0112,
         0.0098,  0.0360, -0.0433,  0.0341, -0.0216, -0.0256, -0.0025, -0.0852,
        -0.0128, -0.0715,  0.0493, -0.0442,  0.0234,  0.0408,  0.0694,  0.0452,
        -0.0019,  0.0857, -0.1575,  0.0587,  0.0047, -0.1280,  0.0038, -0.0387,
         0.0155,  0.0919,  0.1628,  0.0546, -0.0243, -0.0490,  0.0918, -0.0020,
        -0.0171, -0.0661, -0.0933,  0.0287,  0.0086,  0.0710,  0.0118,  0.1128,
        -0.0109,  0.0774, -0.0863, -0.0102,  0.0007, -0.0053, -0.0511,  0.1990,
        -0.1302, -0.0197, -0.1311, -0.1491,  0.0982, -0.0250, -0.0301,  0.1120,
        -0.1738, -0.0346, -0.0824,  0.0942,  0.0031,  0.0029,  0.0317, -0.0455,
        -0.1165, -0.0615,  0.0350,  0.1355, -0.0157,  0.1549,  0.0737, -0.0109,
        -0.0198, -0.1267, -0.0097, -0.1539,  0.0757,  0.0073,  0.1155,  0.0394])
##########################################################
cross_encoder.encoder.layers.0.norm2.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([-3.0276e-03,  5.2056e-03, -3.5518e-03, -8.7470e-03, -1.3062e-03,
         3.2344e-04, -2.8478e-03, -1.4348e-03, -6.2136e-03,  2.0173e-04,
        -1.1520e-03, -1.9645e-03, -2.5122e-03, -4.0386e-03,  5.4783e-05,
        -7.3315e-03,  2.8965e-04,  1.1507e-03, -1.4486e-03, -7.1807e-04,
        -5.2238e-03,  3.7435e-03,  6.2426e-03, -3.3442e-03, -1.0901e-03,
        -3.2012e-04,  5.9509e-04,  6.6923e-03,  4.3334e-03, -1.8144e-04,
        -1.9065e-03,  4.6793e-03, -9.9568e-03,  1.9883e-04,  3.5557e-03,
         8.4043e-04,  2.3045e-03, -6.4499e-03,  5.8582e-03,  7.3429e-03,
         3.6005e-04,  6.7580e-03,  3.1943e-03, -5.0985e-04,  6.1486e-03,
         3.8061e-04,  6.8212e-04,  3.2609e-03,  3.4433e-03, -7.0183e-04,
         5.5117e-05, -2.2745e-03,  4.5846e-03, -1.4036e-05,  6.2516e-03,
        -4.2947e-03,  9.4928e-03,  1.7020e-03, -6.0928e-03,  2.8304e-03,
         4.8135e-03, -3.3056e-03,  3.5421e-03,  4.5896e-04,  7.4401e-03,
         3.2010e-03, -8.4918e-03, -5.2905e-03,  1.7043e-03, -2.2968e-03,
         3.7667e-03,  5.5159e-03,  1.2618e-04, -2.5506e-04,  1.7836e-03,
         3.3871e-04, -1.1641e-02, -2.8669e-05,  7.0654e-03, -2.8612e-03,
        -2.2973e-03, -6.5594e-04, -2.1009e-03,  3.0691e-03,  6.1416e-03,
         2.6639e-04,  2.6974e-03, -5.8852e-03,  2.3687e-04, -2.4078e-03,
         5.9941e-04, -5.3429e-03, -7.2949e-03,  2.7533e-03,  1.0834e-03,
         2.4210e-03,  3.9938e-03, -8.9928e-03, -4.3032e-03,  3.3593e-03,
        -1.6129e-03,  2.7562e-03, -1.7264e-03, -1.6225e-03,  5.9838e-03,
        -3.3872e-03, -4.6473e-03,  7.3583e-03,  1.2880e-03,  4.9346e-03,
        -5.4873e-04,  2.1945e-04, -4.3181e-03,  1.4842e-03,  6.3015e-03,
        -8.4227e-03,  7.2069e-03,  1.0965e-02, -6.2409e-04,  1.7841e-03,
        -1.3332e-03,  3.2124e-03, -4.5024e-03, -4.3088e-04, -1.3689e-03,
        -3.7616e-03,  4.7535e-03,  6.0970e-03])
##########################################################
linear.weight shape: torch.Size([300, 600])
tensor([[-0.0358, -0.0263,  0.0314,  ...,  0.0037, -0.0163, -0.0295],
        [-0.0013, -0.0319, -0.0168,  ..., -0.0191,  0.0301,  0.0292],
        [ 0.0064,  0.0353,  0.0091,  ...,  0.0368,  0.0316, -0.0200],
        ...,
        [ 0.0030, -0.0111, -0.0311,  ..., -0.0377,  0.0366, -0.0104],
        [ 0.0343, -0.0305,  0.0197,  ...,  0.0287,  0.0001, -0.0258],
        [ 0.0385, -0.0033,  0.0055,  ..., -0.0203, -0.0196,  0.0176]])
tensor([[-0.0354, -0.0263,  0.0322,  ...,  0.0036, -0.0164, -0.0296],
        [-0.0005, -0.0319, -0.0159,  ..., -0.0187,  0.0305,  0.0296],
        [ 0.0068,  0.0344,  0.0099,  ...,  0.0370,  0.0318, -0.0198],
        ...,
        [ 0.0030, -0.0111, -0.0311,  ..., -0.0377,  0.0366, -0.0104],
        [ 0.0343, -0.0305,  0.0197,  ...,  0.0287,  0.0001, -0.0258],
        [ 0.0385, -0.0033,  0.0056,  ..., -0.0203, -0.0196,  0.0176]])
##########################################################
linear.bias shape: torch.Size([300])
tensor([-0.0210,  0.0216,  0.0160, -0.0134,  0.0341,  0.0174,  0.0146, -0.0401,
        -0.0006, -0.0090, -0.0295,  0.0349,  0.0340,  0.0071, -0.0247,  0.0405,
         0.0038, -0.0378, -0.0047, -0.0033,  0.0219,  0.0124,  0.0111, -0.0036,
        -0.0159,  0.0269, -0.0396, -0.0315,  0.0228,  0.0108, -0.0204, -0.0356,
         0.0033, -0.0292,  0.0078, -0.0060,  0.0108, -0.0269,  0.0330, -0.0014,
        -0.0406, -0.0265,  0.0291,  0.0297,  0.0295, -0.0164,  0.0325,  0.0210,
         0.0203,  0.0134,  0.0342,  0.0110, -0.0199,  0.0094, -0.0255, -0.0277,
         0.0157,  0.0004, -0.0079,  0.0294, -0.0073, -0.0002,  0.0398, -0.0066,
        -0.0291, -0.0033,  0.0026,  0.0366,  0.0157,  0.0150,  0.0072, -0.0219,
        -0.0198, -0.0240, -0.0338,  0.0135, -0.0383,  0.0010, -0.0298, -0.0173,
        -0.0296,  0.0206,  0.0284, -0.0001, -0.0105,  0.0083,  0.0336,  0.0194,
         0.0340,  0.0257,  0.0180,  0.0108, -0.0112,  0.0115, -0.0097, -0.0263,
         0.0135, -0.0172, -0.0299, -0.0397,  0.0068,  0.0078,  0.0105, -0.0074,
        -0.0067,  0.0011, -0.0267, -0.0312, -0.0114, -0.0076, -0.0360,  0.0332,
        -0.0155,  0.0144,  0.0143,  0.0380,  0.0061,  0.0037, -0.0082, -0.0280,
        -0.0350,  0.0211, -0.0204, -0.0075,  0.0188,  0.0346,  0.0388, -0.0357,
        -0.0129,  0.0120, -0.0368,  0.0111, -0.0125,  0.0298,  0.0369, -0.0017,
        -0.0090, -0.0307,  0.0329,  0.0020,  0.0349, -0.0097, -0.0089,  0.0382,
         0.0076, -0.0021, -0.0079,  0.0013, -0.0290,  0.0101,  0.0397, -0.0324,
        -0.0235,  0.0316, -0.0199,  0.0166, -0.0322, -0.0263, -0.0136,  0.0096,
        -0.0108,  0.0013,  0.0325, -0.0273,  0.0202,  0.0001,  0.0366, -0.0240,
        -0.0279, -0.0403,  0.0043,  0.0238, -0.0391, -0.0126,  0.0205,  0.0078,
         0.0115,  0.0219,  0.0175,  0.0213, -0.0227,  0.0134, -0.0036, -0.0053,
         0.0018,  0.0147,  0.0178,  0.0241,  0.0384, -0.0269, -0.0308, -0.0057,
         0.0245, -0.0071, -0.0352, -0.0298,  0.0379,  0.0264, -0.0044, -0.0378,
        -0.0348, -0.0218,  0.0391, -0.0394,  0.0060, -0.0187,  0.0074,  0.0314,
        -0.0249, -0.0158, -0.0038, -0.0323, -0.0378, -0.0360,  0.0118, -0.0063,
        -0.0285,  0.0154, -0.0223,  0.0317, -0.0102,  0.0396,  0.0262, -0.0027,
         0.0388,  0.0390,  0.0015,  0.0008, -0.0381, -0.0349, -0.0048,  0.0031,
        -0.0162,  0.0355,  0.0094,  0.0348, -0.0064,  0.0256,  0.0095,  0.0289,
         0.0174,  0.0199, -0.0108, -0.0287, -0.0070,  0.0300,  0.0272, -0.0106,
         0.0097, -0.0316, -0.0040, -0.0396, -0.0108,  0.0259,  0.0291, -0.0120,
        -0.0276,  0.0121,  0.0032,  0.0310,  0.0161, -0.0097, -0.0070, -0.0116,
        -0.0037,  0.0283,  0.0249,  0.0147, -0.0101,  0.0151, -0.0403, -0.0289,
         0.0039,  0.0317,  0.0210, -0.0234, -0.0303, -0.0120,  0.0115,  0.0297,
         0.0089,  0.0302,  0.0103, -0.0370,  0.0201, -0.0276,  0.0078,  0.0157,
         0.0398, -0.0095,  0.0230,  0.0036, -0.0234, -0.0376,  0.0257, -0.0264,
        -0.0391, -0.0392, -0.0021, -0.0028])
tensor([-0.0223,  0.0238,  0.0187, -0.0135,  0.0362,  0.0200,  0.0164, -0.0397,
        -0.0021, -0.0100, -0.0324,  0.0369,  0.0365,  0.0064, -0.0254,  0.0404,
         0.0051, -0.0373, -0.0047, -0.0024,  0.0242,  0.0151,  0.0129, -0.0061,
        -0.0186,  0.0272, -0.0372, -0.0309,  0.0226,  0.0103, -0.0213, -0.0346,
         0.0042, -0.0292,  0.0086, -0.0059,  0.0121, -0.0252,  0.0329, -0.0008,
        -0.0421, -0.0264,  0.0295,  0.0297,  0.0302, -0.0167,  0.0320,  0.0211,
         0.0187,  0.0130,  0.0340,  0.0100, -0.0198,  0.0093, -0.0266, -0.0282,
         0.0140, -0.0010, -0.0092,  0.0285, -0.0077, -0.0006,  0.0390, -0.0071,
        -0.0298, -0.0035,  0.0018,  0.0370,  0.0153,  0.0155,  0.0061, -0.0221,
        -0.0205, -0.0234, -0.0349,  0.0126, -0.0380,  0.0011, -0.0294, -0.0178,
        -0.0292,  0.0196,  0.0288, -0.0011, -0.0112,  0.0078,  0.0342,  0.0195,
         0.0337,  0.0249,  0.0164,  0.0102, -0.0125,  0.0110, -0.0097, -0.0266,
         0.0123, -0.0184, -0.0298, -0.0399,  0.0067,  0.0066,  0.0116, -0.0069,
        -0.0069,  0.0013, -0.0277, -0.0318, -0.0127, -0.0079, -0.0360,  0.0336,
        -0.0159,  0.0142,  0.0139,  0.0379,  0.0059,  0.0037, -0.0086, -0.0274,
        -0.0350,  0.0211, -0.0205, -0.0083,  0.0186,  0.0346,  0.0390, -0.0352,
        -0.0133,  0.0116, -0.0368,  0.0103, -0.0131,  0.0299,  0.0369, -0.0018,
        -0.0094, -0.0307,  0.0327,  0.0027,  0.0347, -0.0091, -0.0091,  0.0383,
         0.0076, -0.0020, -0.0079,  0.0009, -0.0290,  0.0098,  0.0400, -0.0326,
        -0.0231,  0.0316, -0.0202,  0.0163, -0.0320, -0.0267, -0.0137,  0.0096,
        -0.0111,  0.0012,  0.0326, -0.0273,  0.0201, -0.0001,  0.0364, -0.0246,
        -0.0276, -0.0400,  0.0042,  0.0235, -0.0392, -0.0126,  0.0201,  0.0080,
         0.0115,  0.0219,  0.0172,  0.0208, -0.0226,  0.0135, -0.0039, -0.0052,
         0.0015,  0.0147,  0.0175,  0.0240,  0.0384, -0.0266, -0.0307, -0.0054,
         0.0243, -0.0068, -0.0348, -0.0300,  0.0376,  0.0264, -0.0044, -0.0376,
        -0.0346, -0.0217,  0.0388, -0.0392,  0.0058, -0.0187,  0.0072,  0.0313,
        -0.0247, -0.0159, -0.0034, -0.0324, -0.0377, -0.0358,  0.0116, -0.0063,
        -0.0283,  0.0151, -0.0220,  0.0315, -0.0101,  0.0395,  0.0260, -0.0028,
         0.0386,  0.0389,  0.0012,  0.0007, -0.0380, -0.0349, -0.0048,  0.0029,
        -0.0163,  0.0352,  0.0092,  0.0345, -0.0064,  0.0254,  0.0094,  0.0289,
         0.0173,  0.0197, -0.0108, -0.0287, -0.0071,  0.0297,  0.0269, -0.0104,
         0.0095, -0.0313, -0.0041, -0.0394, -0.0106,  0.0259,  0.0290, -0.0116,
        -0.0275,  0.0122,  0.0030,  0.0307,  0.0160, -0.0096, -0.0072, -0.0116,
        -0.0036,  0.0281,  0.0246,  0.0148, -0.0102,  0.0150, -0.0403, -0.0289,
         0.0039,  0.0317,  0.0209, -0.0236, -0.0303, -0.0121,  0.0113,  0.0295,
         0.0089,  0.0300,  0.0103, -0.0369,  0.0197, -0.0278,  0.0078,  0.0154,
         0.0396, -0.0096,  0.0230,  0.0033, -0.0236, -0.0378,  0.0255, -0.0264,
        -0.0393, -0.0391, -0.0023, -0.0029])
##########################################################
decoder.embedding.weight shape: torch.Size([287, 128])
tensor([[ 0.9874,  1.2941,  0.9143,  ...,  0.4894, -0.3203,  0.3934],
        [-0.5261,  2.1522,  0.7848,  ..., -0.9731, -1.0407,  0.4749],
        [ 0.4337,  1.2056, -0.5450,  ...,  0.0390,  1.5873, -0.4872],
        ...,
        [ 0.0962,  1.3969,  1.0249,  ...,  1.0251,  1.7431, -1.0641],
        [ 1.1256, -0.0460, -0.9004,  ...,  1.8042, -0.5991,  0.6124],
        [-0.0832,  0.6061, -0.5140,  ..., -0.0373,  1.4086, -0.4230]])
tensor([[ 0.9874,  1.2941,  0.9143,  ...,  0.4894, -0.3203,  0.3934],
        [-0.5261,  2.1522,  0.7848,  ..., -0.9731, -1.0407,  0.4749],
        [ 0.4132,  1.2247, -0.5539,  ...,  0.0451,  1.5719, -0.4539],
        ...,
        [ 0.0962,  1.3969,  1.0249,  ...,  1.0251,  1.7431, -1.0641],
        [ 1.1256, -0.0460, -0.9004,  ...,  1.8042, -0.5991,  0.6124],
        [-0.0832,  0.6061, -0.5140,  ..., -0.0373,  1.4086, -0.4230]])
##########################################################
decoder.blks.block0.attention1.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0823, -0.0444, -0.0790,  ..., -0.0015,  0.0103,  0.0374],
        [-0.0422,  0.0088,  0.0522,  ...,  0.1850, -0.1152, -0.0543],
        [ 0.0553, -0.0473, -0.1306,  ...,  0.0482,  0.0615,  0.0288],
        ...,
        [-0.0533,  0.1800, -0.0498,  ...,  0.0564, -0.0152, -0.0822],
        [-0.0195, -0.0220,  0.1572,  ..., -0.0108, -0.1329, -0.1517],
        [-0.0273, -0.0458, -0.0618,  ...,  0.0562,  0.0658, -0.1200]])
tensor([[-0.0571, -0.0337, -0.1244,  ..., -0.0358,  0.0056,  0.0552],
        [-0.0309,  0.0370,  0.0625,  ...,  0.1324, -0.1487, -0.0612],
        [ 0.0462, -0.0414, -0.1322,  ...,  0.0485,  0.0536,  0.0444],
        ...,
        [-0.0144,  0.1890, -0.0630,  ...,  0.0464, -0.0185, -0.0522],
        [-0.0217, -0.0222,  0.1694,  ...,  0.0051, -0.1404, -0.1736],
        [-0.0225, -0.0882, -0.0395,  ...,  0.0501,  0.1047, -0.1151]])
##########################################################
decoder.blks.block0.attention1.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.0718,  0.0197,  0.1876,  ..., -0.0363,  0.1341, -0.0432],
        [-0.1021,  0.0625, -0.1095,  ...,  0.1458,  0.1238,  0.0581],
        [-0.0686,  0.0634, -0.1654,  ...,  0.0183,  0.0870,  0.1473],
        ...,
        [-0.1056,  0.0184, -0.0286,  ..., -0.0647,  0.0921, -0.1686],
        [ 0.0447,  0.0776, -0.0984,  ...,  0.0834, -0.1908,  0.0891],
        [ 0.0211, -0.0433, -0.0795,  ..., -0.0243,  0.0343,  0.2260]])
tensor([[-0.0709,  0.0875,  0.1602,  ...,  0.0012,  0.1401, -0.0461],
        [-0.1289,  0.0695, -0.1075,  ...,  0.1664,  0.1136,  0.0750],
        [-0.0516,  0.0522, -0.1515,  ..., -0.0220,  0.0861,  0.1648],
        ...,
        [-0.1463,  0.0013, -0.0175,  ..., -0.0845,  0.1274, -0.1602],
        [ 0.0682,  0.1098, -0.0868,  ...,  0.0837, -0.1701,  0.0865],
        [ 0.0539,  0.0287, -0.0801,  ..., -0.0223,  0.0458,  0.2040]])
##########################################################
decoder.blks.block0.attention1.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0268,  0.0171, -0.0140,  ..., -0.0090,  0.0718,  0.0132],
        [ 0.0102,  0.0227,  0.0877,  ..., -0.0273, -0.0290,  0.0607],
        [ 0.0002, -0.0257, -0.0385,  ...,  0.0806,  0.0228, -0.0358],
        ...,
        [ 0.0099, -0.0158, -0.0093,  ...,  0.0262,  0.0606, -0.0164],
        [-0.0166,  0.0350,  0.0292,  ..., -0.0772,  0.0367, -0.0328],
        [ 0.0304,  0.0368,  0.0091,  ..., -0.0171, -0.0135,  0.0484]])
tensor([[-0.0300,  0.0266, -0.0200,  ..., -0.0088,  0.0777,  0.0060],
        [ 0.0361,  0.0501,  0.0600,  ..., -0.0397,  0.0003,  0.0672],
        [-0.0159, -0.0321, -0.0279,  ...,  0.0956,  0.0063, -0.0385],
        ...,
        [ 0.0086, -0.0336, -0.0319,  ...,  0.0213,  0.0858, -0.0256],
        [-0.0175,  0.0378,  0.0310,  ..., -0.0843,  0.0187, -0.0009],
        [ 0.0277,  0.0294,  0.0042,  ..., -0.0393, -0.0059,  0.0536]])
##########################################################
decoder.blks.block0.attention1.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0520, -0.0194,  0.0241,  ...,  0.0385,  0.0456,  0.0129],
        [ 0.0151, -0.0611,  0.0031,  ..., -0.0188, -0.0007, -0.0193],
        [ 0.0065, -0.0046,  0.0302,  ..., -0.0565,  0.0380, -0.0076],
        ...,
        [ 0.0102, -0.0601,  0.0224,  ...,  0.0357, -0.0018,  0.0192],
        [-0.0351,  0.0417, -0.0367,  ...,  0.0218, -0.0746, -0.0016],
        [ 0.0376, -0.0630,  0.0007,  ...,  0.0067,  0.0453, -0.0265]])
tensor([[ 0.0381, -0.0143,  0.0136,  ...,  0.0163,  0.0258,  0.0082],
        [ 0.0005, -0.0792,  0.0027,  ..., -0.0363,  0.0151, -0.0184],
        [ 0.0096, -0.0095,  0.0181,  ..., -0.0640,  0.0498, -0.0278],
        ...,
        [-0.0109, -0.0638,  0.0297,  ...,  0.0416, -0.0230,  0.0129],
        [-0.0536,  0.0321, -0.0201,  ...,  0.0398, -0.0648,  0.0076],
        [ 0.0381, -0.0621, -0.0030,  ...,  0.0146,  0.0614, -0.0326]])
##########################################################
decoder.blks.block0.addnorm1.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.9733, 1.0196, 1.0418, 1.0155, 1.0456, 1.0004, 0.9861, 1.0261, 0.9683,
        0.9675, 1.0585, 1.0362, 0.9841, 1.0013, 0.9861, 1.0446, 0.9283, 0.9954,
        1.0364, 1.0121, 1.0443, 0.9928, 1.0267, 0.9551, 0.9510, 1.0158, 1.0361,
        0.9833, 0.9950, 1.0148, 0.9971, 1.0102, 1.0106, 1.0029, 0.9913, 1.0443,
        0.9942, 0.9898, 1.0569, 1.0378, 0.9854, 0.9502, 0.9749, 0.9827, 0.9975,
        1.0248, 0.9803, 1.0198, 0.9335, 1.0419, 0.9708, 0.9974, 0.9810, 1.0094,
        0.9632, 1.0103, 0.9872, 1.0532, 0.9940, 0.9899, 1.0106, 0.9585, 0.9701,
        1.0253, 0.9975, 1.0110, 0.9782, 0.9862, 0.9564, 1.0466, 1.0097, 1.0041,
        0.9994, 1.0156, 1.0077, 1.0396, 0.9921, 0.9858, 0.9854, 0.9564, 1.0005,
        0.9640, 0.9813, 1.0207, 1.0003, 0.9491, 0.9923, 1.0219, 0.9915, 0.9412,
        0.9933, 0.9948, 1.0441, 0.9252, 1.0258, 1.0245, 1.0190, 0.9727, 1.0276,
        1.0166, 0.9765, 0.9864, 0.9738, 1.0083, 1.0233, 0.9921, 0.9455, 1.0087,
        1.0088, 1.0357, 0.9951, 0.9589, 0.9540, 0.9966, 1.0382, 1.0154, 1.0296,
        0.9861, 1.0310, 1.0599, 1.0117, 0.9490, 1.0092, 1.0017, 1.0199, 1.0388,
        0.9685, 0.9700])
##########################################################
decoder.blks.block0.addnorm1.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0464,  0.0210, -0.0039,  0.0266, -0.0148,  0.0083, -0.0081, -0.0554,
         0.0165,  0.0056, -0.0341,  0.0248, -0.0457, -0.0113,  0.0174,  0.0089,
         0.0271, -0.0162,  0.0016,  0.0549,  0.0156, -0.0163, -0.0105,  0.0057,
        -0.0344,  0.0432,  0.0039, -0.0271, -0.0031, -0.0253, -0.0158, -0.0046,
         0.0162,  0.0053, -0.0081,  0.0109, -0.0182, -0.0132, -0.0670,  0.0218,
         0.0272,  0.0120,  0.0055, -0.0246,  0.0120, -0.0173,  0.0367, -0.0182,
         0.0169,  0.0069,  0.0265,  0.0027, -0.0370, -0.0024, -0.0073, -0.0223,
        -0.0174, -0.0192, -0.0250, -0.0055,  0.0370,  0.0011, -0.0130,  0.0281,
        -0.0006,  0.0264,  0.0132,  0.0007, -0.0001,  0.0173,  0.0324,  0.0051,
         0.0368, -0.0331,  0.0128,  0.0144,  0.0687,  0.0099,  0.0393,  0.0116,
         0.0031, -0.0144,  0.0161,  0.0225,  0.0101,  0.0087, -0.0262,  0.0137,
        -0.0127, -0.0145, -0.0116,  0.0130, -0.0084,  0.0276,  0.0090,  0.0111,
        -0.0316, -0.0124, -0.0089, -0.0535,  0.0094,  0.0453, -0.0012,  0.0220,
        -0.0327,  0.0177, -0.0387, -0.0130, -0.0167,  0.0059, -0.0246, -0.0232,
        -0.0202,  0.0041, -0.0166, -0.0034,  0.0122, -0.0027, -0.0351, -0.0274,
        -0.0050, -0.0338,  0.0029, -0.0033,  0.0448, -0.0072, -0.0044, -0.0033])
##########################################################
decoder.blks.block0.attention2.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0824,  0.0200, -0.0355,  ...,  0.0219,  0.2505,  0.0242],
        [ 0.0327, -0.0409, -0.0314,  ...,  0.0223,  0.0577, -0.0871],
        [-0.1211, -0.0555,  0.0308,  ..., -0.0410, -0.1919, -0.0682],
        ...,
        [-0.1197, -0.0613, -0.0257,  ..., -0.0928, -0.0421,  0.0024],
        [-0.1070, -0.1072, -0.1232,  ...,  0.0979,  0.0734, -0.0817],
        [ 0.0891, -0.0325, -0.0083,  ..., -0.0038,  0.0953, -0.0850]])
tensor([[-0.0824,  0.0200, -0.0355,  ...,  0.0219,  0.2505,  0.0242],
        [ 0.0327, -0.0409, -0.0315,  ...,  0.0223,  0.0577, -0.0871],
        [-0.1211, -0.0555,  0.0308,  ..., -0.0410, -0.1919, -0.0682],
        ...,
        [-0.1197, -0.0613, -0.0257,  ..., -0.0928, -0.0421,  0.0024],
        [-0.1070, -0.1072, -0.1232,  ...,  0.0979,  0.0734, -0.0817],
        [ 0.0891, -0.0325, -0.0083,  ..., -0.0038,  0.0953, -0.0850]])
##########################################################
decoder.blks.block0.attention2.W_k.weight shape: torch.Size([128, 128])
tensor([[ 0.0016,  0.0321, -0.0813,  ...,  0.0913, -0.0607, -0.0637],
        [-0.0074,  0.0365, -0.0562,  ...,  0.0832, -0.0115,  0.0366],
        [ 0.1196, -0.0377,  0.0878,  ..., -0.0501, -0.0820, -0.0975],
        ...,
        [-0.0939,  0.0407, -0.0186,  ..., -0.1173,  0.0031,  0.0492],
        [-0.1042, -0.0816,  0.0848,  ..., -0.0400,  0.1501,  0.0877],
        [ 0.0700,  0.0778,  0.0492,  ...,  0.0812, -0.0287,  0.0103]])
tensor([[ 0.0016,  0.0321, -0.0813,  ...,  0.0913, -0.0607, -0.0637],
        [-0.0074,  0.0365, -0.0563,  ...,  0.0832, -0.0115,  0.0366],
        [ 0.1196, -0.0377,  0.0877,  ..., -0.0501, -0.0820, -0.0975],
        ...,
        [-0.0939,  0.0407, -0.0186,  ..., -0.1173,  0.0031,  0.0492],
        [-0.1042, -0.0816,  0.0848,  ..., -0.0400,  0.1501,  0.0877],
        [ 0.0700,  0.0778,  0.0492,  ...,  0.0812, -0.0288,  0.0103]])
##########################################################
decoder.blks.block0.attention2.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0050, -0.0623,  0.0579,  ..., -0.0004,  0.0365,  0.0064],
        [-0.0099, -0.0184,  0.0151,  ..., -0.0140, -0.0156, -0.0732],
        [ 0.0452,  0.0040, -0.0044,  ...,  0.0035, -0.0566, -0.0316],
        ...,
        [-0.0023, -0.0496,  0.0109,  ...,  0.0520,  0.0191,  0.0290],
        [-0.0825, -0.0014,  0.0064,  ..., -0.0494,  0.0725, -0.0357],
        [ 0.0369,  0.0453,  0.0166,  ..., -0.0200, -0.0164, -0.0287]])
tensor([[-0.0049, -0.0623,  0.0581,  ..., -0.0004,  0.0374,  0.0066],
        [-0.0098, -0.0184,  0.0153,  ..., -0.0141, -0.0157, -0.0731],
        [ 0.0452,  0.0040, -0.0046,  ...,  0.0035, -0.0565, -0.0318],
        ...,
        [-0.0023, -0.0497,  0.0103,  ...,  0.0520,  0.0179,  0.0286],
        [-0.0826, -0.0014,  0.0058,  ..., -0.0494,  0.0723, -0.0360],
        [ 0.0367,  0.0453,  0.0161,  ..., -0.0201, -0.0180, -0.0291]])
##########################################################
decoder.blks.block0.attention2.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0747, -0.0364, -0.0054,  ...,  0.0081,  0.0107,  0.0106],
        [ 0.0722,  0.0456,  0.0235,  ..., -0.0430,  0.0131,  0.0140],
        [ 0.0716, -0.0292, -0.0174,  ...,  0.0191, -0.0149, -0.0491],
        ...,
        [ 0.0065,  0.0449,  0.0026,  ...,  0.0400, -0.0545,  0.0369],
        [ 0.0130,  0.0481, -0.0591,  ...,  0.0095, -0.0393, -0.0891],
        [ 0.0238, -0.0701,  0.0263,  ..., -0.0080, -0.0116, -0.0657]])
tensor([[ 0.0745, -0.0361, -0.0043,  ...,  0.0069,  0.0092,  0.0102],
        [ 0.0725,  0.0455,  0.0236,  ..., -0.0430,  0.0130,  0.0139],
        [ 0.0713, -0.0289, -0.0177,  ...,  0.0187, -0.0151, -0.0489],
        ...,
        [ 0.0061,  0.0449,  0.0019,  ...,  0.0404, -0.0547,  0.0374],
        [ 0.0130,  0.0478, -0.0598,  ...,  0.0101, -0.0393, -0.0889],
        [ 0.0241, -0.0702,  0.0268,  ..., -0.0084, -0.0118, -0.0660]])
##########################################################
decoder.blks.block0.addnorm2.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.9752, 1.0184, 1.0419, 1.0163, 1.0456, 1.0008, 0.9871, 1.0286, 0.9696,
        0.9665, 1.0587, 1.0363, 0.9855, 1.0012, 0.9870, 1.0450, 0.9281, 0.9954,
        1.0357, 1.0139, 1.0450, 0.9913, 1.0279, 0.9548, 0.9518, 1.0171, 1.0363,
        0.9843, 0.9953, 1.0143, 0.9967, 1.0088, 1.0117, 1.0040, 0.9927, 1.0429,
        0.9932, 0.9901, 1.0603, 1.0368, 0.9863, 0.9519, 0.9738, 0.9825, 0.9975,
        1.0246, 0.9819, 1.0189, 0.9339, 1.0413, 0.9712, 0.9973, 0.9817, 1.0091,
        0.9630, 1.0114, 0.9889, 1.0530, 0.9948, 0.9908, 1.0118, 0.9591, 0.9702,
        1.0256, 0.9978, 1.0102, 0.9794, 0.9874, 0.9577, 1.0465, 1.0101, 1.0037,
        0.9993, 1.0169, 1.0081, 1.0396, 0.9952, 0.9866, 0.9878, 0.9557, 1.0006,
        0.9644, 0.9819, 1.0203, 1.0021, 0.9506, 0.9936, 1.0217, 0.9920, 0.9436,
        0.9939, 0.9936, 1.0437, 0.9268, 1.0261, 1.0237, 1.0187, 0.9733, 1.0289,
        1.0183, 0.9762, 0.9870, 0.9725, 1.0091, 1.0230, 0.9919, 0.9464, 1.0069,
        1.0077, 1.0366, 0.9966, 0.9592, 0.9539, 0.9965, 1.0381, 1.0139, 1.0298,
        0.9858, 1.0311, 1.0604, 1.0125, 0.9490, 1.0097, 1.0017, 1.0207, 1.0383,
        0.9685, 0.9702])
##########################################################
decoder.blks.block0.addnorm2.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0466,  0.0203, -0.0041,  0.0273, -0.0144,  0.0083, -0.0088, -0.0547,
         0.0173,  0.0055, -0.0312,  0.0235, -0.0465, -0.0117,  0.0173,  0.0084,
         0.0292, -0.0172,  0.0015,  0.0550,  0.0157, -0.0163, -0.0103,  0.0055,
        -0.0352,  0.0429,  0.0040, -0.0281, -0.0032, -0.0254, -0.0169, -0.0051,
         0.0157,  0.0053, -0.0081,  0.0104, -0.0186, -0.0134, -0.0665,  0.0220,
         0.0271,  0.0114,  0.0048, -0.0255,  0.0117, -0.0174,  0.0370, -0.0191,
         0.0171,  0.0065,  0.0266,  0.0017, -0.0378, -0.0026, -0.0079, -0.0229,
        -0.0173, -0.0183, -0.0250, -0.0053,  0.0364,  0.0013, -0.0127,  0.0275,
        -0.0003,  0.0261,  0.0135,  0.0011,  0.0007,  0.0172,  0.0319,  0.0052,
         0.0364, -0.0321,  0.0117,  0.0140,  0.0677,  0.0095,  0.0396,  0.0123,
         0.0029, -0.0150,  0.0160,  0.0215,  0.0103,  0.0085, -0.0265,  0.0139,
        -0.0133, -0.0154, -0.0116,  0.0132, -0.0080,  0.0289,  0.0085,  0.0108,
        -0.0319, -0.0138, -0.0090, -0.0533,  0.0090,  0.0452, -0.0014,  0.0218,
        -0.0330,  0.0171, -0.0398, -0.0135, -0.0176,  0.0054, -0.0255, -0.0237,
        -0.0196,  0.0037, -0.0160, -0.0037,  0.0122, -0.0022, -0.0340, -0.0271,
        -0.0060, -0.0347,  0.0021, -0.0033,  0.0442, -0.0068, -0.0046, -0.0033])
##########################################################
decoder.blks.block0.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[-0.0340,  0.0138, -0.0528,  ..., -0.0029,  0.0519, -0.0153],
        [ 0.0288, -0.0377,  0.0208,  ..., -0.0335,  0.0242, -0.0166],
        [ 0.0305, -0.0488,  0.0694,  ...,  0.0252, -0.0388,  0.0046],
        ...,
        [ 0.0263,  0.0026,  0.0524,  ..., -0.0448, -0.0169,  0.0678],
        [-0.0448, -0.0135,  0.0371,  ...,  0.0566, -0.0763,  0.0587],
        [-0.0268, -0.0105,  0.0519,  ..., -0.0831,  0.1226, -0.0133]])
tensor([[-0.0364, -0.0043, -0.0478,  ...,  0.0029,  0.0515, -0.0201],
        [ 0.0288, -0.0257,  0.0232,  ..., -0.0323,  0.0188, -0.0139],
        [ 0.0299, -0.0575,  0.0791,  ...,  0.0312, -0.0436,  0.0017],
        ...,
        [-0.0035, -0.0059,  0.0473,  ..., -0.0202, -0.0096,  0.0780],
        [-0.0571, -0.0264,  0.0525,  ...,  0.0522, -0.0868,  0.0557],
        [-0.0311,  0.0028,  0.0587,  ..., -0.0949,  0.1252, -0.0191]])
##########################################################
decoder.blks.block0.ffn.dense1.bias shape: torch.Size([64])
tensor([ 0.0526,  0.0248,  0.0376,  0.0706,  0.0666, -0.0107, -0.0606,  0.0432,
         0.0868,  0.0335, -0.0634,  0.0362,  0.0628,  0.0615, -0.0198, -0.0034,
        -0.0727, -0.0608,  0.0064, -0.0631,  0.0305, -0.0323,  0.0057,  0.0366,
         0.0201,  0.0771,  0.0369,  0.0347, -0.0559,  0.0656,  0.0491,  0.0856,
        -0.0553, -0.0491,  0.0158,  0.0254,  0.0170, -0.0464, -0.0871,  0.0303,
        -0.0032, -0.0272, -0.0574,  0.0040, -0.0868,  0.0688, -0.0870, -0.0847,
         0.0464, -0.0784, -0.0453,  0.0290,  0.0594, -0.0694, -0.0674,  0.0498,
         0.0748, -0.0660, -0.0782,  0.0602, -0.0429,  0.0136, -0.0080,  0.0132])
tensor([ 0.0545,  0.0307,  0.0365,  0.0624,  0.0736, -0.0198, -0.0627,  0.0350,
         0.0931,  0.0449, -0.0400,  0.0412,  0.0499,  0.0512, -0.0212, -0.0076,
        -0.0814, -0.0679,  0.0088, -0.0618,  0.0327, -0.0350,  0.0235,  0.0363,
         0.0243,  0.0728,  0.0384,  0.0441, -0.0610,  0.0706,  0.0428,  0.0798,
        -0.0553, -0.0488,  0.0222,  0.0199,  0.0127, -0.0480, -0.0856,  0.0150,
         0.0017, -0.0326, -0.0544,  0.0058, -0.0847,  0.0748, -0.0956, -0.0799,
         0.0417, -0.0764, -0.0380,  0.0211,  0.0546, -0.0514, -0.0697,  0.0510,
         0.0703, -0.0536, -0.0802,  0.0447, -0.0463,  0.0063, -0.0074,  0.0040])
##########################################################
decoder.blks.block0.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[ 0.0434, -0.0557,  0.0543,  ...,  0.0750,  0.0625,  0.0792],
        [ 0.0875, -0.0251,  0.0246,  ...,  0.0381,  0.0280,  0.0419],
        [ 0.0385, -0.0481,  0.0596,  ..., -0.0012, -0.0136,  0.0488],
        ...,
        [ 0.0364,  0.0232,  0.0182,  ..., -0.0850, -0.0567,  0.0137],
        [ 0.0320, -0.0133, -0.0060,  ..., -0.0318, -0.0122, -0.0434],
        [-0.0069,  0.0583, -0.0087,  ..., -0.0020, -0.0207,  0.0272]])
tensor([[ 0.0401, -0.0573,  0.0488,  ...,  0.0582,  0.0531,  0.0667],
        [ 0.0871, -0.0270,  0.0332,  ...,  0.0415,  0.0451,  0.0713],
        [ 0.0397, -0.0499,  0.0637,  ...,  0.0086, -0.0061,  0.0477],
        ...,
        [ 0.0406,  0.0191,  0.0159,  ..., -0.0775, -0.0546,  0.0308],
        [ 0.0291, -0.0178, -0.0060,  ..., -0.0228, -0.0080, -0.0305],
        [-0.0042,  0.0753, -0.0127,  ..., -0.0029, -0.0144,  0.0396]])
##########################################################
decoder.blks.block0.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.0794,  0.0021, -0.0828, -0.0739, -0.1086,  0.0596,  0.0404, -0.0436,
        -0.1218,  0.0296, -0.0372,  0.0284, -0.1223, -0.0771,  0.0364, -0.0351,
         0.0351, -0.0845, -0.0620,  0.0861,  0.1046,  0.0379,  0.0862, -0.0508,
        -0.1149, -0.0566, -0.0927, -0.0689, -0.0497, -0.0887, -0.0314, -0.0028,
         0.0372, -0.0013, -0.0179, -0.0171,  0.1055, -0.0861, -0.0936, -0.1078,
         0.0900, -0.0898,  0.0087, -0.1201, -0.0288,  0.0890,  0.1115, -0.0963,
         0.0555,  0.0868,  0.0309,  0.1045,  0.0272, -0.0229, -0.1029,  0.0588,
        -0.0361,  0.0839,  0.0265, -0.0642,  0.0806,  0.1240, -0.0943,  0.1036,
        -0.0158,  0.0959,  0.1229, -0.1162,  0.0623, -0.0986, -0.0557,  0.0083,
         0.1136, -0.0305, -0.0222,  0.0590,  0.0671, -0.0246, -0.0894, -0.0598,
         0.0613, -0.0581, -0.1027,  0.0925,  0.0176, -0.0850,  0.0759, -0.0142,
         0.0796, -0.0878,  0.1183, -0.0447,  0.0602,  0.0582, -0.0698,  0.0691,
         0.0263, -0.0427, -0.1234, -0.0225, -0.0146,  0.0753,  0.0942, -0.0299,
         0.0936,  0.0949,  0.0797, -0.0256,  0.0709,  0.0999,  0.0312,  0.0708,
        -0.1104,  0.0366,  0.1224,  0.1058,  0.0554, -0.1211,  0.0813,  0.0878,
        -0.1211,  0.0588, -0.1247, -0.1023,  0.0666,  0.0759, -0.1214, -0.0990])
tensor([ 0.0852,  0.0079, -0.0807, -0.0581, -0.1159,  0.0528,  0.0313, -0.0665,
        -0.0829,  0.0350, -0.0618,  0.0321, -0.1364, -0.0841,  0.0177, -0.0328,
         0.0494, -0.0891, -0.0516,  0.1087,  0.0975,  0.0235,  0.0863, -0.0309,
        -0.1245, -0.0188, -0.0869, -0.0775, -0.0501, -0.0996, -0.0399, -0.0014,
         0.0287, -0.0060, -0.0378, -0.0186,  0.0797, -0.0935, -0.1170, -0.0902,
         0.0910, -0.0817,  0.0108, -0.1219, -0.0110,  0.0763,  0.1265, -0.1046,
         0.0530,  0.0846,  0.0568,  0.1060,  0.0037, -0.0198, -0.1062,  0.0372,
        -0.0506,  0.0625,  0.0127, -0.0663,  0.0963,  0.1058, -0.0942,  0.1030,
        -0.0216,  0.1122,  0.1248, -0.1123,  0.0523, -0.0770, -0.0311,  0.0193,
         0.1169, -0.0531, -0.0014,  0.0611,  0.1022, -0.0210, -0.0607, -0.0528,
         0.0576, -0.0613, -0.0847,  0.0961,  0.0215, -0.0774,  0.0588, -0.0091,
         0.0695, -0.0874,  0.1079, -0.0476,  0.0528,  0.0636, -0.0667,  0.0793,
         0.0058, -0.0383, -0.1127, -0.0493,  0.0131,  0.0979,  0.0866, -0.0207,
         0.0659,  0.0991,  0.0599, -0.0258,  0.0593,  0.0992,  0.0083,  0.0348,
        -0.1144,  0.0571,  0.1051,  0.0939,  0.0393, -0.1016,  0.0553,  0.0675,
        -0.1185,  0.0424, -0.1143, -0.0930,  0.0940,  0.0627, -0.1153, -0.0813])
##########################################################
decoder.blks.block0.addnorm3.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.9725, 1.0253, 1.0763, 1.0018, 1.0321, 0.9934, 1.0121, 1.0309, 0.9970,
        0.9756, 1.0843, 1.0351, 1.0116, 1.0090, 0.9966, 1.0572, 0.9298, 1.0097,
        1.0505, 1.0212, 1.0482, 0.9978, 1.0363, 0.9658, 0.9526, 1.0226, 1.0284,
        0.9635, 0.9984, 1.0197, 0.9996, 1.0194, 1.0263, 1.0268, 0.9895, 1.0313,
        0.9918, 0.9779, 1.0635, 1.0369, 1.0053, 0.9465, 0.9866, 1.0071, 1.0225,
        1.0070, 1.0120, 1.0143, 0.9436, 1.0625, 0.9923, 1.0044, 0.9978, 1.0134,
        0.9641, 1.0298, 0.9973, 1.0430, 1.0104, 0.9766, 1.0319, 0.9611, 0.9836,
        1.0314, 0.9991, 1.0201, 0.9916, 0.9884, 0.9743, 1.0139, 1.0139, 0.9999,
        1.0113, 1.0414, 1.0179, 1.0473, 1.0155, 1.0010, 0.9930, 0.9533, 0.9938,
        0.9694, 1.0115, 1.0267, 0.9648, 0.9398, 0.9413, 1.0057, 0.9937, 0.9575,
        0.9584, 0.9870, 1.0422, 0.9587, 1.0496, 1.0351, 1.0199, 0.9989, 1.0231,
        1.0321, 0.9872, 0.9934, 0.9823, 1.0264, 1.0246, 1.0096, 0.9509, 0.9964,
        1.0161, 1.0274, 1.0093, 0.9689, 0.9513, 1.0153, 1.0304, 1.0162, 1.0415,
        0.9906, 1.0386, 1.0666, 0.9905, 0.9641, 1.0112, 1.0096, 1.0057, 1.0349,
        0.9745, 0.9682])
##########################################################
decoder.blks.block0.addnorm3.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 4.9269e-02,  2.5691e-02,  3.4351e-03,  2.3431e-02, -1.1045e-02,
         8.8846e-04,  5.3957e-03, -4.3386e-02,  2.5558e-02,  4.4336e-03,
        -3.4900e-02,  1.9271e-02, -4.7950e-02, -1.8333e-02,  9.1162e-03,
         8.3790e-03,  1.7825e-02, -7.1308e-03, -9.3119e-03,  5.1695e-02,
         2.1941e-02, -3.3346e-02, -6.3731e-03, -1.8678e-03, -3.6492e-02,
         5.5920e-02, -5.3728e-04, -2.6041e-02, -9.2643e-03, -2.8204e-02,
        -1.8574e-02,  1.0782e-03,  2.3161e-03, -1.8886e-04, -1.1514e-02,
        -1.0750e-03, -1.1019e-02, -1.2752e-02, -4.9237e-02,  1.5340e-02,
         6.3108e-03,  1.9991e-02,  1.7410e-02, -3.6493e-02,  1.0899e-04,
        -1.0501e-02,  2.7323e-02, -1.9485e-02,  2.5729e-02,  3.2051e-03,
         2.8316e-02,  4.9498e-03, -3.4266e-02, -1.4149e-02, -1.6420e-02,
        -3.5791e-02, -7.1696e-03, -3.1102e-02, -2.8454e-02, -1.3216e-02,
         5.8424e-02,  4.3193e-03, -1.6208e-02,  1.6779e-02,  4.2002e-03,
         4.3730e-02,  1.6567e-02, -1.8252e-05, -3.1112e-03,  1.1521e-04,
         4.7699e-02,  5.7443e-04,  3.7831e-02, -2.4232e-02,  1.5252e-02,
         5.4919e-03,  6.1744e-02,  1.8956e-02,  4.0747e-02,  1.7401e-02,
         1.4401e-02, -1.9576e-02,  1.6076e-02,  3.1706e-02, -9.3353e-03,
         7.1911e-03, -2.2884e-02,  1.1432e-02,  7.8412e-04,  1.4960e-03,
        -8.1416e-03,  1.1769e-02, -1.7474e-02,  3.3589e-02,  1.2349e-02,
         1.3147e-02, -3.1240e-02, -2.0563e-02, -1.1020e-02, -5.0572e-02,
         8.7700e-03,  4.6010e-02,  3.3986e-03,  3.5029e-02, -3.0579e-02,
         7.4131e-04, -4.4519e-02, -1.6492e-02, -1.3641e-02, -9.1680e-03,
        -2.6554e-02, -2.3411e-02, -2.9424e-02, -3.0695e-03, -1.8330e-02,
        -2.6827e-03,  8.0399e-03, -1.5942e-03, -2.9580e-02, -1.0928e-02,
         5.7260e-03, -4.4685e-02,  4.4417e-03, -4.3581e-03,  4.3239e-02,
        -1.4111e-02, -8.7492e-03,  6.6112e-03])
##########################################################
decoder.blks.block1.attention1.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.1546, -0.0728, -0.0216,  ..., -0.2482,  0.0639,  0.0532],
        [ 0.1905,  0.2098,  0.0059,  ...,  0.0294,  0.0698,  0.0757],
        [-0.0264, -0.0102,  0.0005,  ...,  0.0409,  0.1288,  0.0877],
        ...,
        [-0.0341, -0.0805,  0.0857,  ...,  0.0741, -0.0118, -0.1175],
        [-0.0455,  0.1892,  0.0080,  ...,  0.0720,  0.0793, -0.0451],
        [ 0.1506,  0.0058, -0.1486,  ...,  0.0208, -0.0805, -0.0827]])
tensor([[-0.1517, -0.0393, -0.0100,  ..., -0.2665,  0.0604,  0.0454],
        [ 0.1990,  0.2002,  0.0108,  ...,  0.0623,  0.0595,  0.0821],
        [-0.0272, -0.0083,  0.0057,  ...,  0.0636,  0.1243,  0.0928],
        ...,
        [-0.0381, -0.0906,  0.0627,  ...,  0.0729, -0.0076, -0.1205],
        [-0.0443,  0.2022,  0.0108,  ...,  0.0706,  0.0726, -0.0416],
        [ 0.1458,  0.0008, -0.1736,  ...,  0.0347, -0.0750, -0.0839]])
##########################################################
decoder.blks.block1.attention1.W_k.weight shape: torch.Size([128, 128])
tensor([[-0.0948,  0.0138,  0.2811,  ..., -0.1464, -0.0622, -0.0009],
        [ 0.0944,  0.0739,  0.0748,  ...,  0.0527, -0.0646,  0.0401],
        [-0.0844,  0.0715,  0.1054,  ...,  0.0149, -0.0810, -0.1376],
        ...,
        [-0.1053,  0.0436, -0.1302,  ...,  0.0734, -0.0430,  0.0770],
        [-0.0136,  0.1057, -0.0125,  ...,  0.2021,  0.0159, -0.0246],
        [ 0.0498, -0.0769, -0.0046,  ..., -0.1923,  0.1880, -0.0269]])
tensor([[-0.0940, -0.0014,  0.2825,  ..., -0.1467, -0.0655, -0.0099],
        [ 0.1002,  0.0637,  0.0606,  ...,  0.0372, -0.0679,  0.0404],
        [-0.0696,  0.0689,  0.1063,  ...,  0.0107, -0.0804, -0.1437],
        ...,
        [-0.0990,  0.0528, -0.1354,  ...,  0.0832, -0.0256,  0.0681],
        [-0.0171,  0.0923, -0.0149,  ...,  0.2111,  0.0173, -0.0260],
        [ 0.0454, -0.0914, -0.0169,  ..., -0.2047,  0.1777, -0.0290]])
##########################################################
decoder.blks.block1.attention1.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0196,  0.0492,  0.0045,  ...,  0.0885, -0.0579,  0.0336],
        [-0.0402, -0.0214,  0.0566,  ..., -0.0014,  0.0115, -0.0907],
        [ 0.0113, -0.0175,  0.0264,  ...,  0.0457,  0.0575, -0.0020],
        ...,
        [-0.0014, -0.0510, -0.0288,  ..., -0.0678,  0.0544,  0.0334],
        [ 0.0077,  0.0307,  0.0421,  ..., -0.0067, -0.0042, -0.0363],
        [-0.0325,  0.0104,  0.0196,  ...,  0.0141,  0.0233, -0.0051]])
tensor([[-0.0348,  0.0435,  0.0048,  ...,  0.1030, -0.0610,  0.0405],
        [-0.0302, -0.0126,  0.0608,  ...,  0.0090,  0.0152, -0.0925],
        [ 0.0216, -0.0053,  0.0301,  ...,  0.0505,  0.0480,  0.0014],
        ...,
        [-0.0071, -0.0858, -0.0608,  ..., -0.1143,  0.0806,  0.0394],
        [ 0.0165,  0.0449,  0.0138,  ..., -0.0096, -0.0045, -0.0315],
        [-0.0311,  0.0204,  0.0287,  ...,  0.0218,  0.0473, -0.0063]])
##########################################################
decoder.blks.block1.attention1.W_o.weight shape: torch.Size([128, 128])
tensor([[ 0.0455, -0.0070,  0.0533,  ..., -0.0014,  0.0827,  0.0966],
        [ 0.0385,  0.0210,  0.0336,  ...,  0.0065, -0.0186, -0.0106],
        [-0.0196,  0.0531,  0.0054,  ..., -0.0145, -0.0134, -0.0364],
        ...,
        [-0.0013,  0.0235,  0.0066,  ..., -0.0272,  0.0003,  0.0389],
        [ 0.0221,  0.0318, -0.0508,  ..., -0.0417,  0.0371,  0.0244],
        [ 0.0010,  0.0104,  0.0041,  ..., -0.0177, -0.0065, -0.0015]])
tensor([[ 0.0407, -0.0120,  0.0331,  ..., -0.0376,  0.0554,  0.0915],
        [ 0.0528,  0.0245,  0.0499,  ...,  0.0514, -0.0151, -0.0011],
        [-0.0417,  0.0628,  0.0024,  ..., -0.0347, -0.0140, -0.0141],
        ...,
        [-0.0133,  0.0192, -0.0026,  ..., -0.0129, -0.0014,  0.0538],
        [ 0.0068,  0.0390, -0.0608,  ..., -0.0853,  0.0378,  0.0288],
        [ 0.0133,  0.0029, -0.0021,  ...,  0.0131, -0.0085,  0.0086]])
##########################################################
decoder.blks.block1.addnorm1.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.9886, 1.0337, 1.0198, 0.9739, 1.0086, 0.9994, 1.0135, 0.9895, 0.9863,
        1.0170, 1.0594, 1.0348, 0.9837, 0.9949, 0.9717, 1.0060, 0.9167, 1.0173,
        1.0196, 1.0302, 0.9935, 1.0038, 1.0162, 1.0120, 1.0096, 1.0308, 0.9985,
        0.9648, 0.9963, 0.9857, 0.9546, 1.0030, 1.0139, 0.9912, 1.0359, 1.0186,
        0.9969, 0.9816, 0.9788, 1.0009, 0.9806, 1.0084, 1.0690, 1.0235, 0.9911,
        0.9896, 0.9955, 1.0258, 0.9937, 1.0149, 0.9991, 1.0177, 1.0103, 1.0122,
        1.0028, 1.0190, 0.9797, 1.0233, 1.0102, 0.9964, 0.9834, 1.0126, 1.0165,
        1.0368, 1.0067, 0.9876, 1.0271, 0.9741, 1.0195, 0.9816, 0.9960, 1.0335,
        1.0188, 0.9878, 0.9863, 1.0290, 0.9927, 1.0134, 0.9640, 0.9675, 0.9712,
        0.9732, 0.9881, 0.9828, 0.9581, 0.9709, 0.9204, 1.0216, 0.9894, 1.0016,
        0.9751, 0.9321, 1.0025, 0.9878, 1.0340, 1.0275, 1.0223, 0.9691, 0.9941,
        1.0183, 0.9975, 1.0247, 1.0013, 1.0129, 0.9830, 0.9839, 1.0041, 1.0194,
        1.0011, 0.9924, 1.0030, 1.0038, 0.9976, 1.0049, 0.9722, 1.0417, 1.0118,
        0.9881, 1.0261, 0.9843, 0.9895, 1.0119, 0.9713, 0.9855, 0.9888, 0.9746,
        1.0277, 0.9906])
##########################################################
decoder.blks.block1.addnorm1.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 4.2381e-02,  3.9506e-03, -1.2259e-02, -2.8247e-02,  1.4027e-04,
        -5.9073e-03,  1.3247e-02, -1.7784e-02,  2.2770e-02,  1.7467e-03,
         1.1827e-02,  1.5711e-02, -2.5924e-02, -7.1592e-03, -1.8914e-02,
         6.5210e-03,  1.0586e-02, -5.1485e-03,  1.0477e-02, -8.4751e-03,
        -2.2313e-02, -3.4507e-02, -8.6006e-04,  4.3944e-03, -2.0053e-02,
         2.3005e-02, -7.8989e-03,  4.6933e-03,  8.2419e-03, -1.1019e-02,
        -1.5925e-02, -1.4436e-02,  2.8869e-02, -2.8637e-02, -1.1483e-02,
        -7.3066e-04,  2.2210e-03, -1.2233e-02, -2.5903e-02, -1.5344e-02,
        -8.1870e-03,  1.1916e-02,  6.2659e-03, -1.6268e-03, -1.5046e-02,
        -1.9906e-02,  7.8607e-03, -6.2967e-03, -3.8218e-04,  1.1166e-02,
         3.7254e-02,  2.0098e-02, -2.0668e-03, -5.5193e-03,  6.7687e-03,
        -1.0691e-02,  1.0862e-02, -1.5339e-02, -6.1029e-03,  3.5267e-03,
         1.7667e-02, -1.8995e-02, -1.4578e-02,  9.9658e-03, -1.0691e-02,
         2.3845e-02,  2.6132e-02, -1.3169e-04, -2.4730e-02, -2.1411e-02,
         2.7664e-02,  3.6354e-03,  2.8525e-02, -2.3426e-03,  1.9766e-02,
        -6.0996e-03,  3.7871e-02,  1.4346e-02,  1.4603e-02, -1.0353e-02,
         1.1544e-02,  2.0822e-03,  1.3739e-02,  3.6691e-02, -8.5549e-03,
         7.5276e-03, -5.8701e-03,  8.1931e-03,  5.1878e-03,  1.1141e-02,
         5.2229e-05, -5.2735e-03, -2.5162e-02,  2.0441e-02,  1.7372e-02,
         1.5344e-03, -5.5430e-03,  2.5224e-02, -2.9682e-04, -3.7991e-02,
         4.3820e-02,  2.4386e-02,  9.2686e-03, -1.0598e-03, -2.2859e-02,
        -1.9192e-02, -2.8010e-02, -4.6014e-03,  2.9405e-03, -3.1541e-03,
        -8.7067e-03, -2.3229e-03, -2.2753e-02,  2.0592e-02, -3.5740e-02,
         5.5699e-03, -6.6258e-03, -2.0844e-02, -2.2797e-02, -9.8644e-03,
         4.3976e-03, -1.9645e-04,  2.0899e-02,  2.6101e-03,  2.2300e-02,
         4.2412e-03, -1.4056e-02, -9.2483e-03])
##########################################################
decoder.blks.block1.attention2.W_q.weight shape: torch.Size([128, 128])
tensor([[-0.0501, -0.1180, -0.1457,  ...,  0.0316,  0.0414, -0.0351],
        [ 0.1294,  0.0137,  0.0368,  ...,  0.0198,  0.0994,  0.0737],
        [ 0.0090,  0.1065,  0.0020,  ...,  0.0846,  0.0387,  0.2310],
        ...,
        [ 0.1353, -0.1899,  0.0902,  ..., -0.0105,  0.1238, -0.1403],
        [-0.0242, -0.0313,  0.0058,  ..., -0.2355, -0.0411, -0.0683],
        [-0.0964,  0.0865, -0.0773,  ..., -0.0096, -0.0884,  0.0237]])
tensor([[-0.0501, -0.1180, -0.1457,  ...,  0.0316,  0.0414, -0.0351],
        [ 0.1294,  0.0137,  0.0369,  ...,  0.0198,  0.0994,  0.0737],
        [ 0.0090,  0.1065,  0.0020,  ...,  0.0846,  0.0387,  0.2310],
        ...,
        [ 0.1353, -0.1899,  0.0903,  ..., -0.0105,  0.1238, -0.1403],
        [-0.0242, -0.0313,  0.0058,  ..., -0.2355, -0.0411, -0.0683],
        [-0.0964,  0.0865, -0.0773,  ..., -0.0096, -0.0884,  0.0237]])
##########################################################
decoder.blks.block1.attention2.W_k.weight shape: torch.Size([128, 128])
tensor([[ 0.0839, -0.0748,  0.0347,  ..., -0.0811,  0.0031, -0.1101],
        [-0.0224, -0.1170, -0.0709,  ..., -0.0193, -0.0366, -0.0377],
        [ 0.1252,  0.0416,  0.0410,  ..., -0.0291, -0.0448, -0.2118],
        ...,
        [-0.0156,  0.1602,  0.0022,  ..., -0.0078, -0.2130,  0.0451],
        [-0.0081,  0.0504, -0.0637,  ..., -0.0112, -0.1492,  0.1770],
        [-0.0275,  0.0077, -0.0081,  ..., -0.0063, -0.0314, -0.0183]])
tensor([[ 0.0839, -0.0748,  0.0347,  ..., -0.0811,  0.0031, -0.1101],
        [-0.0224, -0.1170, -0.0709,  ..., -0.0193, -0.0366, -0.0377],
        [ 0.1252,  0.0416,  0.0410,  ..., -0.0291, -0.0448, -0.2118],
        ...,
        [-0.0156,  0.1602,  0.0022,  ..., -0.0078, -0.2130,  0.0451],
        [-0.0081,  0.0504, -0.0637,  ..., -0.0112, -0.1492,  0.1770],
        [-0.0275,  0.0077, -0.0081,  ..., -0.0063, -0.0314, -0.0183]])
##########################################################
decoder.blks.block1.attention2.W_v.weight shape: torch.Size([128, 128])
tensor([[-0.0346, -0.0457, -0.0104,  ...,  0.0282, -0.0617,  0.0419],
        [-0.0344,  0.0849,  0.0743,  ...,  0.0145,  0.0257, -0.0387],
        [ 0.0833, -0.0438,  0.0249,  ..., -0.0394,  0.0651, -0.0197],
        ...,
        [-0.0062,  0.0852,  0.0654,  ..., -0.0155, -0.0165,  0.0403],
        [ 0.0064,  0.0572,  0.0267,  ..., -0.0830,  0.0277, -0.0322],
        [-0.0598, -0.0052, -0.0240,  ...,  0.0430,  0.0088, -0.0166]])
tensor([[-0.0348, -0.0458, -0.0106,  ...,  0.0282, -0.0626,  0.0416],
        [-0.0343,  0.0850,  0.0744,  ...,  0.0145,  0.0279, -0.0384],
        [ 0.0832, -0.0440,  0.0241,  ..., -0.0393,  0.0627, -0.0201],
        ...,
        [-0.0063,  0.0851,  0.0655,  ..., -0.0154, -0.0178,  0.0402],
        [ 0.0063,  0.0571,  0.0258,  ..., -0.0831,  0.0276, -0.0324],
        [-0.0597, -0.0052, -0.0236,  ...,  0.0431,  0.0069, -0.0166]])
##########################################################
decoder.blks.block1.attention2.W_o.weight shape: torch.Size([128, 128])
tensor([[-0.0293,  0.1059, -0.0436,  ..., -0.0255, -0.0843, -0.0296],
        [ 0.0107, -0.0667, -0.0562,  ..., -0.0500,  0.0922,  0.0107],
        [-0.0028,  0.0330, -0.0219,  ...,  0.0265, -0.0496, -0.0221],
        ...,
        [-0.0412,  0.0088,  0.0295,  ...,  0.0245, -0.0326,  0.0212],
        [ 0.0584, -0.1199, -0.0227,  ..., -0.0023, -0.0232, -0.1006],
        [-0.0139,  0.0020,  0.0116,  ...,  0.0224, -0.0554, -0.0204]])
tensor([[-0.0305,  0.1060, -0.0435,  ..., -0.0248, -0.0838, -0.0304],
        [ 0.0103, -0.0671, -0.0563,  ..., -0.0504,  0.0907,  0.0104],
        [-0.0027,  0.0327, -0.0219,  ...,  0.0265, -0.0494, -0.0218],
        ...,
        [-0.0413,  0.0087,  0.0294,  ...,  0.0245, -0.0326,  0.0210],
        [ 0.0592, -0.1190, -0.0225,  ..., -0.0025, -0.0230, -0.1007],
        [-0.0136,  0.0020,  0.0117,  ...,  0.0222, -0.0559, -0.0204]])
##########################################################
decoder.blks.block1.addnorm2.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([0.9899, 1.0334, 1.0198, 0.9761, 1.0103, 1.0003, 1.0135, 0.9925, 0.9872,
        1.0162, 1.0596, 1.0337, 0.9843, 0.9951, 0.9740, 1.0041, 0.9166, 1.0171,
        1.0187, 1.0293, 0.9948, 1.0033, 1.0172, 1.0129, 1.0103, 1.0313, 0.9984,
        0.9646, 0.9972, 0.9864, 0.9547, 1.0036, 1.0149, 0.9932, 1.0367, 1.0185,
        0.9962, 0.9829, 0.9806, 1.0006, 0.9806, 1.0110, 1.0679, 1.0227, 0.9915,
        0.9900, 0.9957, 1.0256, 0.9950, 1.0156, 0.9998, 1.0182, 1.0097, 1.0121,
        1.0041, 1.0192, 0.9801, 1.0235, 1.0108, 0.9974, 0.9840, 1.0129, 1.0170,
        1.0364, 1.0074, 0.9880, 1.0280, 0.9748, 1.0211, 0.9831, 0.9963, 1.0336,
        1.0187, 0.9879, 0.9870, 1.0282, 0.9943, 1.0137, 0.9648, 0.9671, 0.9715,
        0.9733, 0.9881, 0.9834, 0.9591, 0.9715, 0.9201, 1.0225, 0.9905, 1.0039,
        0.9749, 0.9292, 1.0027, 0.9881, 1.0327, 1.0280, 1.0226, 0.9696, 0.9952,
        1.0192, 0.9979, 1.0247, 1.0009, 1.0130, 0.9831, 0.9834, 1.0050, 1.0188,
        1.0007, 0.9932, 1.0037, 1.0037, 0.9986, 1.0054, 0.9732, 1.0405, 1.0107,
        0.9879, 1.0247, 0.9850, 0.9909, 1.0119, 0.9719, 0.9850, 0.9889, 0.9744,
        1.0274, 0.9908])
##########################################################
decoder.blks.block1.addnorm2.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0427,  0.0036, -0.0122, -0.0271,  0.0005, -0.0061,  0.0129, -0.0179,
         0.0236,  0.0013,  0.0129,  0.0152, -0.0258, -0.0070, -0.0186,  0.0066,
         0.0110, -0.0060,  0.0104, -0.0068, -0.0217, -0.0343, -0.0012,  0.0041,
        -0.0204,  0.0232, -0.0077,  0.0046,  0.0083, -0.0109, -0.0170, -0.0143,
         0.0283, -0.0284, -0.0101, -0.0004,  0.0023, -0.0121, -0.0262, -0.0143,
        -0.0084,  0.0117,  0.0070, -0.0022, -0.0148, -0.0198,  0.0080, -0.0067,
        -0.0005,  0.0112,  0.0377,  0.0198, -0.0022, -0.0056,  0.0063, -0.0111,
         0.0111, -0.0146, -0.0063,  0.0041,  0.0176, -0.0186, -0.0134,  0.0100,
        -0.0106,  0.0246,  0.0265,  0.0002, -0.0239, -0.0210,  0.0276,  0.0045,
         0.0288, -0.0022,  0.0202, -0.0056,  0.0377,  0.0141,  0.0149, -0.0104,
         0.0118,  0.0019,  0.0144,  0.0367, -0.0083,  0.0078, -0.0056,  0.0088,
         0.0053,  0.0107,  0.0005, -0.0057, -0.0243,  0.0210,  0.0171,  0.0020,
        -0.0057,  0.0247, -0.0002, -0.0371,  0.0436,  0.0248,  0.0098, -0.0004,
        -0.0225, -0.0194, -0.0276, -0.0049,  0.0022, -0.0030, -0.0087, -0.0020,
        -0.0225,  0.0206, -0.0354,  0.0058, -0.0060, -0.0208, -0.0220, -0.0097,
         0.0037,  0.0002,  0.0205,  0.0028,  0.0223,  0.0047, -0.0141, -0.0093])
##########################################################
decoder.blks.block1.ffn.dense1.weight shape: torch.Size([64, 128])
tensor([[ 0.1014, -0.0695, -0.0202,  ..., -0.0336,  0.0299,  0.0085],
        [-0.0223,  0.0363, -0.0036,  ...,  0.0375,  0.0287,  0.0048],
        [ 0.0043, -0.0166, -0.0264,  ...,  0.0272, -0.0125,  0.0856],
        ...,
        [-0.0042, -0.0444,  0.0131,  ...,  0.0046,  0.0311,  0.0045],
        [ 0.0213, -0.0018, -0.0598,  ..., -0.0025, -0.0345, -0.0013],
        [ 0.0332,  0.0721,  0.0449,  ..., -0.0107, -0.0786, -0.1151]])
tensor([[ 0.1045, -0.0669, -0.0266,  ..., -0.0358,  0.0341,  0.0112],
        [-0.0191,  0.0480, -0.0051,  ...,  0.0415,  0.0342,  0.0067],
        [ 0.0045, -0.0108, -0.0237,  ...,  0.0219, -0.0138,  0.0840],
        ...,
        [-0.0054, -0.0411,  0.0106,  ...,  0.0079,  0.0337,  0.0034],
        [ 0.0246, -0.0068, -0.0571,  ..., -0.0106, -0.0375,  0.0056],
        [ 0.0270,  0.0724,  0.0493,  ..., -0.0228, -0.0792, -0.1040]])
##########################################################
decoder.blks.block1.ffn.dense1.bias shape: torch.Size([64])
tensor([-0.0420,  0.0580, -0.0091, -0.0642,  0.0065,  0.0039, -0.0074, -0.0210,
        -0.0119,  0.0587,  0.0243, -0.0405,  0.0465, -0.0776, -0.0790,  0.0227,
        -0.0778, -0.0848,  0.0716, -0.0269,  0.0469, -0.0864,  0.0403,  0.0819,
         0.0091,  0.0726,  0.0805, -0.0627,  0.0061,  0.0402,  0.0135, -0.0442,
        -0.0370,  0.0707,  0.0148, -0.0633, -0.0869, -0.0620,  0.0204, -0.0103,
         0.0500,  0.0863, -0.0023, -0.0185,  0.0780,  0.0062,  0.0545, -0.0037,
        -0.0351, -0.0702, -0.0106,  0.0691,  0.0841, -0.0232, -0.0817, -0.0869,
        -0.0864, -0.0271, -0.0123,  0.0515,  0.0188, -0.0524, -0.0090, -0.0781])
tensor([-0.0413,  0.0561, -0.0113, -0.0667,  0.0106,  0.0032, -0.0158, -0.0335,
        -0.0106,  0.0519,  0.0253, -0.0413,  0.0574, -0.0766, -0.0847,  0.0216,
        -0.0754, -0.0839,  0.0676, -0.0351,  0.0446, -0.0932,  0.0377,  0.0808,
         0.0031,  0.0744,  0.0809, -0.0609,  0.0055,  0.0383,  0.0215, -0.0498,
        -0.0379,  0.0731,  0.0151, -0.0653, -0.0845, -0.0637,  0.0206, -0.0164,
         0.0476,  0.0809, -0.0152, -0.0274,  0.0820, -0.0018,  0.0523, -0.0169,
        -0.0367, -0.0794, -0.0014,  0.0650,  0.0789, -0.0243, -0.0826, -0.0832,
        -0.0876, -0.0322, -0.0002,  0.0544,  0.0110, -0.0603, -0.0101, -0.0918])
##########################################################
decoder.blks.block1.ffn.dense2.weight shape: torch.Size([128, 64])
tensor([[-0.0318,  0.0874,  0.0356,  ...,  0.0560,  0.0327, -0.0644],
        [ 0.0735,  0.0482, -0.0116,  ..., -0.0403,  0.0391, -0.0073],
        [ 0.0140,  0.0557,  0.0262,  ..., -0.0157,  0.0608,  0.0511],
        ...,
        [ 0.0984, -0.0022,  0.0362,  ...,  0.0194,  0.0784, -0.0386],
        [-0.0011, -0.0880, -0.0055,  ...,  0.0155,  0.0519, -0.0293],
        [-0.0116, -0.0248,  0.0208,  ..., -0.0584,  0.0145, -0.0214]])
tensor([[-0.0286,  0.0847,  0.0454,  ...,  0.0648,  0.0354, -0.0578],
        [ 0.0717,  0.0575, -0.0030,  ..., -0.0355,  0.0417, -0.0048],
        [ 0.0031,  0.0544,  0.0268,  ..., -0.0281,  0.0616,  0.0557],
        ...,
        [ 0.0873,  0.0033,  0.0449,  ...,  0.0183,  0.0788, -0.0347],
        [-0.0176, -0.0847, -0.0072,  ...,  0.0127,  0.0560, -0.0307],
        [-0.0156, -0.0195,  0.0128,  ..., -0.0581,  0.0148, -0.0217]])
##########################################################
decoder.blks.block1.ffn.dense2.bias shape: torch.Size([128])
tensor([ 0.0022, -0.0257,  0.0483, -0.0153, -0.1000,  0.0476, -0.1179, -0.0063,
         0.0523,  0.0012, -0.0390, -0.0771,  0.0026, -0.0306,  0.0606,  0.0105,
        -0.0209,  0.1114, -0.0892, -0.0635, -0.1064,  0.0072,  0.0908,  0.0242,
        -0.0937,  0.0405,  0.0299, -0.0003,  0.1225, -0.0159, -0.0733,  0.0271,
         0.0494, -0.0365,  0.0355, -0.0876,  0.0181,  0.0918, -0.0071,  0.1009,
        -0.0668, -0.0585,  0.0530,  0.0138, -0.0742, -0.0272,  0.1153, -0.0776,
         0.0378, -0.1005, -0.0313, -0.0758,  0.0726,  0.0035, -0.0809,  0.0806,
        -0.0562, -0.0264,  0.0244, -0.0116,  0.0988,  0.0369, -0.0756,  0.0843,
         0.0084, -0.0967,  0.0745,  0.0306, -0.1095, -0.0202,  0.0357, -0.0606,
         0.1237, -0.0366,  0.0746, -0.0572,  0.1165,  0.1216, -0.1099,  0.1112,
        -0.0535, -0.1076, -0.0954,  0.0238,  0.0627, -0.0983,  0.0459,  0.0719,
         0.0088, -0.0157, -0.0400,  0.0435, -0.0010,  0.0467, -0.0899, -0.0738,
        -0.0686, -0.0093,  0.0613,  0.0938, -0.0233,  0.1236, -0.0868, -0.0444,
         0.0019,  0.0528, -0.0902, -0.0680,  0.0802, -0.0892,  0.0807, -0.0188,
        -0.0423, -0.1108,  0.0454,  0.0630, -0.0822, -0.1228, -0.0947, -0.0922,
        -0.1168, -0.0362,  0.0052,  0.0753, -0.0667, -0.1001,  0.0571,  0.0748])
tensor([ 0.0356, -0.0171,  0.0372, -0.0260, -0.0861,  0.0489, -0.0960, -0.0147,
         0.0690, -0.0054, -0.0307, -0.0733, -0.0111, -0.0360,  0.0420,  0.0165,
        -0.0088,  0.1031, -0.0730, -0.0640, -0.1189, -0.0191,  0.0852,  0.0265,
        -0.0974,  0.0396,  0.0247, -0.0005,  0.1272, -0.0248, -0.0751,  0.0163,
         0.0599, -0.0502,  0.0380, -0.0774,  0.0112,  0.0804, -0.0136,  0.0741,
        -0.0711, -0.0416,  0.0428,  0.0055, -0.0868, -0.0283,  0.1198, -0.0675,
         0.0303, -0.1061, -0.0195, -0.0587,  0.0691, -0.0088, -0.0722,  0.0639,
        -0.0415, -0.0372,  0.0120, -0.0065,  0.1006,  0.0266, -0.0764,  0.0713,
        -0.0072, -0.0679,  0.0844,  0.0321, -0.1131, -0.0285,  0.0473, -0.0506,
         0.1301, -0.0366,  0.0843, -0.0570,  0.1300,  0.1241, -0.0867,  0.0967,
        -0.0493, -0.1051, -0.0811,  0.0477,  0.0550, -0.0932,  0.0401,  0.0699,
         0.0216, -0.0077, -0.0376,  0.0343, -0.0164,  0.0573, -0.0929, -0.0714,
        -0.0647, -0.0079,  0.0607,  0.0638,  0.0031,  0.1367, -0.0772, -0.0393,
        -0.0163,  0.0388, -0.1011, -0.0684,  0.0858, -0.0855,  0.0787, -0.0127,
        -0.0431, -0.0911,  0.0182,  0.0672, -0.0669, -0.1279, -0.0953, -0.0946,
        -0.1077, -0.0321,  0.0183,  0.0797, -0.0526, -0.0947,  0.0394,  0.0641])
##########################################################
decoder.blks.block1.addnorm3.ln.weight shape: torch.Size([128])
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1.])
tensor([1.0369, 1.0928, 1.0750, 1.0644, 1.0642, 1.1039, 1.0593, 1.0650, 1.0472,
        1.0655, 1.1238, 1.0837, 1.0474, 1.0364, 1.0636, 1.0753, 0.9868, 1.0805,
        1.0649, 1.0886, 1.0434, 1.0605, 1.0917, 1.0784, 1.0658, 1.0725, 1.0475,
        1.0189, 1.0453, 1.0328, 0.9971, 1.0488, 1.0518, 1.0531, 1.0980, 1.0939,
        1.0595, 1.0285, 1.0200, 1.0667, 1.0314, 1.0844, 1.1566, 1.0826, 1.0370,
        1.0398, 1.0616, 1.0728, 1.0774, 1.0748, 1.0459, 1.0721, 1.0601, 1.0579,
        1.0579, 1.0611, 1.0473, 1.0530, 1.0654, 1.0396, 1.0517, 1.0486, 1.0691,
        1.0925, 1.0616, 1.0701, 1.0764, 1.0166, 1.0882, 1.0538, 1.0240, 1.0942,
        1.0727, 1.0701, 1.0426, 1.0730, 1.0585, 1.0623, 1.0107, 1.0298, 1.0300,
        1.0280, 1.0447, 1.0512, 1.0294, 1.0284, 0.9762, 1.0873, 1.0653, 1.0802,
        1.0442, 0.9994, 1.0654, 1.0439, 1.0931, 1.0657, 1.0583, 1.0660, 1.0372,
        1.0475, 1.0388, 1.0702, 1.0335, 1.0544, 1.0369, 1.0395, 1.0490, 1.0754,
        1.0545, 1.0486, 1.0583, 1.0707, 1.1120, 1.0665, 1.0401, 1.0813, 1.0797,
        1.0401, 1.0740, 1.0677, 1.0246, 1.0630, 1.0391, 1.0440, 1.0475, 1.0201,
        1.0659, 1.0396])
##########################################################
decoder.blks.block1.addnorm3.ln.bias shape: torch.Size([128])
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0.])
tensor([ 0.0617, -0.0015,  0.0098,  0.0028,  0.0043, -0.0215,  0.0166, -0.0400,
         0.0576, -0.0051,  0.0277,  0.0310, -0.0527, -0.0041, -0.0004,  0.0066,
         0.0285, -0.0061,  0.0030,  0.0070,  0.0030, -0.0533, -0.0135, -0.0183,
        -0.0578,  0.0380, -0.0026, -0.0058,  0.0211, -0.0096, -0.0327, -0.0132,
         0.0239, -0.0278,  0.0025, -0.0126,  0.0056, -0.0084, -0.0239, -0.0072,
        -0.0061,  0.0069,  0.0466, -0.0147, -0.0128, -0.0202,  0.0373, -0.0134,
        -0.0032,  0.0071,  0.0700,  0.0105, -0.0027, -0.0083, -0.0186, -0.0217,
         0.0226,  0.0014, -0.0188,  0.0137,  0.0286, -0.0183, -0.0050,  0.0346,
        -0.0021,  0.0647,  0.0250,  0.0123, -0.0209, -0.0234,  0.0275,  0.0059,
         0.0453,  0.0186,  0.0300, -0.0128,  0.0404,  0.0184,  0.0082,  0.0170,
         0.0353,  0.0092,  0.0199,  0.0582, -0.0001,  0.0035,  0.0086,  0.0262,
         0.0290,  0.0069, -0.0187,  0.0056, -0.0300,  0.0493,  0.0363,  0.0014,
        -0.0059,  0.0194, -0.0009, -0.0486,  0.0391,  0.0388,  0.0231,  0.0141,
        -0.0271, -0.0131, -0.0192, -0.0118,  0.0006, -0.0282, -0.0110,  0.0139,
        -0.0479,  0.0169, -0.0237,  0.0400,  0.0195, -0.0157, -0.0358, -0.0071,
        -0.0026, -0.0085,  0.0079, -0.0061,  0.0279,  0.0235, -0.0215, -0.0179])
##########################################################
decoder.dense.weight shape: torch.Size([287, 128])
tensor([[ 0.0015, -0.0067,  0.0024,  ..., -0.0319,  0.0199,  0.0084],
        [-0.0280,  0.0764,  0.0373,  ...,  0.0228,  0.0103,  0.0096],
        [ 0.0141, -0.0330,  0.0026,  ...,  0.0159,  0.0843,  0.0121],
        ...,
        [-0.0239,  0.0488, -0.0026,  ..., -0.0004,  0.0006,  0.0473],
        [ 0.0130, -0.0182,  0.0145,  ..., -0.0256, -0.0276,  0.0529],
        [ 0.0696, -0.0524, -0.0099,  ...,  0.0017,  0.0208, -0.0456]])
tensor([[-0.0074, -0.0116, -0.0372,  ..., -0.0460,  0.0312,  0.0156],
        [-0.0190,  0.0914,  0.0373,  ...,  0.0261,  0.0028,  0.0017],
        [ 0.0208, -0.0327,  0.0151,  ...,  0.0233,  0.0951,  0.0241],
        ...,
        [-0.0215,  0.0479, -0.0179,  ...,  0.0181,  0.0090,  0.0586],
        [ 0.0035, -0.0099,  0.0373,  ..., -0.0100, -0.0513,  0.0469],
        [ 0.0395, -0.0542,  0.0222,  ..., -0.0051,  0.0267, -0.0196]])
##########################################################
decoder.dense.bias shape: torch.Size([287])
tensor([ 0.0428, -0.0159, -0.0641,  0.0610,  0.0436,  0.0185, -0.0209, -0.0083,
        -0.0696, -0.0103,  0.0637,  0.0864, -0.0262, -0.0503,  0.0670, -0.0433,
         0.0135,  0.0773,  0.0452,  0.0452,  0.0629,  0.0505,  0.0101,  0.0550,
        -0.0415, -0.0430, -0.0031,  0.0438, -0.0543, -0.0396, -0.0287, -0.0036,
         0.0108, -0.0732,  0.0761,  0.0859,  0.0467, -0.0262,  0.0802,  0.0416,
         0.0105,  0.0076,  0.0830,  0.0861, -0.0331,  0.0569,  0.0642,  0.0109,
         0.0337, -0.0033,  0.0861,  0.0674,  0.0387, -0.0822, -0.0429, -0.0440,
         0.0069,  0.0332, -0.0849, -0.0526,  0.0338, -0.0034,  0.0663,  0.0476,
        -0.0310, -0.0768,  0.0706, -0.0455,  0.0802,  0.0831,  0.0851,  0.0327,
         0.0513, -0.0557,  0.0584,  0.0766, -0.0802, -0.0087,  0.0072, -0.0159,
        -0.0447, -0.0823, -0.0274, -0.0808,  0.0190, -0.0226, -0.0439,  0.0338,
         0.0088, -0.0553, -0.0669,  0.0567, -0.0120,  0.0852, -0.0738,  0.0342,
        -0.0794,  0.0345,  0.0832, -0.0126, -0.0530,  0.0756,  0.0549,  0.0542,
         0.0462, -0.0089,  0.0476,  0.0111, -0.0484, -0.0137, -0.0875, -0.0183,
        -0.0181,  0.0554, -0.0631,  0.0784,  0.0797, -0.0580, -0.0295,  0.0395,
        -0.0343, -0.0498,  0.0843, -0.0737, -0.0827,  0.0620, -0.0832, -0.0680,
         0.0052, -0.0624, -0.0114,  0.0443, -0.0190,  0.0418,  0.0076, -0.0156,
         0.0205, -0.0364, -0.0421, -0.0046,  0.0725, -0.0094, -0.0607, -0.0851,
         0.0457, -0.0640,  0.0373,  0.0145, -0.0017,  0.0437,  0.0026,  0.0060,
        -0.0372, -0.0635, -0.0249,  0.0065, -0.0613, -0.0510,  0.0627, -0.0082,
         0.0591, -0.0875,  0.0804, -0.0713,  0.0793, -0.0556,  0.0055,  0.0245,
        -0.0271, -0.0709, -0.0030,  0.0038,  0.0847, -0.0013, -0.0635, -0.0767,
         0.0237,  0.0081,  0.0704, -0.0740,  0.0766,  0.0799, -0.0129,  0.0490,
         0.0068,  0.0167,  0.0683,  0.0488, -0.0584, -0.0010,  0.0111,  0.0457,
        -0.0013, -0.0016,  0.0865,  0.0104,  0.0295,  0.0808,  0.0037, -0.0066,
        -0.0069,  0.0532,  0.0083,  0.0183, -0.0331,  0.0201,  0.0411,  0.0394,
        -0.0277, -0.0095,  0.0109,  0.0098,  0.0426,  0.0309, -0.0459, -0.0247,
         0.0419,  0.0633,  0.0488,  0.0715, -0.0348,  0.0694, -0.0663,  0.0494,
        -0.0883, -0.0447, -0.0450, -0.0287, -0.0107,  0.0279, -0.0553,  0.0036,
         0.0312,  0.0661,  0.0692,  0.0555,  0.0190,  0.0538,  0.0464,  0.0623,
         0.0143,  0.0782, -0.0302, -0.0242,  0.0643, -0.0791, -0.0418, -0.0097,
        -0.0286, -0.0397,  0.0454, -0.0768,  0.0764, -0.0568, -0.0485, -0.0067,
         0.0628, -0.0015,  0.0131,  0.0433, -0.0386, -0.0355, -0.0199,  0.0613,
        -0.0075,  0.0814,  0.0475,  0.0307,  0.0828, -0.0195, -0.0834, -0.0661,
         0.0703,  0.0562, -0.0399,  0.0147, -0.0289, -0.0482, -0.0733, -0.0604,
        -0.0070,  0.0110,  0.0853,  0.0017,  0.0566,  0.0843, -0.0559])
tensor([ 0.0008,  0.0087, -0.0777,  0.0609,  0.0660, -0.0035,  0.0063,  0.0015,
        -0.1195, -0.0416,  0.0988,  0.1038, -0.0101, -0.0822,  0.0585, -0.0766,
        -0.0086,  0.1384,  0.0715,  0.0749,  0.1120, -0.0089, -0.0047,  0.0716,
        -0.0682, -0.0654, -0.0084,  0.0536, -0.0805, -0.0868, -0.0542,  0.0185,
        -0.0287, -0.0828,  0.1079,  0.1346,  0.0163, -0.0288,  0.0872,  0.0277,
         0.0524,  0.0263,  0.0809,  0.0844, -0.0520,  0.0375,  0.0832,  0.0086,
         0.0159,  0.0128,  0.1214,  0.0663,  0.0270, -0.1328, -0.0626, -0.0348,
        -0.0346,  0.0272, -0.0776, -0.0675,  0.0422, -0.0163,  0.1023,  0.0741,
        -0.0282, -0.1146,  0.1026, -0.0576,  0.0462,  0.1189,  0.1256,  0.0417,
         0.0686, -0.0693,  0.0948,  0.1252, -0.1430, -0.0111,  0.0033,  0.0188,
        -0.0530, -0.1024, -0.0440, -0.0530,  0.0397, -0.0270, -0.0592,  0.0569,
        -0.0014, -0.0704, -0.1197,  0.0668, -0.0566,  0.0952, -0.1048,  0.0106,
        -0.1107,  0.0135,  0.1335,  0.0086, -0.0617,  0.0782,  0.0778,  0.0777,
         0.0222,  0.0048,  0.0721, -0.0230, -0.0587, -0.0435, -0.0860, -0.0492,
        -0.0333,  0.0739, -0.0618,  0.1007,  0.1066, -0.0401, -0.0519,  0.0302,
         0.0180, -0.0782,  0.0798, -0.0442, -0.0535,  0.0609, -0.0947, -0.0538,
        -0.0131, -0.1296,  0.0040,  0.0606,  0.0554,  0.0982,  0.0254, -0.0219,
         0.0042, -0.0526, -0.0363,  0.0073,  0.1421, -0.0566, -0.0777, -0.0648,
         0.0404, -0.1027,  0.0220,  0.0468, -0.0088,  0.0458, -0.0113, -0.0002,
        -0.0403, -0.0516, -0.0366, -0.0433, -0.0783, -0.0443,  0.0559,  0.0620,
         0.0528, -0.1503,  0.0816, -0.0783,  0.0602, -0.0370, -0.0100,  0.0716,
        -0.0372, -0.0954,  0.0156,  0.0043,  0.1470,  0.0243, -0.0518, -0.1046,
        -0.0415,  0.0289,  0.1061, -0.0934,  0.0815,  0.1493, -0.0371,  0.0512,
         0.0005,  0.0601,  0.0783,  0.0027, -0.0839,  0.0128,  0.0343,  0.0397,
        -0.0588, -0.0066,  0.0729, -0.0165,  0.0593,  0.0922, -0.0577, -0.0619,
        -0.0088,  0.1186,  0.0186,  0.0712, -0.0475, -0.0428,  0.0725,  0.0518,
        -0.0148, -0.0040,  0.0088,  0.0199,  0.0223,  0.0301, -0.0327, -0.0779,
         0.0567,  0.0544,  0.0327,  0.1082,  0.0028,  0.0517, -0.1395,  0.0522,
        -0.1099, -0.0532, -0.0522, -0.0145, -0.0523,  0.0525, -0.1093,  0.0205,
         0.0050,  0.0824,  0.1329,  0.0601,  0.0036,  0.0886,  0.0568,  0.0208,
         0.0748,  0.0852, -0.0214, -0.0219,  0.0616, -0.0960, -0.0025, -0.0287,
         0.0019, -0.0347,  0.0271, -0.0711,  0.1184, -0.0306, -0.0225, -0.0322,
         0.1061,  0.0064, -0.0111,  0.0471, -0.0513, -0.0816, -0.0399, -0.0025,
         0.0062,  0.0910,  0.0777,  0.0464,  0.1713, -0.0502, -0.1175, -0.1007,
         0.1162,  0.0832, -0.0709,  0.0242, -0.0686, -0.0259, -0.0901, -0.0692,
        -0.0097,  0.0283,  0.0958,  0.0020,  0.0511,  0.0871, -0.0331])
##########################################################
decoder.dense_blks.dense0.dense.weight shape: torch.Size([287, 287])
tensor([[ 0.0415,  0.0636, -0.0031,  ..., -0.0126,  0.0388,  0.0092],
        [ 0.0142,  0.0233, -0.0334,  ..., -0.0035,  0.0217, -0.0049],
        [-0.0008, -0.0380,  0.0091,  ...,  0.0354, -0.0298, -0.0168],
        ...,
        [-0.0354,  0.0111,  0.0364,  ...,  0.0024, -0.0166,  0.0363],
        [ 0.0480, -0.0108, -0.0019,  ..., -0.0028, -0.0078, -0.0296],
        [ 0.0050, -0.0019, -0.0005,  ..., -0.0109,  0.0065,  0.0260]])
tensor([[ 0.0439,  0.0695, -0.0096,  ..., -0.0092,  0.0406,  0.0033],
        [-0.0129,  0.0397, -0.0528,  ..., -0.0099, -0.0013, -0.0009],
        [-0.0053, -0.0528,  0.0195,  ...,  0.0283, -0.0250, -0.0363],
        ...,
        [-0.0428,  0.0187,  0.0542,  ...,  0.0074, -0.0044,  0.0346],
        [ 0.0543, -0.0245, -0.0133,  ...,  0.0066, -0.0081, -0.0265],
        [-0.0066, -0.0073,  0.0061,  ...,  0.0008, -0.0148,  0.0379]])
##########################################################
decoder.dense_blks.dense0.dense.bias shape: torch.Size([287])
tensor([ 9.2945e-03,  4.7627e-03,  5.6269e-03,  3.7196e-02,  4.2924e-02,
        -2.7822e-02, -5.2581e-02,  4.0925e-02, -1.4320e-02,  2.1275e-02,
        -5.5953e-02, -2.0781e-02, -3.6425e-02,  5.8026e-03, -3.7672e-02,
        -1.9828e-02, -3.1175e-02, -4.4908e-02, -1.0366e-03,  1.7081e-02,
        -1.8871e-02, -7.9666e-03, -4.3215e-03,  3.6367e-02,  1.2990e-02,
         4.2001e-02,  2.6055e-02,  1.9295e-02, -4.6647e-02,  2.7879e-03,
         5.2832e-04, -2.9407e-02, -3.3263e-02,  4.4405e-02, -5.5132e-02,
         5.3185e-02, -1.3605e-02, -1.0991e-04,  2.5375e-02,  9.0059e-03,
         4.3011e-02,  2.0127e-03, -4.6978e-02, -5.2800e-02, -3.1626e-02,
         5.0437e-02,  3.2593e-02, -2.4801e-02, -2.0454e-02, -2.8332e-03,
        -5.5934e-03, -3.6373e-02, -4.6554e-02,  4.2422e-02, -2.2050e-02,
        -5.3285e-02, -3.8356e-02, -2.6032e-02, -4.0908e-02, -4.5779e-02,
        -3.2770e-02, -5.6543e-02, -1.2470e-02, -4.1326e-02, -1.4275e-02,
         5.3796e-02,  4.3412e-02, -7.4013e-03, -2.0339e-03, -3.5506e-02,
        -3.4441e-02, -4.2611e-02,  3.2918e-02, -2.4942e-03,  1.8643e-03,
         4.7257e-02,  3.1459e-02,  8.5546e-03, -7.8743e-03, -1.1081e-02,
         9.8521e-03, -2.5374e-02, -4.7271e-02, -3.3849e-03,  5.6592e-04,
         8.8856e-03,  3.1576e-02,  4.8882e-02,  3.5104e-02,  2.0056e-02,
        -1.1944e-02,  1.9278e-02, -4.9268e-02, -6.0598e-03,  5.7799e-02,
        -1.5590e-02,  5.7160e-02, -1.0485e-02, -1.8162e-02,  2.0314e-02,
        -4.2509e-02,  4.1407e-02,  1.9179e-03, -3.4148e-02,  3.0758e-02,
         1.7807e-03, -4.0896e-02, -1.1572e-02,  1.5581e-02,  1.8106e-02,
        -2.1298e-02,  2.0183e-02,  1.6217e-02, -4.5390e-02, -2.7910e-02,
         7.5927e-03,  1.7063e-02,  2.9479e-02,  2.0360e-02, -2.6666e-02,
        -2.0337e-02, -1.0134e-02, -8.0327e-03, -4.1850e-02,  2.5823e-02,
         1.5954e-02,  5.6041e-02,  8.9668e-03,  8.6257e-03,  3.7194e-02,
        -2.3719e-02, -3.9697e-02, -2.4642e-02, -2.5215e-02, -2.6049e-02,
         2.2894e-03, -5.2766e-02, -5.5643e-02, -8.2113e-03,  4.6558e-02,
        -3.9177e-02, -5.8747e-02,  3.5160e-02,  2.7090e-02,  2.0365e-02,
         7.9943e-04, -2.0532e-02,  1.5788e-02, -1.9763e-02,  1.8091e-02,
         6.8184e-05,  4.5605e-02, -1.7907e-02,  4.5581e-03,  2.8640e-02,
        -2.9105e-02,  2.6050e-02, -3.8725e-02, -3.7033e-02, -3.5272e-02,
        -2.3371e-02, -3.7340e-02, -5.8013e-02, -1.1200e-02, -8.9989e-03,
        -5.1341e-02,  3.9819e-02, -3.7445e-02,  2.0256e-03,  2.4493e-02,
         1.9561e-02,  1.7267e-02, -4.0217e-02, -3.0493e-03,  3.3397e-02,
        -5.6894e-02, -5.5368e-02,  1.2389e-02,  2.0785e-02,  1.7730e-02,
         2.9827e-02, -9.9339e-05, -3.5720e-02, -3.7510e-04,  4.6163e-02,
         5.2423e-02, -2.4676e-02, -1.8673e-02,  2.2621e-02, -4.0043e-02,
         4.0948e-03, -5.8889e-02, -1.2299e-02,  2.7673e-02, -5.8773e-02,
         5.3385e-03, -9.0887e-03, -3.2520e-02,  5.1877e-02, -4.0158e-02,
         2.2918e-02, -4.7171e-02, -1.5630e-02, -4.6316e-02,  2.0558e-02,
         1.2073e-02, -6.9120e-03,  1.6015e-02, -9.9976e-03,  8.6286e-03,
        -2.5954e-02,  4.9613e-02,  4.9711e-02,  5.4309e-02, -3.5071e-02,
         3.8131e-02,  5.4523e-02, -5.0013e-02, -1.3782e-02,  4.0440e-02,
        -4.9938e-02,  3.1314e-02,  1.6698e-02,  1.4981e-02, -1.5072e-02,
        -3.1131e-02, -1.2440e-02, -1.5329e-02,  9.7334e-03, -1.1753e-02,
        -3.9674e-02,  1.2411e-02,  3.9631e-02, -3.7559e-02,  2.7823e-02,
         3.2889e-02, -5.3532e-02,  2.2622e-02,  1.9458e-02, -4.4184e-02,
         4.5833e-02,  1.0590e-04,  2.4098e-02, -1.9997e-02,  4.2924e-03,
         7.9604e-03,  1.4142e-02, -1.7896e-03,  1.6409e-02, -2.6171e-02,
         7.6227e-03, -1.6043e-03, -5.1737e-02,  9.2402e-03, -2.7996e-02,
         9.7198e-03, -5.0197e-02,  2.6286e-02,  1.0777e-02,  4.0507e-02,
        -3.7677e-02, -1.6704e-02, -1.5607e-02,  4.3682e-02, -3.2290e-02,
        -4.5268e-02, -1.1755e-02,  2.1699e-02,  5.3311e-03,  1.0243e-02,
         4.3536e-04, -5.2821e-02,  2.6871e-02, -4.3400e-02,  3.6909e-02,
         5.6446e-04, -5.4748e-02, -7.2421e-04, -5.6211e-02, -3.1880e-03,
        -2.1347e-02, -5.0390e-02, -2.0560e-02, -7.4728e-03, -6.8100e-03,
         3.5781e-02, -1.8749e-02])
tensor([ 0.0302,  0.1619,  0.0445,  0.1361,  0.0280,  0.0091, -0.0538,  0.1623,
        -0.0071,  0.1146, -0.0567,  0.0046, -0.0509,  0.0644,  0.0004,  0.0555,
        -0.0088, -0.0442,  0.1394,  0.0301, -0.0081,  0.0950,  0.0732,  0.0315,
         0.0210,  0.1838,  0.1050,  0.1108, -0.0556,  0.0286,  0.0140, -0.0144,
        -0.0384,  0.2144,  0.0241,  0.1211, -0.0010,  0.0094,  0.0559, -0.0032,
         0.0948,  0.0012, -0.0013, -0.0296,  0.0554,  0.0988,  0.0534, -0.0225,
        -0.0048,  0.0102, -0.0238, -0.0391, -0.0387,  0.1014,  0.0756, -0.0293,
        -0.0227, -0.0187, -0.0415, -0.0054, -0.0404, -0.0362, -0.0117, -0.0733,
         0.0215,  0.0294,  0.0376,  0.0900, -0.0168,  0.0052, -0.0391, -0.0606,
         0.0656,  0.0364,  0.0324,  0.1618,  0.0727,  0.0738, -0.0149,  0.0122,
         0.0564,  0.0404, -0.0655,  0.0587,  0.0204,  0.0787,  0.0864,  0.0712,
         0.0382,  0.0386,  0.0061,  0.0790, -0.0540, -0.0113,  0.0441,  0.0062,
         0.0599, -0.0063,  0.0108,  0.0249, -0.0388,  0.0730,  0.1024, -0.0284,
         0.1561, -0.0173, -0.0212, -0.0069,  0.1307,  0.1481,  0.0049,  0.0299,
         0.0637, -0.0237, -0.0216,  0.0776,  0.0422,  0.1383,  0.0119, -0.0145,
         0.0198,  0.0098,  0.0335,  0.0235,  0.0070,  0.0208,  0.1172,  0.0615,
         0.0452,  0.1399,  0.0053, -0.0480,  0.0546, -0.0086,  0.0918,  0.0235,
         0.0012, -0.0667,  0.0093,  0.0585, -0.0121, -0.0576,  0.1130,  0.0600,
         0.1003,  0.0728,  0.0334,  0.1456,  0.0011,  0.0924, -0.0271,  0.0622,
        -0.0066,  0.0129,  0.0381, -0.0435,  0.0613, -0.0152, -0.0365, -0.0392,
        -0.0221, -0.0305, -0.0571, -0.0009,  0.0335, -0.0673,  0.1372, -0.0630,
         0.0710,  0.1446,  0.0036, -0.0074, -0.0222,  0.0180,  0.1181, -0.0422,
        -0.0467,  0.0157,  0.0236,  0.0504,  0.0311, -0.0086, -0.0384,  0.0054,
         0.0906,  0.1162,  0.0475,  0.0026, -0.0047, -0.0185,  0.0951, -0.0430,
        -0.0179,  0.0437, -0.0283, -0.0409,  0.0073, -0.0168,  0.0632, -0.0147,
         0.0356,  0.0025, -0.0075, -0.0627,  0.0586,  0.0429, -0.0243,  0.0518,
         0.0204,  0.0136,  0.0172,  0.0652,  0.0711,  0.1132,  0.0586,  0.0523,
         0.0523, -0.0463, -0.0320,  0.0535,  0.0214,  0.1473,  0.0266,  0.0015,
         0.0127,  0.0639,  0.0101,  0.0214,  0.1016,  0.0236,  0.0118, -0.0016,
         0.0388, -0.0165,  0.0878,  0.1041, -0.0359,  0.0415,  0.0847, -0.0490,
         0.0882, -0.0029,  0.0575,  0.0433,  0.0340,  0.0374,  0.0269, -0.0317,
         0.0545, -0.0210,  0.1038,  0.0284, -0.0191, -0.0286, -0.0208,  0.0159,
        -0.0388,  0.1114,  0.0237,  0.0614,  0.0456,  0.0414,  0.0434,  0.2102,
        -0.0060, -0.0161,  0.0176,  0.0226,  0.0780,  0.0077,  0.0175, -0.0322,
         0.0682, -0.0429,  0.1295,  0.0078, -0.0446,  0.0336, -0.0502,  0.0049,
        -0.0063,  0.0064,  0.0150,  0.0224, -0.0012,  0.0330,  0.0057])
##########################################################
decoder.dense_blks.dense1.dense.weight shape: torch.Size([287, 287])
tensor([[ 1.4860e-03,  2.9716e-02, -6.0606e-02,  ...,  1.5717e-02,
          8.0905e-05, -2.1017e-02],
        [-1.3616e-02, -3.3517e-02,  4.0395e-02,  ...,  1.0420e-02,
          3.3749e-02, -3.0998e-02],
        [ 2.3846e-03,  2.8995e-02,  3.1268e-02,  ...,  2.7755e-02,
          2.7499e-02, -9.8317e-03],
        ...,
        [-1.4386e-02, -6.3047e-02, -3.4732e-03,  ...,  2.3267e-03,
         -1.1414e-02,  1.3245e-02],
        [-2.1987e-02, -2.7897e-02,  8.0505e-03,  ..., -5.9594e-03,
          2.7844e-02, -3.2822e-02],
        [-6.5751e-03, -3.4587e-02,  3.6446e-02,  ...,  4.6423e-03,
          3.7080e-02,  3.2548e-02]])
tensor([[ 0.0007,  0.0260, -0.0610,  ...,  0.0150, -0.0005, -0.0213],
        [-0.0155, -0.0389,  0.0394,  ...,  0.0092,  0.0326, -0.0331],
        [ 0.0010,  0.0235,  0.0306,  ...,  0.0267,  0.0270, -0.0108],
        ...,
        [-0.0165, -0.0681, -0.0046,  ...,  0.0009, -0.0127,  0.0108],
        [-0.0237, -0.0311,  0.0072,  ..., -0.0069,  0.0270, -0.0342],
        [-0.0093, -0.0408,  0.0349,  ...,  0.0038,  0.0367,  0.0309]])
##########################################################
decoder.dense_blks.dense1.dense.bias shape: torch.Size([287])
tensor([-4.7171e-03,  4.5108e-02, -3.6125e-02,  1.3025e-02, -4.9494e-02,
        -3.2908e-03, -1.6322e-02,  2.8928e-03, -1.6282e-02, -5.2108e-02,
         9.2257e-03, -4.1192e-02,  3.6373e-02, -1.8053e-02,  2.3126e-03,
        -2.9785e-02,  3.6973e-02, -1.6936e-02, -2.3754e-02,  2.1688e-02,
         3.6946e-02, -7.1317e-03, -4.6990e-02,  4.9354e-02, -1.4096e-02,
         5.4112e-02, -3.1705e-02, -5.7034e-02, -5.4591e-02,  3.7455e-02,
        -1.0023e-02,  3.7395e-02,  8.0251e-03,  1.1989e-02, -2.7309e-02,
         2.0020e-02,  1.6910e-02,  2.1236e-04, -3.6198e-02,  1.1459e-02,
        -4.7113e-04,  4.7131e-02, -4.9942e-02, -5.0053e-02,  3.1239e-02,
         4.9170e-02, -2.0519e-02, -1.4204e-02,  2.6691e-02, -3.7433e-03,
        -3.9807e-02,  7.1729e-03, -4.0137e-02,  3.7971e-02,  2.0359e-02,
        -7.4449e-03,  2.7234e-02,  2.2664e-02,  3.8915e-02,  4.9864e-02,
        -2.0035e-02,  1.9968e-02, -2.8516e-02,  5.2038e-02, -3.2274e-02,
         4.0629e-02,  2.4613e-02,  1.5651e-02, -2.2391e-02, -1.2145e-02,
        -2.0303e-02,  4.5110e-02, -4.9052e-02, -2.8112e-03,  2.2643e-02,
         5.4693e-02, -3.6263e-03, -3.5057e-02,  5.2955e-02,  2.8124e-03,
         2.9210e-02,  5.0380e-02, -2.5018e-02,  4.6906e-02, -2.4860e-02,
        -2.5494e-02, -2.7690e-02,  5.9007e-02, -4.1884e-02,  2.0570e-02,
        -4.1651e-02, -3.7212e-02, -2.9380e-02,  5.1334e-02, -2.1577e-02,
        -1.7244e-03,  5.7381e-02,  3.1699e-02, -5.6985e-02, -3.9924e-02,
        -2.1350e-03, -3.5945e-02, -5.6381e-02,  2.0116e-02, -3.2870e-02,
        -1.5072e-02,  4.4553e-02,  3.4165e-04, -2.1256e-02,  2.6247e-02,
         2.5443e-02, -3.5195e-02, -5.4458e-02,  4.0847e-02, -8.0851e-03,
         4.5425e-02, -5.4800e-02,  4.1019e-02,  3.9721e-02, -2.7768e-02,
         3.7666e-02, -1.3575e-02, -4.6999e-03, -1.6394e-02,  4.7918e-03,
        -4.6958e-02, -1.4657e-02, -4.1878e-02,  4.3029e-02,  4.9703e-02,
        -4.7909e-02,  5.7473e-02, -6.5259e-03, -5.0272e-02, -3.2615e-02,
        -3.2729e-02,  3.0902e-02, -3.4195e-02,  1.9689e-02,  1.2927e-02,
        -5.8298e-02,  1.9728e-02,  4.3320e-02, -1.3840e-02, -2.0093e-02,
         1.2645e-02, -3.8330e-02, -2.1981e-02, -4.7518e-02,  2.8469e-02,
        -5.2679e-02,  5.3455e-02,  2.4551e-02, -5.1098e-02,  5.4653e-02,
         5.7712e-02, -8.2728e-03, -2.7246e-03,  2.4993e-02, -1.1349e-02,
        -4.5357e-02,  5.2635e-03,  1.7811e-02,  3.7186e-02,  1.0024e-02,
        -1.2593e-02,  1.6288e-02, -1.2315e-02,  1.5386e-02,  1.6957e-02,
         4.7720e-02, -4.5751e-02, -1.7393e-02, -5.5350e-02, -4.2778e-02,
        -4.7567e-02, -3.3676e-02,  7.0563e-03, -1.5242e-03, -8.6519e-03,
         1.7905e-02,  6.8924e-03,  2.4644e-02, -2.6858e-02,  4.8306e-02,
        -4.3174e-02,  4.0941e-02, -1.7519e-02,  4.6968e-02, -4.2104e-02,
        -3.5380e-02,  3.6568e-02,  3.9034e-02,  4.4969e-02,  1.5607e-02,
        -2.0949e-02, -5.2607e-02,  4.7592e-02,  4.0662e-02,  1.8318e-02,
        -3.1674e-03, -1.2344e-02, -5.5960e-02, -2.2805e-02,  1.6360e-02,
        -2.7555e-02, -2.8789e-02, -1.9056e-02, -3.2256e-02, -1.2904e-02,
        -1.3657e-02, -1.1925e-02, -3.9663e-02, -7.0125e-03, -3.5440e-02,
        -5.2911e-02,  2.1493e-04,  3.1026e-02, -4.1081e-02, -1.8389e-02,
         5.1212e-03, -1.8953e-02,  5.6068e-02, -5.4625e-02, -2.2138e-02,
        -1.4517e-02, -2.5123e-02, -5.0927e-02, -3.6563e-02,  2.8595e-02,
        -4.4261e-02, -5.1077e-03,  2.9365e-02,  3.8127e-02, -3.9264e-02,
        -2.5984e-02,  2.2040e-02, -6.0124e-03,  1.5716e-02,  2.2339e-02,
        -3.8889e-02, -4.8340e-02,  4.5383e-02,  4.4439e-02,  4.1213e-05,
         1.9336e-03, -4.2236e-02, -3.9029e-02, -4.4208e-02,  1.8400e-02,
         2.1048e-02,  1.0619e-03,  5.2068e-02, -4.2369e-02,  2.9231e-02,
         7.9577e-03,  4.4884e-02,  4.5390e-02,  2.4037e-02, -3.6058e-02,
        -4.2557e-02,  3.6408e-04, -3.3445e-02,  3.5854e-02, -2.9320e-02,
         1.5709e-02,  1.9906e-02, -2.1649e-02, -7.3793e-03, -5.5684e-02,
         2.8861e-02, -6.1680e-04, -1.7569e-02, -2.5460e-02, -4.3657e-03,
         3.6642e-02, -2.8367e-02, -1.7261e-02, -4.2800e-02, -3.5854e-02,
         4.5728e-02, -5.5836e-02,  4.5057e-02,  4.0306e-02,  4.9915e-02,
         2.7175e-02, -3.2455e-02])
tensor([-1.3932e-02,  1.7793e-02, -4.9132e-02,  2.0224e-01,  2.1352e-01,
         8.8424e-01,  8.3580e-01,  8.9293e-01,  5.6881e-01,  3.0901e-01,
         3.8080e-01,  1.7718e-01,  3.3482e-01,  2.2389e-01,  2.8166e-01,
         1.0893e-01,  3.1335e-01,  1.4157e-01,  2.3041e-01,  1.9080e-01,
         1.0264e-01,  1.8170e-01,  9.3441e-02,  1.5581e-01,  3.2244e-02,
         1.4455e-01,  4.4828e-02,  8.9583e-03,  2.5659e-02,  6.9126e-02,
         4.5141e-02,  7.8093e-02,  4.9666e-02, -1.1409e-02,  2.7150e-02,
         2.4704e-02,  7.9314e-02, -2.9114e-04, -1.0941e-02,  3.4950e-02,
         6.9631e-02,  6.2415e-02, -1.3858e-02, -6.3764e-02,  3.0501e-02,
         2.5388e-02, -3.0051e-02,  4.5189e-02,  7.6119e-03, -1.4294e-02,
        -5.8025e-02,  4.1003e-03, -4.9418e-02,  1.4385e-02,  5.5900e-03,
        -2.7044e-02,  1.0232e-02,  1.1949e-02,  2.7591e-02,  2.1228e-02,
        -2.8743e-02, -1.4407e-02, -4.2468e-02,  3.8371e-02, -4.2402e-02,
         4.4531e-02,  1.5928e-02, -1.5073e-02, -3.5977e-02, -3.9347e-02,
        -4.7053e-02,  2.3310e-02, -5.4243e-02, -2.4545e-02,  1.0154e-03,
         2.5619e-02, -1.1281e-02, -4.6795e-02,  2.0921e-02, -1.3399e-02,
         1.3067e-03,  1.8127e-02, -2.7632e-02,  2.2441e-02, -4.3927e-02,
        -2.7145e-02, -3.5738e-02,  4.6235e-02, -4.2231e-02,  1.0379e-02,
        -4.6749e-02, -4.9936e-02, -5.2426e-02,  1.9964e-02, -2.8014e-02,
        -2.1251e-02,  1.9982e-02,  2.6799e-02, -6.1208e-02, -4.7598e-02,
        -2.1308e-02, -3.7562e-02, -5.7515e-02, -5.8208e-03, -4.6091e-02,
        -3.7829e-02,  1.5862e-02, -1.5025e-02, -3.3758e-02,  1.6933e-02,
         2.2473e-02, -4.2596e-02, -6.6781e-02,  2.9787e-02, -4.2841e-02,
         5.5164e-03, -7.6864e-02,  1.9795e-02,  2.5567e-02, -2.9094e-02,
         2.9793e-02, -2.5412e-02, -1.9067e-02, -3.1023e-02, -7.5293e-03,
        -4.9917e-02, -2.6186e-02, -4.1944e-02,  1.0935e-02,  4.0424e-02,
        -6.4943e-02,  5.1215e-02, -1.7594e-02, -6.5429e-02, -3.3515e-02,
        -4.3360e-02, -4.0857e-03, -3.8147e-02,  8.4025e-03,  9.7474e-03,
        -7.3331e-02,  1.4326e-02,  1.4946e-02, -1.8246e-02, -2.4400e-02,
        -9.4682e-03, -3.9368e-02, -3.9546e-02, -6.7097e-02, -8.2523e-03,
        -5.4208e-02,  2.2742e-02,  1.8957e-02, -5.1416e-02,  2.8099e-02,
         3.0683e-02, -2.5705e-02, -2.4637e-02,  1.0059e-02, -2.7605e-02,
        -5.8446e-02, -1.5824e-02, -1.5882e-02,  1.1121e-02, -1.4437e-02,
        -1.5308e-02, -5.4725e-03, -2.9239e-02, -6.5736e-03, -3.3153e-03,
         1.1548e-02, -4.9454e-02, -3.5786e-02, -6.2111e-02, -4.6126e-02,
        -4.9753e-02, -4.4177e-02, -1.2981e-02, -2.3316e-02, -1.6351e-02,
        -6.5296e-03, -1.4457e-02,  5.8086e-03, -5.3617e-02,  3.1917e-02,
        -5.7404e-02,  1.2193e-02, -3.4709e-02,  1.4990e-02, -4.2412e-02,
        -3.9139e-02,  2.0078e-02,  7.8386e-03,  2.4781e-02, -2.3567e-02,
        -2.3401e-02, -6.2261e-02,  1.2690e-02,  4.9974e-03,  9.7307e-04,
        -2.3461e-02, -1.4585e-02, -5.8346e-02, -5.5327e-02, -2.5291e-03,
        -6.7534e-02, -3.3645e-02, -5.0871e-02, -3.3456e-02, -3.1463e-02,
        -2.7528e-02, -1.3105e-02, -4.8985e-02, -2.0499e-02, -4.3107e-02,
        -6.0071e-02, -4.3615e-03,  1.2930e-02, -5.4326e-02, -4.2194e-02,
        -5.4544e-03, -4.7022e-02,  2.4798e-02, -6.1385e-02, -3.6934e-02,
        -2.4699e-02, -4.0710e-02, -5.6709e-02, -4.8760e-02,  2.4335e-02,
        -4.5071e-02, -6.7788e-03, -3.3881e-03,  2.4884e-02, -4.2288e-02,
        -5.1117e-02,  1.1595e-02, -6.5622e-03, -1.9501e-02,  3.4399e-03,
        -5.3024e-02, -5.4889e-02,  2.9210e-02,  5.9583e-03, -5.4973e-03,
        -3.0269e-02, -5.0189e-02, -4.1024e-02, -4.9266e-02, -1.1389e-04,
         5.8282e-03, -2.0513e-02,  3.6726e-02, -6.4100e-02,  6.7703e-03,
        -1.5013e-02,  7.8103e-03,  2.8062e-02, -3.0057e-03, -5.4232e-02,
        -4.3811e-02, -4.9987e-03, -5.1178e-02,  5.5010e-03, -4.1831e-02,
        -1.0140e-02,  1.0834e-03, -3.9276e-02, -4.5463e-02, -6.1261e-02,
         6.4920e-04, -6.5610e-03, -3.2348e-02, -2.6952e-02, -2.2750e-02,
         3.2166e-02, -4.6258e-02, -3.3686e-02, -6.7312e-02, -4.1352e-02,
         8.3101e-03, -5.7962e-02,  4.4104e-03,  6.4424e-04,  1.9781e-02,
         7.0624e-03, -5.2705e-02])
##########################################################
{'smi_encoder.embedding.weight': tensor(1.1543e-06), 'decoder.blks.block1.attention2.W_k.weight': tensor(2.3310e-06), 'decoder.blks.block0.attention2.W_k.weight': tensor(2.7116e-06), 'prot_encoder.encoder.layers.1.self_attn.in_proj_weight': tensor(3.0163e-06), 'smi_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(4.3916e-06), 'smi_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(4.9818e-06), 'prot_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(5.4506e-06), 'decoder.blks.block1.attention2.W_q.weight': tensor(5.9770e-06), 'prot_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(6.1456e-06), 'prot_encoder.encoder.layers.1.self_attn.out_proj.weight': tensor(6.2872e-06), 'decoder.blks.block0.attention2.W_q.weight': tensor(7.1899e-06), 'prot_encoder.embedding.weight': tensor(9.0541e-06), 'smi_encoder.encoder.layers.1.self_attn.in_proj_weight': tensor(1.0231e-05), 'smi_encoder.encoder.layers.1.self_attn.out_proj.weight': tensor(1.3636e-05), 'smi_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(1.5670e-05), 'prot_encoder.encoder.layers.1.linear1.weight': tensor(1.7430e-05), 'prot_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(1.8177e-05), 'smi_encoder.encoder.layers.1.linear2.weight': tensor(1.8395e-05), 'prot_encoder.encoder.layers.0.linear2.weight': tensor(1.9036e-05), 'cross_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(2.0084e-05), 'smi_encoder.encoder.layers.0.linear2.weight': tensor(2.0649e-05), 'smi_encoder.encoder.layers.1.linear1.weight': tensor(2.1076e-05), 'prot_encoder.encoder.layers.1.linear2.weight': tensor(2.1987e-05), 'smi_encoder.encoder.layers.0.linear1.weight': tensor(2.4822e-05), 'prot_encoder.encoder.layers.0.linear1.weight': tensor(2.7654e-05), 'prot_encoder.ffn.dense2.weight': tensor(2.7662e-05), 'cross_encoder.encoder.layers.0.linear1.weight': tensor(3.3273e-05), 'cross_encoder.encoder.layers.0.self_attn.out_proj.weight': tensor(4.2213e-05), 'prot_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(4.3773e-05), 'prot_encoder.ffn.dense1.weight': tensor(5.4478e-05), 'prot_encoder.addnorm.ln.bias': tensor(5.8608e-05), 'cross_encoder.encoder.layers.0.linear2.weight': tensor(6.0715e-05), 'smi_encoder.encoder.layers.0.self_attn.in_proj_weight': tensor(6.3266e-05), 'prot_encoder.dense.bias': tensor(8.7085e-05), 'prot_encoder.dense.weight': tensor(9.3791e-05), 'prot_encoder.addnorm.ln.weight': tensor(9.4816e-05), 'prot_encoder.encoder.layers.1.self_attn.in_proj_bias': tensor(0.0001), 'linear.weight': tensor(0.0001), 'smi_encoder.encoder.layers.1.self_attn.in_proj_bias': tensor(0.0002), 'prot_encoder.ffn.dense1.bias': tensor(0.0002), 'decoder.blks.block1.attention2.W_v.weight': tensor(0.0002), 'prot_encoder.ffn.dense2.bias': tensor(0.0003), 'decoder.blks.block0.attention2.W_v.weight': tensor(0.0003), 'prot_encoder.encoder.layers.1.linear1.bias': tensor(0.0003), 'prot_encoder.encoder.layers.1.linear2.bias': tensor(0.0004), 'prot_encoder.encoder.layers.1.self_attn.out_proj.bias': tensor(0.0004), 'smi_encoder.encoder.layers.1.linear1.bias': tensor(0.0004), 'decoder.blks.block1.attention2.W_o.weight': tensor(0.0004), 'prot_encoder.encoder.layers.1.norm1.bias': tensor(0.0004), 'prot_encoder.encoder.layers.0.linear2.bias': tensor(0.0004), 'decoder.blks.block0.attention2.W_o.weight': tensor(0.0004), 'linear.bias': tensor(0.0004), 'prot_encoder.encoder.layers.0.linear1.bias': tensor(0.0005), 'smi_encoder.encoder.layers.0.linear1.bias': tensor(0.0005), 'prot_encoder.encoder.layers.0.norm2.bias': tensor(0.0005), 'smi_encoder.encoder.layers.1.self_attn.out_proj.bias': tensor(0.0005), 'prot_encoder.encoder.layers.0.norm1.bias': tensor(0.0005), 'smi_encoder.encoder.layers.1.linear2.bias': tensor(0.0005), 'smi_encoder.encoder.layers.0.linear2.bias': tensor(0.0006), 'smi_encoder.encoder.layers.0.norm1.weight': tensor(0.0006), 'smi_encoder.encoder.layers.1.norm1.bias': tensor(0.0007), 'prot_encoder.encoder.layers.1.norm2.bias': tensor(0.0007), 'smi_encoder.encoder.layers.0.norm2.bias': tensor(0.0007), 'smi_encoder.encoder.layers.0.norm2.weight': tensor(0.0007), 'smi_encoder.encoder.layers.0.norm1.bias': tensor(0.0007), 'prot_encoder.encoder.layers.1.norm1.weight': tensor(0.0008), 'smi_encoder.encoder.layers.1.norm2.bias': tensor(0.0008), 'prot_encoder.encoder.layers.0.norm2.weight': tensor(0.0008), 'prot_encoder.encoder.layers.0.norm1.weight': tensor(0.0008), 'smi_encoder.encoder.layers.1.norm2.weight': tensor(0.0008), 'cross_encoder.encoder.layers.0.linear1.bias': tensor(0.0008), 'smi_encoder.encoder.layers.1.norm1.weight': tensor(0.0009), 'prot_encoder.encoder.layers.1.norm2.weight': tensor(0.0010), 'cross_encoder.encoder.layers.0.self_attn.in_proj_bias': tensor(0.0010), 'decoder.embedding.weight': tensor(0.0013), 'cross_encoder.encoder.layers.0.norm1.weight': tensor(0.0020), 'cross_encoder.encoder.layers.0.linear2.bias': tensor(0.0020), 'cross_encoder.encoder.layers.0.norm1.bias': tensor(0.0024), 'cross_encoder.encoder.layers.0.norm2.weight': tensor(0.0028), 'cross_encoder.encoder.layers.0.norm2.bias': tensor(0.0034), 'cross_encoder.encoder.layers.0.self_attn.out_proj.bias': tensor(0.0042), 'decoder.blks.block1.ffn.dense1.bias': tensor(0.0043), 'decoder.blks.block1.ffn.dense2.weight': tensor(0.0054), 'decoder.blks.block0.ffn.dense1.bias': tensor(0.0059), 'decoder.blks.block1.ffn.dense1.weight': tensor(0.0062), 'decoder.dense_blks.dense1.dense.weight': tensor(0.0063), 'decoder.blks.block0.ffn.dense2.weight': tensor(0.0073), 'decoder.blks.block0.ffn.dense1.weight': tensor(0.0083), 'decoder.blks.block1.ffn.dense2.bias': tensor(0.0095), 'decoder.blks.block1.attention1.W_q.weight': tensor(0.0098), 'decoder.blks.block1.attention1.W_k.weight': tensor(0.0099), 'decoder.dense_blks.dense0.dense.weight': tensor(0.0104), 'decoder.blks.block0.ffn.dense2.bias': tensor(0.0120), 'decoder.blks.block0.attention1.W_o.weight': tensor(0.0136), 'decoder.blks.block1.addnorm2.ln.bias': tensor(0.0136), 'decoder.blks.block1.addnorm1.ln.bias': tensor(0.0136), 'decoder.blks.block1.attention1.W_o.weight': tensor(0.0139), 'decoder.blks.block0.attention1.W_v.weight': tensor(0.0141), 'decoder.blks.block1.attention1.W_v.weight': tensor(0.0142), 'decoder.dense.weight': tensor(0.0158), 'decoder.blks.block1.addnorm2.ln.weight': tensor(0.0183), 'decoder.blks.block0.addnorm1.ln.bias': tensor(0.0185), 'decoder.blks.block0.addnorm2.ln.bias': tensor(0.0185), 'decoder.blks.block1.addnorm1.ln.weight': tensor(0.0185), 'decoder.blks.block0.addnorm3.ln.bias': tensor(0.0188), 'decoder.blks.block1.addnorm3.ln.bias': tensor(0.0200), 'decoder.dense.bias': tensor(0.0235), 'decoder.blks.block0.addnorm2.ln.weight': tensor(0.0237), 'decoder.blks.block0.addnorm1.ln.weight': tensor(0.0239), 'decoder.blks.block0.attention1.W_k.weight': tensor(0.0240), 'decoder.blks.block0.attention1.W_q.weight': tensor(0.0241), 'decoder.blks.block0.addnorm3.ln.weight': tensor(0.0249), 'decoder.dense_blks.dense0.dense.bias': tensor(0.0357), 'decoder.dense_blks.dense1.dense.bias': tensor(0.0412), 'decoder.blks.block1.addnorm3.ln.weight': tensor(0.0578)}